// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: relay_service.proto

package rpc_client

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("relay_service.proto", fileDescriptor_aa274bb640faecdd) }

var fileDescriptor_aa274bb640faecdd = []byte{
	// 230 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0x4a, 0xcd, 0x49,
	0xac, 0x8c, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0xe2, 0x2a, 0x2a, 0x48, 0x8e, 0x4f, 0xce, 0xc9, 0x4c, 0xcd, 0x2b, 0x91, 0xd2, 0x4d, 0xcf, 0x2c,
	0xc9, 0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x4f, 0xcf, 0x4f, 0xcf, 0xd7, 0x07, 0x2b, 0x49,
	0x2a, 0x4d, 0x03, 0xf3, 0xc0, 0x1c, 0x30, 0x0b, 0xa2, 0x55, 0x8a, 0x1b, 0x6c, 0x1e, 0x94, 0x23,
	0x99, 0x9e, 0x9f, 0x9f, 0x9e, 0x93, 0x8a, 0xd0, 0x92, 0x98, 0x07, 0x95, 0x32, 0x5a, 0xcb, 0xc8,
	0xc5, 0x13, 0x04, 0x52, 0x1a, 0x0c, 0xb1, 0x59, 0x28, 0x80, 0x4b, 0x28, 0x28, 0xb5, 0xd0, 0xb9,
	0x28, 0x35, 0xb1, 0x24, 0x35, 0x20, 0x23, 0x3f, 0x2f, 0xd5, 0x39, 0x31, 0x27, 0x47, 0x48, 0x5a,
	0x0f, 0xe1, 0x14, 0x3d, 0x34, 0x49, 0x29, 0x54, 0xc9, 0xc4, 0x9c, 0x1c, 0xe7, 0xfc, 0xbc, 0xbc,
	0xd4, 0xe4, 0x92, 0xcc, 0xfc, 0xbc, 0x62, 0x25, 0x06, 0x21, 0x6f, 0x2e, 0xe1, 0xa0, 0xd4, 0x42,
	0x97, 0xcc, 0xe2, 0xe4, 0xc4, 0xa2, 0x14, 0x84, 0x91, 0x32, 0xc8, 0xba, 0xd0, 0x65, 0xa5, 0x44,
	0xf4, 0x20, 0x6e, 0xd6, 0x83, 0xb9, 0x59, 0xcf, 0x31, 0xaf, 0x52, 0x89, 0xc1, 0x49, 0xe6, 0xc3,
	0x43, 0x39, 0xc6, 0x13, 0x8f, 0xe4, 0x18, 0x2f, 0x3c, 0x92, 0x63, 0x7c, 0xf0, 0x48, 0x8e, 0x31,
	0x0a, 0x29, 0x90, 0x92, 0xd8, 0xc0, 0xaa, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x38, 0x95,
	0xd1, 0x1a, 0x4e, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RelayServiceClient is the client API for RelayService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RelayServiceClient interface {
	ReqCreatePhoneCall(ctx context.Context, in *CreatePhoneCall, opts ...grpc.CallOption) (*CallConnections, error)
	ReqDiscardPhoneCall(ctx context.Context, in *DiscardPhoneCall, opts ...grpc.CallOption) (*types.Any, error)
}

type relayServiceClient struct {
	cc *grpc.ClientConn
}

func NewRelayServiceClient(cc *grpc.ClientConn) RelayServiceClient {
	return &relayServiceClient{cc}
}

func (c *relayServiceClient) ReqCreatePhoneCall(ctx context.Context, in *CreatePhoneCall, opts ...grpc.CallOption) (*CallConnections, error) {
	out := new(CallConnections)
	err := c.cc.Invoke(ctx, "/rpc_client.RelayService/ReqCreatePhoneCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *relayServiceClient) ReqDiscardPhoneCall(ctx context.Context, in *DiscardPhoneCall, opts ...grpc.CallOption) (*types.Any, error) {
	out := new(types.Any)
	err := c.cc.Invoke(ctx, "/rpc_client.RelayService/ReqDiscardPhoneCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RelayServiceServer is the server API for RelayService service.
type RelayServiceServer interface {
	ReqCreatePhoneCall(context.Context, *CreatePhoneCall) (*CallConnections, error)
	ReqDiscardPhoneCall(context.Context, *DiscardPhoneCall) (*types.Any, error)
}

// UnimplementedRelayServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRelayServiceServer struct {
}

func (*UnimplementedRelayServiceServer) ReqCreatePhoneCall(ctx context.Context, req *CreatePhoneCall) (*CallConnections, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReqCreatePhoneCall not implemented")
}
func (*UnimplementedRelayServiceServer) ReqDiscardPhoneCall(ctx context.Context, req *DiscardPhoneCall) (*types.Any, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReqDiscardPhoneCall not implemented")
}

func RegisterRelayServiceServer(s *grpc.Server, srv RelayServiceServer) {
	s.RegisterService(&_RelayService_serviceDesc, srv)
}

func _RelayService_ReqCreatePhoneCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePhoneCall)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelayServiceServer).ReqCreatePhoneCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc_client.RelayService/ReqCreatePhoneCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelayServiceServer).ReqCreatePhoneCall(ctx, req.(*CreatePhoneCall))
	}
	return interceptor(ctx, in, info, handler)
}

func _RelayService_ReqDiscardPhoneCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiscardPhoneCall)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RelayServiceServer).ReqDiscardPhoneCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc_client.RelayService/ReqDiscardPhoneCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RelayServiceServer).ReqDiscardPhoneCall(ctx, req.(*DiscardPhoneCall))
	}
	return interceptor(ctx, in, info, handler)
}

var _RelayService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc_client.RelayService",
	HandlerType: (*RelayServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReqCreatePhoneCall",
			Handler:    _RelayService_ReqCreatePhoneCall_Handler,
		},
		{
			MethodName: "ReqDiscardPhoneCall",
			Handler:    _RelayService_ReqDiscardPhoneCall_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "relay_service.proto",
}

var RelayService_serviceDesc = map[string][]interface{}{
	"CreatePhoneCall": {
		"/rpc_client.RelayService/ReqCreatePhoneCall",
		func() interface{} { return new(CallConnections) },
		"ReqCreatePhoneCall",
	},
	"DiscardPhoneCall": {
		"/rpc_client.RelayService/ReqDiscardPhoneCall",
		func() interface{} { return new(types.Any) },
		"ReqDiscardPhoneCall",
	},
}
