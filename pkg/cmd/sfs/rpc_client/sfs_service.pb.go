// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: sfs_service.proto

package rpc_client

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("sfs_service.proto", fileDescriptor_7fdf73ca6d413593) }

var fileDescriptor_7fdf73ca6d413593 = []byte{
	// 367 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0x4f, 0x4f, 0xc2, 0x30,
	0x18, 0xc6, 0xd9, 0x41, 0x13, 0x5f, 0x13, 0x8d, 0x05, 0x03, 0x54, 0xb2, 0xc3, 0x2e, 0x9e, 0x2c,
	0x89, 0x9e, 0x4c, 0xbc, 0x48, 0xf0, 0x5f, 0xa2, 0x11, 0x21, 0xc6, 0xc4, 0x0b, 0x29, 0xa3, 0x1b,
	0x4b, 0xc6, 0x0a, 0x6b, 0x47, 0xc2, 0x57, 0xf3, 0x13, 0x78, 0xf4, 0x23, 0x28, 0x9f, 0xc0, 0x8f,
	0x60, 0xd6, 0x0e, 0xd8, 0x60, 0xa8, 0xb7, 0xf6, 0x79, 0xdf, 0xe7, 0xd7, 0x3e, 0xef, 0x3a, 0x38,
	0x10, 0x8e, 0xe8, 0x0a, 0x16, 0x4e, 0x3c, 0x9b, 0x91, 0x51, 0xc8, 0x25, 0x47, 0x10, 0x8e, 0xec,
	0xae, 0xed, 0x7b, 0x2c, 0x90, 0xf8, 0xc4, 0xf5, 0xe4, 0x20, 0xea, 0x11, 0x9b, 0x0f, 0xeb, 0x2e,
	0x77, 0x79, 0x5d, 0xb5, 0xf4, 0x22, 0x47, 0xed, 0xd4, 0x46, 0xad, 0xb4, 0x15, 0x57, 0x5d, 0xce,
	0x5d, 0x9f, 0x2d, 0xbb, 0x68, 0x30, 0x4d, 0x4a, 0x3b, 0xc2, 0x11, 0x7a, 0x79, 0xfa, 0xb6, 0x05,
	0xd0, 0x71, 0x44, 0x47, 0x9f, 0x8a, 0xae, 0x60, 0xaf, 0xcd, 0xc6, 0x37, 0x4c, 0x36, 0xb9, 0x1d,
	0x0d, 0x59, 0x20, 0x51, 0x99, 0x2c, 0xaf, 0x40, 0x52, 0x05, 0x5c, 0x49, 0x17, 0xe6, 0xea, 0x5d,
	0xe0, 0x70, 0xab, 0x80, 0x9e, 0x00, 0x65, 0x31, 0xf7, 0x9e, 0x90, 0xe8, 0x68, 0x03, 0x2a, 0x2e,
	0xe2, 0xda, 0x26, 0x5c, 0x5c, 0xb5, 0x0a, 0xe8, 0x1c, 0x40, 0x23, 0xaf, 0x3d, 0x9f, 0xa1, 0xe2,
	0x0a, 0x2a, 0x16, 0x71, 0x29, 0x2d, 0xc6, 0x4a, 0x72, 0x9b, 0x0b, 0xd8, 0xd5, 0xd6, 0xd6, 0x20,
	0x9e, 0x69, 0x69, 0xc5, 0xab, 0x54, 0x7c, 0x98, 0x56, 0x95, 0x94, 0xb8, 0x6f, 0x61, 0x3f, 0xe5,
	0x56, 0x41, 0x2a, 0x79, 0x04, 0x95, 0xa2, 0x9a, 0x4b, 0x49, 0x22, 0x3c, 0x42, 0xb1, 0xcd, 0xc6,
	0xcf, 0x23, 0x9f, 0xd3, 0x3e, 0xeb, 0x2f, 0x26, 0x9c, 0x49, 0xbe, 0x5a, 0xfd, 0x75, 0xcc, 0x0d,
	0xf5, 0xb5, 0xb4, 0x45, 0x67, 0x2b, 0xaf, 0xb3, 0xfe, 0x88, 0x47, 0xc1, 0x5c, 0x30, 0x3a, 0x74,
	0xc2, 0x1e, 0x22, 0x5f, 0x7a, 0x2d, 0x1a, 0xaa, 0x91, 0x36, 0xa9, 0xa4, 0xe8, 0x78, 0x9d, 0x99,
	0xdb, 0x88, 0x4b, 0x44, 0x3f, 0x39, 0x32, 0x7f, 0x72, 0xe4, 0x32, 0x98, 0x5a, 0x05, 0xf4, 0x02,
	0xd5, 0xcc, 0x11, 0x19, 0xba, 0x95, 0x4f, 0xff, 0x0f, 0xb8, 0x51, 0xfb, 0xfe, 0x32, 0x8d, 0xf7,
	0x99, 0x69, 0x7c, 0xcc, 0x4c, 0xe3, 0x73, 0x66, 0x1a, 0xaf, 0xa9, 0xff, 0xa5, 0xb7, 0xad, 0xba,
	0xcf, 0x7e, 0x02, 0x00, 0x00, 0xff, 0xff, 0x09, 0x46, 0x46, 0x23, 0x57, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SfsServiceClient is the client API for SfsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SfsServiceClient interface {
	ReqGetDocument(ctx context.Context, in *GetDocument, opts ...grpc.CallOption) (*DocumentInfo, error)
	ReqGetDocumentList(ctx context.Context, in *GetDocumentList, opts ...grpc.CallOption) (*DocumentInfoList, error)
	ReqGetFile(ctx context.Context, in *GetFile, opts ...grpc.CallOption) (*FileInfo, error)
	ReqGetPhoto(ctx context.Context, in *GetPhoto, opts ...grpc.CallOption) (*PhotoInfo, error)
	ReqGetPhotoList(ctx context.Context, in *GetPhotoList, opts ...grpc.CallOption) (*PhotoInfoList, error)
	ReqUploadedDocument(ctx context.Context, in *UploadedDocument, opts ...grpc.CallOption) (*DocumentInfo, error)
	ReqUploadPhoto(ctx context.Context, in *UploadPhoto, opts ...grpc.CallOption) (*PhotoInfo, error)
	ReqUploadSaveMultiPartFileData(ctx context.Context, in *UploadSaveMultiPartFileData, opts ...grpc.CallOption) (*types.Any, error)
	ReqUploadSavePartFileData(ctx context.Context, in *UploadSavePartFileData, opts ...grpc.CallOption) (*types.Any, error)
}

type sfsServiceClient struct {
	cc *grpc.ClientConn
}

func NewSfsServiceClient(cc *grpc.ClientConn) SfsServiceClient {
	return &sfsServiceClient{cc}
}

func (c *sfsServiceClient) ReqGetDocument(ctx context.Context, in *GetDocument, opts ...grpc.CallOption) (*DocumentInfo, error) {
	out := new(DocumentInfo)
	err := c.cc.Invoke(ctx, "/rpc_client.SfsService/ReqGetDocument", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sfsServiceClient) ReqGetDocumentList(ctx context.Context, in *GetDocumentList, opts ...grpc.CallOption) (*DocumentInfoList, error) {
	out := new(DocumentInfoList)
	err := c.cc.Invoke(ctx, "/rpc_client.SfsService/ReqGetDocumentList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sfsServiceClient) ReqGetFile(ctx context.Context, in *GetFile, opts ...grpc.CallOption) (*FileInfo, error) {
	out := new(FileInfo)
	err := c.cc.Invoke(ctx, "/rpc_client.SfsService/ReqGetFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sfsServiceClient) ReqGetPhoto(ctx context.Context, in *GetPhoto, opts ...grpc.CallOption) (*PhotoInfo, error) {
	out := new(PhotoInfo)
	err := c.cc.Invoke(ctx, "/rpc_client.SfsService/ReqGetPhoto", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sfsServiceClient) ReqGetPhotoList(ctx context.Context, in *GetPhotoList, opts ...grpc.CallOption) (*PhotoInfoList, error) {
	out := new(PhotoInfoList)
	err := c.cc.Invoke(ctx, "/rpc_client.SfsService/ReqGetPhotoList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sfsServiceClient) ReqUploadedDocument(ctx context.Context, in *UploadedDocument, opts ...grpc.CallOption) (*DocumentInfo, error) {
	out := new(DocumentInfo)
	err := c.cc.Invoke(ctx, "/rpc_client.SfsService/ReqUploadedDocument", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sfsServiceClient) ReqUploadPhoto(ctx context.Context, in *UploadPhoto, opts ...grpc.CallOption) (*PhotoInfo, error) {
	out := new(PhotoInfo)
	err := c.cc.Invoke(ctx, "/rpc_client.SfsService/ReqUploadPhoto", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sfsServiceClient) ReqUploadSaveMultiPartFileData(ctx context.Context, in *UploadSaveMultiPartFileData, opts ...grpc.CallOption) (*types.Any, error) {
	out := new(types.Any)
	err := c.cc.Invoke(ctx, "/rpc_client.SfsService/ReqUploadSaveMultiPartFileData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sfsServiceClient) ReqUploadSavePartFileData(ctx context.Context, in *UploadSavePartFileData, opts ...grpc.CallOption) (*types.Any, error) {
	out := new(types.Any)
	err := c.cc.Invoke(ctx, "/rpc_client.SfsService/ReqUploadSavePartFileData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SfsServiceServer is the server API for SfsService service.
type SfsServiceServer interface {
	ReqGetDocument(context.Context, *GetDocument) (*DocumentInfo, error)
	ReqGetDocumentList(context.Context, *GetDocumentList) (*DocumentInfoList, error)
	ReqGetFile(context.Context, *GetFile) (*FileInfo, error)
	ReqGetPhoto(context.Context, *GetPhoto) (*PhotoInfo, error)
	ReqGetPhotoList(context.Context, *GetPhotoList) (*PhotoInfoList, error)
	ReqUploadedDocument(context.Context, *UploadedDocument) (*DocumentInfo, error)
	ReqUploadPhoto(context.Context, *UploadPhoto) (*PhotoInfo, error)
	ReqUploadSaveMultiPartFileData(context.Context, *UploadSaveMultiPartFileData) (*types.Any, error)
	ReqUploadSavePartFileData(context.Context, *UploadSavePartFileData) (*types.Any, error)
}

// UnimplementedSfsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSfsServiceServer struct {
}

func (*UnimplementedSfsServiceServer) ReqGetDocument(ctx context.Context, req *GetDocument) (*DocumentInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReqGetDocument not implemented")
}
func (*UnimplementedSfsServiceServer) ReqGetDocumentList(ctx context.Context, req *GetDocumentList) (*DocumentInfoList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReqGetDocumentList not implemented")
}
func (*UnimplementedSfsServiceServer) ReqGetFile(ctx context.Context, req *GetFile) (*FileInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReqGetFile not implemented")
}
func (*UnimplementedSfsServiceServer) ReqGetPhoto(ctx context.Context, req *GetPhoto) (*PhotoInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReqGetPhoto not implemented")
}
func (*UnimplementedSfsServiceServer) ReqGetPhotoList(ctx context.Context, req *GetPhotoList) (*PhotoInfoList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReqGetPhotoList not implemented")
}
func (*UnimplementedSfsServiceServer) ReqUploadedDocument(ctx context.Context, req *UploadedDocument) (*DocumentInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReqUploadedDocument not implemented")
}
func (*UnimplementedSfsServiceServer) ReqUploadPhoto(ctx context.Context, req *UploadPhoto) (*PhotoInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReqUploadPhoto not implemented")
}
func (*UnimplementedSfsServiceServer) ReqUploadSaveMultiPartFileData(ctx context.Context, req *UploadSaveMultiPartFileData) (*types.Any, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReqUploadSaveMultiPartFileData not implemented")
}
func (*UnimplementedSfsServiceServer) ReqUploadSavePartFileData(ctx context.Context, req *UploadSavePartFileData) (*types.Any, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReqUploadSavePartFileData not implemented")
}

func RegisterSfsServiceServer(s *grpc.Server, srv SfsServiceServer) {
	s.RegisterService(&_SfsService_serviceDesc, srv)
}

func _SfsService_ReqGetDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDocument)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SfsServiceServer).ReqGetDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc_client.SfsService/ReqGetDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SfsServiceServer).ReqGetDocument(ctx, req.(*GetDocument))
	}
	return interceptor(ctx, in, info, handler)
}

func _SfsService_ReqGetDocumentList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDocumentList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SfsServiceServer).ReqGetDocumentList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc_client.SfsService/ReqGetDocumentList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SfsServiceServer).ReqGetDocumentList(ctx, req.(*GetDocumentList))
	}
	return interceptor(ctx, in, info, handler)
}

func _SfsService_ReqGetFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SfsServiceServer).ReqGetFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc_client.SfsService/ReqGetFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SfsServiceServer).ReqGetFile(ctx, req.(*GetFile))
	}
	return interceptor(ctx, in, info, handler)
}

func _SfsService_ReqGetPhoto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPhoto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SfsServiceServer).ReqGetPhoto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc_client.SfsService/ReqGetPhoto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SfsServiceServer).ReqGetPhoto(ctx, req.(*GetPhoto))
	}
	return interceptor(ctx, in, info, handler)
}

func _SfsService_ReqGetPhotoList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPhotoList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SfsServiceServer).ReqGetPhotoList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc_client.SfsService/ReqGetPhotoList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SfsServiceServer).ReqGetPhotoList(ctx, req.(*GetPhotoList))
	}
	return interceptor(ctx, in, info, handler)
}

func _SfsService_ReqUploadedDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadedDocument)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SfsServiceServer).ReqUploadedDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc_client.SfsService/ReqUploadedDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SfsServiceServer).ReqUploadedDocument(ctx, req.(*UploadedDocument))
	}
	return interceptor(ctx, in, info, handler)
}

func _SfsService_ReqUploadPhoto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadPhoto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SfsServiceServer).ReqUploadPhoto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc_client.SfsService/ReqUploadPhoto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SfsServiceServer).ReqUploadPhoto(ctx, req.(*UploadPhoto))
	}
	return interceptor(ctx, in, info, handler)
}

func _SfsService_ReqUploadSaveMultiPartFileData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadSaveMultiPartFileData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SfsServiceServer).ReqUploadSaveMultiPartFileData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc_client.SfsService/ReqUploadSaveMultiPartFileData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SfsServiceServer).ReqUploadSaveMultiPartFileData(ctx, req.(*UploadSaveMultiPartFileData))
	}
	return interceptor(ctx, in, info, handler)
}

func _SfsService_ReqUploadSavePartFileData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadSavePartFileData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SfsServiceServer).ReqUploadSavePartFileData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc_client.SfsService/ReqUploadSavePartFileData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SfsServiceServer).ReqUploadSavePartFileData(ctx, req.(*UploadSavePartFileData))
	}
	return interceptor(ctx, in, info, handler)
}

var _SfsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc_client.SfsService",
	HandlerType: (*SfsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReqGetDocument",
			Handler:    _SfsService_ReqGetDocument_Handler,
		},
		{
			MethodName: "ReqGetDocumentList",
			Handler:    _SfsService_ReqGetDocumentList_Handler,
		},
		{
			MethodName: "ReqGetFile",
			Handler:    _SfsService_ReqGetFile_Handler,
		},
		{
			MethodName: "ReqGetPhoto",
			Handler:    _SfsService_ReqGetPhoto_Handler,
		},
		{
			MethodName: "ReqGetPhotoList",
			Handler:    _SfsService_ReqGetPhotoList_Handler,
		},
		{
			MethodName: "ReqUploadedDocument",
			Handler:    _SfsService_ReqUploadedDocument_Handler,
		},
		{
			MethodName: "ReqUploadPhoto",
			Handler:    _SfsService_ReqUploadPhoto_Handler,
		},
		{
			MethodName: "ReqUploadSaveMultiPartFileData",
			Handler:    _SfsService_ReqUploadSaveMultiPartFileData_Handler,
		},
		{
			MethodName: "ReqUploadSavePartFileData",
			Handler:    _SfsService_ReqUploadSavePartFileData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sfs_service.proto",
}

var SfsService_serviceDesc = map[string][]interface{}{
	"GetDocument": {
		"/rpc_client.SfsService/ReqGetDocument",
		func() interface{} { return new(DocumentInfo) },
		"ReqGetDocument",
	},
	"GetDocumentList": {
		"/rpc_client.SfsService/ReqGetDocumentList",
		func() interface{} { return new(DocumentInfoList) },
		"ReqGetDocumentList",
	},
	"GetFile": {
		"/rpc_client.SfsService/ReqGetFile",
		func() interface{} { return new(FileInfo) },
		"ReqGetFile",
	},
	"GetPhoto": {
		"/rpc_client.SfsService/ReqGetPhoto",
		func() interface{} { return new(PhotoInfo) },
		"ReqGetPhoto",
	},
	"GetPhotoList": {
		"/rpc_client.SfsService/ReqGetPhotoList",
		func() interface{} { return new(PhotoInfoList) },
		"ReqGetPhotoList",
	},
	"UploadedDocument": {
		"/rpc_client.SfsService/ReqUploadedDocument",
		func() interface{} { return new(DocumentInfo) },
		"ReqUploadedDocument",
	},
	"UploadPhoto": {
		"/rpc_client.SfsService/ReqUploadPhoto",
		func() interface{} { return new(PhotoInfo) },
		"ReqUploadPhoto",
	},
	"UploadSaveMultiPartFileData": {
		"/rpc_client.SfsService/ReqUploadSaveMultiPartFileData",
		func() interface{} { return new(types.Any) },
		"ReqUploadSaveMultiPartFileData",
	},
	"UploadSavePartFileData": {
		"/rpc_client.SfsService/ReqUploadSavePartFileData",
		func() interface{} { return new(types.Any) },
		"ReqUploadSavePartFileData",
	},
}
