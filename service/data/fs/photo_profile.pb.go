// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: photo_profile.proto

package data_fs

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type PhotoProfile struct {
	Photo *PhotoDetail `protobuf:"bytes,1,opt,name=photo,proto3" json:"photo,omitempty" bson:"photo"`
	Video *VideoDetail `protobuf:"bytes,2,opt,name=video,proto3" json:"video,omitempty" bson:"video"`
}

func (m *PhotoProfile) Reset()         { *m = PhotoProfile{} }
func (m *PhotoProfile) String() string { return proto.CompactTextString(m) }
func (*PhotoProfile) ProtoMessage()    {}
func (*PhotoProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_8eb667764f5ad5e1, []int{0}
}
func (m *PhotoProfile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PhotoProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PhotoProfile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PhotoProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhotoProfile.Merge(m, src)
}
func (m *PhotoProfile) XXX_Size() int {
	return m.Size()
}
func (m *PhotoProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_PhotoProfile.DiscardUnknown(m)
}

var xxx_messageInfo_PhotoProfile proto.InternalMessageInfo

func (m *PhotoProfile) GetPhoto() *PhotoDetail {
	if m != nil {
		return m.Photo
	}
	return nil
}

func (m *PhotoProfile) GetVideo() *VideoDetail {
	if m != nil {
		return m.Video
	}
	return nil
}

func init() {
	proto.RegisterType((*PhotoProfile)(nil), "data_fs.PhotoProfile")
}

func init() { proto.RegisterFile("photo_profile.proto", fileDescriptor_8eb667764f5ad5e1) }

var fileDescriptor_8eb667764f5ad5e1 = []byte{
	// 213 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0xc8, 0xc8, 0x2f,
	0xc9, 0x8f, 0x2f, 0x28, 0xca, 0x4f, 0xcb, 0xcc, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x62, 0x4f, 0x49, 0x2c, 0x49, 0x8c, 0x4f, 0x2b, 0x96, 0xd2, 0x4d, 0xcf, 0x2c, 0xc9, 0x28, 0x4d,
	0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x4f, 0xcf, 0x4f, 0xcf, 0xd7, 0x07, 0xcb, 0x27, 0x95, 0xa6, 0x81,
	0x79, 0x60, 0x0e, 0x98, 0x05, 0xd1, 0x27, 0xc5, 0x0d, 0x36, 0x0c, 0xc6, 0x29, 0xcb, 0x4c, 0x49,
	0x85, 0x72, 0x94, 0x66, 0x30, 0x72, 0xf1, 0x04, 0x80, 0x24, 0x03, 0x20, 0x16, 0x09, 0xd9, 0x70,
	0xb1, 0x82, 0x15, 0x4b, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x1b, 0x89, 0xe8, 0x41, 0xad, 0xd4, 0x03,
	0xab, 0x72, 0x49, 0x2d, 0x49, 0xcc, 0xcc, 0x71, 0x12, 0xf8, 0x74, 0x4f, 0x9e, 0x27, 0xa9, 0x38,
	0x3f, 0xcf, 0x4a, 0x09, 0xac, 0x58, 0x29, 0x08, 0xa2, 0x09, 0xa4, 0x1b, 0x6c, 0xba, 0x04, 0x13,
	0x9a, 0xee, 0x30, 0x90, 0x28, 0xa6, 0x6e, 0xb0, 0x62, 0xa5, 0x20, 0x88, 0x26, 0x2b, 0x9e, 0x0b,
	0x0b, 0xe5, 0x19, 0x26, 0x2c, 0x92, 0x67, 0x98, 0xb1, 0x48, 0x9e, 0xc1, 0x49, 0xf2, 0xc3, 0x43,
	0x39, 0xc6, 0x13, 0x8f, 0xe4, 0x18, 0x2f, 0x3c, 0x92, 0x63, 0x7c, 0xf0, 0x48, 0x8e, 0x31, 0x0a,
	0xe6, 0xfd, 0x24, 0x36, 0xb0, 0xe3, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd9, 0x5b, 0x86,
	0x21, 0x25, 0x01, 0x00, 0x00,
}

func (this *PhotoProfile) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&data_fs.PhotoProfile{")
	if this.Photo != nil {
		s = append(s, "Photo: "+fmt.Sprintf("%#v", this.Photo)+",\n")
	}
	if this.Video != nil {
		s = append(s, "Video: "+fmt.Sprintf("%#v", this.Video)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringPhotoProfile(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *PhotoProfile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PhotoProfile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PhotoProfile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Video != nil {
		{
			size, err := m.Video.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPhotoProfile(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Photo != nil {
		{
			size, err := m.Photo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPhotoProfile(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintPhotoProfile(dAtA []byte, offset int, v uint64) int {
	offset -= sovPhotoProfile(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *PhotoProfile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Photo != nil {
		l = m.Photo.Size()
		n += 1 + l + sovPhotoProfile(uint64(l))
	}
	if m.Video != nil {
		l = m.Video.Size()
		n += 1 + l + sovPhotoProfile(uint64(l))
	}
	return n
}

func sovPhotoProfile(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPhotoProfile(x uint64) (n int) {
	return sovPhotoProfile(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *PhotoProfile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPhotoProfile
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PhotoProfile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PhotoProfile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Photo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPhotoProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPhotoProfile
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPhotoProfile
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Photo == nil {
				m.Photo = &PhotoDetail{}
			}
			if err := m.Photo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Video", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPhotoProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPhotoProfile
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPhotoProfile
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Video == nil {
				m.Video = &VideoDetail{}
			}
			if err := m.Video.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPhotoProfile(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPhotoProfile
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPhotoProfile
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPhotoProfile(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPhotoProfile
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPhotoProfile
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPhotoProfile
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPhotoProfile
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPhotoProfile
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPhotoProfile
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPhotoProfile        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPhotoProfile          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPhotoProfile = fmt.Errorf("proto: unexpected end of group")
)
