// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: notify_setting.proto

package data_setting

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type NotifySetting struct {
	ShowPreviews bool   `protobuf:"varint,1,opt,name=show_previews,json=showPreviews,proto3" json:"show_previews,omitempty" bson:"show_previews"`
	Silent       bool   `protobuf:"varint,2,opt,name=silent,proto3" json:"silent,omitempty" bson:"silent"`
	MuteUntil    int32  `protobuf:"varint,3,opt,name=mute_until,json=muteUntil,proto3" json:"mute_until,omitempty" bson:"mute_until"`
	Sound        string `protobuf:"bytes,4,opt,name=sound,proto3" json:"sound,omitempty" bson:"sound"`
}

func (m *NotifySetting) Reset()         { *m = NotifySetting{} }
func (m *NotifySetting) String() string { return proto.CompactTextString(m) }
func (*NotifySetting) ProtoMessage()    {}
func (*NotifySetting) Descriptor() ([]byte, []int) {
	return fileDescriptor_144b963ecf47be92, []int{0}
}
func (m *NotifySetting) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NotifySetting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NotifySetting.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NotifySetting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifySetting.Merge(m, src)
}
func (m *NotifySetting) XXX_Size() int {
	return m.Size()
}
func (m *NotifySetting) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifySetting.DiscardUnknown(m)
}

var xxx_messageInfo_NotifySetting proto.InternalMessageInfo

func (m *NotifySetting) GetShowPreviews() bool {
	if m != nil {
		return m.ShowPreviews
	}
	return false
}

func (m *NotifySetting) GetSilent() bool {
	if m != nil {
		return m.Silent
	}
	return false
}

func (m *NotifySetting) GetMuteUntil() int32 {
	if m != nil {
		return m.MuteUntil
	}
	return 0
}

func (m *NotifySetting) GetSound() string {
	if m != nil {
		return m.Sound
	}
	return ""
}

func init() {
	proto.RegisterType((*NotifySetting)(nil), "data_setting.NotifySetting")
}

func init() { proto.RegisterFile("notify_setting.proto", fileDescriptor_144b963ecf47be92) }

var fileDescriptor_144b963ecf47be92 = []byte{
	// 277 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xc9, 0xcb, 0x2f, 0xc9,
	0x4c, 0xab, 0x8c, 0x2f, 0x4e, 0x2d, 0x29, 0xc9, 0xcc, 0x4b, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x17, 0xe2, 0x49, 0x49, 0x2c, 0x49, 0x84, 0x89, 0x49, 0xe9, 0xa6, 0x67, 0x96, 0x64, 0x94, 0x26,
	0xe9, 0x25, 0xe7, 0xe7, 0xea, 0xa7, 0xe7, 0xa7, 0xe7, 0xeb, 0x83, 0x15, 0x25, 0x95, 0xa6, 0x81,
	0x79, 0x60, 0x0e, 0x98, 0x05, 0xd1, 0xac, 0xf4, 0x94, 0x91, 0x8b, 0xd7, 0x0f, 0x6c, 0x6a, 0x30,
	0xc4, 0x00, 0x21, 0x5b, 0x2e, 0xde, 0xe2, 0x8c, 0xfc, 0xf2, 0xf8, 0x82, 0xa2, 0xd4, 0xb2, 0xcc,
	0xd4, 0xf2, 0x62, 0x09, 0x46, 0x05, 0x46, 0x0d, 0x0e, 0x27, 0x89, 0x4f, 0xf7, 0xe4, 0x45, 0x92,
	0x8a, 0xf3, 0xf3, 0xac, 0x94, 0x50, 0xa4, 0x95, 0x82, 0x78, 0x40, 0xfc, 0x00, 0x28, 0x57, 0x48,
	0x93, 0x8b, 0xad, 0x38, 0x33, 0x27, 0x35, 0xaf, 0x44, 0x82, 0x09, 0xac, 0x4f, 0xf0, 0xd3, 0x3d,
	0x79, 0x5e, 0xa8, 0x3e, 0xb0, 0xb8, 0x52, 0x10, 0x54, 0x81, 0x90, 0x09, 0x17, 0x57, 0x6e, 0x69,
	0x49, 0x6a, 0x7c, 0x69, 0x5e, 0x49, 0x66, 0x8e, 0x04, 0xb3, 0x02, 0xa3, 0x06, 0xab, 0x93, 0xe8,
	0xa7, 0x7b, 0xf2, 0x82, 0x10, 0xe5, 0x08, 0x39, 0xa5, 0x20, 0x4e, 0x10, 0x27, 0x14, 0xc4, 0x16,
	0x52, 0xe3, 0x62, 0x2d, 0xce, 0x2f, 0xcd, 0x4b, 0x91, 0x60, 0x51, 0x60, 0xd4, 0xe0, 0x74, 0x12,
	0xf8, 0x74, 0x4f, 0x9e, 0x07, 0x6a, 0x3e, 0x48, 0x58, 0x29, 0x08, 0x22, 0x6d, 0xc5, 0x73, 0x61,
	0xa1, 0x3c, 0xc3, 0x84, 0x45, 0xf2, 0x0c, 0x33, 0x16, 0xc9, 0x33, 0x38, 0xc9, 0x7d, 0x78, 0x28,
	0xc7, 0x78, 0xe2, 0x91, 0x1c, 0xe3, 0x85, 0x47, 0x72, 0x8c, 0x0f, 0x1e, 0xc9, 0x31, 0x46, 0xa1,
	0x04, 0x5b, 0x12, 0x1b, 0x38, 0x38, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x00, 0x37, 0x0a,
	0x13, 0x63, 0x01, 0x00, 0x00,
}

func (this *NotifySetting) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&data_setting.NotifySetting{")
	s = append(s, "ShowPreviews: "+fmt.Sprintf("%#v", this.ShowPreviews)+",\n")
	s = append(s, "Silent: "+fmt.Sprintf("%#v", this.Silent)+",\n")
	s = append(s, "MuteUntil: "+fmt.Sprintf("%#v", this.MuteUntil)+",\n")
	s = append(s, "Sound: "+fmt.Sprintf("%#v", this.Sound)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringNotifySetting(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *NotifySetting) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NotifySetting) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NotifySetting) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Sound) > 0 {
		i -= len(m.Sound)
		copy(dAtA[i:], m.Sound)
		i = encodeVarintNotifySetting(dAtA, i, uint64(len(m.Sound)))
		i--
		dAtA[i] = 0x22
	}
	if m.MuteUntil != 0 {
		i = encodeVarintNotifySetting(dAtA, i, uint64(m.MuteUntil))
		i--
		dAtA[i] = 0x18
	}
	if m.Silent {
		i--
		if m.Silent {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.ShowPreviews {
		i--
		if m.ShowPreviews {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintNotifySetting(dAtA []byte, offset int, v uint64) int {
	offset -= sovNotifySetting(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *NotifySetting) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ShowPreviews {
		n += 2
	}
	if m.Silent {
		n += 2
	}
	if m.MuteUntil != 0 {
		n += 1 + sovNotifySetting(uint64(m.MuteUntil))
	}
	l = len(m.Sound)
	if l > 0 {
		n += 1 + l + sovNotifySetting(uint64(l))
	}
	return n
}

func sovNotifySetting(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozNotifySetting(x uint64) (n int) {
	return sovNotifySetting(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *NotifySetting) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowNotifySetting
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NotifySetting: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NotifySetting: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShowPreviews", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotifySetting
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ShowPreviews = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Silent", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotifySetting
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Silent = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MuteUntil", wireType)
			}
			m.MuteUntil = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotifySetting
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MuteUntil |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sound", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowNotifySetting
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthNotifySetting
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthNotifySetting
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sound = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipNotifySetting(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthNotifySetting
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthNotifySetting
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipNotifySetting(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowNotifySetting
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowNotifySetting
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowNotifySetting
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthNotifySetting
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupNotifySetting
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthNotifySetting
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthNotifySetting        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowNotifySetting          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupNotifySetting = fmt.Errorf("proto: unexpected end of group")
)
