// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: schema.tl.sync_service.proto

package mtproto

import (
	encoding_binary "encoding/binary"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

///////////////////////////////////////////////////////////////////////////////
//  account.acceptAuthorization#e7027c94 bot_id:int scope:string public_key:string value_hashes:Vector<SecureValueHash> credentials:SecureCredentialsEncrypted = Bool;
//
type TLAccountAcceptAuthorization struct {
	Cmd                  TLCmd                       `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string                      `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	BotId                int32                       `protobuf:"varint,3,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	Scope                string                      `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`
	PublicKey            string                      `protobuf:"bytes,5,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	ValueHashes          []*SecureValueHash          `protobuf:"bytes,6,rep,name=value_hashes,json=valueHashes,proto3" json:"value_hashes,omitempty"`
	Credentials          *SecureCredentialsEncrypted `protobuf:"bytes,7,opt,name=credentials,proto3" json:"credentials,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *TLAccountAcceptAuthorization) Reset()         { *m = TLAccountAcceptAuthorization{} }
func (m *TLAccountAcceptAuthorization) String() string { return proto.CompactTextString(m) }
func (*TLAccountAcceptAuthorization) ProtoMessage()    {}
func (*TLAccountAcceptAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{0}
}
func (m *TLAccountAcceptAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountAcceptAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountAcceptAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountAcceptAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountAcceptAuthorization.Merge(m, src)
}
func (m *TLAccountAcceptAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountAcceptAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountAcceptAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountAcceptAuthorization proto.InternalMessageInfo

func (m *TLAccountAcceptAuthorization) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountAcceptAuthorization) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountAcceptAuthorization) GetBotId() int32 {
	if m != nil {
		return m.BotId
	}
	return 0
}

func (m *TLAccountAcceptAuthorization) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *TLAccountAcceptAuthorization) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *TLAccountAcceptAuthorization) GetValueHashes() []*SecureValueHash {
	if m != nil {
		return m.ValueHashes
	}
	return nil
}

func (m *TLAccountAcceptAuthorization) GetCredentials() *SecureCredentialsEncrypted {
	if m != nil {
		return m.Credentials
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  account.cancelPasswordEmail#c1cbd5b6 = Bool;
//
type TLAccountCancelPasswordEmail struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountCancelPasswordEmail) Reset()         { *m = TLAccountCancelPasswordEmail{} }
func (m *TLAccountCancelPasswordEmail) String() string { return proto.CompactTextString(m) }
func (*TLAccountCancelPasswordEmail) ProtoMessage()    {}
func (*TLAccountCancelPasswordEmail) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{1}
}
func (m *TLAccountCancelPasswordEmail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountCancelPasswordEmail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountCancelPasswordEmail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountCancelPasswordEmail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountCancelPasswordEmail.Merge(m, src)
}
func (m *TLAccountCancelPasswordEmail) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountCancelPasswordEmail) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountCancelPasswordEmail.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountCancelPasswordEmail proto.InternalMessageInfo

func (m *TLAccountCancelPasswordEmail) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountCancelPasswordEmail) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  account.changePhone#70c32edb phone_number:string phone_code_hash:string phone_code:string = User;
//
type TLAccountChangePhone struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	PhoneNumber          string   `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	PhoneCodeHash        string   `protobuf:"bytes,4,opt,name=phone_code_hash,json=phoneCodeHash,proto3" json:"phone_code_hash,omitempty"`
	PhoneCode            string   `protobuf:"bytes,5,opt,name=phone_code,json=phoneCode,proto3" json:"phone_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountChangePhone) Reset()         { *m = TLAccountChangePhone{} }
func (m *TLAccountChangePhone) String() string { return proto.CompactTextString(m) }
func (*TLAccountChangePhone) ProtoMessage()    {}
func (*TLAccountChangePhone) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{2}
}
func (m *TLAccountChangePhone) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountChangePhone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountChangePhone.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountChangePhone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountChangePhone.Merge(m, src)
}
func (m *TLAccountChangePhone) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountChangePhone) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountChangePhone.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountChangePhone proto.InternalMessageInfo

func (m *TLAccountChangePhone) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountChangePhone) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountChangePhone) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *TLAccountChangePhone) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

func (m *TLAccountChangePhone) GetPhoneCode() string {
	if m != nil {
		return m.PhoneCode
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  account.checkUsername#2714d86c username:string = Bool;
//
type TLAccountCheckUsername struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Username             string   `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountCheckUsername) Reset()         { *m = TLAccountCheckUsername{} }
func (m *TLAccountCheckUsername) String() string { return proto.CompactTextString(m) }
func (*TLAccountCheckUsername) ProtoMessage()    {}
func (*TLAccountCheckUsername) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{3}
}
func (m *TLAccountCheckUsername) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountCheckUsername) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountCheckUsername.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountCheckUsername) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountCheckUsername.Merge(m, src)
}
func (m *TLAccountCheckUsername) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountCheckUsername) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountCheckUsername.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountCheckUsername proto.InternalMessageInfo

func (m *TLAccountCheckUsername) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountCheckUsername) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountCheckUsername) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  account.confirmPasswordEmail#8fdf1920 code:string = Bool;
//
type TLAccountConfirmPasswordEmail struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Code                 string   `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountConfirmPasswordEmail) Reset()         { *m = TLAccountConfirmPasswordEmail{} }
func (m *TLAccountConfirmPasswordEmail) String() string { return proto.CompactTextString(m) }
func (*TLAccountConfirmPasswordEmail) ProtoMessage()    {}
func (*TLAccountConfirmPasswordEmail) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{4}
}
func (m *TLAccountConfirmPasswordEmail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountConfirmPasswordEmail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountConfirmPasswordEmail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountConfirmPasswordEmail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountConfirmPasswordEmail.Merge(m, src)
}
func (m *TLAccountConfirmPasswordEmail) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountConfirmPasswordEmail) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountConfirmPasswordEmail.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountConfirmPasswordEmail proto.InternalMessageInfo

func (m *TLAccountConfirmPasswordEmail) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountConfirmPasswordEmail) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountConfirmPasswordEmail) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  account.confirmPhone#5f2178c3 phone_code_hash:string phone_code:string = Bool;
//
type TLAccountConfirmPhone struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	PhoneCodeHash        string   `protobuf:"bytes,3,opt,name=phone_code_hash,json=phoneCodeHash,proto3" json:"phone_code_hash,omitempty"`
	PhoneCode            string   `protobuf:"bytes,4,opt,name=phone_code,json=phoneCode,proto3" json:"phone_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountConfirmPhone) Reset()         { *m = TLAccountConfirmPhone{} }
func (m *TLAccountConfirmPhone) String() string { return proto.CompactTextString(m) }
func (*TLAccountConfirmPhone) ProtoMessage()    {}
func (*TLAccountConfirmPhone) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{5}
}
func (m *TLAccountConfirmPhone) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountConfirmPhone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountConfirmPhone.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountConfirmPhone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountConfirmPhone.Merge(m, src)
}
func (m *TLAccountConfirmPhone) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountConfirmPhone) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountConfirmPhone.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountConfirmPhone proto.InternalMessageInfo

func (m *TLAccountConfirmPhone) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountConfirmPhone) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountConfirmPhone) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

func (m *TLAccountConfirmPhone) GetPhoneCode() string {
	if m != nil {
		return m.PhoneCode
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  account.createTheme#2b7ffd7f slug:string title:string document:InputDocument = Theme;
//  account.createTheme#8432c21f flags:# slug:string title:string document:flags.2?InputDocument settings:flags.3?InputThemeSettings = Theme;
//
type TLAccountCreateTheme struct {
	Cmd                  TLCmd               `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string              `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Slug                 string              `protobuf:"bytes,3,opt,name=slug,proto3" json:"slug,omitempty"`
	Title                string              `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Document             *InputDocument      `protobuf:"bytes,5,opt,name=document,proto3" json:"document,omitempty"`
	Flags                int32               `protobuf:"varint,6,opt,name=flags,proto3" json:"flags,omitempty"`
	Settings             *InputThemeSettings `protobuf:"bytes,7,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLAccountCreateTheme) Reset()         { *m = TLAccountCreateTheme{} }
func (m *TLAccountCreateTheme) String() string { return proto.CompactTextString(m) }
func (*TLAccountCreateTheme) ProtoMessage()    {}
func (*TLAccountCreateTheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{6}
}
func (m *TLAccountCreateTheme) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountCreateTheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountCreateTheme.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountCreateTheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountCreateTheme.Merge(m, src)
}
func (m *TLAccountCreateTheme) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountCreateTheme) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountCreateTheme.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountCreateTheme proto.InternalMessageInfo

func (m *TLAccountCreateTheme) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountCreateTheme) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountCreateTheme) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

func (m *TLAccountCreateTheme) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *TLAccountCreateTheme) GetDocument() *InputDocument {
	if m != nil {
		return m.Document
	}
	return nil
}

func (m *TLAccountCreateTheme) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLAccountCreateTheme) GetSettings() *InputThemeSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  account.deleteAccount#418d4e0b reason:string = Bool;
//
type TLAccountDeleteAccount struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Reason               string   `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountDeleteAccount) Reset()         { *m = TLAccountDeleteAccount{} }
func (m *TLAccountDeleteAccount) String() string { return proto.CompactTextString(m) }
func (*TLAccountDeleteAccount) ProtoMessage()    {}
func (*TLAccountDeleteAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{7}
}
func (m *TLAccountDeleteAccount) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountDeleteAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountDeleteAccount.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountDeleteAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountDeleteAccount.Merge(m, src)
}
func (m *TLAccountDeleteAccount) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountDeleteAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountDeleteAccount.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountDeleteAccount proto.InternalMessageInfo

func (m *TLAccountDeleteAccount) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountDeleteAccount) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountDeleteAccount) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  account.deleteSecureValue#b880bc4b types:Vector<SecureValueType> = Bool;
//
type TLAccountDeleteSecureValue struct {
	Cmd                  TLCmd              `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string             `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Types                []*SecureValueType `protobuf:"bytes,3,rep,name=types,proto3" json:"types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLAccountDeleteSecureValue) Reset()         { *m = TLAccountDeleteSecureValue{} }
func (m *TLAccountDeleteSecureValue) String() string { return proto.CompactTextString(m) }
func (*TLAccountDeleteSecureValue) ProtoMessage()    {}
func (*TLAccountDeleteSecureValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{8}
}
func (m *TLAccountDeleteSecureValue) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountDeleteSecureValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountDeleteSecureValue.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountDeleteSecureValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountDeleteSecureValue.Merge(m, src)
}
func (m *TLAccountDeleteSecureValue) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountDeleteSecureValue) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountDeleteSecureValue.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountDeleteSecureValue proto.InternalMessageInfo

func (m *TLAccountDeleteSecureValue) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountDeleteSecureValue) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountDeleteSecureValue) GetTypes() []*SecureValueType {
	if m != nil {
		return m.Types
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  account.finishTakeoutSession#1d2652ee flags:# success:flags.0?true = Bool;
//
type TLAccountFinishTakeoutSession struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32    `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Success              bool     `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountFinishTakeoutSession) Reset()         { *m = TLAccountFinishTakeoutSession{} }
func (m *TLAccountFinishTakeoutSession) String() string { return proto.CompactTextString(m) }
func (*TLAccountFinishTakeoutSession) ProtoMessage()    {}
func (*TLAccountFinishTakeoutSession) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{9}
}
func (m *TLAccountFinishTakeoutSession) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountFinishTakeoutSession) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountFinishTakeoutSession.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountFinishTakeoutSession) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountFinishTakeoutSession.Merge(m, src)
}
func (m *TLAccountFinishTakeoutSession) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountFinishTakeoutSession) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountFinishTakeoutSession.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountFinishTakeoutSession proto.InternalMessageInfo

func (m *TLAccountFinishTakeoutSession) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountFinishTakeoutSession) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountFinishTakeoutSession) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLAccountFinishTakeoutSession) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

///////////////////////////////////////////////////////////////////////////////
//  account.getAccountTTL#8fc711d = AccountDaysTTL;
//
type TLAccountGetAccountTTL struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountGetAccountTTL) Reset()         { *m = TLAccountGetAccountTTL{} }
func (m *TLAccountGetAccountTTL) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetAccountTTL) ProtoMessage()    {}
func (*TLAccountGetAccountTTL) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{10}
}
func (m *TLAccountGetAccountTTL) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetAccountTTL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetAccountTTL.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetAccountTTL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetAccountTTL.Merge(m, src)
}
func (m *TLAccountGetAccountTTL) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetAccountTTL) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetAccountTTL.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetAccountTTL proto.InternalMessageInfo

func (m *TLAccountGetAccountTTL) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountGetAccountTTL) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  account.getAllSecureValues#b288bc7d = Vector<SecureValue>;
//
type TLAccountGetAllSecureValues struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountGetAllSecureValues) Reset()         { *m = TLAccountGetAllSecureValues{} }
func (m *TLAccountGetAllSecureValues) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetAllSecureValues) ProtoMessage()    {}
func (*TLAccountGetAllSecureValues) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{11}
}
func (m *TLAccountGetAllSecureValues) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetAllSecureValues) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetAllSecureValues.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetAllSecureValues) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetAllSecureValues.Merge(m, src)
}
func (m *TLAccountGetAllSecureValues) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetAllSecureValues) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetAllSecureValues.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetAllSecureValues proto.InternalMessageInfo

func (m *TLAccountGetAllSecureValues) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountGetAllSecureValues) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  account.getAuthorizationForm#b86ba8e1 bot_id:int scope:string public_key:string = account.AuthorizationForm;
//
type TLAccountGetAuthorizationForm struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	BotId                int32    `protobuf:"varint,3,opt,name=bot_id,json=botId,proto3" json:"bot_id,omitempty"`
	Scope                string   `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`
	PublicKey            string   `protobuf:"bytes,5,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountGetAuthorizationForm) Reset()         { *m = TLAccountGetAuthorizationForm{} }
func (m *TLAccountGetAuthorizationForm) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetAuthorizationForm) ProtoMessage()    {}
func (*TLAccountGetAuthorizationForm) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{12}
}
func (m *TLAccountGetAuthorizationForm) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetAuthorizationForm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetAuthorizationForm.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetAuthorizationForm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetAuthorizationForm.Merge(m, src)
}
func (m *TLAccountGetAuthorizationForm) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetAuthorizationForm) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetAuthorizationForm.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetAuthorizationForm proto.InternalMessageInfo

func (m *TLAccountGetAuthorizationForm) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountGetAuthorizationForm) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountGetAuthorizationForm) GetBotId() int32 {
	if m != nil {
		return m.BotId
	}
	return 0
}

func (m *TLAccountGetAuthorizationForm) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *TLAccountGetAuthorizationForm) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  account.getAuthorizations#e320c158 = account.Authorizations;
//
type TLAccountGetAuthorizations struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountGetAuthorizations) Reset()         { *m = TLAccountGetAuthorizations{} }
func (m *TLAccountGetAuthorizations) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetAuthorizations) ProtoMessage()    {}
func (*TLAccountGetAuthorizations) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{13}
}
func (m *TLAccountGetAuthorizations) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetAuthorizations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetAuthorizations.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetAuthorizations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetAuthorizations.Merge(m, src)
}
func (m *TLAccountGetAuthorizations) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetAuthorizations) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetAuthorizations.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetAuthorizations proto.InternalMessageInfo

func (m *TLAccountGetAuthorizations) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountGetAuthorizations) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  account.getAutoDownloadSettings#56da0b3f = account.AutoDownloadSettings;
//
type TLAccountGetAutoDownloadSettings struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountGetAutoDownloadSettings) Reset()         { *m = TLAccountGetAutoDownloadSettings{} }
func (m *TLAccountGetAutoDownloadSettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetAutoDownloadSettings) ProtoMessage()    {}
func (*TLAccountGetAutoDownloadSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{14}
}
func (m *TLAccountGetAutoDownloadSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetAutoDownloadSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetAutoDownloadSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetAutoDownloadSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetAutoDownloadSettings.Merge(m, src)
}
func (m *TLAccountGetAutoDownloadSettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetAutoDownloadSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetAutoDownloadSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetAutoDownloadSettings proto.InternalMessageInfo

func (m *TLAccountGetAutoDownloadSettings) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountGetAutoDownloadSettings) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  account.getContactSignUpNotification#9f07c728 = Bool;
//
type TLAccountGetContactSignUpNotification struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountGetContactSignUpNotification) Reset()         { *m = TLAccountGetContactSignUpNotification{} }
func (m *TLAccountGetContactSignUpNotification) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetContactSignUpNotification) ProtoMessage()    {}
func (*TLAccountGetContactSignUpNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{15}
}
func (m *TLAccountGetContactSignUpNotification) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetContactSignUpNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetContactSignUpNotification.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetContactSignUpNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetContactSignUpNotification.Merge(m, src)
}
func (m *TLAccountGetContactSignUpNotification) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetContactSignUpNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetContactSignUpNotification.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetContactSignUpNotification proto.InternalMessageInfo

func (m *TLAccountGetContactSignUpNotification) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountGetContactSignUpNotification) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  account.getContentSettings#8b9b4dae = account.ContentSettings;
//
type TLAccountGetContentSettings struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountGetContentSettings) Reset()         { *m = TLAccountGetContentSettings{} }
func (m *TLAccountGetContentSettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetContentSettings) ProtoMessage()    {}
func (*TLAccountGetContentSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{16}
}
func (m *TLAccountGetContentSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetContentSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetContentSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetContentSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetContentSettings.Merge(m, src)
}
func (m *TLAccountGetContentSettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetContentSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetContentSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetContentSettings proto.InternalMessageInfo

func (m *TLAccountGetContentSettings) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountGetContentSettings) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  account.getGlobalPrivacySettings#eb2b4cf6 = GlobalPrivacySettings;
//
type TLAccountGetGlobalPrivacySettings struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountGetGlobalPrivacySettings) Reset()         { *m = TLAccountGetGlobalPrivacySettings{} }
func (m *TLAccountGetGlobalPrivacySettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetGlobalPrivacySettings) ProtoMessage()    {}
func (*TLAccountGetGlobalPrivacySettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{17}
}
func (m *TLAccountGetGlobalPrivacySettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetGlobalPrivacySettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetGlobalPrivacySettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetGlobalPrivacySettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetGlobalPrivacySettings.Merge(m, src)
}
func (m *TLAccountGetGlobalPrivacySettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetGlobalPrivacySettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetGlobalPrivacySettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetGlobalPrivacySettings proto.InternalMessageInfo

func (m *TLAccountGetGlobalPrivacySettings) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountGetGlobalPrivacySettings) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  account.getMultiWallPapers#65ad71dc wallpapers:Vector<InputWallPaper> = Vector<WallPaper>;
//
type TLAccountGetMultiWallPapers struct {
	Cmd                  TLCmd             `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string            `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Wallpapers           []*InputWallPaper `protobuf:"bytes,3,rep,name=wallpapers,proto3" json:"wallpapers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLAccountGetMultiWallPapers) Reset()         { *m = TLAccountGetMultiWallPapers{} }
func (m *TLAccountGetMultiWallPapers) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetMultiWallPapers) ProtoMessage()    {}
func (*TLAccountGetMultiWallPapers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{18}
}
func (m *TLAccountGetMultiWallPapers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetMultiWallPapers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetMultiWallPapers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetMultiWallPapers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetMultiWallPapers.Merge(m, src)
}
func (m *TLAccountGetMultiWallPapers) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetMultiWallPapers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetMultiWallPapers.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetMultiWallPapers proto.InternalMessageInfo

func (m *TLAccountGetMultiWallPapers) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountGetMultiWallPapers) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountGetMultiWallPapers) GetWallpapers() []*InputWallPaper {
	if m != nil {
		return m.Wallpapers
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  account.getNotifyExceptions#53577479 flags:# compare_sound:flags.1?true peer:flags.0?InputNotifyPeer = Updates;
//
type TLAccountGetNotifyExceptions struct {
	Cmd                  TLCmd            `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string           `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32            `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	CompareSound         bool             `protobuf:"varint,4,opt,name=compare_sound,json=compareSound,proto3" json:"compare_sound,omitempty"`
	Peer                 *InputNotifyPeer `protobuf:"bytes,5,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLAccountGetNotifyExceptions) Reset()         { *m = TLAccountGetNotifyExceptions{} }
func (m *TLAccountGetNotifyExceptions) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetNotifyExceptions) ProtoMessage()    {}
func (*TLAccountGetNotifyExceptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{19}
}
func (m *TLAccountGetNotifyExceptions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetNotifyExceptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetNotifyExceptions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetNotifyExceptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetNotifyExceptions.Merge(m, src)
}
func (m *TLAccountGetNotifyExceptions) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetNotifyExceptions) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetNotifyExceptions.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetNotifyExceptions proto.InternalMessageInfo

func (m *TLAccountGetNotifyExceptions) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountGetNotifyExceptions) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountGetNotifyExceptions) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLAccountGetNotifyExceptions) GetCompareSound() bool {
	if m != nil {
		return m.CompareSound
	}
	return false
}

func (m *TLAccountGetNotifyExceptions) GetPeer() *InputNotifyPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  account.getNotifySettings#12b3ad31 peer:InputNotifyPeer = PeerNotifySettings;
//
type TLAccountGetNotifySettings struct {
	Cmd                  TLCmd            `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string           `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputNotifyPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLAccountGetNotifySettings) Reset()         { *m = TLAccountGetNotifySettings{} }
func (m *TLAccountGetNotifySettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetNotifySettings) ProtoMessage()    {}
func (*TLAccountGetNotifySettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{20}
}
func (m *TLAccountGetNotifySettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetNotifySettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetNotifySettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetNotifySettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetNotifySettings.Merge(m, src)
}
func (m *TLAccountGetNotifySettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetNotifySettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetNotifySettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetNotifySettings proto.InternalMessageInfo

func (m *TLAccountGetNotifySettings) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountGetNotifySettings) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountGetNotifySettings) GetPeer() *InputNotifyPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  account.getPassword#548a30f5 = account.Password;
//
type TLAccountGetPassword struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountGetPassword) Reset()         { *m = TLAccountGetPassword{} }
func (m *TLAccountGetPassword) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetPassword) ProtoMessage()    {}
func (*TLAccountGetPassword) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{21}
}
func (m *TLAccountGetPassword) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetPassword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetPassword.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetPassword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetPassword.Merge(m, src)
}
func (m *TLAccountGetPassword) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetPassword) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetPassword.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetPassword proto.InternalMessageInfo

func (m *TLAccountGetPassword) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountGetPassword) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  account.getPasswordSettings#bc8d11bb current_password_hash:bytes = account.PasswordSettings;
//  account.getPasswordSettings#9cd4eaf9 password:InputCheckPasswordSRP = account.PasswordSettings;
//
type TLAccountGetPasswordSettings struct {
	Cmd                  TLCmd                  `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string                 `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	CurrentPasswordHash  []byte                 `protobuf:"bytes,3,opt,name=current_password_hash,json=currentPasswordHash,proto3" json:"current_password_hash,omitempty"`
	Password             *InputCheckPasswordSRP `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TLAccountGetPasswordSettings) Reset()         { *m = TLAccountGetPasswordSettings{} }
func (m *TLAccountGetPasswordSettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetPasswordSettings) ProtoMessage()    {}
func (*TLAccountGetPasswordSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{22}
}
func (m *TLAccountGetPasswordSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetPasswordSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetPasswordSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetPasswordSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetPasswordSettings.Merge(m, src)
}
func (m *TLAccountGetPasswordSettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetPasswordSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetPasswordSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetPasswordSettings proto.InternalMessageInfo

func (m *TLAccountGetPasswordSettings) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountGetPasswordSettings) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountGetPasswordSettings) GetCurrentPasswordHash() []byte {
	if m != nil {
		return m.CurrentPasswordHash
	}
	return nil
}

func (m *TLAccountGetPasswordSettings) GetPassword() *InputCheckPasswordSRP {
	if m != nil {
		return m.Password
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  account.getPrivacy#dadbc950 key:InputPrivacyKey = account.PrivacyRules;
//
type TLAccountGetPrivacy struct {
	Cmd                  TLCmd            `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string           `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Key                  *InputPrivacyKey `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLAccountGetPrivacy) Reset()         { *m = TLAccountGetPrivacy{} }
func (m *TLAccountGetPrivacy) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetPrivacy) ProtoMessage()    {}
func (*TLAccountGetPrivacy) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{23}
}
func (m *TLAccountGetPrivacy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetPrivacy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetPrivacy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetPrivacy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetPrivacy.Merge(m, src)
}
func (m *TLAccountGetPrivacy) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetPrivacy) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetPrivacy.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetPrivacy proto.InternalMessageInfo

func (m *TLAccountGetPrivacy) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountGetPrivacy) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountGetPrivacy) GetKey() *InputPrivacyKey {
	if m != nil {
		return m.Key
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  account.getSecureValue#73665bc2 types:Vector<SecureValueType> = Vector<SecureValue>;
//
type TLAccountGetSecureValue struct {
	Cmd                  TLCmd              `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string             `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Types                []*SecureValueType `protobuf:"bytes,3,rep,name=types,proto3" json:"types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLAccountGetSecureValue) Reset()         { *m = TLAccountGetSecureValue{} }
func (m *TLAccountGetSecureValue) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetSecureValue) ProtoMessage()    {}
func (*TLAccountGetSecureValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{24}
}
func (m *TLAccountGetSecureValue) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetSecureValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetSecureValue.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetSecureValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetSecureValue.Merge(m, src)
}
func (m *TLAccountGetSecureValue) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetSecureValue) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetSecureValue.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetSecureValue proto.InternalMessageInfo

func (m *TLAccountGetSecureValue) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountGetSecureValue) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountGetSecureValue) GetTypes() []*SecureValueType {
	if m != nil {
		return m.Types
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  account.getTheme#8d9d742b format:string theme:InputTheme document_id:long = Theme;
//
type TLAccountGetTheme struct {
	Cmd                  TLCmd       `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string      `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Format               string      `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"`
	Theme                *InputTheme `protobuf:"bytes,4,opt,name=theme,proto3" json:"theme,omitempty"`
	DocumentId           int64       `protobuf:"varint,5,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TLAccountGetTheme) Reset()         { *m = TLAccountGetTheme{} }
func (m *TLAccountGetTheme) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetTheme) ProtoMessage()    {}
func (*TLAccountGetTheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{25}
}
func (m *TLAccountGetTheme) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetTheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetTheme.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetTheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetTheme.Merge(m, src)
}
func (m *TLAccountGetTheme) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetTheme) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetTheme.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetTheme proto.InternalMessageInfo

func (m *TLAccountGetTheme) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountGetTheme) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountGetTheme) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *TLAccountGetTheme) GetTheme() *InputTheme {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *TLAccountGetTheme) GetDocumentId() int64 {
	if m != nil {
		return m.DocumentId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  account.getThemes#285946f8 format:string hash:int = account.Themes;
//
type TLAccountGetThemes struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Format               string   `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"`
	Hash                 int32    `protobuf:"varint,4,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountGetThemes) Reset()         { *m = TLAccountGetThemes{} }
func (m *TLAccountGetThemes) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetThemes) ProtoMessage()    {}
func (*TLAccountGetThemes) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{26}
}
func (m *TLAccountGetThemes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetThemes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetThemes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetThemes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetThemes.Merge(m, src)
}
func (m *TLAccountGetThemes) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetThemes) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetThemes.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetThemes proto.InternalMessageInfo

func (m *TLAccountGetThemes) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountGetThemes) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountGetThemes) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *TLAccountGetThemes) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  account.getTmpPassword#4a82327e password_hash:bytes period:int = account.TmpPassword;
//  account.getTmpPassword#449e0b51 password:InputCheckPasswordSRP period:int = account.TmpPassword;
//
type TLAccountGetTmpPassword struct {
	Cmd                  TLCmd                  `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string                 `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	PasswordHash         []byte                 `protobuf:"bytes,3,opt,name=password_hash,json=passwordHash,proto3" json:"password_hash,omitempty"`
	Period               int32                  `protobuf:"varint,4,opt,name=period,proto3" json:"period,omitempty"`
	Password             *InputCheckPasswordSRP `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TLAccountGetTmpPassword) Reset()         { *m = TLAccountGetTmpPassword{} }
func (m *TLAccountGetTmpPassword) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetTmpPassword) ProtoMessage()    {}
func (*TLAccountGetTmpPassword) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{27}
}
func (m *TLAccountGetTmpPassword) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetTmpPassword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetTmpPassword.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetTmpPassword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetTmpPassword.Merge(m, src)
}
func (m *TLAccountGetTmpPassword) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetTmpPassword) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetTmpPassword.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetTmpPassword proto.InternalMessageInfo

func (m *TLAccountGetTmpPassword) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountGetTmpPassword) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountGetTmpPassword) GetPasswordHash() []byte {
	if m != nil {
		return m.PasswordHash
	}
	return nil
}

func (m *TLAccountGetTmpPassword) GetPeriod() int32 {
	if m != nil {
		return m.Period
	}
	return 0
}

func (m *TLAccountGetTmpPassword) GetPassword() *InputCheckPasswordSRP {
	if m != nil {
		return m.Password
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  account.getWallPaper#fc8ddbea wallpaper:InputWallPaper = WallPaper;
//
type TLAccountGetWallPaper struct {
	Cmd                  TLCmd           `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string          `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Wallpaper            *InputWallPaper `protobuf:"bytes,3,opt,name=wallpaper,proto3" json:"wallpaper,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLAccountGetWallPaper) Reset()         { *m = TLAccountGetWallPaper{} }
func (m *TLAccountGetWallPaper) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetWallPaper) ProtoMessage()    {}
func (*TLAccountGetWallPaper) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{28}
}
func (m *TLAccountGetWallPaper) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetWallPaper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetWallPaper.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetWallPaper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetWallPaper.Merge(m, src)
}
func (m *TLAccountGetWallPaper) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetWallPaper) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetWallPaper.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetWallPaper proto.InternalMessageInfo

func (m *TLAccountGetWallPaper) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountGetWallPaper) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountGetWallPaper) GetWallpaper() *InputWallPaper {
	if m != nil {
		return m.Wallpaper
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  account.getWallPapers#c04cfac2 = Vector<WallPaper>;
//  account.getWallPapers#aabb1763 hash:int = account.WallPapers;
//
type TLAccountGetWallPapers struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Hash                 int32    `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountGetWallPapers) Reset()         { *m = TLAccountGetWallPapers{} }
func (m *TLAccountGetWallPapers) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetWallPapers) ProtoMessage()    {}
func (*TLAccountGetWallPapers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{29}
}
func (m *TLAccountGetWallPapers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetWallPapers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetWallPapers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetWallPapers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetWallPapers.Merge(m, src)
}
func (m *TLAccountGetWallPapers) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetWallPapers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetWallPapers.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetWallPapers proto.InternalMessageInfo

func (m *TLAccountGetWallPapers) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountGetWallPapers) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountGetWallPapers) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  account.getWebAuthorizations#182e6d6f = account.WebAuthorizations;
//
type TLAccountGetWebAuthorizations struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountGetWebAuthorizations) Reset()         { *m = TLAccountGetWebAuthorizations{} }
func (m *TLAccountGetWebAuthorizations) String() string { return proto.CompactTextString(m) }
func (*TLAccountGetWebAuthorizations) ProtoMessage()    {}
func (*TLAccountGetWebAuthorizations) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{30}
}
func (m *TLAccountGetWebAuthorizations) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountGetWebAuthorizations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountGetWebAuthorizations.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountGetWebAuthorizations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountGetWebAuthorizations.Merge(m, src)
}
func (m *TLAccountGetWebAuthorizations) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountGetWebAuthorizations) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountGetWebAuthorizations.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountGetWebAuthorizations proto.InternalMessageInfo

func (m *TLAccountGetWebAuthorizations) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountGetWebAuthorizations) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  account.initTakeoutSession#f05b4804 flags:# contacts:flags.0?true message_users:flags.1?true message_chats:flags.2?true message_megagroups:flags.3?true message_channels:flags.4?true files:flags.5?true file_max_size:flags.5?int = account.Takeout;
//
type TLAccountInitTakeoutSession struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32    `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Contacts             bool     `protobuf:"varint,4,opt,name=contacts,proto3" json:"contacts,omitempty"`
	MessageUsers         bool     `protobuf:"varint,5,opt,name=message_users,json=messageUsers,proto3" json:"message_users,omitempty"`
	MessageChats         bool     `protobuf:"varint,6,opt,name=message_chats,json=messageChats,proto3" json:"message_chats,omitempty"`
	MessageMegagroups    bool     `protobuf:"varint,7,opt,name=message_megagroups,json=messageMegagroups,proto3" json:"message_megagroups,omitempty"`
	MessageChannels      bool     `protobuf:"varint,8,opt,name=message_channels,json=messageChannels,proto3" json:"message_channels,omitempty"`
	Files                bool     `protobuf:"varint,9,opt,name=files,proto3" json:"files,omitempty"`
	FileMaxSize          int32    `protobuf:"varint,10,opt,name=file_max_size,json=fileMaxSize,proto3" json:"file_max_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountInitTakeoutSession) Reset()         { *m = TLAccountInitTakeoutSession{} }
func (m *TLAccountInitTakeoutSession) String() string { return proto.CompactTextString(m) }
func (*TLAccountInitTakeoutSession) ProtoMessage()    {}
func (*TLAccountInitTakeoutSession) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{31}
}
func (m *TLAccountInitTakeoutSession) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountInitTakeoutSession) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountInitTakeoutSession.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountInitTakeoutSession) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountInitTakeoutSession.Merge(m, src)
}
func (m *TLAccountInitTakeoutSession) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountInitTakeoutSession) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountInitTakeoutSession.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountInitTakeoutSession proto.InternalMessageInfo

func (m *TLAccountInitTakeoutSession) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountInitTakeoutSession) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountInitTakeoutSession) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLAccountInitTakeoutSession) GetContacts() bool {
	if m != nil {
		return m.Contacts
	}
	return false
}

func (m *TLAccountInitTakeoutSession) GetMessageUsers() bool {
	if m != nil {
		return m.MessageUsers
	}
	return false
}

func (m *TLAccountInitTakeoutSession) GetMessageChats() bool {
	if m != nil {
		return m.MessageChats
	}
	return false
}

func (m *TLAccountInitTakeoutSession) GetMessageMegagroups() bool {
	if m != nil {
		return m.MessageMegagroups
	}
	return false
}

func (m *TLAccountInitTakeoutSession) GetMessageChannels() bool {
	if m != nil {
		return m.MessageChannels
	}
	return false
}

func (m *TLAccountInitTakeoutSession) GetFiles() bool {
	if m != nil {
		return m.Files
	}
	return false
}

func (m *TLAccountInitTakeoutSession) GetFileMaxSize() int32 {
	if m != nil {
		return m.FileMaxSize
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  account.installTheme#e0f8439c format:string theme:InputTheme = Bool;
//  account.installTheme#7ae43737 flags:# dark:flags.0?true format:flags.1?string theme:flags.1?InputTheme = Bool;
//
type TLAccountInstallTheme struct {
	Cmd                  TLCmd       `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string      `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Format               string      `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"`
	Theme                *InputTheme `protobuf:"bytes,4,opt,name=theme,proto3" json:"theme,omitempty"`
	Flags                int32       `protobuf:"varint,5,opt,name=flags,proto3" json:"flags,omitempty"`
	Dark                 bool        `protobuf:"varint,6,opt,name=dark,proto3" json:"dark,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TLAccountInstallTheme) Reset()         { *m = TLAccountInstallTheme{} }
func (m *TLAccountInstallTheme) String() string { return proto.CompactTextString(m) }
func (*TLAccountInstallTheme) ProtoMessage()    {}
func (*TLAccountInstallTheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{32}
}
func (m *TLAccountInstallTheme) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountInstallTheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountInstallTheme.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountInstallTheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountInstallTheme.Merge(m, src)
}
func (m *TLAccountInstallTheme) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountInstallTheme) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountInstallTheme.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountInstallTheme proto.InternalMessageInfo

func (m *TLAccountInstallTheme) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountInstallTheme) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountInstallTheme) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *TLAccountInstallTheme) GetTheme() *InputTheme {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *TLAccountInstallTheme) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLAccountInstallTheme) GetDark() bool {
	if m != nil {
		return m.Dark
	}
	return false
}

///////////////////////////////////////////////////////////////////////////////
//  account.installWallPaper#4a0378ce wallpaper:InputWallPaper = Bool;
//  account.installWallPaper#feed5769 wallpaper:InputWallPaper settings:WallPaperSettings = Bool;
//
type TLAccountInstallWallPaper struct {
	Cmd                  TLCmd              `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string             `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Wallpaper            *InputWallPaper    `protobuf:"bytes,3,opt,name=wallpaper,proto3" json:"wallpaper,omitempty"`
	Settings             *WallPaperSettings `protobuf:"bytes,4,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLAccountInstallWallPaper) Reset()         { *m = TLAccountInstallWallPaper{} }
func (m *TLAccountInstallWallPaper) String() string { return proto.CompactTextString(m) }
func (*TLAccountInstallWallPaper) ProtoMessage()    {}
func (*TLAccountInstallWallPaper) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{33}
}
func (m *TLAccountInstallWallPaper) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountInstallWallPaper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountInstallWallPaper.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountInstallWallPaper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountInstallWallPaper.Merge(m, src)
}
func (m *TLAccountInstallWallPaper) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountInstallWallPaper) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountInstallWallPaper.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountInstallWallPaper proto.InternalMessageInfo

func (m *TLAccountInstallWallPaper) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountInstallWallPaper) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountInstallWallPaper) GetWallpaper() *InputWallPaper {
	if m != nil {
		return m.Wallpaper
	}
	return nil
}

func (m *TLAccountInstallWallPaper) GetSettings() *WallPaperSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  account.registerDevice#637ea878 token_type:int token:string = Bool;
//  account.registerDevice#446c712c token_type:int token:string device_model:string system_version:string app_version:string app_sandbox:Bool lang_code:string = Bool;
//  account.registerDevice#5cbea590 token_type:int token:string app_sandbox:Bool secret:bytes other_uids:Vector<int> = Bool;
//  account.registerDevice#68976c6f flags:# no_muted:flags.0?true token_type:int token:string app_sandbox:Bool secret:bytes other_uids:Vector<int> = Bool;
//
type TLAccountRegisterDevice struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	TokenType            int32    `protobuf:"varint,3,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	Token                string   `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	DeviceModel          string   `protobuf:"bytes,5,opt,name=device_model,json=deviceModel,proto3" json:"device_model,omitempty"`
	SystemVersion        string   `protobuf:"bytes,6,opt,name=system_version,json=systemVersion,proto3" json:"system_version,omitempty"`
	AppVersion           string   `protobuf:"bytes,7,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
	AppSandbox           *Bool    `protobuf:"bytes,8,opt,name=app_sandbox,json=appSandbox,proto3" json:"app_sandbox,omitempty"`
	LangCode             string   `protobuf:"bytes,9,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	Secret               []byte   `protobuf:"bytes,10,opt,name=secret,proto3" json:"secret,omitempty"`
	OtherUids            []int32  `protobuf:"varint,11,rep,packed,name=other_uids,json=otherUids,proto3" json:"other_uids,omitempty"`
	Flags                int32    `protobuf:"varint,12,opt,name=flags,proto3" json:"flags,omitempty"`
	NoMuted              bool     `protobuf:"varint,13,opt,name=no_muted,json=noMuted,proto3" json:"no_muted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountRegisterDevice) Reset()         { *m = TLAccountRegisterDevice{} }
func (m *TLAccountRegisterDevice) String() string { return proto.CompactTextString(m) }
func (*TLAccountRegisterDevice) ProtoMessage()    {}
func (*TLAccountRegisterDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{34}
}
func (m *TLAccountRegisterDevice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountRegisterDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountRegisterDevice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountRegisterDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountRegisterDevice.Merge(m, src)
}
func (m *TLAccountRegisterDevice) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountRegisterDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountRegisterDevice.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountRegisterDevice proto.InternalMessageInfo

func (m *TLAccountRegisterDevice) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountRegisterDevice) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountRegisterDevice) GetTokenType() int32 {
	if m != nil {
		return m.TokenType
	}
	return 0
}

func (m *TLAccountRegisterDevice) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *TLAccountRegisterDevice) GetDeviceModel() string {
	if m != nil {
		return m.DeviceModel
	}
	return ""
}

func (m *TLAccountRegisterDevice) GetSystemVersion() string {
	if m != nil {
		return m.SystemVersion
	}
	return ""
}

func (m *TLAccountRegisterDevice) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *TLAccountRegisterDevice) GetAppSandbox() *Bool {
	if m != nil {
		return m.AppSandbox
	}
	return nil
}

func (m *TLAccountRegisterDevice) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

func (m *TLAccountRegisterDevice) GetSecret() []byte {
	if m != nil {
		return m.Secret
	}
	return nil
}

func (m *TLAccountRegisterDevice) GetOtherUids() []int32 {
	if m != nil {
		return m.OtherUids
	}
	return nil
}

func (m *TLAccountRegisterDevice) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLAccountRegisterDevice) GetNoMuted() bool {
	if m != nil {
		return m.NoMuted
	}
	return false
}

///////////////////////////////////////////////////////////////////////////////
//  account.reportPeer#ae189d5f peer:InputPeer reason:ReportReason = Bool;
//
type TLAccountReportPeer struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Reason               *ReportReason `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountReportPeer) Reset()         { *m = TLAccountReportPeer{} }
func (m *TLAccountReportPeer) String() string { return proto.CompactTextString(m) }
func (*TLAccountReportPeer) ProtoMessage()    {}
func (*TLAccountReportPeer) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{35}
}
func (m *TLAccountReportPeer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountReportPeer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountReportPeer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountReportPeer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountReportPeer.Merge(m, src)
}
func (m *TLAccountReportPeer) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountReportPeer) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountReportPeer.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountReportPeer proto.InternalMessageInfo

func (m *TLAccountReportPeer) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountReportPeer) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountReportPeer) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLAccountReportPeer) GetReason() *ReportReason {
	if m != nil {
		return m.Reason
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  account.resendPasswordEmail#7a7f2a15 = Bool;
//
type TLAccountResendPasswordEmail struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountResendPasswordEmail) Reset()         { *m = TLAccountResendPasswordEmail{} }
func (m *TLAccountResendPasswordEmail) String() string { return proto.CompactTextString(m) }
func (*TLAccountResendPasswordEmail) ProtoMessage()    {}
func (*TLAccountResendPasswordEmail) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{36}
}
func (m *TLAccountResendPasswordEmail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountResendPasswordEmail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountResendPasswordEmail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountResendPasswordEmail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountResendPasswordEmail.Merge(m, src)
}
func (m *TLAccountResendPasswordEmail) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountResendPasswordEmail) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountResendPasswordEmail.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountResendPasswordEmail proto.InternalMessageInfo

func (m *TLAccountResendPasswordEmail) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountResendPasswordEmail) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  account.resetAuthorization#df77f3bc hash:long = Bool;
//
type TLAccountResetAuthorization struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Hash                 int64    `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountResetAuthorization) Reset()         { *m = TLAccountResetAuthorization{} }
func (m *TLAccountResetAuthorization) String() string { return proto.CompactTextString(m) }
func (*TLAccountResetAuthorization) ProtoMessage()    {}
func (*TLAccountResetAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{37}
}
func (m *TLAccountResetAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountResetAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountResetAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountResetAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountResetAuthorization.Merge(m, src)
}
func (m *TLAccountResetAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountResetAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountResetAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountResetAuthorization proto.InternalMessageInfo

func (m *TLAccountResetAuthorization) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountResetAuthorization) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountResetAuthorization) GetHash() int64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  account.resetNotifySettings#db7e1747 = Bool;
//
type TLAccountResetNotifySettings struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountResetNotifySettings) Reset()         { *m = TLAccountResetNotifySettings{} }
func (m *TLAccountResetNotifySettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountResetNotifySettings) ProtoMessage()    {}
func (*TLAccountResetNotifySettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{38}
}
func (m *TLAccountResetNotifySettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountResetNotifySettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountResetNotifySettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountResetNotifySettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountResetNotifySettings.Merge(m, src)
}
func (m *TLAccountResetNotifySettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountResetNotifySettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountResetNotifySettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountResetNotifySettings proto.InternalMessageInfo

func (m *TLAccountResetNotifySettings) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountResetNotifySettings) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  account.resetWallPapers#bb3b9804 = Bool;
//
type TLAccountResetWallPapers struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountResetWallPapers) Reset()         { *m = TLAccountResetWallPapers{} }
func (m *TLAccountResetWallPapers) String() string { return proto.CompactTextString(m) }
func (*TLAccountResetWallPapers) ProtoMessage()    {}
func (*TLAccountResetWallPapers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{39}
}
func (m *TLAccountResetWallPapers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountResetWallPapers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountResetWallPapers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountResetWallPapers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountResetWallPapers.Merge(m, src)
}
func (m *TLAccountResetWallPapers) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountResetWallPapers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountResetWallPapers.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountResetWallPapers proto.InternalMessageInfo

func (m *TLAccountResetWallPapers) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountResetWallPapers) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  account.resetWebAuthorization#2d01b9ef hash:long = Bool;
//
type TLAccountResetWebAuthorization struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Hash                 int64    `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountResetWebAuthorization) Reset()         { *m = TLAccountResetWebAuthorization{} }
func (m *TLAccountResetWebAuthorization) String() string { return proto.CompactTextString(m) }
func (*TLAccountResetWebAuthorization) ProtoMessage()    {}
func (*TLAccountResetWebAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{40}
}
func (m *TLAccountResetWebAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountResetWebAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountResetWebAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountResetWebAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountResetWebAuthorization.Merge(m, src)
}
func (m *TLAccountResetWebAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountResetWebAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountResetWebAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountResetWebAuthorization proto.InternalMessageInfo

func (m *TLAccountResetWebAuthorization) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountResetWebAuthorization) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountResetWebAuthorization) GetHash() int64 {
	if m != nil {
		return m.Hash
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  account.resetWebAuthorizations#682d2594 = Bool;
//
type TLAccountResetWebAuthorizations struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountResetWebAuthorizations) Reset()         { *m = TLAccountResetWebAuthorizations{} }
func (m *TLAccountResetWebAuthorizations) String() string { return proto.CompactTextString(m) }
func (*TLAccountResetWebAuthorizations) ProtoMessage()    {}
func (*TLAccountResetWebAuthorizations) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{41}
}
func (m *TLAccountResetWebAuthorizations) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountResetWebAuthorizations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountResetWebAuthorizations.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountResetWebAuthorizations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountResetWebAuthorizations.Merge(m, src)
}
func (m *TLAccountResetWebAuthorizations) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountResetWebAuthorizations) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountResetWebAuthorizations.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountResetWebAuthorizations proto.InternalMessageInfo

func (m *TLAccountResetWebAuthorizations) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountResetWebAuthorizations) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  account.saveAutoDownloadSettings#76f36233 flags:# low:flags.0?true high:flags.1?true settings:AutoDownloadSettings = Bool;
//
type TLAccountSaveAutoDownloadSettings struct {
	Cmd                  TLCmd                 `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string                `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32                 `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Low                  bool                  `protobuf:"varint,4,opt,name=low,proto3" json:"low,omitempty"`
	High                 bool                  `protobuf:"varint,5,opt,name=high,proto3" json:"high,omitempty"`
	Settings             *AutoDownloadSettings `protobuf:"bytes,6,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TLAccountSaveAutoDownloadSettings) Reset()         { *m = TLAccountSaveAutoDownloadSettings{} }
func (m *TLAccountSaveAutoDownloadSettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountSaveAutoDownloadSettings) ProtoMessage()    {}
func (*TLAccountSaveAutoDownloadSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{42}
}
func (m *TLAccountSaveAutoDownloadSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSaveAutoDownloadSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSaveAutoDownloadSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountSaveAutoDownloadSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSaveAutoDownloadSettings.Merge(m, src)
}
func (m *TLAccountSaveAutoDownloadSettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSaveAutoDownloadSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSaveAutoDownloadSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSaveAutoDownloadSettings proto.InternalMessageInfo

func (m *TLAccountSaveAutoDownloadSettings) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountSaveAutoDownloadSettings) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountSaveAutoDownloadSettings) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLAccountSaveAutoDownloadSettings) GetLow() bool {
	if m != nil {
		return m.Low
	}
	return false
}

func (m *TLAccountSaveAutoDownloadSettings) GetHigh() bool {
	if m != nil {
		return m.High
	}
	return false
}

func (m *TLAccountSaveAutoDownloadSettings) GetSettings() *AutoDownloadSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  account.saveSecureValue#899fe31d value:InputSecureValue secure_secret_id:long = SecureValue;
//
type TLAccountSaveSecureValue struct {
	Cmd                  TLCmd             `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string            `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Value                *InputSecureValue `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	SecureSecretId       int64             `protobuf:"varint,4,opt,name=secure_secret_id,json=secureSecretId,proto3" json:"secure_secret_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLAccountSaveSecureValue) Reset()         { *m = TLAccountSaveSecureValue{} }
func (m *TLAccountSaveSecureValue) String() string { return proto.CompactTextString(m) }
func (*TLAccountSaveSecureValue) ProtoMessage()    {}
func (*TLAccountSaveSecureValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{43}
}
func (m *TLAccountSaveSecureValue) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSaveSecureValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSaveSecureValue.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountSaveSecureValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSaveSecureValue.Merge(m, src)
}
func (m *TLAccountSaveSecureValue) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSaveSecureValue) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSaveSecureValue.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSaveSecureValue proto.InternalMessageInfo

func (m *TLAccountSaveSecureValue) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountSaveSecureValue) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountSaveSecureValue) GetValue() *InputSecureValue {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *TLAccountSaveSecureValue) GetSecureSecretId() int64 {
	if m != nil {
		return m.SecureSecretId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  account.saveTheme#f257106c theme:InputTheme unsave:Bool = Bool;
//
type TLAccountSaveTheme struct {
	Cmd                  TLCmd       `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string      `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Theme                *InputTheme `protobuf:"bytes,3,opt,name=theme,proto3" json:"theme,omitempty"`
	Unsave               *Bool       `protobuf:"bytes,4,opt,name=unsave,proto3" json:"unsave,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TLAccountSaveTheme) Reset()         { *m = TLAccountSaveTheme{} }
func (m *TLAccountSaveTheme) String() string { return proto.CompactTextString(m) }
func (*TLAccountSaveTheme) ProtoMessage()    {}
func (*TLAccountSaveTheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{44}
}
func (m *TLAccountSaveTheme) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSaveTheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSaveTheme.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountSaveTheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSaveTheme.Merge(m, src)
}
func (m *TLAccountSaveTheme) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSaveTheme) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSaveTheme.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSaveTheme proto.InternalMessageInfo

func (m *TLAccountSaveTheme) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountSaveTheme) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountSaveTheme) GetTheme() *InputTheme {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *TLAccountSaveTheme) GetUnsave() *Bool {
	if m != nil {
		return m.Unsave
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  account.saveWallPaper#189581b3 wallpaper:InputWallPaper unsave:Bool = Bool;
//  account.saveWallPaper#6c5a5b37 wallpaper:InputWallPaper unsave:Bool settings:WallPaperSettings = Bool;
//
type TLAccountSaveWallPaper struct {
	Cmd                  TLCmd              `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string             `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Wallpaper            *InputWallPaper    `protobuf:"bytes,3,opt,name=wallpaper,proto3" json:"wallpaper,omitempty"`
	Unsave               *Bool              `protobuf:"bytes,4,opt,name=unsave,proto3" json:"unsave,omitempty"`
	Settings             *WallPaperSettings `protobuf:"bytes,5,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLAccountSaveWallPaper) Reset()         { *m = TLAccountSaveWallPaper{} }
func (m *TLAccountSaveWallPaper) String() string { return proto.CompactTextString(m) }
func (*TLAccountSaveWallPaper) ProtoMessage()    {}
func (*TLAccountSaveWallPaper) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{45}
}
func (m *TLAccountSaveWallPaper) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSaveWallPaper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSaveWallPaper.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountSaveWallPaper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSaveWallPaper.Merge(m, src)
}
func (m *TLAccountSaveWallPaper) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSaveWallPaper) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSaveWallPaper.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSaveWallPaper proto.InternalMessageInfo

func (m *TLAccountSaveWallPaper) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountSaveWallPaper) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountSaveWallPaper) GetWallpaper() *InputWallPaper {
	if m != nil {
		return m.Wallpaper
	}
	return nil
}

func (m *TLAccountSaveWallPaper) GetUnsave() *Bool {
	if m != nil {
		return m.Unsave
	}
	return nil
}

func (m *TLAccountSaveWallPaper) GetSettings() *WallPaperSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  account.sendChangePhoneCode#8e57deb flags:# allow_flashcall:flags.0?true phone_number:string current_number:flags.0?Bool = auth.SentCode;
//  account.sendChangePhoneCode#82574ae5 phone_number:string settings:CodeSettings = auth.SentCode;
//
type TLAccountSendChangePhoneCode struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32         `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	AllowFlashcall       bool          `protobuf:"varint,4,opt,name=allow_flashcall,json=allowFlashcall,proto3" json:"allow_flashcall,omitempty"`
	PhoneNumber          string        `protobuf:"bytes,5,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	CurrentNumber        *Bool         `protobuf:"bytes,6,opt,name=current_number,json=currentNumber,proto3" json:"current_number,omitempty"`
	Settings             *CodeSettings `protobuf:"bytes,7,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountSendChangePhoneCode) Reset()         { *m = TLAccountSendChangePhoneCode{} }
func (m *TLAccountSendChangePhoneCode) String() string { return proto.CompactTextString(m) }
func (*TLAccountSendChangePhoneCode) ProtoMessage()    {}
func (*TLAccountSendChangePhoneCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{46}
}
func (m *TLAccountSendChangePhoneCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSendChangePhoneCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSendChangePhoneCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountSendChangePhoneCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSendChangePhoneCode.Merge(m, src)
}
func (m *TLAccountSendChangePhoneCode) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSendChangePhoneCode) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSendChangePhoneCode.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSendChangePhoneCode proto.InternalMessageInfo

func (m *TLAccountSendChangePhoneCode) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountSendChangePhoneCode) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountSendChangePhoneCode) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLAccountSendChangePhoneCode) GetAllowFlashcall() bool {
	if m != nil {
		return m.AllowFlashcall
	}
	return false
}

func (m *TLAccountSendChangePhoneCode) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *TLAccountSendChangePhoneCode) GetCurrentNumber() *Bool {
	if m != nil {
		return m.CurrentNumber
	}
	return nil
}

func (m *TLAccountSendChangePhoneCode) GetSettings() *CodeSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  account.sendConfirmPhoneCode#1516d7bd flags:# allow_flashcall:flags.0?true hash:string current_number:flags.0?Bool = auth.SentCode;
//  account.sendConfirmPhoneCode#1b3faa88 hash:string settings:CodeSettings = auth.SentCode;
//
type TLAccountSendConfirmPhoneCode struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32         `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	AllowFlashcall       bool          `protobuf:"varint,4,opt,name=allow_flashcall,json=allowFlashcall,proto3" json:"allow_flashcall,omitempty"`
	Hash                 string        `protobuf:"bytes,5,opt,name=hash,proto3" json:"hash,omitempty"`
	CurrentNumber        *Bool         `protobuf:"bytes,6,opt,name=current_number,json=currentNumber,proto3" json:"current_number,omitempty"`
	Settings             *CodeSettings `protobuf:"bytes,7,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountSendConfirmPhoneCode) Reset()         { *m = TLAccountSendConfirmPhoneCode{} }
func (m *TLAccountSendConfirmPhoneCode) String() string { return proto.CompactTextString(m) }
func (*TLAccountSendConfirmPhoneCode) ProtoMessage()    {}
func (*TLAccountSendConfirmPhoneCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{47}
}
func (m *TLAccountSendConfirmPhoneCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSendConfirmPhoneCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSendConfirmPhoneCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountSendConfirmPhoneCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSendConfirmPhoneCode.Merge(m, src)
}
func (m *TLAccountSendConfirmPhoneCode) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSendConfirmPhoneCode) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSendConfirmPhoneCode.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSendConfirmPhoneCode proto.InternalMessageInfo

func (m *TLAccountSendConfirmPhoneCode) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountSendConfirmPhoneCode) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountSendConfirmPhoneCode) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLAccountSendConfirmPhoneCode) GetAllowFlashcall() bool {
	if m != nil {
		return m.AllowFlashcall
	}
	return false
}

func (m *TLAccountSendConfirmPhoneCode) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *TLAccountSendConfirmPhoneCode) GetCurrentNumber() *Bool {
	if m != nil {
		return m.CurrentNumber
	}
	return nil
}

func (m *TLAccountSendConfirmPhoneCode) GetSettings() *CodeSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  account.sendVerifyEmailCode#7011509f email:string = account.SentEmailCode;
//
type TLAccountSendVerifyEmailCode struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountSendVerifyEmailCode) Reset()         { *m = TLAccountSendVerifyEmailCode{} }
func (m *TLAccountSendVerifyEmailCode) String() string { return proto.CompactTextString(m) }
func (*TLAccountSendVerifyEmailCode) ProtoMessage()    {}
func (*TLAccountSendVerifyEmailCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{48}
}
func (m *TLAccountSendVerifyEmailCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSendVerifyEmailCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSendVerifyEmailCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountSendVerifyEmailCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSendVerifyEmailCode.Merge(m, src)
}
func (m *TLAccountSendVerifyEmailCode) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSendVerifyEmailCode) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSendVerifyEmailCode.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSendVerifyEmailCode proto.InternalMessageInfo

func (m *TLAccountSendVerifyEmailCode) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountSendVerifyEmailCode) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountSendVerifyEmailCode) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  account.sendVerifyPhoneCode#823380b4 flags:# allow_flashcall:flags.0?true phone_number:string current_number:flags.0?Bool = auth.SentCode;
//  account.sendVerifyPhoneCode#a5a356f9 phone_number:string settings:CodeSettings = auth.SentCode;
//
type TLAccountSendVerifyPhoneCode struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32         `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	AllowFlashcall       bool          `protobuf:"varint,4,opt,name=allow_flashcall,json=allowFlashcall,proto3" json:"allow_flashcall,omitempty"`
	PhoneNumber          string        `protobuf:"bytes,5,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	CurrentNumber        *Bool         `protobuf:"bytes,6,opt,name=current_number,json=currentNumber,proto3" json:"current_number,omitempty"`
	Settings             *CodeSettings `protobuf:"bytes,7,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAccountSendVerifyPhoneCode) Reset()         { *m = TLAccountSendVerifyPhoneCode{} }
func (m *TLAccountSendVerifyPhoneCode) String() string { return proto.CompactTextString(m) }
func (*TLAccountSendVerifyPhoneCode) ProtoMessage()    {}
func (*TLAccountSendVerifyPhoneCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{49}
}
func (m *TLAccountSendVerifyPhoneCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSendVerifyPhoneCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSendVerifyPhoneCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountSendVerifyPhoneCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSendVerifyPhoneCode.Merge(m, src)
}
func (m *TLAccountSendVerifyPhoneCode) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSendVerifyPhoneCode) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSendVerifyPhoneCode.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSendVerifyPhoneCode proto.InternalMessageInfo

func (m *TLAccountSendVerifyPhoneCode) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountSendVerifyPhoneCode) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountSendVerifyPhoneCode) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLAccountSendVerifyPhoneCode) GetAllowFlashcall() bool {
	if m != nil {
		return m.AllowFlashcall
	}
	return false
}

func (m *TLAccountSendVerifyPhoneCode) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *TLAccountSendVerifyPhoneCode) GetCurrentNumber() *Bool {
	if m != nil {
		return m.CurrentNumber
	}
	return nil
}

func (m *TLAccountSendVerifyPhoneCode) GetSettings() *CodeSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  account.setAccountTTL#2442485e ttl:AccountDaysTTL = Bool;
//
type TLAccountSetAccountTTL struct {
	Cmd                  TLCmd           `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string          `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Ttl                  *AccountDaysTTL `protobuf:"bytes,3,opt,name=ttl,proto3" json:"ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLAccountSetAccountTTL) Reset()         { *m = TLAccountSetAccountTTL{} }
func (m *TLAccountSetAccountTTL) String() string { return proto.CompactTextString(m) }
func (*TLAccountSetAccountTTL) ProtoMessage()    {}
func (*TLAccountSetAccountTTL) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{50}
}
func (m *TLAccountSetAccountTTL) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSetAccountTTL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSetAccountTTL.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountSetAccountTTL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSetAccountTTL.Merge(m, src)
}
func (m *TLAccountSetAccountTTL) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSetAccountTTL) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSetAccountTTL.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSetAccountTTL proto.InternalMessageInfo

func (m *TLAccountSetAccountTTL) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountSetAccountTTL) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountSetAccountTTL) GetTtl() *AccountDaysTTL {
	if m != nil {
		return m.Ttl
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  account.setContactSignUpNotification#cff43f61 silent:Bool = Bool;
//
type TLAccountSetContactSignUpNotification struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Silent               *Bool    `protobuf:"bytes,3,opt,name=silent,proto3" json:"silent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountSetContactSignUpNotification) Reset()         { *m = TLAccountSetContactSignUpNotification{} }
func (m *TLAccountSetContactSignUpNotification) String() string { return proto.CompactTextString(m) }
func (*TLAccountSetContactSignUpNotification) ProtoMessage()    {}
func (*TLAccountSetContactSignUpNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{51}
}
func (m *TLAccountSetContactSignUpNotification) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSetContactSignUpNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSetContactSignUpNotification.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountSetContactSignUpNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSetContactSignUpNotification.Merge(m, src)
}
func (m *TLAccountSetContactSignUpNotification) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSetContactSignUpNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSetContactSignUpNotification.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSetContactSignUpNotification proto.InternalMessageInfo

func (m *TLAccountSetContactSignUpNotification) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountSetContactSignUpNotification) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountSetContactSignUpNotification) GetSilent() *Bool {
	if m != nil {
		return m.Silent
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  account.setContentSettings#b574b16b flags:# sensitive_enabled:flags.0?true = Bool;
//
type TLAccountSetContentSettings struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32    `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	SensitiveEnabled     bool     `protobuf:"varint,4,opt,name=sensitive_enabled,json=sensitiveEnabled,proto3" json:"sensitive_enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountSetContentSettings) Reset()         { *m = TLAccountSetContentSettings{} }
func (m *TLAccountSetContentSettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountSetContentSettings) ProtoMessage()    {}
func (*TLAccountSetContentSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{52}
}
func (m *TLAccountSetContentSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSetContentSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSetContentSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountSetContentSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSetContentSettings.Merge(m, src)
}
func (m *TLAccountSetContentSettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSetContentSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSetContentSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSetContentSettings proto.InternalMessageInfo

func (m *TLAccountSetContentSettings) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountSetContentSettings) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountSetContentSettings) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLAccountSetContentSettings) GetSensitiveEnabled() bool {
	if m != nil {
		return m.SensitiveEnabled
	}
	return false
}

///////////////////////////////////////////////////////////////////////////////
//  account.setGlobalPrivacySettings#1edaaac2 settings:GlobalPrivacySettings = GlobalPrivacySettings;
//
type TLAccountSetGlobalPrivacySettings struct {
	Cmd                  TLCmd                  `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string                 `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Settings             *GlobalPrivacySettings `protobuf:"bytes,3,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TLAccountSetGlobalPrivacySettings) Reset()         { *m = TLAccountSetGlobalPrivacySettings{} }
func (m *TLAccountSetGlobalPrivacySettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountSetGlobalPrivacySettings) ProtoMessage()    {}
func (*TLAccountSetGlobalPrivacySettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{53}
}
func (m *TLAccountSetGlobalPrivacySettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSetGlobalPrivacySettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSetGlobalPrivacySettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountSetGlobalPrivacySettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSetGlobalPrivacySettings.Merge(m, src)
}
func (m *TLAccountSetGlobalPrivacySettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSetGlobalPrivacySettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSetGlobalPrivacySettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSetGlobalPrivacySettings proto.InternalMessageInfo

func (m *TLAccountSetGlobalPrivacySettings) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountSetGlobalPrivacySettings) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountSetGlobalPrivacySettings) GetSettings() *GlobalPrivacySettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  account.setPrivacy#c9f81ce8 key:InputPrivacyKey rules:Vector<InputPrivacyRule> = account.PrivacyRules;
//
type TLAccountSetPrivacy struct {
	Cmd                  TLCmd               `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string              `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Key                  *InputPrivacyKey    `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Rules                []*InputPrivacyRule `protobuf:"bytes,4,rep,name=rules,proto3" json:"rules,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLAccountSetPrivacy) Reset()         { *m = TLAccountSetPrivacy{} }
func (m *TLAccountSetPrivacy) String() string { return proto.CompactTextString(m) }
func (*TLAccountSetPrivacy) ProtoMessage()    {}
func (*TLAccountSetPrivacy) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{54}
}
func (m *TLAccountSetPrivacy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountSetPrivacy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountSetPrivacy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountSetPrivacy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountSetPrivacy.Merge(m, src)
}
func (m *TLAccountSetPrivacy) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountSetPrivacy) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountSetPrivacy.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountSetPrivacy proto.InternalMessageInfo

func (m *TLAccountSetPrivacy) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountSetPrivacy) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountSetPrivacy) GetKey() *InputPrivacyKey {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *TLAccountSetPrivacy) GetRules() []*InputPrivacyRule {
	if m != nil {
		return m.Rules
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  account.unregisterDevice#65c55b40 token_type:int token:string = Bool;
//  account.unregisterDevice#3076c4bf token_type:int token:string other_uids:Vector<int> = Bool;
//
type TLAccountUnregisterDevice struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	TokenType            int32    `protobuf:"varint,3,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	Token                string   `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	OtherUids            []int32  `protobuf:"varint,5,rep,packed,name=other_uids,json=otherUids,proto3" json:"other_uids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountUnregisterDevice) Reset()         { *m = TLAccountUnregisterDevice{} }
func (m *TLAccountUnregisterDevice) String() string { return proto.CompactTextString(m) }
func (*TLAccountUnregisterDevice) ProtoMessage()    {}
func (*TLAccountUnregisterDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{55}
}
func (m *TLAccountUnregisterDevice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUnregisterDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUnregisterDevice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountUnregisterDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUnregisterDevice.Merge(m, src)
}
func (m *TLAccountUnregisterDevice) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUnregisterDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUnregisterDevice.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUnregisterDevice proto.InternalMessageInfo

func (m *TLAccountUnregisterDevice) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountUnregisterDevice) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountUnregisterDevice) GetTokenType() int32 {
	if m != nil {
		return m.TokenType
	}
	return 0
}

func (m *TLAccountUnregisterDevice) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *TLAccountUnregisterDevice) GetOtherUids() []int32 {
	if m != nil {
		return m.OtherUids
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  account.updateDeviceLocked#38df3532 period:int = Bool;
//
type TLAccountUpdateDeviceLocked struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Period               int32    `protobuf:"varint,3,opt,name=period,proto3" json:"period,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountUpdateDeviceLocked) Reset()         { *m = TLAccountUpdateDeviceLocked{} }
func (m *TLAccountUpdateDeviceLocked) String() string { return proto.CompactTextString(m) }
func (*TLAccountUpdateDeviceLocked) ProtoMessage()    {}
func (*TLAccountUpdateDeviceLocked) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{56}
}
func (m *TLAccountUpdateDeviceLocked) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUpdateDeviceLocked) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUpdateDeviceLocked.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountUpdateDeviceLocked) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUpdateDeviceLocked.Merge(m, src)
}
func (m *TLAccountUpdateDeviceLocked) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUpdateDeviceLocked) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUpdateDeviceLocked.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUpdateDeviceLocked proto.InternalMessageInfo

func (m *TLAccountUpdateDeviceLocked) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountUpdateDeviceLocked) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountUpdateDeviceLocked) GetPeriod() int32 {
	if m != nil {
		return m.Period
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  account.updateNotifySettings#84be5b93 peer:InputNotifyPeer settings:InputPeerNotifySettings = Bool;
//
type TLAccountUpdateNotifySettings struct {
	Cmd                  TLCmd                    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string                   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputNotifyPeer         `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Settings             *InputPeerNotifySettings `protobuf:"bytes,4,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *TLAccountUpdateNotifySettings) Reset()         { *m = TLAccountUpdateNotifySettings{} }
func (m *TLAccountUpdateNotifySettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountUpdateNotifySettings) ProtoMessage()    {}
func (*TLAccountUpdateNotifySettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{57}
}
func (m *TLAccountUpdateNotifySettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUpdateNotifySettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUpdateNotifySettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountUpdateNotifySettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUpdateNotifySettings.Merge(m, src)
}
func (m *TLAccountUpdateNotifySettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUpdateNotifySettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUpdateNotifySettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUpdateNotifySettings proto.InternalMessageInfo

func (m *TLAccountUpdateNotifySettings) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountUpdateNotifySettings) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountUpdateNotifySettings) GetPeer() *InputNotifyPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLAccountUpdateNotifySettings) GetSettings() *InputPeerNotifySettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  account.updatePasswordSettings#fa7c4b86 current_password_hash:bytes new_settings:account.PasswordInputSettings = Bool;
//  account.updatePasswordSettings#a59b102f password:InputCheckPasswordSRP new_settings:account.PasswordInputSettings = Bool;
//
type TLAccountUpdatePasswordSettings struct {
	Cmd                  TLCmd                          `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string                         `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	CurrentPasswordHash  []byte                         `protobuf:"bytes,3,opt,name=current_password_hash,json=currentPasswordHash,proto3" json:"current_password_hash,omitempty"`
	NewSettings          *Account_PasswordInputSettings `protobuf:"bytes,4,opt,name=new_settings,json=newSettings,proto3" json:"new_settings,omitempty"`
	Password             *InputCheckPasswordSRP         `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *TLAccountUpdatePasswordSettings) Reset()         { *m = TLAccountUpdatePasswordSettings{} }
func (m *TLAccountUpdatePasswordSettings) String() string { return proto.CompactTextString(m) }
func (*TLAccountUpdatePasswordSettings) ProtoMessage()    {}
func (*TLAccountUpdatePasswordSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{58}
}
func (m *TLAccountUpdatePasswordSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUpdatePasswordSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUpdatePasswordSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountUpdatePasswordSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUpdatePasswordSettings.Merge(m, src)
}
func (m *TLAccountUpdatePasswordSettings) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUpdatePasswordSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUpdatePasswordSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUpdatePasswordSettings proto.InternalMessageInfo

func (m *TLAccountUpdatePasswordSettings) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountUpdatePasswordSettings) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountUpdatePasswordSettings) GetCurrentPasswordHash() []byte {
	if m != nil {
		return m.CurrentPasswordHash
	}
	return nil
}

func (m *TLAccountUpdatePasswordSettings) GetNewSettings() *Account_PasswordInputSettings {
	if m != nil {
		return m.NewSettings
	}
	return nil
}

func (m *TLAccountUpdatePasswordSettings) GetPassword() *InputCheckPasswordSRP {
	if m != nil {
		return m.Password
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  account.updateProfile#78515775 flags:# first_name:flags.0?string last_name:flags.1?string about:flags.2?string = User;
//
type TLAccountUpdateProfile struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32    `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	FirstName            string   `protobuf:"bytes,4,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,5,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	About                string   `protobuf:"bytes,6,opt,name=about,proto3" json:"about,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountUpdateProfile) Reset()         { *m = TLAccountUpdateProfile{} }
func (m *TLAccountUpdateProfile) String() string { return proto.CompactTextString(m) }
func (*TLAccountUpdateProfile) ProtoMessage()    {}
func (*TLAccountUpdateProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{59}
}
func (m *TLAccountUpdateProfile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUpdateProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUpdateProfile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountUpdateProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUpdateProfile.Merge(m, src)
}
func (m *TLAccountUpdateProfile) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUpdateProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUpdateProfile.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUpdateProfile proto.InternalMessageInfo

func (m *TLAccountUpdateProfile) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountUpdateProfile) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountUpdateProfile) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLAccountUpdateProfile) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *TLAccountUpdateProfile) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *TLAccountUpdateProfile) GetAbout() string {
	if m != nil {
		return m.About
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  account.updateStatus#6628562c offline:Bool = Bool;
//
type TLAccountUpdateStatus struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Offline              *Bool    `protobuf:"bytes,3,opt,name=offline,proto3" json:"offline,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountUpdateStatus) Reset()         { *m = TLAccountUpdateStatus{} }
func (m *TLAccountUpdateStatus) String() string { return proto.CompactTextString(m) }
func (*TLAccountUpdateStatus) ProtoMessage()    {}
func (*TLAccountUpdateStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{60}
}
func (m *TLAccountUpdateStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUpdateStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUpdateStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountUpdateStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUpdateStatus.Merge(m, src)
}
func (m *TLAccountUpdateStatus) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUpdateStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUpdateStatus.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUpdateStatus proto.InternalMessageInfo

func (m *TLAccountUpdateStatus) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountUpdateStatus) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountUpdateStatus) GetOffline() *Bool {
	if m != nil {
		return m.Offline
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  account.updateTheme#f8997176 flags:# theme:InputTheme slug:flags.0?string title:flags.1?string document:flags.2?InputDocument = Theme;
//  account.updateTheme#3b8ea202 flags:# format:string theme:InputTheme slug:flags.0?string title:flags.1?string document:flags.2?InputDocument = Theme;
//  account.updateTheme#5cb367d5 flags:# format:string theme:InputTheme slug:flags.0?string title:flags.1?string document:flags.2?InputDocument settings:flags.3?InputThemeSettings = Theme;
//
type TLAccountUpdateTheme struct {
	Cmd                  TLCmd               `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string              `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32               `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Theme                *InputTheme         `protobuf:"bytes,4,opt,name=theme,proto3" json:"theme,omitempty"`
	Slug                 string              `protobuf:"bytes,5,opt,name=slug,proto3" json:"slug,omitempty"`
	Title                string              `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	Document             *InputDocument      `protobuf:"bytes,7,opt,name=document,proto3" json:"document,omitempty"`
	Format               string              `protobuf:"bytes,8,opt,name=format,proto3" json:"format,omitempty"`
	Settings             *InputThemeSettings `protobuf:"bytes,9,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLAccountUpdateTheme) Reset()         { *m = TLAccountUpdateTheme{} }
func (m *TLAccountUpdateTheme) String() string { return proto.CompactTextString(m) }
func (*TLAccountUpdateTheme) ProtoMessage()    {}
func (*TLAccountUpdateTheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{61}
}
func (m *TLAccountUpdateTheme) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUpdateTheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUpdateTheme.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountUpdateTheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUpdateTheme.Merge(m, src)
}
func (m *TLAccountUpdateTheme) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUpdateTheme) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUpdateTheme.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUpdateTheme proto.InternalMessageInfo

func (m *TLAccountUpdateTheme) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountUpdateTheme) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountUpdateTheme) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLAccountUpdateTheme) GetTheme() *InputTheme {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *TLAccountUpdateTheme) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

func (m *TLAccountUpdateTheme) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *TLAccountUpdateTheme) GetDocument() *InputDocument {
	if m != nil {
		return m.Document
	}
	return nil
}

func (m *TLAccountUpdateTheme) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *TLAccountUpdateTheme) GetSettings() *InputThemeSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  account.updateUsername#3e0bdd7c username:string = User;
//
type TLAccountUpdateUsername struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Username             string   `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountUpdateUsername) Reset()         { *m = TLAccountUpdateUsername{} }
func (m *TLAccountUpdateUsername) String() string { return proto.CompactTextString(m) }
func (*TLAccountUpdateUsername) ProtoMessage()    {}
func (*TLAccountUpdateUsername) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{62}
}
func (m *TLAccountUpdateUsername) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUpdateUsername) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUpdateUsername.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountUpdateUsername) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUpdateUsername.Merge(m, src)
}
func (m *TLAccountUpdateUsername) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUpdateUsername) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUpdateUsername.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUpdateUsername proto.InternalMessageInfo

func (m *TLAccountUpdateUsername) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountUpdateUsername) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountUpdateUsername) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  account.uploadTheme#1c3db333 flags:# file:InputFile thumb:flags.0?InputFile file_name:string mime_type:string = Document;
//
type TLAccountUploadTheme struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32      `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	File                 *InputFile `protobuf:"bytes,4,opt,name=file,proto3" json:"file,omitempty"`
	Thumb                *InputFile `protobuf:"bytes,5,opt,name=thumb,proto3" json:"thumb,omitempty"`
	FileName             string     `protobuf:"bytes,6,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	MimeType             string     `protobuf:"bytes,7,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLAccountUploadTheme) Reset()         { *m = TLAccountUploadTheme{} }
func (m *TLAccountUploadTheme) String() string { return proto.CompactTextString(m) }
func (*TLAccountUploadTheme) ProtoMessage()    {}
func (*TLAccountUploadTheme) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{63}
}
func (m *TLAccountUploadTheme) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUploadTheme) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUploadTheme.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountUploadTheme) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUploadTheme.Merge(m, src)
}
func (m *TLAccountUploadTheme) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUploadTheme) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUploadTheme.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUploadTheme proto.InternalMessageInfo

func (m *TLAccountUploadTheme) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountUploadTheme) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountUploadTheme) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLAccountUploadTheme) GetFile() *InputFile {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *TLAccountUploadTheme) GetThumb() *InputFile {
	if m != nil {
		return m.Thumb
	}
	return nil
}

func (m *TLAccountUploadTheme) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *TLAccountUploadTheme) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  account.uploadWallPaper#c7ba9b4d file:InputFile mime_type:string = WallPaper;
//  account.uploadWallPaper#dd853661 file:InputFile mime_type:string settings:WallPaperSettings = WallPaper;
//
type TLAccountUploadWallPaper struct {
	Cmd                  TLCmd              `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string             `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	File                 *InputFile         `protobuf:"bytes,3,opt,name=file,proto3" json:"file,omitempty"`
	MimeType             string             `protobuf:"bytes,4,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Settings             *WallPaperSettings `protobuf:"bytes,5,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLAccountUploadWallPaper) Reset()         { *m = TLAccountUploadWallPaper{} }
func (m *TLAccountUploadWallPaper) String() string { return proto.CompactTextString(m) }
func (*TLAccountUploadWallPaper) ProtoMessage()    {}
func (*TLAccountUploadWallPaper) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{64}
}
func (m *TLAccountUploadWallPaper) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountUploadWallPaper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountUploadWallPaper.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountUploadWallPaper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountUploadWallPaper.Merge(m, src)
}
func (m *TLAccountUploadWallPaper) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountUploadWallPaper) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountUploadWallPaper.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountUploadWallPaper proto.InternalMessageInfo

func (m *TLAccountUploadWallPaper) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountUploadWallPaper) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountUploadWallPaper) GetFile() *InputFile {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *TLAccountUploadWallPaper) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

func (m *TLAccountUploadWallPaper) GetSettings() *WallPaperSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  account.verifyEmail#ecba39db email:string code:string = Bool;
//
type TLAccountVerifyEmail struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Code                 string   `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountVerifyEmail) Reset()         { *m = TLAccountVerifyEmail{} }
func (m *TLAccountVerifyEmail) String() string { return proto.CompactTextString(m) }
func (*TLAccountVerifyEmail) ProtoMessage()    {}
func (*TLAccountVerifyEmail) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{65}
}
func (m *TLAccountVerifyEmail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountVerifyEmail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountVerifyEmail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountVerifyEmail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountVerifyEmail.Merge(m, src)
}
func (m *TLAccountVerifyEmail) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountVerifyEmail) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountVerifyEmail.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountVerifyEmail proto.InternalMessageInfo

func (m *TLAccountVerifyEmail) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountVerifyEmail) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountVerifyEmail) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *TLAccountVerifyEmail) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  account.verifyPhone#4dd3a7f6 phone_number:string phone_code_hash:string phone_code:string = Bool;
//
type TLAccountVerifyPhone struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	PhoneNumber          string   `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	PhoneCodeHash        string   `protobuf:"bytes,4,opt,name=phone_code_hash,json=phoneCodeHash,proto3" json:"phone_code_hash,omitempty"`
	PhoneCode            string   `protobuf:"bytes,5,opt,name=phone_code,json=phoneCode,proto3" json:"phone_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAccountVerifyPhone) Reset()         { *m = TLAccountVerifyPhone{} }
func (m *TLAccountVerifyPhone) String() string { return proto.CompactTextString(m) }
func (*TLAccountVerifyPhone) ProtoMessage()    {}
func (*TLAccountVerifyPhone) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{66}
}
func (m *TLAccountVerifyPhone) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAccountVerifyPhone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAccountVerifyPhone.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAccountVerifyPhone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAccountVerifyPhone.Merge(m, src)
}
func (m *TLAccountVerifyPhone) XXX_Size() int {
	return m.Size()
}
func (m *TLAccountVerifyPhone) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAccountVerifyPhone.DiscardUnknown(m)
}

var xxx_messageInfo_TLAccountVerifyPhone proto.InternalMessageInfo

func (m *TLAccountVerifyPhone) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAccountVerifyPhone) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAccountVerifyPhone) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *TLAccountVerifyPhone) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

func (m *TLAccountVerifyPhone) GetPhoneCode() string {
	if m != nil {
		return m.PhoneCode
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  auth.acceptLoginToken#e894ad4d token:bytes = Authorization;
//
type TLAuthAcceptLoginToken struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Token                []byte   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAuthAcceptLoginToken) Reset()         { *m = TLAuthAcceptLoginToken{} }
func (m *TLAuthAcceptLoginToken) String() string { return proto.CompactTextString(m) }
func (*TLAuthAcceptLoginToken) ProtoMessage()    {}
func (*TLAuthAcceptLoginToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{67}
}
func (m *TLAuthAcceptLoginToken) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthAcceptLoginToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthAcceptLoginToken.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthAcceptLoginToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthAcceptLoginToken.Merge(m, src)
}
func (m *TLAuthAcceptLoginToken) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthAcceptLoginToken) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthAcceptLoginToken.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthAcceptLoginToken proto.InternalMessageInfo

func (m *TLAuthAcceptLoginToken) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAuthAcceptLoginToken) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAuthAcceptLoginToken) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  auth.bindTempAuthKey#cdd42a05 perm_auth_key_id:long nonce:long expires_at:int encrypted_message:bytes = Bool;
//
type TLAuthBindTempAuthKey struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	PermAuthKeyId        int64    `protobuf:"varint,3,opt,name=perm_auth_key_id,json=permAuthKeyId,proto3" json:"perm_auth_key_id,omitempty"`
	Nonce                int64    `protobuf:"varint,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	ExpiresAt            int32    `protobuf:"varint,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	EncryptedMessage     []byte   `protobuf:"bytes,6,opt,name=encrypted_message,json=encryptedMessage,proto3" json:"encrypted_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAuthBindTempAuthKey) Reset()         { *m = TLAuthBindTempAuthKey{} }
func (m *TLAuthBindTempAuthKey) String() string { return proto.CompactTextString(m) }
func (*TLAuthBindTempAuthKey) ProtoMessage()    {}
func (*TLAuthBindTempAuthKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{68}
}
func (m *TLAuthBindTempAuthKey) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthBindTempAuthKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthBindTempAuthKey.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthBindTempAuthKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthBindTempAuthKey.Merge(m, src)
}
func (m *TLAuthBindTempAuthKey) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthBindTempAuthKey) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthBindTempAuthKey.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthBindTempAuthKey proto.InternalMessageInfo

func (m *TLAuthBindTempAuthKey) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAuthBindTempAuthKey) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAuthBindTempAuthKey) GetPermAuthKeyId() int64 {
	if m != nil {
		return m.PermAuthKeyId
	}
	return 0
}

func (m *TLAuthBindTempAuthKey) GetNonce() int64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *TLAuthBindTempAuthKey) GetExpiresAt() int32 {
	if m != nil {
		return m.ExpiresAt
	}
	return 0
}

func (m *TLAuthBindTempAuthKey) GetEncryptedMessage() []byte {
	if m != nil {
		return m.EncryptedMessage
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  auth.cancelCode#1f040578 phone_number:string phone_code_hash:string = Bool;
//
type TLAuthCancelCode struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	PhoneNumber          string   `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	PhoneCodeHash        string   `protobuf:"bytes,4,opt,name=phone_code_hash,json=phoneCodeHash,proto3" json:"phone_code_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAuthCancelCode) Reset()         { *m = TLAuthCancelCode{} }
func (m *TLAuthCancelCode) String() string { return proto.CompactTextString(m) }
func (*TLAuthCancelCode) ProtoMessage()    {}
func (*TLAuthCancelCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{69}
}
func (m *TLAuthCancelCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthCancelCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthCancelCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthCancelCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthCancelCode.Merge(m, src)
}
func (m *TLAuthCancelCode) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthCancelCode) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthCancelCode.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthCancelCode proto.InternalMessageInfo

func (m *TLAuthCancelCode) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAuthCancelCode) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAuthCancelCode) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *TLAuthCancelCode) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  auth.checkPassword#a63011e password_hash:bytes = auth.Authorization;
//  auth.checkPassword#d18b4d16 password:InputCheckPasswordSRP = auth.Authorization;
//
type TLAuthCheckPassword struct {
	Cmd                  TLCmd                  `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string                 `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	PasswordHash         []byte                 `protobuf:"bytes,3,opt,name=password_hash,json=passwordHash,proto3" json:"password_hash,omitempty"`
	Password             *InputCheckPasswordSRP `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TLAuthCheckPassword) Reset()         { *m = TLAuthCheckPassword{} }
func (m *TLAuthCheckPassword) String() string { return proto.CompactTextString(m) }
func (*TLAuthCheckPassword) ProtoMessage()    {}
func (*TLAuthCheckPassword) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{70}
}
func (m *TLAuthCheckPassword) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthCheckPassword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthCheckPassword.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthCheckPassword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthCheckPassword.Merge(m, src)
}
func (m *TLAuthCheckPassword) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthCheckPassword) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthCheckPassword.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthCheckPassword proto.InternalMessageInfo

func (m *TLAuthCheckPassword) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAuthCheckPassword) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAuthCheckPassword) GetPasswordHash() []byte {
	if m != nil {
		return m.PasswordHash
	}
	return nil
}

func (m *TLAuthCheckPassword) GetPassword() *InputCheckPasswordSRP {
	if m != nil {
		return m.Password
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  auth.checkPhone#6fe51dfb phone_number:string = auth.CheckedPhone;
//
type TLAuthCheckPhone struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	PhoneNumber          string   `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAuthCheckPhone) Reset()         { *m = TLAuthCheckPhone{} }
func (m *TLAuthCheckPhone) String() string { return proto.CompactTextString(m) }
func (*TLAuthCheckPhone) ProtoMessage()    {}
func (*TLAuthCheckPhone) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{71}
}
func (m *TLAuthCheckPhone) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthCheckPhone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthCheckPhone.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthCheckPhone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthCheckPhone.Merge(m, src)
}
func (m *TLAuthCheckPhone) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthCheckPhone) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthCheckPhone.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthCheckPhone proto.InternalMessageInfo

func (m *TLAuthCheckPhone) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAuthCheckPhone) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAuthCheckPhone) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  auth.dropTempAuthKeys#8e48a188 except_auth_keys:Vector<long> = Bool;
//
type TLAuthDropTempAuthKeys struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	ExceptAuthKeys       []int64  `protobuf:"varint,3,rep,packed,name=except_auth_keys,json=exceptAuthKeys,proto3" json:"except_auth_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAuthDropTempAuthKeys) Reset()         { *m = TLAuthDropTempAuthKeys{} }
func (m *TLAuthDropTempAuthKeys) String() string { return proto.CompactTextString(m) }
func (*TLAuthDropTempAuthKeys) ProtoMessage()    {}
func (*TLAuthDropTempAuthKeys) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{72}
}
func (m *TLAuthDropTempAuthKeys) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthDropTempAuthKeys) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthDropTempAuthKeys.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthDropTempAuthKeys) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthDropTempAuthKeys.Merge(m, src)
}
func (m *TLAuthDropTempAuthKeys) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthDropTempAuthKeys) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthDropTempAuthKeys.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthDropTempAuthKeys proto.InternalMessageInfo

func (m *TLAuthDropTempAuthKeys) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAuthDropTempAuthKeys) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAuthDropTempAuthKeys) GetExceptAuthKeys() []int64 {
	if m != nil {
		return m.ExceptAuthKeys
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  auth.exportAuthorization#e5bfffcd dc_id:int = auth.ExportedAuthorization;
//
type TLAuthExportAuthorization struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	DcId                 int32    `protobuf:"varint,3,opt,name=dc_id,json=dcId,proto3" json:"dc_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAuthExportAuthorization) Reset()         { *m = TLAuthExportAuthorization{} }
func (m *TLAuthExportAuthorization) String() string { return proto.CompactTextString(m) }
func (*TLAuthExportAuthorization) ProtoMessage()    {}
func (*TLAuthExportAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{73}
}
func (m *TLAuthExportAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthExportAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthExportAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthExportAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthExportAuthorization.Merge(m, src)
}
func (m *TLAuthExportAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthExportAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthExportAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthExportAuthorization proto.InternalMessageInfo

func (m *TLAuthExportAuthorization) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAuthExportAuthorization) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAuthExportAuthorization) GetDcId() int32 {
	if m != nil {
		return m.DcId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  auth.exportLoginToken#b1b41517 api_id:int api_hash:string except_ids:Vector<int> = auth.LoginToken;
//
type TLAuthExportLoginToken struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	ApiId                int32    `protobuf:"varint,3,opt,name=api_id,json=apiId,proto3" json:"api_id,omitempty"`
	ApiHash              string   `protobuf:"bytes,4,opt,name=api_hash,json=apiHash,proto3" json:"api_hash,omitempty"`
	ExceptIds            []int32  `protobuf:"varint,5,rep,packed,name=except_ids,json=exceptIds,proto3" json:"except_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAuthExportLoginToken) Reset()         { *m = TLAuthExportLoginToken{} }
func (m *TLAuthExportLoginToken) String() string { return proto.CompactTextString(m) }
func (*TLAuthExportLoginToken) ProtoMessage()    {}
func (*TLAuthExportLoginToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{74}
}
func (m *TLAuthExportLoginToken) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthExportLoginToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthExportLoginToken.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthExportLoginToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthExportLoginToken.Merge(m, src)
}
func (m *TLAuthExportLoginToken) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthExportLoginToken) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthExportLoginToken.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthExportLoginToken proto.InternalMessageInfo

func (m *TLAuthExportLoginToken) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAuthExportLoginToken) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAuthExportLoginToken) GetApiId() int32 {
	if m != nil {
		return m.ApiId
	}
	return 0
}

func (m *TLAuthExportLoginToken) GetApiHash() string {
	if m != nil {
		return m.ApiHash
	}
	return ""
}

func (m *TLAuthExportLoginToken) GetExceptIds() []int32 {
	if m != nil {
		return m.ExceptIds
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  auth.importAuthorization#e3ef9613 id:int bytes:bytes = auth.Authorization;
//
type TLAuthImportAuthorization struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Id                   int32    `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Bytes                []byte   `protobuf:"bytes,4,opt,name=bytes,proto3" json:"bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAuthImportAuthorization) Reset()         { *m = TLAuthImportAuthorization{} }
func (m *TLAuthImportAuthorization) String() string { return proto.CompactTextString(m) }
func (*TLAuthImportAuthorization) ProtoMessage()    {}
func (*TLAuthImportAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{75}
}
func (m *TLAuthImportAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthImportAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthImportAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthImportAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthImportAuthorization.Merge(m, src)
}
func (m *TLAuthImportAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthImportAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthImportAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthImportAuthorization proto.InternalMessageInfo

func (m *TLAuthImportAuthorization) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAuthImportAuthorization) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAuthImportAuthorization) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TLAuthImportAuthorization) GetBytes() []byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  auth.importBotAuthorization#67a3ff2c flags:int api_id:int api_hash:string bot_auth_token:string = auth.Authorization;
//
type TLAuthImportBotAuthorization struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32    `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	ApiId                int32    `protobuf:"varint,4,opt,name=api_id,json=apiId,proto3" json:"api_id,omitempty"`
	ApiHash              string   `protobuf:"bytes,5,opt,name=api_hash,json=apiHash,proto3" json:"api_hash,omitempty"`
	BotAuthToken         string   `protobuf:"bytes,6,opt,name=bot_auth_token,json=botAuthToken,proto3" json:"bot_auth_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAuthImportBotAuthorization) Reset()         { *m = TLAuthImportBotAuthorization{} }
func (m *TLAuthImportBotAuthorization) String() string { return proto.CompactTextString(m) }
func (*TLAuthImportBotAuthorization) ProtoMessage()    {}
func (*TLAuthImportBotAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{76}
}
func (m *TLAuthImportBotAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthImportBotAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthImportBotAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthImportBotAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthImportBotAuthorization.Merge(m, src)
}
func (m *TLAuthImportBotAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthImportBotAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthImportBotAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthImportBotAuthorization proto.InternalMessageInfo

func (m *TLAuthImportBotAuthorization) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAuthImportBotAuthorization) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAuthImportBotAuthorization) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLAuthImportBotAuthorization) GetApiId() int32 {
	if m != nil {
		return m.ApiId
	}
	return 0
}

func (m *TLAuthImportBotAuthorization) GetApiHash() string {
	if m != nil {
		return m.ApiHash
	}
	return ""
}

func (m *TLAuthImportBotAuthorization) GetBotAuthToken() string {
	if m != nil {
		return m.BotAuthToken
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  auth.importLoginToken#95ac5ce4 token:bytes = auth.LoginToken;
//
type TLAuthImportLoginToken struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Token                []byte   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAuthImportLoginToken) Reset()         { *m = TLAuthImportLoginToken{} }
func (m *TLAuthImportLoginToken) String() string { return proto.CompactTextString(m) }
func (*TLAuthImportLoginToken) ProtoMessage()    {}
func (*TLAuthImportLoginToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{77}
}
func (m *TLAuthImportLoginToken) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthImportLoginToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthImportLoginToken.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthImportLoginToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthImportLoginToken.Merge(m, src)
}
func (m *TLAuthImportLoginToken) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthImportLoginToken) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthImportLoginToken.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthImportLoginToken proto.InternalMessageInfo

func (m *TLAuthImportLoginToken) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAuthImportLoginToken) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAuthImportLoginToken) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  auth.logOut#5717da40 = Bool;
//
type TLAuthLogOut struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAuthLogOut) Reset()         { *m = TLAuthLogOut{} }
func (m *TLAuthLogOut) String() string { return proto.CompactTextString(m) }
func (*TLAuthLogOut) ProtoMessage()    {}
func (*TLAuthLogOut) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{78}
}
func (m *TLAuthLogOut) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthLogOut) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthLogOut.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthLogOut) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthLogOut.Merge(m, src)
}
func (m *TLAuthLogOut) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthLogOut) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthLogOut.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthLogOut proto.InternalMessageInfo

func (m *TLAuthLogOut) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAuthLogOut) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  auth.recoverPassword#4ea56e92 code:string = auth.Authorization;
//
type TLAuthRecoverPassword struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Code                 string   `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAuthRecoverPassword) Reset()         { *m = TLAuthRecoverPassword{} }
func (m *TLAuthRecoverPassword) String() string { return proto.CompactTextString(m) }
func (*TLAuthRecoverPassword) ProtoMessage()    {}
func (*TLAuthRecoverPassword) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{79}
}
func (m *TLAuthRecoverPassword) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthRecoverPassword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthRecoverPassword.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthRecoverPassword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthRecoverPassword.Merge(m, src)
}
func (m *TLAuthRecoverPassword) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthRecoverPassword) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthRecoverPassword.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthRecoverPassword proto.InternalMessageInfo

func (m *TLAuthRecoverPassword) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAuthRecoverPassword) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAuthRecoverPassword) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  auth.requestPasswordRecovery#d897bc66 = auth.PasswordRecovery;
//
type TLAuthRequestPasswordRecovery struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAuthRequestPasswordRecovery) Reset()         { *m = TLAuthRequestPasswordRecovery{} }
func (m *TLAuthRequestPasswordRecovery) String() string { return proto.CompactTextString(m) }
func (*TLAuthRequestPasswordRecovery) ProtoMessage()    {}
func (*TLAuthRequestPasswordRecovery) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{80}
}
func (m *TLAuthRequestPasswordRecovery) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthRequestPasswordRecovery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthRequestPasswordRecovery.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthRequestPasswordRecovery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthRequestPasswordRecovery.Merge(m, src)
}
func (m *TLAuthRequestPasswordRecovery) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthRequestPasswordRecovery) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthRequestPasswordRecovery.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthRequestPasswordRecovery proto.InternalMessageInfo

func (m *TLAuthRequestPasswordRecovery) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAuthRequestPasswordRecovery) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  auth.resendCode#3ef1a9bf phone_number:string phone_code_hash:string = auth.SentCode;
//
type TLAuthResendCode struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	PhoneNumber          string   `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	PhoneCodeHash        string   `protobuf:"bytes,4,opt,name=phone_code_hash,json=phoneCodeHash,proto3" json:"phone_code_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAuthResendCode) Reset()         { *m = TLAuthResendCode{} }
func (m *TLAuthResendCode) String() string { return proto.CompactTextString(m) }
func (*TLAuthResendCode) ProtoMessage()    {}
func (*TLAuthResendCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{81}
}
func (m *TLAuthResendCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthResendCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthResendCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthResendCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthResendCode.Merge(m, src)
}
func (m *TLAuthResendCode) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthResendCode) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthResendCode.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthResendCode proto.InternalMessageInfo

func (m *TLAuthResendCode) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAuthResendCode) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAuthResendCode) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *TLAuthResendCode) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  auth.resetAuthorizations#9fab0d1a = Bool;
//
type TLAuthResetAuthorizations struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAuthResetAuthorizations) Reset()         { *m = TLAuthResetAuthorizations{} }
func (m *TLAuthResetAuthorizations) String() string { return proto.CompactTextString(m) }
func (*TLAuthResetAuthorizations) ProtoMessage()    {}
func (*TLAuthResetAuthorizations) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{82}
}
func (m *TLAuthResetAuthorizations) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthResetAuthorizations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthResetAuthorizations.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthResetAuthorizations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthResetAuthorizations.Merge(m, src)
}
func (m *TLAuthResetAuthorizations) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthResetAuthorizations) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthResetAuthorizations.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthResetAuthorizations proto.InternalMessageInfo

func (m *TLAuthResetAuthorizations) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAuthResetAuthorizations) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  auth.sendCode#86aef0ec flags:# allow_flashcall:flags.0?true phone_number:string current_number:flags.0?Bool api_id:int api_hash:string = auth.SentCode;
//  auth.sendCode#ccfd70cf flags:# allow_flashcall:flags.0?true phone_number:string current_number:flags.0?Bool api_id:int api_hash:string lang_code:string = auth.SentCode;
//  auth.sendCode#a677244f phone_number:string api_id:int api_hash:string settings:CodeSettings = auth.SentCode;
//
type TLAuthSendCode struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32         `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	AllowFlashcall       bool          `protobuf:"varint,4,opt,name=allow_flashcall,json=allowFlashcall,proto3" json:"allow_flashcall,omitempty"`
	PhoneNumber          string        `protobuf:"bytes,5,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	CurrentNumber        *Bool         `protobuf:"bytes,6,opt,name=current_number,json=currentNumber,proto3" json:"current_number,omitempty"`
	ApiId                int32         `protobuf:"varint,7,opt,name=api_id,json=apiId,proto3" json:"api_id,omitempty"`
	ApiHash              string        `protobuf:"bytes,8,opt,name=api_hash,json=apiHash,proto3" json:"api_hash,omitempty"`
	LangCode             string        `protobuf:"bytes,9,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	Settings             *CodeSettings `protobuf:"bytes,10,opt,name=settings,proto3" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLAuthSendCode) Reset()         { *m = TLAuthSendCode{} }
func (m *TLAuthSendCode) String() string { return proto.CompactTextString(m) }
func (*TLAuthSendCode) ProtoMessage()    {}
func (*TLAuthSendCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{83}
}
func (m *TLAuthSendCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthSendCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthSendCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthSendCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthSendCode.Merge(m, src)
}
func (m *TLAuthSendCode) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthSendCode) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthSendCode.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthSendCode proto.InternalMessageInfo

func (m *TLAuthSendCode) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAuthSendCode) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAuthSendCode) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLAuthSendCode) GetAllowFlashcall() bool {
	if m != nil {
		return m.AllowFlashcall
	}
	return false
}

func (m *TLAuthSendCode) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *TLAuthSendCode) GetCurrentNumber() *Bool {
	if m != nil {
		return m.CurrentNumber
	}
	return nil
}

func (m *TLAuthSendCode) GetApiId() int32 {
	if m != nil {
		return m.ApiId
	}
	return 0
}

func (m *TLAuthSendCode) GetApiHash() string {
	if m != nil {
		return m.ApiHash
	}
	return ""
}

func (m *TLAuthSendCode) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

func (m *TLAuthSendCode) GetSettings() *CodeSettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  auth.sendInvites#771c1d97 phone_numbers:Vector<string> message:string = Bool;
//
type TLAuthSendInvites struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	PhoneNumbers         []string `protobuf:"bytes,3,rep,name=phone_numbers,json=phoneNumbers,proto3" json:"phone_numbers,omitempty"`
	Message              string   `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAuthSendInvites) Reset()         { *m = TLAuthSendInvites{} }
func (m *TLAuthSendInvites) String() string { return proto.CompactTextString(m) }
func (*TLAuthSendInvites) ProtoMessage()    {}
func (*TLAuthSendInvites) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{84}
}
func (m *TLAuthSendInvites) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthSendInvites) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthSendInvites.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthSendInvites) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthSendInvites.Merge(m, src)
}
func (m *TLAuthSendInvites) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthSendInvites) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthSendInvites.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthSendInvites proto.InternalMessageInfo

func (m *TLAuthSendInvites) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAuthSendInvites) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAuthSendInvites) GetPhoneNumbers() []string {
	if m != nil {
		return m.PhoneNumbers
	}
	return nil
}

func (m *TLAuthSendInvites) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  auth.signIn#bcd51581 phone_number:string phone_code_hash:string phone_code:string = auth.Authorization;
//
type TLAuthSignIn struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	PhoneNumber          string   `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	PhoneCodeHash        string   `protobuf:"bytes,4,opt,name=phone_code_hash,json=phoneCodeHash,proto3" json:"phone_code_hash,omitempty"`
	PhoneCode            string   `protobuf:"bytes,5,opt,name=phone_code,json=phoneCode,proto3" json:"phone_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAuthSignIn) Reset()         { *m = TLAuthSignIn{} }
func (m *TLAuthSignIn) String() string { return proto.CompactTextString(m) }
func (*TLAuthSignIn) ProtoMessage()    {}
func (*TLAuthSignIn) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{85}
}
func (m *TLAuthSignIn) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthSignIn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthSignIn.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthSignIn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthSignIn.Merge(m, src)
}
func (m *TLAuthSignIn) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthSignIn) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthSignIn.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthSignIn proto.InternalMessageInfo

func (m *TLAuthSignIn) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAuthSignIn) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAuthSignIn) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *TLAuthSignIn) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

func (m *TLAuthSignIn) GetPhoneCode() string {
	if m != nil {
		return m.PhoneCode
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  auth.signUp#1b067634 phone_number:string phone_code_hash:string phone_code:string first_name:string last_name:string = auth.Authorization;
//  auth.signUp#80eee427 phone_number:string phone_code_hash:string first_name:string last_name:string = auth.Authorization;
//
type TLAuthSignUp struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	PhoneNumber          string   `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	PhoneCodeHash        string   `protobuf:"bytes,4,opt,name=phone_code_hash,json=phoneCodeHash,proto3" json:"phone_code_hash,omitempty"`
	PhoneCode            string   `protobuf:"bytes,5,opt,name=phone_code,json=phoneCode,proto3" json:"phone_code,omitempty"`
	FirstName            string   `protobuf:"bytes,6,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,7,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLAuthSignUp) Reset()         { *m = TLAuthSignUp{} }
func (m *TLAuthSignUp) String() string { return proto.CompactTextString(m) }
func (*TLAuthSignUp) ProtoMessage()    {}
func (*TLAuthSignUp) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{86}
}
func (m *TLAuthSignUp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLAuthSignUp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLAuthSignUp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLAuthSignUp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLAuthSignUp.Merge(m, src)
}
func (m *TLAuthSignUp) XXX_Size() int {
	return m.Size()
}
func (m *TLAuthSignUp) XXX_DiscardUnknown() {
	xxx_messageInfo_TLAuthSignUp.DiscardUnknown(m)
}

var xxx_messageInfo_TLAuthSignUp proto.InternalMessageInfo

func (m *TLAuthSignUp) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLAuthSignUp) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLAuthSignUp) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *TLAuthSignUp) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

func (m *TLAuthSignUp) GetPhoneCode() string {
	if m != nil {
		return m.PhoneCode
	}
	return ""
}

func (m *TLAuthSignUp) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *TLAuthSignUp) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  bots.answerWebhookJSONQuery#e6213f4d query_id:long data:DataJSON = Bool;
//
type TLBotsAnswerWebhookJSONQuery struct {
	Cmd                  TLCmd     `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string    `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	QueryId              int64     `protobuf:"varint,3,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	Data                 *DataJSON `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *TLBotsAnswerWebhookJSONQuery) Reset()         { *m = TLBotsAnswerWebhookJSONQuery{} }
func (m *TLBotsAnswerWebhookJSONQuery) String() string { return proto.CompactTextString(m) }
func (*TLBotsAnswerWebhookJSONQuery) ProtoMessage()    {}
func (*TLBotsAnswerWebhookJSONQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{87}
}
func (m *TLBotsAnswerWebhookJSONQuery) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBotsAnswerWebhookJSONQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBotsAnswerWebhookJSONQuery.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLBotsAnswerWebhookJSONQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBotsAnswerWebhookJSONQuery.Merge(m, src)
}
func (m *TLBotsAnswerWebhookJSONQuery) XXX_Size() int {
	return m.Size()
}
func (m *TLBotsAnswerWebhookJSONQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBotsAnswerWebhookJSONQuery.DiscardUnknown(m)
}

var xxx_messageInfo_TLBotsAnswerWebhookJSONQuery proto.InternalMessageInfo

func (m *TLBotsAnswerWebhookJSONQuery) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLBotsAnswerWebhookJSONQuery) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLBotsAnswerWebhookJSONQuery) GetQueryId() int64 {
	if m != nil {
		return m.QueryId
	}
	return 0
}

func (m *TLBotsAnswerWebhookJSONQuery) GetData() *DataJSON {
	if m != nil {
		return m.Data
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  bots.sendCustomRequest#aa2769ed custom_method:string params:DataJSON = DataJSON;
//
type TLBotsSendCustomRequest struct {
	Cmd                  TLCmd     `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string    `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	CustomMethod         string    `protobuf:"bytes,3,opt,name=custom_method,json=customMethod,proto3" json:"custom_method,omitempty"`
	Params               *DataJSON `protobuf:"bytes,4,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *TLBotsSendCustomRequest) Reset()         { *m = TLBotsSendCustomRequest{} }
func (m *TLBotsSendCustomRequest) String() string { return proto.CompactTextString(m) }
func (*TLBotsSendCustomRequest) ProtoMessage()    {}
func (*TLBotsSendCustomRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{88}
}
func (m *TLBotsSendCustomRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBotsSendCustomRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBotsSendCustomRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLBotsSendCustomRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBotsSendCustomRequest.Merge(m, src)
}
func (m *TLBotsSendCustomRequest) XXX_Size() int {
	return m.Size()
}
func (m *TLBotsSendCustomRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBotsSendCustomRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TLBotsSendCustomRequest proto.InternalMessageInfo

func (m *TLBotsSendCustomRequest) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLBotsSendCustomRequest) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLBotsSendCustomRequest) GetCustomMethod() string {
	if m != nil {
		return m.CustomMethod
	}
	return ""
}

func (m *TLBotsSendCustomRequest) GetParams() *DataJSON {
	if m != nil {
		return m.Params
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  bots.setBotCommands#805d46f6 commands:Vector<BotCommand> = Bool;
//
type TLBotsSetBotCommands struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Commands             []*BotCommand `protobuf:"bytes,3,rep,name=commands,proto3" json:"commands,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLBotsSetBotCommands) Reset()         { *m = TLBotsSetBotCommands{} }
func (m *TLBotsSetBotCommands) String() string { return proto.CompactTextString(m) }
func (*TLBotsSetBotCommands) ProtoMessage()    {}
func (*TLBotsSetBotCommands) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{89}
}
func (m *TLBotsSetBotCommands) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLBotsSetBotCommands) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLBotsSetBotCommands.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLBotsSetBotCommands) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLBotsSetBotCommands.Merge(m, src)
}
func (m *TLBotsSetBotCommands) XXX_Size() int {
	return m.Size()
}
func (m *TLBotsSetBotCommands) XXX_DiscardUnknown() {
	xxx_messageInfo_TLBotsSetBotCommands.DiscardUnknown(m)
}

var xxx_messageInfo_TLBotsSetBotCommands proto.InternalMessageInfo

func (m *TLBotsSetBotCommands) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLBotsSetBotCommands) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLBotsSetBotCommands) GetCommands() []*BotCommand {
	if m != nil {
		return m.Commands
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  channels.checkUsername#10e6bd2c channel:InputChannel username:string = Bool;
//
type TLChannelsCheckUsername struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Username             string        `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsCheckUsername) Reset()         { *m = TLChannelsCheckUsername{} }
func (m *TLChannelsCheckUsername) String() string { return proto.CompactTextString(m) }
func (*TLChannelsCheckUsername) ProtoMessage()    {}
func (*TLChannelsCheckUsername) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{90}
}
func (m *TLChannelsCheckUsername) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsCheckUsername) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsCheckUsername.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsCheckUsername) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsCheckUsername.Merge(m, src)
}
func (m *TLChannelsCheckUsername) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsCheckUsername) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsCheckUsername.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsCheckUsername proto.InternalMessageInfo

func (m *TLChannelsCheckUsername) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsCheckUsername) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsCheckUsername) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsCheckUsername) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  channels.createChannel#f4893d7f flags:# broadcast:flags.0?true megagroup:flags.1?true title:string about:string = Updates;
//  channels.createChannel#3d5fb10f flags:# broadcast:flags.0?true megagroup:flags.1?true title:string about:string geo_point:flags.2?InputGeoPoint address:flags.2?string = Updates;
//
type TLChannelsCreateChannel struct {
	Cmd                  TLCmd          `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string         `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32          `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Broadcast            bool           `protobuf:"varint,4,opt,name=broadcast,proto3" json:"broadcast,omitempty"`
	Megagroup            bool           `protobuf:"varint,5,opt,name=megagroup,proto3" json:"megagroup,omitempty"`
	Title                string         `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	About                string         `protobuf:"bytes,7,opt,name=about,proto3" json:"about,omitempty"`
	GeoPoint             *InputGeoPoint `protobuf:"bytes,8,opt,name=geo_point,json=geoPoint,proto3" json:"geo_point,omitempty"`
	Address              string         `protobuf:"bytes,9,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TLChannelsCreateChannel) Reset()         { *m = TLChannelsCreateChannel{} }
func (m *TLChannelsCreateChannel) String() string { return proto.CompactTextString(m) }
func (*TLChannelsCreateChannel) ProtoMessage()    {}
func (*TLChannelsCreateChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{91}
}
func (m *TLChannelsCreateChannel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsCreateChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsCreateChannel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsCreateChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsCreateChannel.Merge(m, src)
}
func (m *TLChannelsCreateChannel) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsCreateChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsCreateChannel.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsCreateChannel proto.InternalMessageInfo

func (m *TLChannelsCreateChannel) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsCreateChannel) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsCreateChannel) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLChannelsCreateChannel) GetBroadcast() bool {
	if m != nil {
		return m.Broadcast
	}
	return false
}

func (m *TLChannelsCreateChannel) GetMegagroup() bool {
	if m != nil {
		return m.Megagroup
	}
	return false
}

func (m *TLChannelsCreateChannel) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *TLChannelsCreateChannel) GetAbout() string {
	if m != nil {
		return m.About
	}
	return ""
}

func (m *TLChannelsCreateChannel) GetGeoPoint() *InputGeoPoint {
	if m != nil {
		return m.GeoPoint
	}
	return nil
}

func (m *TLChannelsCreateChannel) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  channels.deleteChannel#c0111fe3 channel:InputChannel = Updates;
//
type TLChannelsDeleteChannel struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsDeleteChannel) Reset()         { *m = TLChannelsDeleteChannel{} }
func (m *TLChannelsDeleteChannel) String() string { return proto.CompactTextString(m) }
func (*TLChannelsDeleteChannel) ProtoMessage()    {}
func (*TLChannelsDeleteChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{92}
}
func (m *TLChannelsDeleteChannel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsDeleteChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsDeleteChannel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsDeleteChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsDeleteChannel.Merge(m, src)
}
func (m *TLChannelsDeleteChannel) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsDeleteChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsDeleteChannel.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsDeleteChannel proto.InternalMessageInfo

func (m *TLChannelsDeleteChannel) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsDeleteChannel) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsDeleteChannel) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  channels.deleteHistory#af369d42 channel:InputChannel max_id:int = Bool;
//
type TLChannelsDeleteHistory struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	MaxId                int32         `protobuf:"varint,4,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsDeleteHistory) Reset()         { *m = TLChannelsDeleteHistory{} }
func (m *TLChannelsDeleteHistory) String() string { return proto.CompactTextString(m) }
func (*TLChannelsDeleteHistory) ProtoMessage()    {}
func (*TLChannelsDeleteHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{93}
}
func (m *TLChannelsDeleteHistory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsDeleteHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsDeleteHistory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsDeleteHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsDeleteHistory.Merge(m, src)
}
func (m *TLChannelsDeleteHistory) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsDeleteHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsDeleteHistory.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsDeleteHistory proto.InternalMessageInfo

func (m *TLChannelsDeleteHistory) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsDeleteHistory) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsDeleteHistory) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsDeleteHistory) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  channels.deleteMessages#84c1fd4e channel:InputChannel id:Vector<int> = messages.AffectedMessages;
//
type TLChannelsDeleteMessages struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Id                   []int32       `protobuf:"varint,4,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsDeleteMessages) Reset()         { *m = TLChannelsDeleteMessages{} }
func (m *TLChannelsDeleteMessages) String() string { return proto.CompactTextString(m) }
func (*TLChannelsDeleteMessages) ProtoMessage()    {}
func (*TLChannelsDeleteMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{94}
}
func (m *TLChannelsDeleteMessages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsDeleteMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsDeleteMessages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsDeleteMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsDeleteMessages.Merge(m, src)
}
func (m *TLChannelsDeleteMessages) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsDeleteMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsDeleteMessages.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsDeleteMessages proto.InternalMessageInfo

func (m *TLChannelsDeleteMessages) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsDeleteMessages) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsDeleteMessages) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsDeleteMessages) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  channels.deleteUserHistory#d10dd71b channel:InputChannel user_id:InputUser = messages.AffectedHistory;
//
type TLChannelsDeleteUserHistory struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	UserId               *InputUser    `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsDeleteUserHistory) Reset()         { *m = TLChannelsDeleteUserHistory{} }
func (m *TLChannelsDeleteUserHistory) String() string { return proto.CompactTextString(m) }
func (*TLChannelsDeleteUserHistory) ProtoMessage()    {}
func (*TLChannelsDeleteUserHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{95}
}
func (m *TLChannelsDeleteUserHistory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsDeleteUserHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsDeleteUserHistory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsDeleteUserHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsDeleteUserHistory.Merge(m, src)
}
func (m *TLChannelsDeleteUserHistory) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsDeleteUserHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsDeleteUserHistory.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsDeleteUserHistory proto.InternalMessageInfo

func (m *TLChannelsDeleteUserHistory) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsDeleteUserHistory) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsDeleteUserHistory) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsDeleteUserHistory) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  channels.editAbout#13e27f1e channel:InputChannel about:string = Bool;
//
type TLChannelsEditAbout struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	About                string        `protobuf:"bytes,4,opt,name=about,proto3" json:"about,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsEditAbout) Reset()         { *m = TLChannelsEditAbout{} }
func (m *TLChannelsEditAbout) String() string { return proto.CompactTextString(m) }
func (*TLChannelsEditAbout) ProtoMessage()    {}
func (*TLChannelsEditAbout) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{96}
}
func (m *TLChannelsEditAbout) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsEditAbout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsEditAbout.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsEditAbout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsEditAbout.Merge(m, src)
}
func (m *TLChannelsEditAbout) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsEditAbout) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsEditAbout.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsEditAbout proto.InternalMessageInfo

func (m *TLChannelsEditAbout) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsEditAbout) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsEditAbout) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsEditAbout) GetAbout() string {
	if m != nil {
		return m.About
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  channels.editAdmin#20b88214 channel:InputChannel user_id:InputUser admin_rights:ChannelAdminRights = Updates;
//  channels.editAdmin#eb7611d0 channel:InputChannel user_id:InputUser role:ChannelParticipantRole = Updates;
//  channels.editAdmin#70f893ba channel:InputChannel user_id:InputUser admin_rights:ChatAdminRights = Updates;
//  channels.editAdmin#d33c8902 channel:InputChannel user_id:InputUser admin_rights:ChatAdminRights rank:string = Updates;
//
type TLChannelsEditAdmin struct {
	Cmd                   TLCmd                   `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName             string                  `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel               *InputChannel           `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	UserId                *InputUser              `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AdminRights20B8821471 *ChannelAdminRights     `protobuf:"bytes,5,opt,name=admin_rights20B8821471,json=adminRights20B8821471,proto3" json:"admin_rights20B8821471,omitempty"`
	Role                  *ChannelParticipantRole `protobuf:"bytes,6,opt,name=role,proto3" json:"role,omitempty"`
	AdminRights70F893BA93 *ChatAdminRights        `protobuf:"bytes,7,opt,name=admin_rights70F893BA93,json=adminRights70F893BA93,proto3" json:"admin_rights70F893BA93,omitempty"`
	Rank                  string                  `protobuf:"bytes,8,opt,name=rank,proto3" json:"rank,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                `json:"-"`
	XXX_unrecognized      []byte                  `json:"-"`
	XXX_sizecache         int32                   `json:"-"`
}

func (m *TLChannelsEditAdmin) Reset()         { *m = TLChannelsEditAdmin{} }
func (m *TLChannelsEditAdmin) String() string { return proto.CompactTextString(m) }
func (*TLChannelsEditAdmin) ProtoMessage()    {}
func (*TLChannelsEditAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{97}
}
func (m *TLChannelsEditAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsEditAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsEditAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsEditAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsEditAdmin.Merge(m, src)
}
func (m *TLChannelsEditAdmin) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsEditAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsEditAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsEditAdmin proto.InternalMessageInfo

func (m *TLChannelsEditAdmin) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsEditAdmin) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsEditAdmin) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsEditAdmin) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLChannelsEditAdmin) GetAdminRights20B8821471() *ChannelAdminRights {
	if m != nil {
		return m.AdminRights20B8821471
	}
	return nil
}

func (m *TLChannelsEditAdmin) GetRole() *ChannelParticipantRole {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *TLChannelsEditAdmin) GetAdminRights70F893BA93() *ChatAdminRights {
	if m != nil {
		return m.AdminRights70F893BA93
	}
	return nil
}

func (m *TLChannelsEditAdmin) GetRank() string {
	if m != nil {
		return m.Rank
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  channels.editBanned#bfd915cd channel:InputChannel user_id:InputUser banned_rights:ChannelBannedRights = Updates;
//  channels.editBanned#72796912 channel:InputChannel user_id:InputUser banned_rights:ChatBannedRights = Updates;
//
type TLChannelsEditBanned struct {
	Cmd                    TLCmd                `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName              string               `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel                *InputChannel        `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	UserId                 *InputUser           `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	BannedRightsBFD915CD71 *ChannelBannedRights `protobuf:"bytes,5,opt,name=banned_rightsBFD915CD71,json=bannedRightsBFD915CD71,proto3" json:"banned_rightsBFD915CD71,omitempty"`
	BannedRights7279691293 *ChatBannedRights    `protobuf:"bytes,6,opt,name=banned_rights7279691293,json=bannedRights7279691293,proto3" json:"banned_rights7279691293,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}             `json:"-"`
	XXX_unrecognized       []byte               `json:"-"`
	XXX_sizecache          int32                `json:"-"`
}

func (m *TLChannelsEditBanned) Reset()         { *m = TLChannelsEditBanned{} }
func (m *TLChannelsEditBanned) String() string { return proto.CompactTextString(m) }
func (*TLChannelsEditBanned) ProtoMessage()    {}
func (*TLChannelsEditBanned) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{98}
}
func (m *TLChannelsEditBanned) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsEditBanned) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsEditBanned.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsEditBanned) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsEditBanned.Merge(m, src)
}
func (m *TLChannelsEditBanned) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsEditBanned) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsEditBanned.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsEditBanned proto.InternalMessageInfo

func (m *TLChannelsEditBanned) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsEditBanned) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsEditBanned) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsEditBanned) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLChannelsEditBanned) GetBannedRightsBFD915CD71() *ChannelBannedRights {
	if m != nil {
		return m.BannedRightsBFD915CD71
	}
	return nil
}

func (m *TLChannelsEditBanned) GetBannedRights7279691293() *ChatBannedRights {
	if m != nil {
		return m.BannedRights7279691293
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  channels.editCreator#8f38cd1f channel:InputChannel user_id:InputUser password:InputCheckPasswordSRP = Updates;
//
type TLChannelsEditCreator struct {
	Cmd                  TLCmd                  `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string                 `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel          `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	UserId               *InputUser             `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Password             *InputCheckPasswordSRP `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TLChannelsEditCreator) Reset()         { *m = TLChannelsEditCreator{} }
func (m *TLChannelsEditCreator) String() string { return proto.CompactTextString(m) }
func (*TLChannelsEditCreator) ProtoMessage()    {}
func (*TLChannelsEditCreator) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{99}
}
func (m *TLChannelsEditCreator) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsEditCreator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsEditCreator.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsEditCreator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsEditCreator.Merge(m, src)
}
func (m *TLChannelsEditCreator) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsEditCreator) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsEditCreator.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsEditCreator proto.InternalMessageInfo

func (m *TLChannelsEditCreator) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsEditCreator) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsEditCreator) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsEditCreator) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLChannelsEditCreator) GetPassword() *InputCheckPasswordSRP {
	if m != nil {
		return m.Password
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  channels.editLocation#58e63f6d channel:InputChannel geo_point:InputGeoPoint address:string = Bool;
//
type TLChannelsEditLocation struct {
	Cmd                  TLCmd          `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string         `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel  `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	GeoPoint             *InputGeoPoint `protobuf:"bytes,4,opt,name=geo_point,json=geoPoint,proto3" json:"geo_point,omitempty"`
	Address              string         `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TLChannelsEditLocation) Reset()         { *m = TLChannelsEditLocation{} }
func (m *TLChannelsEditLocation) String() string { return proto.CompactTextString(m) }
func (*TLChannelsEditLocation) ProtoMessage()    {}
func (*TLChannelsEditLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{100}
}
func (m *TLChannelsEditLocation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsEditLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsEditLocation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsEditLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsEditLocation.Merge(m, src)
}
func (m *TLChannelsEditLocation) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsEditLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsEditLocation.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsEditLocation proto.InternalMessageInfo

func (m *TLChannelsEditLocation) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsEditLocation) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsEditLocation) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsEditLocation) GetGeoPoint() *InputGeoPoint {
	if m != nil {
		return m.GeoPoint
	}
	return nil
}

func (m *TLChannelsEditLocation) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  channels.editPhoto#f12e57c9 channel:InputChannel photo:InputChatPhoto = Updates;
//
type TLChannelsEditPhoto struct {
	Cmd                  TLCmd           `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string          `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel   `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Photo                *InputChatPhoto `protobuf:"bytes,4,opt,name=photo,proto3" json:"photo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLChannelsEditPhoto) Reset()         { *m = TLChannelsEditPhoto{} }
func (m *TLChannelsEditPhoto) String() string { return proto.CompactTextString(m) }
func (*TLChannelsEditPhoto) ProtoMessage()    {}
func (*TLChannelsEditPhoto) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{101}
}
func (m *TLChannelsEditPhoto) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsEditPhoto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsEditPhoto.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsEditPhoto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsEditPhoto.Merge(m, src)
}
func (m *TLChannelsEditPhoto) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsEditPhoto) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsEditPhoto.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsEditPhoto proto.InternalMessageInfo

func (m *TLChannelsEditPhoto) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsEditPhoto) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsEditPhoto) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsEditPhoto) GetPhoto() *InputChatPhoto {
	if m != nil {
		return m.Photo
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  channels.editTitle#566decd0 channel:InputChannel title:string = Updates;
//
type TLChannelsEditTitle struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Title                string        `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsEditTitle) Reset()         { *m = TLChannelsEditTitle{} }
func (m *TLChannelsEditTitle) String() string { return proto.CompactTextString(m) }
func (*TLChannelsEditTitle) ProtoMessage()    {}
func (*TLChannelsEditTitle) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{102}
}
func (m *TLChannelsEditTitle) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsEditTitle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsEditTitle.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsEditTitle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsEditTitle.Merge(m, src)
}
func (m *TLChannelsEditTitle) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsEditTitle) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsEditTitle.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsEditTitle proto.InternalMessageInfo

func (m *TLChannelsEditTitle) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsEditTitle) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsEditTitle) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsEditTitle) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  channels.exportInvite#c7560885 channel:InputChannel = ExportedChatInvite;
//
type TLChannelsExportInvite struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsExportInvite) Reset()         { *m = TLChannelsExportInvite{} }
func (m *TLChannelsExportInvite) String() string { return proto.CompactTextString(m) }
func (*TLChannelsExportInvite) ProtoMessage()    {}
func (*TLChannelsExportInvite) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{103}
}
func (m *TLChannelsExportInvite) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsExportInvite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsExportInvite.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsExportInvite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsExportInvite.Merge(m, src)
}
func (m *TLChannelsExportInvite) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsExportInvite) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsExportInvite.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsExportInvite proto.InternalMessageInfo

func (m *TLChannelsExportInvite) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsExportInvite) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsExportInvite) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  channels.exportMessageLink#c846d22d channel:InputChannel id:int = ExportedMessageLink;
//  channels.exportMessageLink#ceb77163 channel:InputChannel id:int grouped:Bool = ExportedMessageLink;
//  channels.exportMessageLink#e63fadeb flags:# grouped:flags.0?true thread:flags.1?true channel:InputChannel id:int = ExportedMessageLink;
//
type TLChannelsExportMessageLink struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Id                   int32         `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	GroupedCEB7716385    *Bool         `protobuf:"bytes,5,opt,name=groupedCEB7716385,proto3" json:"groupedCEB7716385,omitempty"`
	Flags                int32         `protobuf:"varint,6,opt,name=flags,proto3" json:"flags,omitempty"`
	GroupedE63FADEB119   bool          `protobuf:"varint,7,opt,name=groupedE63FADEB119,proto3" json:"groupedE63FADEB119,omitempty"`
	Thread               bool          `protobuf:"varint,8,opt,name=thread,proto3" json:"thread,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsExportMessageLink) Reset()         { *m = TLChannelsExportMessageLink{} }
func (m *TLChannelsExportMessageLink) String() string { return proto.CompactTextString(m) }
func (*TLChannelsExportMessageLink) ProtoMessage()    {}
func (*TLChannelsExportMessageLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{104}
}
func (m *TLChannelsExportMessageLink) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsExportMessageLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsExportMessageLink.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsExportMessageLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsExportMessageLink.Merge(m, src)
}
func (m *TLChannelsExportMessageLink) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsExportMessageLink) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsExportMessageLink.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsExportMessageLink proto.InternalMessageInfo

func (m *TLChannelsExportMessageLink) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsExportMessageLink) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsExportMessageLink) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsExportMessageLink) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TLChannelsExportMessageLink) GetGroupedCEB7716385() *Bool {
	if m != nil {
		return m.GroupedCEB7716385
	}
	return nil
}

func (m *TLChannelsExportMessageLink) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLChannelsExportMessageLink) GetGroupedE63FADEB119() bool {
	if m != nil {
		return m.GroupedE63FADEB119
	}
	return false
}

func (m *TLChannelsExportMessageLink) GetThread() bool {
	if m != nil {
		return m.Thread
	}
	return false
}

///////////////////////////////////////////////////////////////////////////////
//  channels.getAdminLog#33ddf480 flags:# channel:InputChannel q:string events_filter:flags.0?ChannelAdminLogEventsFilter admins:flags.1?Vector<InputUser> max_id:long min_id:long limit:int = channels.AdminLogResults;
//
type TLChannelsGetAdminLog struct {
	Cmd                  TLCmd                        `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string                       `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32                        `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Channel              *InputChannel                `protobuf:"bytes,4,opt,name=channel,proto3" json:"channel,omitempty"`
	Q                    string                       `protobuf:"bytes,5,opt,name=q,proto3" json:"q,omitempty"`
	EventsFilter         *ChannelAdminLogEventsFilter `protobuf:"bytes,6,opt,name=events_filter,json=eventsFilter,proto3" json:"events_filter,omitempty"`
	Admins               []*InputUser                 `protobuf:"bytes,7,rep,name=admins,proto3" json:"admins,omitempty"`
	MaxId                int64                        `protobuf:"varint,8,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	MinId                int64                        `protobuf:"varint,9,opt,name=min_id,json=minId,proto3" json:"min_id,omitempty"`
	Limit                int32                        `protobuf:"varint,10,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *TLChannelsGetAdminLog) Reset()         { *m = TLChannelsGetAdminLog{} }
func (m *TLChannelsGetAdminLog) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetAdminLog) ProtoMessage()    {}
func (*TLChannelsGetAdminLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{105}
}
func (m *TLChannelsGetAdminLog) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetAdminLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetAdminLog.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsGetAdminLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetAdminLog.Merge(m, src)
}
func (m *TLChannelsGetAdminLog) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetAdminLog) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetAdminLog.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetAdminLog proto.InternalMessageInfo

func (m *TLChannelsGetAdminLog) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsGetAdminLog) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsGetAdminLog) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLChannelsGetAdminLog) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsGetAdminLog) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

func (m *TLChannelsGetAdminLog) GetEventsFilter() *ChannelAdminLogEventsFilter {
	if m != nil {
		return m.EventsFilter
	}
	return nil
}

func (m *TLChannelsGetAdminLog) GetAdmins() []*InputUser {
	if m != nil {
		return m.Admins
	}
	return nil
}

func (m *TLChannelsGetAdminLog) GetMaxId() int64 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

func (m *TLChannelsGetAdminLog) GetMinId() int64 {
	if m != nil {
		return m.MinId
	}
	return 0
}

func (m *TLChannelsGetAdminLog) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  channels.getAdminedPublicChannels#8d8d82d7 = messages.Chats;
//  channels.getAdminedPublicChannels#f8b036af flags:# by_location:flags.0?true check_limit:flags.1?true = messages.Chats;
//
type TLChannelsGetAdminedPublicChannels struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32    `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	ByLocation           bool     `protobuf:"varint,4,opt,name=by_location,json=byLocation,proto3" json:"by_location,omitempty"`
	CheckLimit           bool     `protobuf:"varint,5,opt,name=check_limit,json=checkLimit,proto3" json:"check_limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLChannelsGetAdminedPublicChannels) Reset()         { *m = TLChannelsGetAdminedPublicChannels{} }
func (m *TLChannelsGetAdminedPublicChannels) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetAdminedPublicChannels) ProtoMessage()    {}
func (*TLChannelsGetAdminedPublicChannels) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{106}
}
func (m *TLChannelsGetAdminedPublicChannels) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetAdminedPublicChannels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetAdminedPublicChannels.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsGetAdminedPublicChannels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetAdminedPublicChannels.Merge(m, src)
}
func (m *TLChannelsGetAdminedPublicChannels) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetAdminedPublicChannels) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetAdminedPublicChannels.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetAdminedPublicChannels proto.InternalMessageInfo

func (m *TLChannelsGetAdminedPublicChannels) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsGetAdminedPublicChannels) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsGetAdminedPublicChannels) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLChannelsGetAdminedPublicChannels) GetByLocation() bool {
	if m != nil {
		return m.ByLocation
	}
	return false
}

func (m *TLChannelsGetAdminedPublicChannels) GetCheckLimit() bool {
	if m != nil {
		return m.CheckLimit
	}
	return false
}

///////////////////////////////////////////////////////////////////////////////
//  channels.getBroadcastsForDiscussion#1a87f304 = messages.Chats;
//
type TLChannelsGetBroadcastsForDiscussion struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLChannelsGetBroadcastsForDiscussion) Reset()         { *m = TLChannelsGetBroadcastsForDiscussion{} }
func (m *TLChannelsGetBroadcastsForDiscussion) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetBroadcastsForDiscussion) ProtoMessage()    {}
func (*TLChannelsGetBroadcastsForDiscussion) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{107}
}
func (m *TLChannelsGetBroadcastsForDiscussion) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetBroadcastsForDiscussion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetBroadcastsForDiscussion.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsGetBroadcastsForDiscussion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetBroadcastsForDiscussion.Merge(m, src)
}
func (m *TLChannelsGetBroadcastsForDiscussion) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetBroadcastsForDiscussion) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetBroadcastsForDiscussion.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetBroadcastsForDiscussion proto.InternalMessageInfo

func (m *TLChannelsGetBroadcastsForDiscussion) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsGetBroadcastsForDiscussion) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  channels.getChannels#a7f6bbb id:Vector<InputChannel> = messages.Chats;
//
type TLChannelsGetChannels struct {
	Cmd                  TLCmd           `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string          `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Id                   []*InputChannel `protobuf:"bytes,3,rep,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLChannelsGetChannels) Reset()         { *m = TLChannelsGetChannels{} }
func (m *TLChannelsGetChannels) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetChannels) ProtoMessage()    {}
func (*TLChannelsGetChannels) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{108}
}
func (m *TLChannelsGetChannels) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetChannels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetChannels.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsGetChannels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetChannels.Merge(m, src)
}
func (m *TLChannelsGetChannels) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetChannels) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetChannels.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetChannels proto.InternalMessageInfo

func (m *TLChannelsGetChannels) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsGetChannels) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsGetChannels) GetId() []*InputChannel {
	if m != nil {
		return m.Id
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  channels.getDialogs#a9d3d249 offset:int limit:int = messages.Dialogs;
//
type TLChannelsGetDialogs struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Offset               int32    `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32    `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLChannelsGetDialogs) Reset()         { *m = TLChannelsGetDialogs{} }
func (m *TLChannelsGetDialogs) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetDialogs) ProtoMessage()    {}
func (*TLChannelsGetDialogs) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{109}
}
func (m *TLChannelsGetDialogs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetDialogs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetDialogs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsGetDialogs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetDialogs.Merge(m, src)
}
func (m *TLChannelsGetDialogs) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetDialogs) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetDialogs.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetDialogs proto.InternalMessageInfo

func (m *TLChannelsGetDialogs) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsGetDialogs) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsGetDialogs) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TLChannelsGetDialogs) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  channels.getFullChannel#8736a09 channel:InputChannel = messages.ChatFull;
//
type TLChannelsGetFullChannel struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsGetFullChannel) Reset()         { *m = TLChannelsGetFullChannel{} }
func (m *TLChannelsGetFullChannel) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetFullChannel) ProtoMessage()    {}
func (*TLChannelsGetFullChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{110}
}
func (m *TLChannelsGetFullChannel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetFullChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetFullChannel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsGetFullChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetFullChannel.Merge(m, src)
}
func (m *TLChannelsGetFullChannel) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetFullChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetFullChannel.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetFullChannel proto.InternalMessageInfo

func (m *TLChannelsGetFullChannel) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsGetFullChannel) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsGetFullChannel) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  channels.getGroupsForDiscussion#f5dad378 = messages.Chats;
//
type TLChannelsGetGroupsForDiscussion struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLChannelsGetGroupsForDiscussion) Reset()         { *m = TLChannelsGetGroupsForDiscussion{} }
func (m *TLChannelsGetGroupsForDiscussion) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetGroupsForDiscussion) ProtoMessage()    {}
func (*TLChannelsGetGroupsForDiscussion) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{111}
}
func (m *TLChannelsGetGroupsForDiscussion) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetGroupsForDiscussion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetGroupsForDiscussion.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsGetGroupsForDiscussion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetGroupsForDiscussion.Merge(m, src)
}
func (m *TLChannelsGetGroupsForDiscussion) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetGroupsForDiscussion) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetGroupsForDiscussion.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetGroupsForDiscussion proto.InternalMessageInfo

func (m *TLChannelsGetGroupsForDiscussion) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsGetGroupsForDiscussion) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  channels.getImportantHistory#8f494bb2 channel:InputChannel offset_id:int offset_date:int add_offset:int limit:int max_id:int min_id:int = messages.Messages;
//
type TLChannelsGetImportantHistory struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	OffsetId             int32         `protobuf:"varint,4,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	OffsetDate           int32         `protobuf:"varint,5,opt,name=offset_date,json=offsetDate,proto3" json:"offset_date,omitempty"`
	AddOffset            int32         `protobuf:"varint,6,opt,name=add_offset,json=addOffset,proto3" json:"add_offset,omitempty"`
	Limit                int32         `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	MaxId                int32         `protobuf:"varint,8,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	MinId                int32         `protobuf:"varint,9,opt,name=min_id,json=minId,proto3" json:"min_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsGetImportantHistory) Reset()         { *m = TLChannelsGetImportantHistory{} }
func (m *TLChannelsGetImportantHistory) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetImportantHistory) ProtoMessage()    {}
func (*TLChannelsGetImportantHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{112}
}
func (m *TLChannelsGetImportantHistory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetImportantHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetImportantHistory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsGetImportantHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetImportantHistory.Merge(m, src)
}
func (m *TLChannelsGetImportantHistory) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetImportantHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetImportantHistory.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetImportantHistory proto.InternalMessageInfo

func (m *TLChannelsGetImportantHistory) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsGetImportantHistory) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsGetImportantHistory) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsGetImportantHistory) GetOffsetId() int32 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLChannelsGetImportantHistory) GetOffsetDate() int32 {
	if m != nil {
		return m.OffsetDate
	}
	return 0
}

func (m *TLChannelsGetImportantHistory) GetAddOffset() int32 {
	if m != nil {
		return m.AddOffset
	}
	return 0
}

func (m *TLChannelsGetImportantHistory) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLChannelsGetImportantHistory) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

func (m *TLChannelsGetImportantHistory) GetMinId() int32 {
	if m != nil {
		return m.MinId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  channels.getInactiveChannels#11e831ee = messages.InactiveChats;
//
type TLChannelsGetInactiveChannels struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLChannelsGetInactiveChannels) Reset()         { *m = TLChannelsGetInactiveChannels{} }
func (m *TLChannelsGetInactiveChannels) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetInactiveChannels) ProtoMessage()    {}
func (*TLChannelsGetInactiveChannels) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{113}
}
func (m *TLChannelsGetInactiveChannels) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetInactiveChannels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetInactiveChannels.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsGetInactiveChannels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetInactiveChannels.Merge(m, src)
}
func (m *TLChannelsGetInactiveChannels) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetInactiveChannels) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetInactiveChannels.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetInactiveChannels proto.InternalMessageInfo

func (m *TLChannelsGetInactiveChannels) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsGetInactiveChannels) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  channels.getLeftChannels#8341ecc0 offset:int = messages.Chats;
//
type TLChannelsGetLeftChannels struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Offset               int32    `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLChannelsGetLeftChannels) Reset()         { *m = TLChannelsGetLeftChannels{} }
func (m *TLChannelsGetLeftChannels) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetLeftChannels) ProtoMessage()    {}
func (*TLChannelsGetLeftChannels) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{114}
}
func (m *TLChannelsGetLeftChannels) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetLeftChannels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetLeftChannels.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsGetLeftChannels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetLeftChannels.Merge(m, src)
}
func (m *TLChannelsGetLeftChannels) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetLeftChannels) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetLeftChannels.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetLeftChannels proto.InternalMessageInfo

func (m *TLChannelsGetLeftChannels) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsGetLeftChannels) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsGetLeftChannels) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  channels.getMessages#93d7b347 channel:InputChannel id:Vector<int> = messages.Messages;
//  channels.getMessages#ad8c9a23 channel:InputChannel id:Vector<InputMessage> = messages.Messages;
//
type TLChannelsGetMessages struct {
	Cmd                  TLCmd           `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string          `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel   `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Id93D7B34771         []int32         `protobuf:"varint,4,rep,packed,name=id93D7B34771,proto3" json:"id93D7B34771,omitempty"`
	IdAD8C9A2385         []*InputMessage `protobuf:"bytes,5,rep,name=idAD8C9A2385,proto3" json:"idAD8C9A2385,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLChannelsGetMessages) Reset()         { *m = TLChannelsGetMessages{} }
func (m *TLChannelsGetMessages) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetMessages) ProtoMessage()    {}
func (*TLChannelsGetMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{115}
}
func (m *TLChannelsGetMessages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetMessages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsGetMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetMessages.Merge(m, src)
}
func (m *TLChannelsGetMessages) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetMessages.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetMessages proto.InternalMessageInfo

func (m *TLChannelsGetMessages) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsGetMessages) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsGetMessages) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsGetMessages) GetId93D7B34771() []int32 {
	if m != nil {
		return m.Id93D7B34771
	}
	return nil
}

func (m *TLChannelsGetMessages) GetIdAD8C9A2385() []*InputMessage {
	if m != nil {
		return m.IdAD8C9A2385
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  channels.getParticipant#546dd7a6 channel:InputChannel user_id:InputUser = channels.ChannelParticipant;
//
type TLChannelsGetParticipant struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	UserId               *InputUser    `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsGetParticipant) Reset()         { *m = TLChannelsGetParticipant{} }
func (m *TLChannelsGetParticipant) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetParticipant) ProtoMessage()    {}
func (*TLChannelsGetParticipant) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{116}
}
func (m *TLChannelsGetParticipant) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetParticipant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetParticipant.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsGetParticipant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetParticipant.Merge(m, src)
}
func (m *TLChannelsGetParticipant) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetParticipant) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetParticipant.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetParticipant proto.InternalMessageInfo

func (m *TLChannelsGetParticipant) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsGetParticipant) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsGetParticipant) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsGetParticipant) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  channels.getParticipants#24d98f92 channel:InputChannel filter:ChannelParticipantsFilter offset:int limit:int = channels.ChannelParticipants;
//  channels.getParticipants#123e05e9 channel:InputChannel filter:ChannelParticipantsFilter offset:int limit:int hash:int = channels.ChannelParticipants;
//
type TLChannelsGetParticipants struct {
	Cmd                  TLCmd                      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string                     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel              `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Filter               *ChannelParticipantsFilter `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	Offset               int32                      `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32                      `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	Hash                 int32                      `protobuf:"varint,7,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *TLChannelsGetParticipants) Reset()         { *m = TLChannelsGetParticipants{} }
func (m *TLChannelsGetParticipants) String() string { return proto.CompactTextString(m) }
func (*TLChannelsGetParticipants) ProtoMessage()    {}
func (*TLChannelsGetParticipants) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{117}
}
func (m *TLChannelsGetParticipants) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsGetParticipants) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsGetParticipants.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsGetParticipants) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsGetParticipants.Merge(m, src)
}
func (m *TLChannelsGetParticipants) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsGetParticipants) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsGetParticipants.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsGetParticipants proto.InternalMessageInfo

func (m *TLChannelsGetParticipants) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsGetParticipants) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsGetParticipants) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsGetParticipants) GetFilter() *ChannelParticipantsFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *TLChannelsGetParticipants) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TLChannelsGetParticipants) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLChannelsGetParticipants) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  channels.inviteToChannel#199f3a6c channel:InputChannel users:Vector<InputUser> = Updates;
//
type TLChannelsInviteToChannel struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Users                []*InputUser  `protobuf:"bytes,4,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsInviteToChannel) Reset()         { *m = TLChannelsInviteToChannel{} }
func (m *TLChannelsInviteToChannel) String() string { return proto.CompactTextString(m) }
func (*TLChannelsInviteToChannel) ProtoMessage()    {}
func (*TLChannelsInviteToChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{118}
}
func (m *TLChannelsInviteToChannel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsInviteToChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsInviteToChannel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsInviteToChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsInviteToChannel.Merge(m, src)
}
func (m *TLChannelsInviteToChannel) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsInviteToChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsInviteToChannel.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsInviteToChannel proto.InternalMessageInfo

func (m *TLChannelsInviteToChannel) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsInviteToChannel) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsInviteToChannel) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsInviteToChannel) GetUsers() []*InputUser {
	if m != nil {
		return m.Users
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  channels.joinChannel#24b524c5 channel:InputChannel = Updates;
//
type TLChannelsJoinChannel struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsJoinChannel) Reset()         { *m = TLChannelsJoinChannel{} }
func (m *TLChannelsJoinChannel) String() string { return proto.CompactTextString(m) }
func (*TLChannelsJoinChannel) ProtoMessage()    {}
func (*TLChannelsJoinChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{119}
}
func (m *TLChannelsJoinChannel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsJoinChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsJoinChannel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsJoinChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsJoinChannel.Merge(m, src)
}
func (m *TLChannelsJoinChannel) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsJoinChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsJoinChannel.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsJoinChannel proto.InternalMessageInfo

func (m *TLChannelsJoinChannel) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsJoinChannel) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsJoinChannel) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  channels.kickFromChannel#a672de14 channel:InputChannel user_id:InputUser kicked:Bool = Updates;
//
type TLChannelsKickFromChannel struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	UserId               *InputUser    `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Kicked               *Bool         `protobuf:"bytes,5,opt,name=kicked,proto3" json:"kicked,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsKickFromChannel) Reset()         { *m = TLChannelsKickFromChannel{} }
func (m *TLChannelsKickFromChannel) String() string { return proto.CompactTextString(m) }
func (*TLChannelsKickFromChannel) ProtoMessage()    {}
func (*TLChannelsKickFromChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{120}
}
func (m *TLChannelsKickFromChannel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsKickFromChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsKickFromChannel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsKickFromChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsKickFromChannel.Merge(m, src)
}
func (m *TLChannelsKickFromChannel) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsKickFromChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsKickFromChannel.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsKickFromChannel proto.InternalMessageInfo

func (m *TLChannelsKickFromChannel) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsKickFromChannel) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsKickFromChannel) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsKickFromChannel) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLChannelsKickFromChannel) GetKicked() *Bool {
	if m != nil {
		return m.Kicked
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  channels.leaveChannel#f836aa95 channel:InputChannel = Updates;
//
type TLChannelsLeaveChannel struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsLeaveChannel) Reset()         { *m = TLChannelsLeaveChannel{} }
func (m *TLChannelsLeaveChannel) String() string { return proto.CompactTextString(m) }
func (*TLChannelsLeaveChannel) ProtoMessage()    {}
func (*TLChannelsLeaveChannel) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{121}
}
func (m *TLChannelsLeaveChannel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsLeaveChannel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsLeaveChannel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsLeaveChannel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsLeaveChannel.Merge(m, src)
}
func (m *TLChannelsLeaveChannel) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsLeaveChannel) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsLeaveChannel.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsLeaveChannel proto.InternalMessageInfo

func (m *TLChannelsLeaveChannel) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsLeaveChannel) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsLeaveChannel) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  channels.readHistory#cc104937 channel:InputChannel max_id:int = Bool;
//
type TLChannelsReadHistory struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	MaxId                int32         `protobuf:"varint,4,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsReadHistory) Reset()         { *m = TLChannelsReadHistory{} }
func (m *TLChannelsReadHistory) String() string { return proto.CompactTextString(m) }
func (*TLChannelsReadHistory) ProtoMessage()    {}
func (*TLChannelsReadHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{122}
}
func (m *TLChannelsReadHistory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsReadHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsReadHistory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsReadHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsReadHistory.Merge(m, src)
}
func (m *TLChannelsReadHistory) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsReadHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsReadHistory.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsReadHistory proto.InternalMessageInfo

func (m *TLChannelsReadHistory) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsReadHistory) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsReadHistory) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsReadHistory) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  channels.readMessageContents#eab5dc38 channel:InputChannel id:Vector<int> = Bool;
//
type TLChannelsReadMessageContents struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Id                   []int32       `protobuf:"varint,4,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsReadMessageContents) Reset()         { *m = TLChannelsReadMessageContents{} }
func (m *TLChannelsReadMessageContents) String() string { return proto.CompactTextString(m) }
func (*TLChannelsReadMessageContents) ProtoMessage()    {}
func (*TLChannelsReadMessageContents) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{123}
}
func (m *TLChannelsReadMessageContents) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsReadMessageContents) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsReadMessageContents.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsReadMessageContents) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsReadMessageContents.Merge(m, src)
}
func (m *TLChannelsReadMessageContents) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsReadMessageContents) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsReadMessageContents.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsReadMessageContents proto.InternalMessageInfo

func (m *TLChannelsReadMessageContents) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsReadMessageContents) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsReadMessageContents) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsReadMessageContents) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  channels.reportSpam#fe087810 channel:InputChannel user_id:InputUser id:Vector<int> = Bool;
//
type TLChannelsReportSpam struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	UserId               *InputUser    `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Id                   []int32       `protobuf:"varint,5,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsReportSpam) Reset()         { *m = TLChannelsReportSpam{} }
func (m *TLChannelsReportSpam) String() string { return proto.CompactTextString(m) }
func (*TLChannelsReportSpam) ProtoMessage()    {}
func (*TLChannelsReportSpam) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{124}
}
func (m *TLChannelsReportSpam) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsReportSpam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsReportSpam.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsReportSpam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsReportSpam.Merge(m, src)
}
func (m *TLChannelsReportSpam) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsReportSpam) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsReportSpam.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsReportSpam proto.InternalMessageInfo

func (m *TLChannelsReportSpam) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsReportSpam) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsReportSpam) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsReportSpam) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLChannelsReportSpam) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  channels.setDiscussionGroup#40582bb2 broadcast:InputChannel group:InputChannel = Bool;
//
type TLChannelsSetDiscussionGroup struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Broadcast            *InputChannel `protobuf:"bytes,3,opt,name=broadcast,proto3" json:"broadcast,omitempty"`
	Group                *InputChannel `protobuf:"bytes,4,opt,name=group,proto3" json:"group,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsSetDiscussionGroup) Reset()         { *m = TLChannelsSetDiscussionGroup{} }
func (m *TLChannelsSetDiscussionGroup) String() string { return proto.CompactTextString(m) }
func (*TLChannelsSetDiscussionGroup) ProtoMessage()    {}
func (*TLChannelsSetDiscussionGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{125}
}
func (m *TLChannelsSetDiscussionGroup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsSetDiscussionGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsSetDiscussionGroup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsSetDiscussionGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsSetDiscussionGroup.Merge(m, src)
}
func (m *TLChannelsSetDiscussionGroup) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsSetDiscussionGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsSetDiscussionGroup.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsSetDiscussionGroup proto.InternalMessageInfo

func (m *TLChannelsSetDiscussionGroup) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsSetDiscussionGroup) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsSetDiscussionGroup) GetBroadcast() *InputChannel {
	if m != nil {
		return m.Broadcast
	}
	return nil
}

func (m *TLChannelsSetDiscussionGroup) GetGroup() *InputChannel {
	if m != nil {
		return m.Group
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  channels.setStickers#ea8ca4f9 channel:InputChannel stickerset:InputStickerSet = Bool;
//
type TLChannelsSetStickers struct {
	Cmd                  TLCmd            `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string           `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel    `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Stickerset           *InputStickerSet `protobuf:"bytes,4,opt,name=stickerset,proto3" json:"stickerset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLChannelsSetStickers) Reset()         { *m = TLChannelsSetStickers{} }
func (m *TLChannelsSetStickers) String() string { return proto.CompactTextString(m) }
func (*TLChannelsSetStickers) ProtoMessage()    {}
func (*TLChannelsSetStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{126}
}
func (m *TLChannelsSetStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsSetStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsSetStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsSetStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsSetStickers.Merge(m, src)
}
func (m *TLChannelsSetStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsSetStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsSetStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsSetStickers proto.InternalMessageInfo

func (m *TLChannelsSetStickers) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsSetStickers) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsSetStickers) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsSetStickers) GetStickerset() *InputStickerSet {
	if m != nil {
		return m.Stickerset
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  channels.toggleComments#aaa29e88 channel:InputChannel enabled:Bool = Updates;
//
type TLChannelsToggleComments struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Enabled              *Bool         `protobuf:"bytes,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsToggleComments) Reset()         { *m = TLChannelsToggleComments{} }
func (m *TLChannelsToggleComments) String() string { return proto.CompactTextString(m) }
func (*TLChannelsToggleComments) ProtoMessage()    {}
func (*TLChannelsToggleComments) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{127}
}
func (m *TLChannelsToggleComments) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsToggleComments) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsToggleComments.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsToggleComments) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsToggleComments.Merge(m, src)
}
func (m *TLChannelsToggleComments) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsToggleComments) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsToggleComments.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsToggleComments proto.InternalMessageInfo

func (m *TLChannelsToggleComments) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsToggleComments) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsToggleComments) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsToggleComments) GetEnabled() *Bool {
	if m != nil {
		return m.Enabled
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  channels.toggleInvites#49609307 channel:InputChannel enabled:Bool = Updates;
//
type TLChannelsToggleInvites struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Enabled              *Bool         `protobuf:"bytes,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsToggleInvites) Reset()         { *m = TLChannelsToggleInvites{} }
func (m *TLChannelsToggleInvites) String() string { return proto.CompactTextString(m) }
func (*TLChannelsToggleInvites) ProtoMessage()    {}
func (*TLChannelsToggleInvites) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{128}
}
func (m *TLChannelsToggleInvites) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsToggleInvites) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsToggleInvites.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsToggleInvites) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsToggleInvites.Merge(m, src)
}
func (m *TLChannelsToggleInvites) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsToggleInvites) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsToggleInvites.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsToggleInvites proto.InternalMessageInfo

func (m *TLChannelsToggleInvites) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsToggleInvites) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsToggleInvites) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsToggleInvites) GetEnabled() *Bool {
	if m != nil {
		return m.Enabled
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  channels.togglePreHistoryHidden#eabbb94c channel:InputChannel enabled:Bool = Updates;
//
type TLChannelsTogglePreHistoryHidden struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Enabled              *Bool         `protobuf:"bytes,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsTogglePreHistoryHidden) Reset()         { *m = TLChannelsTogglePreHistoryHidden{} }
func (m *TLChannelsTogglePreHistoryHidden) String() string { return proto.CompactTextString(m) }
func (*TLChannelsTogglePreHistoryHidden) ProtoMessage()    {}
func (*TLChannelsTogglePreHistoryHidden) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{129}
}
func (m *TLChannelsTogglePreHistoryHidden) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsTogglePreHistoryHidden) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsTogglePreHistoryHidden.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsTogglePreHistoryHidden) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsTogglePreHistoryHidden.Merge(m, src)
}
func (m *TLChannelsTogglePreHistoryHidden) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsTogglePreHistoryHidden) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsTogglePreHistoryHidden.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsTogglePreHistoryHidden proto.InternalMessageInfo

func (m *TLChannelsTogglePreHistoryHidden) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsTogglePreHistoryHidden) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsTogglePreHistoryHidden) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsTogglePreHistoryHidden) GetEnabled() *Bool {
	if m != nil {
		return m.Enabled
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  channels.toggleSignatures#1f69b606 channel:InputChannel enabled:Bool = Updates;
//
type TLChannelsToggleSignatures struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Enabled              *Bool         `protobuf:"bytes,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsToggleSignatures) Reset()         { *m = TLChannelsToggleSignatures{} }
func (m *TLChannelsToggleSignatures) String() string { return proto.CompactTextString(m) }
func (*TLChannelsToggleSignatures) ProtoMessage()    {}
func (*TLChannelsToggleSignatures) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{130}
}
func (m *TLChannelsToggleSignatures) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsToggleSignatures) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsToggleSignatures.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsToggleSignatures) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsToggleSignatures.Merge(m, src)
}
func (m *TLChannelsToggleSignatures) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsToggleSignatures) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsToggleSignatures.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsToggleSignatures proto.InternalMessageInfo

func (m *TLChannelsToggleSignatures) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsToggleSignatures) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsToggleSignatures) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsToggleSignatures) GetEnabled() *Bool {
	if m != nil {
		return m.Enabled
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  channels.toggleSlowMode#edd49ef0 channel:InputChannel seconds:int = Updates;
//
type TLChannelsToggleSlowMode struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Seconds              int32         `protobuf:"varint,4,opt,name=seconds,proto3" json:"seconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsToggleSlowMode) Reset()         { *m = TLChannelsToggleSlowMode{} }
func (m *TLChannelsToggleSlowMode) String() string { return proto.CompactTextString(m) }
func (*TLChannelsToggleSlowMode) ProtoMessage()    {}
func (*TLChannelsToggleSlowMode) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{131}
}
func (m *TLChannelsToggleSlowMode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsToggleSlowMode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsToggleSlowMode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsToggleSlowMode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsToggleSlowMode.Merge(m, src)
}
func (m *TLChannelsToggleSlowMode) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsToggleSlowMode) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsToggleSlowMode.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsToggleSlowMode proto.InternalMessageInfo

func (m *TLChannelsToggleSlowMode) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsToggleSlowMode) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsToggleSlowMode) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsToggleSlowMode) GetSeconds() int32 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  channels.updatePinnedMessage#a72ded52 flags:# silent:flags.0?true channel:InputChannel id:int = Updates;
//
type TLChannelsUpdatePinnedMessage struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32         `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Silent               bool          `protobuf:"varint,4,opt,name=silent,proto3" json:"silent,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
	Id                   int32         `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsUpdatePinnedMessage) Reset()         { *m = TLChannelsUpdatePinnedMessage{} }
func (m *TLChannelsUpdatePinnedMessage) String() string { return proto.CompactTextString(m) }
func (*TLChannelsUpdatePinnedMessage) ProtoMessage()    {}
func (*TLChannelsUpdatePinnedMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{132}
}
func (m *TLChannelsUpdatePinnedMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsUpdatePinnedMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsUpdatePinnedMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsUpdatePinnedMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsUpdatePinnedMessage.Merge(m, src)
}
func (m *TLChannelsUpdatePinnedMessage) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsUpdatePinnedMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsUpdatePinnedMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsUpdatePinnedMessage proto.InternalMessageInfo

func (m *TLChannelsUpdatePinnedMessage) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsUpdatePinnedMessage) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsUpdatePinnedMessage) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLChannelsUpdatePinnedMessage) GetSilent() bool {
	if m != nil {
		return m.Silent
	}
	return false
}

func (m *TLChannelsUpdatePinnedMessage) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsUpdatePinnedMessage) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  channels.updateUsername#3514b3de channel:InputChannel username:string = Bool;
//
type TLChannelsUpdateUsername struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Username             string        `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLChannelsUpdateUsername) Reset()         { *m = TLChannelsUpdateUsername{} }
func (m *TLChannelsUpdateUsername) String() string { return proto.CompactTextString(m) }
func (*TLChannelsUpdateUsername) ProtoMessage()    {}
func (*TLChannelsUpdateUsername) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{133}
}
func (m *TLChannelsUpdateUsername) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLChannelsUpdateUsername) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLChannelsUpdateUsername.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLChannelsUpdateUsername) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLChannelsUpdateUsername.Merge(m, src)
}
func (m *TLChannelsUpdateUsername) XXX_Size() int {
	return m.Size()
}
func (m *TLChannelsUpdateUsername) XXX_DiscardUnknown() {
	xxx_messageInfo_TLChannelsUpdateUsername.DiscardUnknown(m)
}

var xxx_messageInfo_TLChannelsUpdateUsername proto.InternalMessageInfo

func (m *TLChannelsUpdateUsername) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLChannelsUpdateUsername) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLChannelsUpdateUsername) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLChannelsUpdateUsername) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  contacts.acceptContact#f831a20f id:InputUser = Updates;
//
type TLContactsAcceptContact struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Id                   *InputUser `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLContactsAcceptContact) Reset()         { *m = TLContactsAcceptContact{} }
func (m *TLContactsAcceptContact) String() string { return proto.CompactTextString(m) }
func (*TLContactsAcceptContact) ProtoMessage()    {}
func (*TLContactsAcceptContact) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{134}
}
func (m *TLContactsAcceptContact) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsAcceptContact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsAcceptContact.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsAcceptContact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsAcceptContact.Merge(m, src)
}
func (m *TLContactsAcceptContact) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsAcceptContact) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsAcceptContact.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsAcceptContact proto.InternalMessageInfo

func (m *TLContactsAcceptContact) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLContactsAcceptContact) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLContactsAcceptContact) GetId() *InputUser {
	if m != nil {
		return m.Id
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  contacts.addContact#e8f463d0 flags:# add_phone_privacy_exception:flags.0?true id:InputUser first_name:string last_name:string phone:string = Updates;
//
type TLContactsAddContact struct {
	Cmd                      TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName                string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                    int32      `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	AddPhonePrivacyException bool       `protobuf:"varint,4,opt,name=add_phone_privacy_exception,json=addPhonePrivacyException,proto3" json:"add_phone_privacy_exception,omitempty"`
	Id                       *InputUser `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	FirstName                string     `protobuf:"bytes,6,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName                 string     `protobuf:"bytes,7,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Phone                    string     `protobuf:"bytes,8,opt,name=phone,proto3" json:"phone,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}   `json:"-"`
	XXX_unrecognized         []byte     `json:"-"`
	XXX_sizecache            int32      `json:"-"`
}

func (m *TLContactsAddContact) Reset()         { *m = TLContactsAddContact{} }
func (m *TLContactsAddContact) String() string { return proto.CompactTextString(m) }
func (*TLContactsAddContact) ProtoMessage()    {}
func (*TLContactsAddContact) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{135}
}
func (m *TLContactsAddContact) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsAddContact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsAddContact.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsAddContact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsAddContact.Merge(m, src)
}
func (m *TLContactsAddContact) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsAddContact) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsAddContact.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsAddContact proto.InternalMessageInfo

func (m *TLContactsAddContact) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLContactsAddContact) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLContactsAddContact) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLContactsAddContact) GetAddPhonePrivacyException() bool {
	if m != nil {
		return m.AddPhonePrivacyException
	}
	return false
}

func (m *TLContactsAddContact) GetId() *InputUser {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLContactsAddContact) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *TLContactsAddContact) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *TLContactsAddContact) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  contacts.block#332b49fc id:InputUser = Bool;
//  contacts.block#68cc1411 id:InputPeer = Bool;
//
type TLContactsBlock struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Id332B49FC71         *InputUser `protobuf:"bytes,3,opt,name=id332B49FC71,proto3" json:"id332B49FC71,omitempty"`
	Id68CC1411119        *InputPeer `protobuf:"bytes,4,opt,name=id68CC1411119,proto3" json:"id68CC1411119,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLContactsBlock) Reset()         { *m = TLContactsBlock{} }
func (m *TLContactsBlock) String() string { return proto.CompactTextString(m) }
func (*TLContactsBlock) ProtoMessage()    {}
func (*TLContactsBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{136}
}
func (m *TLContactsBlock) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsBlock.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsBlock.Merge(m, src)
}
func (m *TLContactsBlock) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsBlock.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsBlock proto.InternalMessageInfo

func (m *TLContactsBlock) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLContactsBlock) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLContactsBlock) GetId332B49FC71() *InputUser {
	if m != nil {
		return m.Id332B49FC71
	}
	return nil
}

func (m *TLContactsBlock) GetId68CC1411119() *InputPeer {
	if m != nil {
		return m.Id68CC1411119
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  contacts.blockFromReplies#29a8962c flags:# delete_message:flags.0?true delete_history:flags.1?true report_spam:flags.2?true msg_id:int = Updates;
//
type TLContactsBlockFromReplies struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32    `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	DeleteMessage        bool     `protobuf:"varint,4,opt,name=delete_message,json=deleteMessage,proto3" json:"delete_message,omitempty"`
	DeleteHistory        bool     `protobuf:"varint,5,opt,name=delete_history,json=deleteHistory,proto3" json:"delete_history,omitempty"`
	ReportSpam           bool     `protobuf:"varint,6,opt,name=report_spam,json=reportSpam,proto3" json:"report_spam,omitempty"`
	MsgId                int32    `protobuf:"varint,7,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLContactsBlockFromReplies) Reset()         { *m = TLContactsBlockFromReplies{} }
func (m *TLContactsBlockFromReplies) String() string { return proto.CompactTextString(m) }
func (*TLContactsBlockFromReplies) ProtoMessage()    {}
func (*TLContactsBlockFromReplies) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{137}
}
func (m *TLContactsBlockFromReplies) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsBlockFromReplies) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsBlockFromReplies.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsBlockFromReplies) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsBlockFromReplies.Merge(m, src)
}
func (m *TLContactsBlockFromReplies) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsBlockFromReplies) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsBlockFromReplies.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsBlockFromReplies proto.InternalMessageInfo

func (m *TLContactsBlockFromReplies) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLContactsBlockFromReplies) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLContactsBlockFromReplies) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLContactsBlockFromReplies) GetDeleteMessage() bool {
	if m != nil {
		return m.DeleteMessage
	}
	return false
}

func (m *TLContactsBlockFromReplies) GetDeleteHistory() bool {
	if m != nil {
		return m.DeleteHistory
	}
	return false
}

func (m *TLContactsBlockFromReplies) GetReportSpam() bool {
	if m != nil {
		return m.ReportSpam
	}
	return false
}

func (m *TLContactsBlockFromReplies) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  contacts.deleteByPhones#1013fd9e phones:Vector<string> = Bool;
//
type TLContactsDeleteByPhones struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Phones               []string `protobuf:"bytes,3,rep,name=phones,proto3" json:"phones,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLContactsDeleteByPhones) Reset()         { *m = TLContactsDeleteByPhones{} }
func (m *TLContactsDeleteByPhones) String() string { return proto.CompactTextString(m) }
func (*TLContactsDeleteByPhones) ProtoMessage()    {}
func (*TLContactsDeleteByPhones) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{138}
}
func (m *TLContactsDeleteByPhones) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsDeleteByPhones) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsDeleteByPhones.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsDeleteByPhones) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsDeleteByPhones.Merge(m, src)
}
func (m *TLContactsDeleteByPhones) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsDeleteByPhones) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsDeleteByPhones.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsDeleteByPhones proto.InternalMessageInfo

func (m *TLContactsDeleteByPhones) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLContactsDeleteByPhones) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLContactsDeleteByPhones) GetPhones() []string {
	if m != nil {
		return m.Phones
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  contacts.deleteContact#8e953744 id:InputUser = contacts.Link;
//
type TLContactsDeleteContact struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Id                   *InputUser `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLContactsDeleteContact) Reset()         { *m = TLContactsDeleteContact{} }
func (m *TLContactsDeleteContact) String() string { return proto.CompactTextString(m) }
func (*TLContactsDeleteContact) ProtoMessage()    {}
func (*TLContactsDeleteContact) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{139}
}
func (m *TLContactsDeleteContact) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsDeleteContact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsDeleteContact.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsDeleteContact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsDeleteContact.Merge(m, src)
}
func (m *TLContactsDeleteContact) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsDeleteContact) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsDeleteContact.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsDeleteContact proto.InternalMessageInfo

func (m *TLContactsDeleteContact) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLContactsDeleteContact) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLContactsDeleteContact) GetId() *InputUser {
	if m != nil {
		return m.Id
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  contacts.deleteContacts#59ab389e id:Vector<InputUser> = Bool;
//  contacts.deleteContacts#96a0e00 id:Vector<InputUser> = Updates;
//
type TLContactsDeleteContacts struct {
	Cmd                  TLCmd        `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string       `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Id                   []*InputUser `protobuf:"bytes,3,rep,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TLContactsDeleteContacts) Reset()         { *m = TLContactsDeleteContacts{} }
func (m *TLContactsDeleteContacts) String() string { return proto.CompactTextString(m) }
func (*TLContactsDeleteContacts) ProtoMessage()    {}
func (*TLContactsDeleteContacts) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{140}
}
func (m *TLContactsDeleteContacts) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsDeleteContacts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsDeleteContacts.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsDeleteContacts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsDeleteContacts.Merge(m, src)
}
func (m *TLContactsDeleteContacts) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsDeleteContacts) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsDeleteContacts.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsDeleteContacts proto.InternalMessageInfo

func (m *TLContactsDeleteContacts) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLContactsDeleteContacts) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLContactsDeleteContacts) GetId() []*InputUser {
	if m != nil {
		return m.Id
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  contacts.exportCard#84e53737 = Vector<int>;
//
type TLContactsExportCard struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLContactsExportCard) Reset()         { *m = TLContactsExportCard{} }
func (m *TLContactsExportCard) String() string { return proto.CompactTextString(m) }
func (*TLContactsExportCard) ProtoMessage()    {}
func (*TLContactsExportCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{141}
}
func (m *TLContactsExportCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsExportCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsExportCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsExportCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsExportCard.Merge(m, src)
}
func (m *TLContactsExportCard) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsExportCard) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsExportCard.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsExportCard proto.InternalMessageInfo

func (m *TLContactsExportCard) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLContactsExportCard) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  contacts.getBlocked#f57c350f offset:int limit:int = contacts.Blocked;
//
type TLContactsGetBlocked struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Offset               int32    `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32    `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLContactsGetBlocked) Reset()         { *m = TLContactsGetBlocked{} }
func (m *TLContactsGetBlocked) String() string { return proto.CompactTextString(m) }
func (*TLContactsGetBlocked) ProtoMessage()    {}
func (*TLContactsGetBlocked) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{142}
}
func (m *TLContactsGetBlocked) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsGetBlocked) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsGetBlocked.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsGetBlocked) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsGetBlocked.Merge(m, src)
}
func (m *TLContactsGetBlocked) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsGetBlocked) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsGetBlocked.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsGetBlocked proto.InternalMessageInfo

func (m *TLContactsGetBlocked) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLContactsGetBlocked) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLContactsGetBlocked) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TLContactsGetBlocked) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  contacts.getContactIDs#2caa4a42 hash:int = Vector<int>;
//
type TLContactsGetContactIDs struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Hash                 int32    `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLContactsGetContactIDs) Reset()         { *m = TLContactsGetContactIDs{} }
func (m *TLContactsGetContactIDs) String() string { return proto.CompactTextString(m) }
func (*TLContactsGetContactIDs) ProtoMessage()    {}
func (*TLContactsGetContactIDs) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{143}
}
func (m *TLContactsGetContactIDs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsGetContactIDs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsGetContactIDs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsGetContactIDs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsGetContactIDs.Merge(m, src)
}
func (m *TLContactsGetContactIDs) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsGetContactIDs) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsGetContactIDs.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsGetContactIDs proto.InternalMessageInfo

func (m *TLContactsGetContactIDs) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLContactsGetContactIDs) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLContactsGetContactIDs) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  contacts.getContacts#c023849f hash:int = contacts.Contacts;
//  contacts.getContacts#22c6aa08 hash:string = contacts.Contacts;
//
type TLContactsGetContacts struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	HashC023849F71       int32    `protobuf:"varint,3,opt,name=hashC023849F71,proto3" json:"hashC023849F71,omitempty"`
	Hash22C6AA0851       string   `protobuf:"bytes,4,opt,name=hash22C6AA0851,proto3" json:"hash22C6AA0851,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLContactsGetContacts) Reset()         { *m = TLContactsGetContacts{} }
func (m *TLContactsGetContacts) String() string { return proto.CompactTextString(m) }
func (*TLContactsGetContacts) ProtoMessage()    {}
func (*TLContactsGetContacts) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{144}
}
func (m *TLContactsGetContacts) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsGetContacts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsGetContacts.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsGetContacts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsGetContacts.Merge(m, src)
}
func (m *TLContactsGetContacts) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsGetContacts) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsGetContacts.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsGetContacts proto.InternalMessageInfo

func (m *TLContactsGetContacts) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLContactsGetContacts) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLContactsGetContacts) GetHashC023849F71() int32 {
	if m != nil {
		return m.HashC023849F71
	}
	return 0
}

func (m *TLContactsGetContacts) GetHash22C6AA0851() string {
	if m != nil {
		return m.Hash22C6AA0851
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  contacts.getLocated#a356056 geo_point:InputGeoPoint = Updates;
//  contacts.getLocated#d348bc44 flags:# background:flags.1?true geo_point:InputGeoPoint self_expires:flags.0?int = Updates;
//
type TLContactsGetLocated struct {
	Cmd                  TLCmd          `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string         `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	GeoPoint             *InputGeoPoint `protobuf:"bytes,3,opt,name=geo_point,json=geoPoint,proto3" json:"geo_point,omitempty"`
	Flags                int32          `protobuf:"varint,4,opt,name=flags,proto3" json:"flags,omitempty"`
	Background           bool           `protobuf:"varint,5,opt,name=background,proto3" json:"background,omitempty"`
	SelfExpires          int32          `protobuf:"varint,6,opt,name=self_expires,json=selfExpires,proto3" json:"self_expires,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TLContactsGetLocated) Reset()         { *m = TLContactsGetLocated{} }
func (m *TLContactsGetLocated) String() string { return proto.CompactTextString(m) }
func (*TLContactsGetLocated) ProtoMessage()    {}
func (*TLContactsGetLocated) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{145}
}
func (m *TLContactsGetLocated) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsGetLocated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsGetLocated.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsGetLocated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsGetLocated.Merge(m, src)
}
func (m *TLContactsGetLocated) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsGetLocated) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsGetLocated.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsGetLocated proto.InternalMessageInfo

func (m *TLContactsGetLocated) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLContactsGetLocated) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLContactsGetLocated) GetGeoPoint() *InputGeoPoint {
	if m != nil {
		return m.GeoPoint
	}
	return nil
}

func (m *TLContactsGetLocated) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLContactsGetLocated) GetBackground() bool {
	if m != nil {
		return m.Background
	}
	return false
}

func (m *TLContactsGetLocated) GetSelfExpires() int32 {
	if m != nil {
		return m.SelfExpires
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  contacts.getSaved#82f1e39f = Vector<SavedContact>;
//
type TLContactsGetSaved struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLContactsGetSaved) Reset()         { *m = TLContactsGetSaved{} }
func (m *TLContactsGetSaved) String() string { return proto.CompactTextString(m) }
func (*TLContactsGetSaved) ProtoMessage()    {}
func (*TLContactsGetSaved) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{146}
}
func (m *TLContactsGetSaved) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsGetSaved) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsGetSaved.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsGetSaved) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsGetSaved.Merge(m, src)
}
func (m *TLContactsGetSaved) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsGetSaved) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsGetSaved.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsGetSaved proto.InternalMessageInfo

func (m *TLContactsGetSaved) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLContactsGetSaved) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  contacts.getStatuses#c4a353ee = Vector<ContactStatus>;
//
type TLContactsGetStatuses struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLContactsGetStatuses) Reset()         { *m = TLContactsGetStatuses{} }
func (m *TLContactsGetStatuses) String() string { return proto.CompactTextString(m) }
func (*TLContactsGetStatuses) ProtoMessage()    {}
func (*TLContactsGetStatuses) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{147}
}
func (m *TLContactsGetStatuses) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsGetStatuses) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsGetStatuses.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsGetStatuses) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsGetStatuses.Merge(m, src)
}
func (m *TLContactsGetStatuses) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsGetStatuses) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsGetStatuses.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsGetStatuses proto.InternalMessageInfo

func (m *TLContactsGetStatuses) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLContactsGetStatuses) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  contacts.getTopPeers#d4982db5 flags:# correspondents:flags.0?true bots_pm:flags.1?true bots_inline:flags.2?true phone_calls:flags.3?true groups:flags.10?true channels:flags.15?true offset:int limit:int hash:int = contacts.TopPeers;
//
type TLContactsGetTopPeers struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32    `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Correspondents       bool     `protobuf:"varint,4,opt,name=correspondents,proto3" json:"correspondents,omitempty"`
	BotsPm               bool     `protobuf:"varint,5,opt,name=bots_pm,json=botsPm,proto3" json:"bots_pm,omitempty"`
	BotsInline           bool     `protobuf:"varint,6,opt,name=bots_inline,json=botsInline,proto3" json:"bots_inline,omitempty"`
	PhoneCalls           bool     `protobuf:"varint,7,opt,name=phone_calls,json=phoneCalls,proto3" json:"phone_calls,omitempty"`
	Groups               bool     `protobuf:"varint,8,opt,name=groups,proto3" json:"groups,omitempty"`
	Channels             bool     `protobuf:"varint,9,opt,name=channels,proto3" json:"channels,omitempty"`
	Offset               int32    `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32    `protobuf:"varint,11,opt,name=limit,proto3" json:"limit,omitempty"`
	Hash                 int32    `protobuf:"varint,12,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLContactsGetTopPeers) Reset()         { *m = TLContactsGetTopPeers{} }
func (m *TLContactsGetTopPeers) String() string { return proto.CompactTextString(m) }
func (*TLContactsGetTopPeers) ProtoMessage()    {}
func (*TLContactsGetTopPeers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{148}
}
func (m *TLContactsGetTopPeers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsGetTopPeers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsGetTopPeers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsGetTopPeers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsGetTopPeers.Merge(m, src)
}
func (m *TLContactsGetTopPeers) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsGetTopPeers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsGetTopPeers.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsGetTopPeers proto.InternalMessageInfo

func (m *TLContactsGetTopPeers) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLContactsGetTopPeers) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLContactsGetTopPeers) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLContactsGetTopPeers) GetCorrespondents() bool {
	if m != nil {
		return m.Correspondents
	}
	return false
}

func (m *TLContactsGetTopPeers) GetBotsPm() bool {
	if m != nil {
		return m.BotsPm
	}
	return false
}

func (m *TLContactsGetTopPeers) GetBotsInline() bool {
	if m != nil {
		return m.BotsInline
	}
	return false
}

func (m *TLContactsGetTopPeers) GetPhoneCalls() bool {
	if m != nil {
		return m.PhoneCalls
	}
	return false
}

func (m *TLContactsGetTopPeers) GetGroups() bool {
	if m != nil {
		return m.Groups
	}
	return false
}

func (m *TLContactsGetTopPeers) GetChannels() bool {
	if m != nil {
		return m.Channels
	}
	return false
}

func (m *TLContactsGetTopPeers) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TLContactsGetTopPeers) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLContactsGetTopPeers) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  contacts.importCard#4fe196fe export_card:Vector<int> = User;
//
type TLContactsImportCard struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	ExportCard           []int32  `protobuf:"varint,3,rep,packed,name=export_card,json=exportCard,proto3" json:"export_card,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLContactsImportCard) Reset()         { *m = TLContactsImportCard{} }
func (m *TLContactsImportCard) String() string { return proto.CompactTextString(m) }
func (*TLContactsImportCard) ProtoMessage()    {}
func (*TLContactsImportCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{149}
}
func (m *TLContactsImportCard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsImportCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsImportCard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsImportCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsImportCard.Merge(m, src)
}
func (m *TLContactsImportCard) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsImportCard) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsImportCard.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsImportCard proto.InternalMessageInfo

func (m *TLContactsImportCard) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLContactsImportCard) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLContactsImportCard) GetExportCard() []int32 {
	if m != nil {
		return m.ExportCard
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  contacts.importContacts#2c800be5 contacts:Vector<InputContact> = contacts.ImportedContacts;
//  contacts.importContacts#da30b32d contacts:Vector<InputContact> replace:Bool = contacts.ImportedContacts;
//
type TLContactsImportContacts struct {
	Cmd                  TLCmd           `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string          `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Contacts             []*InputContact `protobuf:"bytes,3,rep,name=contacts,proto3" json:"contacts,omitempty"`
	Replace              *Bool           `protobuf:"bytes,4,opt,name=replace,proto3" json:"replace,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLContactsImportContacts) Reset()         { *m = TLContactsImportContacts{} }
func (m *TLContactsImportContacts) String() string { return proto.CompactTextString(m) }
func (*TLContactsImportContacts) ProtoMessage()    {}
func (*TLContactsImportContacts) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{150}
}
func (m *TLContactsImportContacts) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsImportContacts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsImportContacts.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsImportContacts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsImportContacts.Merge(m, src)
}
func (m *TLContactsImportContacts) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsImportContacts) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsImportContacts.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsImportContacts proto.InternalMessageInfo

func (m *TLContactsImportContacts) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLContactsImportContacts) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLContactsImportContacts) GetContacts() []*InputContact {
	if m != nil {
		return m.Contacts
	}
	return nil
}

func (m *TLContactsImportContacts) GetReplace() *Bool {
	if m != nil {
		return m.Replace
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  contacts.resetSaved#879537f1 = Bool;
//
type TLContactsResetSaved struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLContactsResetSaved) Reset()         { *m = TLContactsResetSaved{} }
func (m *TLContactsResetSaved) String() string { return proto.CompactTextString(m) }
func (*TLContactsResetSaved) ProtoMessage()    {}
func (*TLContactsResetSaved) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{151}
}
func (m *TLContactsResetSaved) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsResetSaved) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsResetSaved.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsResetSaved) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsResetSaved.Merge(m, src)
}
func (m *TLContactsResetSaved) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsResetSaved) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsResetSaved.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsResetSaved proto.InternalMessageInfo

func (m *TLContactsResetSaved) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLContactsResetSaved) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  contacts.resetTopPeerRating#1ae373ac category:TopPeerCategory peer:InputPeer = Bool;
//
type TLContactsResetTopPeerRating struct {
	Cmd                  TLCmd            `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string           `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Category             *TopPeerCategory `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	Peer                 *InputPeer       `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLContactsResetTopPeerRating) Reset()         { *m = TLContactsResetTopPeerRating{} }
func (m *TLContactsResetTopPeerRating) String() string { return proto.CompactTextString(m) }
func (*TLContactsResetTopPeerRating) ProtoMessage()    {}
func (*TLContactsResetTopPeerRating) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{152}
}
func (m *TLContactsResetTopPeerRating) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsResetTopPeerRating) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsResetTopPeerRating.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsResetTopPeerRating) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsResetTopPeerRating.Merge(m, src)
}
func (m *TLContactsResetTopPeerRating) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsResetTopPeerRating) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsResetTopPeerRating.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsResetTopPeerRating proto.InternalMessageInfo

func (m *TLContactsResetTopPeerRating) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLContactsResetTopPeerRating) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLContactsResetTopPeerRating) GetCategory() *TopPeerCategory {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *TLContactsResetTopPeerRating) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  contacts.resolveUsername#f93ccba3 username:string = contacts.ResolvedPeer;
//
type TLContactsResolveUsername struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Username             string   `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLContactsResolveUsername) Reset()         { *m = TLContactsResolveUsername{} }
func (m *TLContactsResolveUsername) String() string { return proto.CompactTextString(m) }
func (*TLContactsResolveUsername) ProtoMessage()    {}
func (*TLContactsResolveUsername) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{153}
}
func (m *TLContactsResolveUsername) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsResolveUsername) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsResolveUsername.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsResolveUsername) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsResolveUsername.Merge(m, src)
}
func (m *TLContactsResolveUsername) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsResolveUsername) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsResolveUsername.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsResolveUsername proto.InternalMessageInfo

func (m *TLContactsResolveUsername) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLContactsResolveUsername) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLContactsResolveUsername) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  contacts.search#11f812d8 q:string limit:int = contacts.Found;
//
type TLContactsSearch struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Q                    string   `protobuf:"bytes,3,opt,name=q,proto3" json:"q,omitempty"`
	Limit                int32    `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLContactsSearch) Reset()         { *m = TLContactsSearch{} }
func (m *TLContactsSearch) String() string { return proto.CompactTextString(m) }
func (*TLContactsSearch) ProtoMessage()    {}
func (*TLContactsSearch) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{154}
}
func (m *TLContactsSearch) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsSearch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsSearch.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsSearch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsSearch.Merge(m, src)
}
func (m *TLContactsSearch) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsSearch) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsSearch.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsSearch proto.InternalMessageInfo

func (m *TLContactsSearch) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLContactsSearch) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLContactsSearch) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

func (m *TLContactsSearch) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  contacts.toggleTopPeers#8514bdda enabled:Bool = Bool;
//
type TLContactsToggleTopPeers struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Enabled              *Bool    `protobuf:"bytes,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLContactsToggleTopPeers) Reset()         { *m = TLContactsToggleTopPeers{} }
func (m *TLContactsToggleTopPeers) String() string { return proto.CompactTextString(m) }
func (*TLContactsToggleTopPeers) ProtoMessage()    {}
func (*TLContactsToggleTopPeers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{155}
}
func (m *TLContactsToggleTopPeers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsToggleTopPeers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsToggleTopPeers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsToggleTopPeers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsToggleTopPeers.Merge(m, src)
}
func (m *TLContactsToggleTopPeers) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsToggleTopPeers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsToggleTopPeers.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsToggleTopPeers proto.InternalMessageInfo

func (m *TLContactsToggleTopPeers) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLContactsToggleTopPeers) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLContactsToggleTopPeers) GetEnabled() *Bool {
	if m != nil {
		return m.Enabled
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  contacts.unblock#e54100bd id:InputUser = Bool;
//  contacts.unblock#bea65d50 id:InputPeer = Bool;
//
type TLContactsUnblock struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	IdE54100BD71         *InputUser `protobuf:"bytes,3,opt,name=idE54100BD71,proto3" json:"idE54100BD71,omitempty"`
	IdBEA65D50119        *InputPeer `protobuf:"bytes,4,opt,name=idBEA65D50119,proto3" json:"idBEA65D50119,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLContactsUnblock) Reset()         { *m = TLContactsUnblock{} }
func (m *TLContactsUnblock) String() string { return proto.CompactTextString(m) }
func (*TLContactsUnblock) ProtoMessage()    {}
func (*TLContactsUnblock) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{156}
}
func (m *TLContactsUnblock) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContactsUnblock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContactsUnblock.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContactsUnblock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContactsUnblock.Merge(m, src)
}
func (m *TLContactsUnblock) XXX_Size() int {
	return m.Size()
}
func (m *TLContactsUnblock) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContactsUnblock.DiscardUnknown(m)
}

var xxx_messageInfo_TLContactsUnblock proto.InternalMessageInfo

func (m *TLContactsUnblock) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLContactsUnblock) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLContactsUnblock) GetIdE54100BD71() *InputUser {
	if m != nil {
		return m.IdE54100BD71
	}
	return nil
}

func (m *TLContactsUnblock) GetIdBEA65D50119() *InputPeer {
	if m != nil {
		return m.IdBEA65D50119
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  folders.deleteFolder#1c295881 folder_id:int = Updates;
//
type TLFoldersDeleteFolder struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	FolderId             int32    `protobuf:"varint,3,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLFoldersDeleteFolder) Reset()         { *m = TLFoldersDeleteFolder{} }
func (m *TLFoldersDeleteFolder) String() string { return proto.CompactTextString(m) }
func (*TLFoldersDeleteFolder) ProtoMessage()    {}
func (*TLFoldersDeleteFolder) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{157}
}
func (m *TLFoldersDeleteFolder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLFoldersDeleteFolder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLFoldersDeleteFolder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLFoldersDeleteFolder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLFoldersDeleteFolder.Merge(m, src)
}
func (m *TLFoldersDeleteFolder) XXX_Size() int {
	return m.Size()
}
func (m *TLFoldersDeleteFolder) XXX_DiscardUnknown() {
	xxx_messageInfo_TLFoldersDeleteFolder.DiscardUnknown(m)
}

var xxx_messageInfo_TLFoldersDeleteFolder proto.InternalMessageInfo

func (m *TLFoldersDeleteFolder) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLFoldersDeleteFolder) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLFoldersDeleteFolder) GetFolderId() int32 {
	if m != nil {
		return m.FolderId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  folders.editPeerFolders#6847d0ab folder_peers:Vector<InputFolderPeer> = Updates;
//
type TLFoldersEditPeerFolders struct {
	Cmd                  TLCmd              `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string             `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	FolderPeers          []*InputFolderPeer `protobuf:"bytes,3,rep,name=folder_peers,json=folderPeers,proto3" json:"folder_peers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLFoldersEditPeerFolders) Reset()         { *m = TLFoldersEditPeerFolders{} }
func (m *TLFoldersEditPeerFolders) String() string { return proto.CompactTextString(m) }
func (*TLFoldersEditPeerFolders) ProtoMessage()    {}
func (*TLFoldersEditPeerFolders) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{158}
}
func (m *TLFoldersEditPeerFolders) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLFoldersEditPeerFolders) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLFoldersEditPeerFolders.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLFoldersEditPeerFolders) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLFoldersEditPeerFolders.Merge(m, src)
}
func (m *TLFoldersEditPeerFolders) XXX_Size() int {
	return m.Size()
}
func (m *TLFoldersEditPeerFolders) XXX_DiscardUnknown() {
	xxx_messageInfo_TLFoldersEditPeerFolders.DiscardUnknown(m)
}

var xxx_messageInfo_TLFoldersEditPeerFolders proto.InternalMessageInfo

func (m *TLFoldersEditPeerFolders) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLFoldersEditPeerFolders) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLFoldersEditPeerFolders) GetFolderPeers() []*InputFolderPeer {
	if m != nil {
		return m.FolderPeers
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  help.acceptTermsOfService#ee72f79a id:DataJSON = Bool;
//
type TLHelpAcceptTermsOfService struct {
	Cmd                  TLCmd     `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string    `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Id                   *DataJSON `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *TLHelpAcceptTermsOfService) Reset()         { *m = TLHelpAcceptTermsOfService{} }
func (m *TLHelpAcceptTermsOfService) String() string { return proto.CompactTextString(m) }
func (*TLHelpAcceptTermsOfService) ProtoMessage()    {}
func (*TLHelpAcceptTermsOfService) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{159}
}
func (m *TLHelpAcceptTermsOfService) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpAcceptTermsOfService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpAcceptTermsOfService.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpAcceptTermsOfService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpAcceptTermsOfService.Merge(m, src)
}
func (m *TLHelpAcceptTermsOfService) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpAcceptTermsOfService) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpAcceptTermsOfService.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpAcceptTermsOfService proto.InternalMessageInfo

func (m *TLHelpAcceptTermsOfService) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLHelpAcceptTermsOfService) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLHelpAcceptTermsOfService) GetId() *DataJSON {
	if m != nil {
		return m.Id
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  help.dismissSuggestion#77fa99f suggestion:string = Bool;
//
type TLHelpDismissSuggestion struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Suggestion           string   `protobuf:"bytes,3,opt,name=suggestion,proto3" json:"suggestion,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLHelpDismissSuggestion) Reset()         { *m = TLHelpDismissSuggestion{} }
func (m *TLHelpDismissSuggestion) String() string { return proto.CompactTextString(m) }
func (*TLHelpDismissSuggestion) ProtoMessage()    {}
func (*TLHelpDismissSuggestion) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{160}
}
func (m *TLHelpDismissSuggestion) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpDismissSuggestion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpDismissSuggestion.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpDismissSuggestion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpDismissSuggestion.Merge(m, src)
}
func (m *TLHelpDismissSuggestion) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpDismissSuggestion) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpDismissSuggestion.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpDismissSuggestion proto.InternalMessageInfo

func (m *TLHelpDismissSuggestion) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLHelpDismissSuggestion) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLHelpDismissSuggestion) GetSuggestion() string {
	if m != nil {
		return m.Suggestion
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  help.editUserInfo#66b91b70 user_id:InputUser message:string entities:Vector<MessageEntity> = help.UserInfo;
//
type TLHelpEditUserInfo struct {
	Cmd                  TLCmd            `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string           `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	UserId               *InputUser       `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Message              string           `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Entities             []*MessageEntity `protobuf:"bytes,5,rep,name=entities,proto3" json:"entities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLHelpEditUserInfo) Reset()         { *m = TLHelpEditUserInfo{} }
func (m *TLHelpEditUserInfo) String() string { return proto.CompactTextString(m) }
func (*TLHelpEditUserInfo) ProtoMessage()    {}
func (*TLHelpEditUserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{161}
}
func (m *TLHelpEditUserInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpEditUserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpEditUserInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpEditUserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpEditUserInfo.Merge(m, src)
}
func (m *TLHelpEditUserInfo) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpEditUserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpEditUserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpEditUserInfo proto.InternalMessageInfo

func (m *TLHelpEditUserInfo) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLHelpEditUserInfo) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLHelpEditUserInfo) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLHelpEditUserInfo) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TLHelpEditUserInfo) GetEntities() []*MessageEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  help.getAppChangelog#9010ef6f prev_app_version:string = Updates;
//  help.getAppChangelog#5bab7fb2 device_model:string system_version:string app_version:string lang_code:string = help.AppChangelog;
//
type TLHelpGetAppChangelog struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	PrevAppVersion       string   `protobuf:"bytes,3,opt,name=prev_app_version,json=prevAppVersion,proto3" json:"prev_app_version,omitempty"`
	DeviceModel          string   `protobuf:"bytes,4,opt,name=device_model,json=deviceModel,proto3" json:"device_model,omitempty"`
	SystemVersion        string   `protobuf:"bytes,5,opt,name=system_version,json=systemVersion,proto3" json:"system_version,omitempty"`
	AppVersion           string   `protobuf:"bytes,6,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
	LangCode             string   `protobuf:"bytes,7,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLHelpGetAppChangelog) Reset()         { *m = TLHelpGetAppChangelog{} }
func (m *TLHelpGetAppChangelog) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetAppChangelog) ProtoMessage()    {}
func (*TLHelpGetAppChangelog) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{162}
}
func (m *TLHelpGetAppChangelog) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetAppChangelog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetAppChangelog.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetAppChangelog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetAppChangelog.Merge(m, src)
}
func (m *TLHelpGetAppChangelog) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetAppChangelog) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetAppChangelog.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetAppChangelog proto.InternalMessageInfo

func (m *TLHelpGetAppChangelog) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLHelpGetAppChangelog) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLHelpGetAppChangelog) GetPrevAppVersion() string {
	if m != nil {
		return m.PrevAppVersion
	}
	return ""
}

func (m *TLHelpGetAppChangelog) GetDeviceModel() string {
	if m != nil {
		return m.DeviceModel
	}
	return ""
}

func (m *TLHelpGetAppChangelog) GetSystemVersion() string {
	if m != nil {
		return m.SystemVersion
	}
	return ""
}

func (m *TLHelpGetAppChangelog) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *TLHelpGetAppChangelog) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  help.getAppConfig#98914110 = JSONValue;
//
type TLHelpGetAppConfig struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLHelpGetAppConfig) Reset()         { *m = TLHelpGetAppConfig{} }
func (m *TLHelpGetAppConfig) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetAppConfig) ProtoMessage()    {}
func (*TLHelpGetAppConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{163}
}
func (m *TLHelpGetAppConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetAppConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetAppConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetAppConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetAppConfig.Merge(m, src)
}
func (m *TLHelpGetAppConfig) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetAppConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetAppConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetAppConfig proto.InternalMessageInfo

func (m *TLHelpGetAppConfig) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLHelpGetAppConfig) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  help.getAppUpdate#ae2de196 = help.AppUpdate;
//  help.getAppUpdate#c812ac7e device_model:string system_version:string app_version:string lang_code:string = help.AppUpdate;
//  help.getAppUpdate#522d5a7d source:string = help.AppUpdate;
//
type TLHelpGetAppUpdate struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	DeviceModel          string   `protobuf:"bytes,3,opt,name=device_model,json=deviceModel,proto3" json:"device_model,omitempty"`
	SystemVersion        string   `protobuf:"bytes,4,opt,name=system_version,json=systemVersion,proto3" json:"system_version,omitempty"`
	AppVersion           string   `protobuf:"bytes,5,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
	LangCode             string   `protobuf:"bytes,6,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	Source               string   `protobuf:"bytes,7,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLHelpGetAppUpdate) Reset()         { *m = TLHelpGetAppUpdate{} }
func (m *TLHelpGetAppUpdate) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetAppUpdate) ProtoMessage()    {}
func (*TLHelpGetAppUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{164}
}
func (m *TLHelpGetAppUpdate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetAppUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetAppUpdate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetAppUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetAppUpdate.Merge(m, src)
}
func (m *TLHelpGetAppUpdate) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetAppUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetAppUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetAppUpdate proto.InternalMessageInfo

func (m *TLHelpGetAppUpdate) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLHelpGetAppUpdate) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLHelpGetAppUpdate) GetDeviceModel() string {
	if m != nil {
		return m.DeviceModel
	}
	return ""
}

func (m *TLHelpGetAppUpdate) GetSystemVersion() string {
	if m != nil {
		return m.SystemVersion
	}
	return ""
}

func (m *TLHelpGetAppUpdate) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *TLHelpGetAppUpdate) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

func (m *TLHelpGetAppUpdate) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  help.getCdnConfig#52029342 = CdnConfig;
//
type TLHelpGetCdnConfig struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLHelpGetCdnConfig) Reset()         { *m = TLHelpGetCdnConfig{} }
func (m *TLHelpGetCdnConfig) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetCdnConfig) ProtoMessage()    {}
func (*TLHelpGetCdnConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{165}
}
func (m *TLHelpGetCdnConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetCdnConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetCdnConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetCdnConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetCdnConfig.Merge(m, src)
}
func (m *TLHelpGetCdnConfig) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetCdnConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetCdnConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetCdnConfig proto.InternalMessageInfo

func (m *TLHelpGetCdnConfig) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLHelpGetCdnConfig) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  help.getConfig#c4f9186b = Config;
//
type TLHelpGetConfig struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLHelpGetConfig) Reset()         { *m = TLHelpGetConfig{} }
func (m *TLHelpGetConfig) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetConfig) ProtoMessage()    {}
func (*TLHelpGetConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{166}
}
func (m *TLHelpGetConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetConfig.Merge(m, src)
}
func (m *TLHelpGetConfig) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetConfig proto.InternalMessageInfo

func (m *TLHelpGetConfig) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLHelpGetConfig) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  help.getCountriesList#735787a8 lang_code:string hash:int = help.CountriesList;
//
type TLHelpGetCountriesList struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	LangCode             string   `protobuf:"bytes,3,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	Hash                 int32    `protobuf:"varint,4,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLHelpGetCountriesList) Reset()         { *m = TLHelpGetCountriesList{} }
func (m *TLHelpGetCountriesList) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetCountriesList) ProtoMessage()    {}
func (*TLHelpGetCountriesList) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{167}
}
func (m *TLHelpGetCountriesList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetCountriesList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetCountriesList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetCountriesList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetCountriesList.Merge(m, src)
}
func (m *TLHelpGetCountriesList) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetCountriesList) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetCountriesList.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetCountriesList proto.InternalMessageInfo

func (m *TLHelpGetCountriesList) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLHelpGetCountriesList) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLHelpGetCountriesList) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

func (m *TLHelpGetCountriesList) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  help.getDeepLinkInfo#3fedc75f path:string = help.DeepLinkInfo;
//
type TLHelpGetDeepLinkInfo struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Path                 string   `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLHelpGetDeepLinkInfo) Reset()         { *m = TLHelpGetDeepLinkInfo{} }
func (m *TLHelpGetDeepLinkInfo) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetDeepLinkInfo) ProtoMessage()    {}
func (*TLHelpGetDeepLinkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{168}
}
func (m *TLHelpGetDeepLinkInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetDeepLinkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetDeepLinkInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetDeepLinkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetDeepLinkInfo.Merge(m, src)
}
func (m *TLHelpGetDeepLinkInfo) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetDeepLinkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetDeepLinkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetDeepLinkInfo proto.InternalMessageInfo

func (m *TLHelpGetDeepLinkInfo) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLHelpGetDeepLinkInfo) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLHelpGetDeepLinkInfo) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  help.getInviteText#4d392343 = help.InviteText;
//  help.getInviteText#a4a95186 lang_code:string = help.InviteText;
//
type TLHelpGetInviteText struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	LangCode             string   `protobuf:"bytes,3,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLHelpGetInviteText) Reset()         { *m = TLHelpGetInviteText{} }
func (m *TLHelpGetInviteText) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetInviteText) ProtoMessage()    {}
func (*TLHelpGetInviteText) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{169}
}
func (m *TLHelpGetInviteText) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetInviteText) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetInviteText.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetInviteText) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetInviteText.Merge(m, src)
}
func (m *TLHelpGetInviteText) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetInviteText) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetInviteText.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetInviteText proto.InternalMessageInfo

func (m *TLHelpGetInviteText) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLHelpGetInviteText) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLHelpGetInviteText) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  help.getNearestDc#1fb33026 = NearestDc;
//
type TLHelpGetNearestDc struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLHelpGetNearestDc) Reset()         { *m = TLHelpGetNearestDc{} }
func (m *TLHelpGetNearestDc) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetNearestDc) ProtoMessage()    {}
func (*TLHelpGetNearestDc) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{170}
}
func (m *TLHelpGetNearestDc) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetNearestDc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetNearestDc.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetNearestDc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetNearestDc.Merge(m, src)
}
func (m *TLHelpGetNearestDc) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetNearestDc) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetNearestDc.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetNearestDc proto.InternalMessageInfo

func (m *TLHelpGetNearestDc) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLHelpGetNearestDc) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  help.getPassportConfig#c661ad08 hash:int = help.PassportConfig;
//
type TLHelpGetPassportConfig struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Hash                 int32    `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLHelpGetPassportConfig) Reset()         { *m = TLHelpGetPassportConfig{} }
func (m *TLHelpGetPassportConfig) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetPassportConfig) ProtoMessage()    {}
func (*TLHelpGetPassportConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{171}
}
func (m *TLHelpGetPassportConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetPassportConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetPassportConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetPassportConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetPassportConfig.Merge(m, src)
}
func (m *TLHelpGetPassportConfig) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetPassportConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetPassportConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetPassportConfig proto.InternalMessageInfo

func (m *TLHelpGetPassportConfig) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLHelpGetPassportConfig) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLHelpGetPassportConfig) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  help.getPromoData#c0977421 = help.PromoData;
//
type TLHelpGetPromoData struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLHelpGetPromoData) Reset()         { *m = TLHelpGetPromoData{} }
func (m *TLHelpGetPromoData) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetPromoData) ProtoMessage()    {}
func (*TLHelpGetPromoData) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{172}
}
func (m *TLHelpGetPromoData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetPromoData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetPromoData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetPromoData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetPromoData.Merge(m, src)
}
func (m *TLHelpGetPromoData) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetPromoData) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetPromoData.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetPromoData proto.InternalMessageInfo

func (m *TLHelpGetPromoData) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLHelpGetPromoData) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  help.getProxyData#3d7758e1 = help.ProxyData;
//
type TLHelpGetProxyData struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLHelpGetProxyData) Reset()         { *m = TLHelpGetProxyData{} }
func (m *TLHelpGetProxyData) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetProxyData) ProtoMessage()    {}
func (*TLHelpGetProxyData) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{173}
}
func (m *TLHelpGetProxyData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetProxyData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetProxyData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetProxyData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetProxyData.Merge(m, src)
}
func (m *TLHelpGetProxyData) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetProxyData) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetProxyData.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetProxyData proto.InternalMessageInfo

func (m *TLHelpGetProxyData) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLHelpGetProxyData) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  help.getRecentMeUrls#3dc0f114 referer:string = help.RecentMeUrls;
//
type TLHelpGetRecentMeUrls struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Referer              string   `protobuf:"bytes,3,opt,name=referer,proto3" json:"referer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLHelpGetRecentMeUrls) Reset()         { *m = TLHelpGetRecentMeUrls{} }
func (m *TLHelpGetRecentMeUrls) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetRecentMeUrls) ProtoMessage()    {}
func (*TLHelpGetRecentMeUrls) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{174}
}
func (m *TLHelpGetRecentMeUrls) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetRecentMeUrls) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetRecentMeUrls.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetRecentMeUrls) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetRecentMeUrls.Merge(m, src)
}
func (m *TLHelpGetRecentMeUrls) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetRecentMeUrls) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetRecentMeUrls.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetRecentMeUrls proto.InternalMessageInfo

func (m *TLHelpGetRecentMeUrls) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLHelpGetRecentMeUrls) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLHelpGetRecentMeUrls) GetReferer() string {
	if m != nil {
		return m.Referer
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  help.getSupport#9cdf08cd = help.Support;
//
type TLHelpGetSupport struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLHelpGetSupport) Reset()         { *m = TLHelpGetSupport{} }
func (m *TLHelpGetSupport) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetSupport) ProtoMessage()    {}
func (*TLHelpGetSupport) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{175}
}
func (m *TLHelpGetSupport) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetSupport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetSupport.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetSupport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetSupport.Merge(m, src)
}
func (m *TLHelpGetSupport) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetSupport) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetSupport.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetSupport proto.InternalMessageInfo

func (m *TLHelpGetSupport) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLHelpGetSupport) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  help.getSupportName#d360e72c = help.SupportName;
//
type TLHelpGetSupportName struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLHelpGetSupportName) Reset()         { *m = TLHelpGetSupportName{} }
func (m *TLHelpGetSupportName) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetSupportName) ProtoMessage()    {}
func (*TLHelpGetSupportName) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{176}
}
func (m *TLHelpGetSupportName) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetSupportName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetSupportName.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetSupportName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetSupportName.Merge(m, src)
}
func (m *TLHelpGetSupportName) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetSupportName) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetSupportName.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetSupportName proto.InternalMessageInfo

func (m *TLHelpGetSupportName) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLHelpGetSupportName) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  help.getTermsOfService#350170f3 = help.TermsOfService;
//  help.getTermsOfService#37d78f83 lang_code:string = help.TermsOfService;
//
type TLHelpGetTermsOfService struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	LangCode             string   `protobuf:"bytes,3,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLHelpGetTermsOfService) Reset()         { *m = TLHelpGetTermsOfService{} }
func (m *TLHelpGetTermsOfService) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetTermsOfService) ProtoMessage()    {}
func (*TLHelpGetTermsOfService) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{177}
}
func (m *TLHelpGetTermsOfService) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetTermsOfService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetTermsOfService.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetTermsOfService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetTermsOfService.Merge(m, src)
}
func (m *TLHelpGetTermsOfService) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetTermsOfService) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetTermsOfService.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetTermsOfService proto.InternalMessageInfo

func (m *TLHelpGetTermsOfService) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLHelpGetTermsOfService) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLHelpGetTermsOfService) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  help.getTermsOfServiceUpdate#2ca51fd1 = help.TermsOfServiceUpdate;
//
type TLHelpGetTermsOfServiceUpdate struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLHelpGetTermsOfServiceUpdate) Reset()         { *m = TLHelpGetTermsOfServiceUpdate{} }
func (m *TLHelpGetTermsOfServiceUpdate) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetTermsOfServiceUpdate) ProtoMessage()    {}
func (*TLHelpGetTermsOfServiceUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{178}
}
func (m *TLHelpGetTermsOfServiceUpdate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetTermsOfServiceUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetTermsOfServiceUpdate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetTermsOfServiceUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetTermsOfServiceUpdate.Merge(m, src)
}
func (m *TLHelpGetTermsOfServiceUpdate) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetTermsOfServiceUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetTermsOfServiceUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetTermsOfServiceUpdate proto.InternalMessageInfo

func (m *TLHelpGetTermsOfServiceUpdate) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLHelpGetTermsOfServiceUpdate) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  help.getUserInfo#38a08d3 user_id:InputUser = help.UserInfo;
//
type TLHelpGetUserInfo struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	UserId               *InputUser `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLHelpGetUserInfo) Reset()         { *m = TLHelpGetUserInfo{} }
func (m *TLHelpGetUserInfo) String() string { return proto.CompactTextString(m) }
func (*TLHelpGetUserInfo) ProtoMessage()    {}
func (*TLHelpGetUserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{179}
}
func (m *TLHelpGetUserInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpGetUserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpGetUserInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpGetUserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpGetUserInfo.Merge(m, src)
}
func (m *TLHelpGetUserInfo) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpGetUserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpGetUserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpGetUserInfo proto.InternalMessageInfo

func (m *TLHelpGetUserInfo) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLHelpGetUserInfo) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLHelpGetUserInfo) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  help.hidePromoData#1e251c95 peer:InputPeer = Bool;
//
type TLHelpHidePromoData struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLHelpHidePromoData) Reset()         { *m = TLHelpHidePromoData{} }
func (m *TLHelpHidePromoData) String() string { return proto.CompactTextString(m) }
func (*TLHelpHidePromoData) ProtoMessage()    {}
func (*TLHelpHidePromoData) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{180}
}
func (m *TLHelpHidePromoData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpHidePromoData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpHidePromoData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpHidePromoData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpHidePromoData.Merge(m, src)
}
func (m *TLHelpHidePromoData) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpHidePromoData) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpHidePromoData.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpHidePromoData proto.InternalMessageInfo

func (m *TLHelpHidePromoData) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLHelpHidePromoData) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLHelpHidePromoData) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  help.saveAppLog#6f02f748 events:Vector<InputAppEvent> = Bool;
//
type TLHelpSaveAppLog struct {
	Cmd                  TLCmd            `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string           `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Events               []*InputAppEvent `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLHelpSaveAppLog) Reset()         { *m = TLHelpSaveAppLog{} }
func (m *TLHelpSaveAppLog) String() string { return proto.CompactTextString(m) }
func (*TLHelpSaveAppLog) ProtoMessage()    {}
func (*TLHelpSaveAppLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{181}
}
func (m *TLHelpSaveAppLog) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpSaveAppLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpSaveAppLog.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpSaveAppLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpSaveAppLog.Merge(m, src)
}
func (m *TLHelpSaveAppLog) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpSaveAppLog) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpSaveAppLog.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpSaveAppLog proto.InternalMessageInfo

func (m *TLHelpSaveAppLog) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLHelpSaveAppLog) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLHelpSaveAppLog) GetEvents() []*InputAppEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  help.setBotUpdatesStatus#ec22cfcd pending_updates_count:int message:string = Bool;
//
type TLHelpSetBotUpdatesStatus struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	PendingUpdatesCount  int32    `protobuf:"varint,3,opt,name=pending_updates_count,json=pendingUpdatesCount,proto3" json:"pending_updates_count,omitempty"`
	Message              string   `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLHelpSetBotUpdatesStatus) Reset()         { *m = TLHelpSetBotUpdatesStatus{} }
func (m *TLHelpSetBotUpdatesStatus) String() string { return proto.CompactTextString(m) }
func (*TLHelpSetBotUpdatesStatus) ProtoMessage()    {}
func (*TLHelpSetBotUpdatesStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{182}
}
func (m *TLHelpSetBotUpdatesStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpSetBotUpdatesStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpSetBotUpdatesStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpSetBotUpdatesStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpSetBotUpdatesStatus.Merge(m, src)
}
func (m *TLHelpSetBotUpdatesStatus) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpSetBotUpdatesStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpSetBotUpdatesStatus.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpSetBotUpdatesStatus proto.InternalMessageInfo

func (m *TLHelpSetBotUpdatesStatus) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLHelpSetBotUpdatesStatus) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLHelpSetBotUpdatesStatus) GetPendingUpdatesCount() int32 {
	if m != nil {
		return m.PendingUpdatesCount
	}
	return 0
}

func (m *TLHelpSetBotUpdatesStatus) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  help.test#c0e202f7 = Bool;
//
type TLHelpTest struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLHelpTest) Reset()         { *m = TLHelpTest{} }
func (m *TLHelpTest) String() string { return proto.CompactTextString(m) }
func (*TLHelpTest) ProtoMessage()    {}
func (*TLHelpTest) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{183}
}
func (m *TLHelpTest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLHelpTest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLHelpTest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLHelpTest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLHelpTest.Merge(m, src)
}
func (m *TLHelpTest) XXX_Size() int {
	return m.Size()
}
func (m *TLHelpTest) XXX_DiscardUnknown() {
	xxx_messageInfo_TLHelpTest.DiscardUnknown(m)
}

var xxx_messageInfo_TLHelpTest proto.InternalMessageInfo

func (m *TLHelpTest) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLHelpTest) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  langpack.getDifference#b2e4d7d from_version:int = LangPackDifference;
//  langpack.getDifference#9d51e814 lang_code:string from_version:int = LangPackDifference;
//  langpack.getDifference#cd984aa5 lang_pack:string lang_code:string from_version:int = LangPackDifference;
//
type TLLangpackGetDifference struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	FromVersion          int32    `protobuf:"varint,3,opt,name=from_version,json=fromVersion,proto3" json:"from_version,omitempty"`
	LangCode             string   `protobuf:"bytes,4,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	LangPack             string   `protobuf:"bytes,5,opt,name=lang_pack,json=langPack,proto3" json:"lang_pack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLLangpackGetDifference) Reset()         { *m = TLLangpackGetDifference{} }
func (m *TLLangpackGetDifference) String() string { return proto.CompactTextString(m) }
func (*TLLangpackGetDifference) ProtoMessage()    {}
func (*TLLangpackGetDifference) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{184}
}
func (m *TLLangpackGetDifference) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLLangpackGetDifference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLLangpackGetDifference.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLLangpackGetDifference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLLangpackGetDifference.Merge(m, src)
}
func (m *TLLangpackGetDifference) XXX_Size() int {
	return m.Size()
}
func (m *TLLangpackGetDifference) XXX_DiscardUnknown() {
	xxx_messageInfo_TLLangpackGetDifference.DiscardUnknown(m)
}

var xxx_messageInfo_TLLangpackGetDifference proto.InternalMessageInfo

func (m *TLLangpackGetDifference) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLLangpackGetDifference) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLLangpackGetDifference) GetFromVersion() int32 {
	if m != nil {
		return m.FromVersion
	}
	return 0
}

func (m *TLLangpackGetDifference) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

func (m *TLLangpackGetDifference) GetLangPack() string {
	if m != nil {
		return m.LangPack
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  langpack.getLangPack#9ab5c58e lang_code:string = LangPackDifference;
//  langpack.getLangPack#f2f2330a lang_pack:string lang_code:string = LangPackDifference;
//
type TLLangpackGetLangPack struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	LangCode             string   `protobuf:"bytes,3,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	LangPack             string   `protobuf:"bytes,4,opt,name=lang_pack,json=langPack,proto3" json:"lang_pack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLLangpackGetLangPack) Reset()         { *m = TLLangpackGetLangPack{} }
func (m *TLLangpackGetLangPack) String() string { return proto.CompactTextString(m) }
func (*TLLangpackGetLangPack) ProtoMessage()    {}
func (*TLLangpackGetLangPack) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{185}
}
func (m *TLLangpackGetLangPack) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLLangpackGetLangPack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLLangpackGetLangPack.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLLangpackGetLangPack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLLangpackGetLangPack.Merge(m, src)
}
func (m *TLLangpackGetLangPack) XXX_Size() int {
	return m.Size()
}
func (m *TLLangpackGetLangPack) XXX_DiscardUnknown() {
	xxx_messageInfo_TLLangpackGetLangPack.DiscardUnknown(m)
}

var xxx_messageInfo_TLLangpackGetLangPack proto.InternalMessageInfo

func (m *TLLangpackGetLangPack) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLLangpackGetLangPack) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLLangpackGetLangPack) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

func (m *TLLangpackGetLangPack) GetLangPack() string {
	if m != nil {
		return m.LangPack
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  langpack.getLanguage#6a596502 lang_pack:string lang_code:string = LangPackLanguage;
//
type TLLangpackGetLanguage struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	LangPack             string   `protobuf:"bytes,3,opt,name=lang_pack,json=langPack,proto3" json:"lang_pack,omitempty"`
	LangCode             string   `protobuf:"bytes,4,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLLangpackGetLanguage) Reset()         { *m = TLLangpackGetLanguage{} }
func (m *TLLangpackGetLanguage) String() string { return proto.CompactTextString(m) }
func (*TLLangpackGetLanguage) ProtoMessage()    {}
func (*TLLangpackGetLanguage) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{186}
}
func (m *TLLangpackGetLanguage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLLangpackGetLanguage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLLangpackGetLanguage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLLangpackGetLanguage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLLangpackGetLanguage.Merge(m, src)
}
func (m *TLLangpackGetLanguage) XXX_Size() int {
	return m.Size()
}
func (m *TLLangpackGetLanguage) XXX_DiscardUnknown() {
	xxx_messageInfo_TLLangpackGetLanguage.DiscardUnknown(m)
}

var xxx_messageInfo_TLLangpackGetLanguage proto.InternalMessageInfo

func (m *TLLangpackGetLanguage) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLLangpackGetLanguage) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLLangpackGetLanguage) GetLangPack() string {
	if m != nil {
		return m.LangPack
	}
	return ""
}

func (m *TLLangpackGetLanguage) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  langpack.getLanguages#800fd57d = Vector<LangPackLanguage>;
//  langpack.getLanguages#42c6978f lang_pack:string = Vector<LangPackLanguage>;
//
type TLLangpackGetLanguages struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	LangPack             string   `protobuf:"bytes,3,opt,name=lang_pack,json=langPack,proto3" json:"lang_pack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLLangpackGetLanguages) Reset()         { *m = TLLangpackGetLanguages{} }
func (m *TLLangpackGetLanguages) String() string { return proto.CompactTextString(m) }
func (*TLLangpackGetLanguages) ProtoMessage()    {}
func (*TLLangpackGetLanguages) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{187}
}
func (m *TLLangpackGetLanguages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLLangpackGetLanguages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLLangpackGetLanguages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLLangpackGetLanguages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLLangpackGetLanguages.Merge(m, src)
}
func (m *TLLangpackGetLanguages) XXX_Size() int {
	return m.Size()
}
func (m *TLLangpackGetLanguages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLLangpackGetLanguages.DiscardUnknown(m)
}

var xxx_messageInfo_TLLangpackGetLanguages proto.InternalMessageInfo

func (m *TLLangpackGetLanguages) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLLangpackGetLanguages) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLLangpackGetLanguages) GetLangPack() string {
	if m != nil {
		return m.LangPack
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  langpack.getStrings#2e1ee318 lang_code:string keys:Vector<string> = Vector<LangPackString>;
//  langpack.getStrings#efea3803 lang_pack:string lang_code:string keys:Vector<string> = Vector<LangPackString>;
//
type TLLangpackGetStrings struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	LangCode             string   `protobuf:"bytes,3,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	Keys                 []string `protobuf:"bytes,4,rep,name=keys,proto3" json:"keys,omitempty"`
	LangPack             string   `protobuf:"bytes,5,opt,name=lang_pack,json=langPack,proto3" json:"lang_pack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLLangpackGetStrings) Reset()         { *m = TLLangpackGetStrings{} }
func (m *TLLangpackGetStrings) String() string { return proto.CompactTextString(m) }
func (*TLLangpackGetStrings) ProtoMessage()    {}
func (*TLLangpackGetStrings) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{188}
}
func (m *TLLangpackGetStrings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLLangpackGetStrings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLLangpackGetStrings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLLangpackGetStrings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLLangpackGetStrings.Merge(m, src)
}
func (m *TLLangpackGetStrings) XXX_Size() int {
	return m.Size()
}
func (m *TLLangpackGetStrings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLLangpackGetStrings.DiscardUnknown(m)
}

var xxx_messageInfo_TLLangpackGetStrings proto.InternalMessageInfo

func (m *TLLangpackGetStrings) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLLangpackGetStrings) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLLangpackGetStrings) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

func (m *TLLangpackGetStrings) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *TLLangpackGetStrings) GetLangPack() string {
	if m != nil {
		return m.LangPack
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  messages.acceptEncryption#3dbc0415 peer:InputEncryptedChat g_b:bytes key_fingerprint:long = EncryptedChat;
//
type TLMessagesAcceptEncryption struct {
	Cmd                  TLCmd               `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string              `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputEncryptedChat `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	GB                   []byte              `protobuf:"bytes,4,opt,name=g_b,json=gB,proto3" json:"g_b,omitempty"`
	KeyFingerprint       int64               `protobuf:"varint,5,opt,name=key_fingerprint,json=keyFingerprint,proto3" json:"key_fingerprint,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLMessagesAcceptEncryption) Reset()         { *m = TLMessagesAcceptEncryption{} }
func (m *TLMessagesAcceptEncryption) String() string { return proto.CompactTextString(m) }
func (*TLMessagesAcceptEncryption) ProtoMessage()    {}
func (*TLMessagesAcceptEncryption) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{189}
}
func (m *TLMessagesAcceptEncryption) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesAcceptEncryption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesAcceptEncryption.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesAcceptEncryption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesAcceptEncryption.Merge(m, src)
}
func (m *TLMessagesAcceptEncryption) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesAcceptEncryption) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesAcceptEncryption.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesAcceptEncryption proto.InternalMessageInfo

func (m *TLMessagesAcceptEncryption) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesAcceptEncryption) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesAcceptEncryption) GetPeer() *InputEncryptedChat {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesAcceptEncryption) GetGB() []byte {
	if m != nil {
		return m.GB
	}
	return nil
}

func (m *TLMessagesAcceptEncryption) GetKeyFingerprint() int64 {
	if m != nil {
		return m.KeyFingerprint
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.acceptUrlAuth#f729ea98 flags:# write_allowed:flags.0?true peer:InputPeer msg_id:int button_id:int = UrlAuthResult;
//
type TLMessagesAcceptUrlAuth struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32      `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	WriteAllowed         bool       `protobuf:"varint,4,opt,name=write_allowed,json=writeAllowed,proto3" json:"write_allowed,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,5,opt,name=peer,proto3" json:"peer,omitempty"`
	MsgId                int32      `protobuf:"varint,6,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	ButtonId             int32      `protobuf:"varint,7,opt,name=button_id,json=buttonId,proto3" json:"button_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesAcceptUrlAuth) Reset()         { *m = TLMessagesAcceptUrlAuth{} }
func (m *TLMessagesAcceptUrlAuth) String() string { return proto.CompactTextString(m) }
func (*TLMessagesAcceptUrlAuth) ProtoMessage()    {}
func (*TLMessagesAcceptUrlAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{190}
}
func (m *TLMessagesAcceptUrlAuth) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesAcceptUrlAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesAcceptUrlAuth.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesAcceptUrlAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesAcceptUrlAuth.Merge(m, src)
}
func (m *TLMessagesAcceptUrlAuth) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesAcceptUrlAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesAcceptUrlAuth.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesAcceptUrlAuth proto.InternalMessageInfo

func (m *TLMessagesAcceptUrlAuth) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesAcceptUrlAuth) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesAcceptUrlAuth) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesAcceptUrlAuth) GetWriteAllowed() bool {
	if m != nil {
		return m.WriteAllowed
	}
	return false
}

func (m *TLMessagesAcceptUrlAuth) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesAcceptUrlAuth) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *TLMessagesAcceptUrlAuth) GetButtonId() int32 {
	if m != nil {
		return m.ButtonId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.addChatUser#f9a0aa09 chat_id:int user_id:InputUser fwd_limit:int = Updates;
//
type TLMessagesAddChatUser struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	ChatId               int32      `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	UserId               *InputUser `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FwdLimit             int32      `protobuf:"varint,5,opt,name=fwd_limit,json=fwdLimit,proto3" json:"fwd_limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesAddChatUser) Reset()         { *m = TLMessagesAddChatUser{} }
func (m *TLMessagesAddChatUser) String() string { return proto.CompactTextString(m) }
func (*TLMessagesAddChatUser) ProtoMessage()    {}
func (*TLMessagesAddChatUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{191}
}
func (m *TLMessagesAddChatUser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesAddChatUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesAddChatUser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesAddChatUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesAddChatUser.Merge(m, src)
}
func (m *TLMessagesAddChatUser) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesAddChatUser) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesAddChatUser.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesAddChatUser proto.InternalMessageInfo

func (m *TLMessagesAddChatUser) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesAddChatUser) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesAddChatUser) GetChatId() int32 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

func (m *TLMessagesAddChatUser) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLMessagesAddChatUser) GetFwdLimit() int32 {
	if m != nil {
		return m.FwdLimit
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.checkChatInvite#3eadb1bb hash:string = ChatInvite;
//
type TLMessagesCheckChatInvite struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Hash                 string   `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesCheckChatInvite) Reset()         { *m = TLMessagesCheckChatInvite{} }
func (m *TLMessagesCheckChatInvite) String() string { return proto.CompactTextString(m) }
func (*TLMessagesCheckChatInvite) ProtoMessage()    {}
func (*TLMessagesCheckChatInvite) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{192}
}
func (m *TLMessagesCheckChatInvite) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesCheckChatInvite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesCheckChatInvite.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesCheckChatInvite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesCheckChatInvite.Merge(m, src)
}
func (m *TLMessagesCheckChatInvite) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesCheckChatInvite) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesCheckChatInvite.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesCheckChatInvite proto.InternalMessageInfo

func (m *TLMessagesCheckChatInvite) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesCheckChatInvite) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesCheckChatInvite) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  messages.clearAllDrafts#7e58ee9c = Bool;
//
type TLMessagesClearAllDrafts struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesClearAllDrafts) Reset()         { *m = TLMessagesClearAllDrafts{} }
func (m *TLMessagesClearAllDrafts) String() string { return proto.CompactTextString(m) }
func (*TLMessagesClearAllDrafts) ProtoMessage()    {}
func (*TLMessagesClearAllDrafts) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{193}
}
func (m *TLMessagesClearAllDrafts) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesClearAllDrafts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesClearAllDrafts.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesClearAllDrafts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesClearAllDrafts.Merge(m, src)
}
func (m *TLMessagesClearAllDrafts) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesClearAllDrafts) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesClearAllDrafts.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesClearAllDrafts proto.InternalMessageInfo

func (m *TLMessagesClearAllDrafts) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesClearAllDrafts) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  messages.clearRecentStickers#8999602d flags:# attached:flags.0?true = Bool;
//
type TLMessagesClearRecentStickers struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32    `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Attached             bool     `protobuf:"varint,4,opt,name=attached,proto3" json:"attached,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesClearRecentStickers) Reset()         { *m = TLMessagesClearRecentStickers{} }
func (m *TLMessagesClearRecentStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesClearRecentStickers) ProtoMessage()    {}
func (*TLMessagesClearRecentStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{194}
}
func (m *TLMessagesClearRecentStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesClearRecentStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesClearRecentStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesClearRecentStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesClearRecentStickers.Merge(m, src)
}
func (m *TLMessagesClearRecentStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesClearRecentStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesClearRecentStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesClearRecentStickers proto.InternalMessageInfo

func (m *TLMessagesClearRecentStickers) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesClearRecentStickers) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesClearRecentStickers) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesClearRecentStickers) GetAttached() bool {
	if m != nil {
		return m.Attached
	}
	return false
}

///////////////////////////////////////////////////////////////////////////////
//  messages.createChat#9cb126e users:Vector<InputUser> title:string = Updates;
//
type TLMessagesCreateChat struct {
	Cmd                  TLCmd        `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string       `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Users                []*InputUser `protobuf:"bytes,3,rep,name=users,proto3" json:"users,omitempty"`
	Title                string       `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TLMessagesCreateChat) Reset()         { *m = TLMessagesCreateChat{} }
func (m *TLMessagesCreateChat) String() string { return proto.CompactTextString(m) }
func (*TLMessagesCreateChat) ProtoMessage()    {}
func (*TLMessagesCreateChat) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{195}
}
func (m *TLMessagesCreateChat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesCreateChat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesCreateChat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesCreateChat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesCreateChat.Merge(m, src)
}
func (m *TLMessagesCreateChat) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesCreateChat) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesCreateChat.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesCreateChat proto.InternalMessageInfo

func (m *TLMessagesCreateChat) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesCreateChat) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesCreateChat) GetUsers() []*InputUser {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *TLMessagesCreateChat) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  messages.deleteChatUser#e0611f16 chat_id:int user_id:InputUser = Updates;
//
type TLMessagesDeleteChatUser struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	ChatId               int32      `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	UserId               *InputUser `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesDeleteChatUser) Reset()         { *m = TLMessagesDeleteChatUser{} }
func (m *TLMessagesDeleteChatUser) String() string { return proto.CompactTextString(m) }
func (*TLMessagesDeleteChatUser) ProtoMessage()    {}
func (*TLMessagesDeleteChatUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{196}
}
func (m *TLMessagesDeleteChatUser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesDeleteChatUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesDeleteChatUser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesDeleteChatUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesDeleteChatUser.Merge(m, src)
}
func (m *TLMessagesDeleteChatUser) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesDeleteChatUser) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesDeleteChatUser.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesDeleteChatUser proto.InternalMessageInfo

func (m *TLMessagesDeleteChatUser) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesDeleteChatUser) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesDeleteChatUser) GetChatId() int32 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

func (m *TLMessagesDeleteChatUser) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.deleteHistory#b7c13bd9 peer:InputPeer max_id:int = messages.AffectedHistory;
//  messages.deleteHistory#1c015b09 flags:# just_clear:flags.0?true revoke:flags.1?true peer:InputPeer max_id:int = messages.AffectedHistory;
//
type TLMessagesDeleteHistory struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	MaxId                int32      `protobuf:"varint,4,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	Flags                int32      `protobuf:"varint,5,opt,name=flags,proto3" json:"flags,omitempty"`
	JustClear            bool       `protobuf:"varint,6,opt,name=just_clear,json=justClear,proto3" json:"just_clear,omitempty"`
	Revoke               bool       `protobuf:"varint,7,opt,name=revoke,proto3" json:"revoke,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesDeleteHistory) Reset()         { *m = TLMessagesDeleteHistory{} }
func (m *TLMessagesDeleteHistory) String() string { return proto.CompactTextString(m) }
func (*TLMessagesDeleteHistory) ProtoMessage()    {}
func (*TLMessagesDeleteHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{197}
}
func (m *TLMessagesDeleteHistory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesDeleteHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesDeleteHistory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesDeleteHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesDeleteHistory.Merge(m, src)
}
func (m *TLMessagesDeleteHistory) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesDeleteHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesDeleteHistory.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesDeleteHistory proto.InternalMessageInfo

func (m *TLMessagesDeleteHistory) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesDeleteHistory) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesDeleteHistory) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesDeleteHistory) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

func (m *TLMessagesDeleteHistory) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesDeleteHistory) GetJustClear() bool {
	if m != nil {
		return m.JustClear
	}
	return false
}

func (m *TLMessagesDeleteHistory) GetRevoke() bool {
	if m != nil {
		return m.Revoke
	}
	return false
}

///////////////////////////////////////////////////////////////////////////////
//  messages.deleteMessages#e58e95d2 flags:# revoke:flags.0?true id:Vector<int> = messages.AffectedMessages;
//  messages.deleteMessages#a5f18925 id:Vector<int> = messages.AffectedMessages;
//
type TLMessagesDeleteMessages struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32    `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Revoke               bool     `protobuf:"varint,4,opt,name=revoke,proto3" json:"revoke,omitempty"`
	Id                   []int32  `protobuf:"varint,5,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesDeleteMessages) Reset()         { *m = TLMessagesDeleteMessages{} }
func (m *TLMessagesDeleteMessages) String() string { return proto.CompactTextString(m) }
func (*TLMessagesDeleteMessages) ProtoMessage()    {}
func (*TLMessagesDeleteMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{198}
}
func (m *TLMessagesDeleteMessages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesDeleteMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesDeleteMessages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesDeleteMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesDeleteMessages.Merge(m, src)
}
func (m *TLMessagesDeleteMessages) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesDeleteMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesDeleteMessages.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesDeleteMessages proto.InternalMessageInfo

func (m *TLMessagesDeleteMessages) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesDeleteMessages) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesDeleteMessages) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesDeleteMessages) GetRevoke() bool {
	if m != nil {
		return m.Revoke
	}
	return false
}

func (m *TLMessagesDeleteMessages) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.deleteScheduledMessages#59ae2b16 peer:InputPeer id:Vector<int> = Updates;
//
type TLMessagesDeleteScheduledMessages struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   []int32    `protobuf:"varint,4,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesDeleteScheduledMessages) Reset()         { *m = TLMessagesDeleteScheduledMessages{} }
func (m *TLMessagesDeleteScheduledMessages) String() string { return proto.CompactTextString(m) }
func (*TLMessagesDeleteScheduledMessages) ProtoMessage()    {}
func (*TLMessagesDeleteScheduledMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{199}
}
func (m *TLMessagesDeleteScheduledMessages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesDeleteScheduledMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesDeleteScheduledMessages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesDeleteScheduledMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesDeleteScheduledMessages.Merge(m, src)
}
func (m *TLMessagesDeleteScheduledMessages) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesDeleteScheduledMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesDeleteScheduledMessages.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesDeleteScheduledMessages proto.InternalMessageInfo

func (m *TLMessagesDeleteScheduledMessages) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesDeleteScheduledMessages) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesDeleteScheduledMessages) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesDeleteScheduledMessages) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.discardEncryption#edd923c5 chat_id:int = Bool;
//
type TLMessagesDiscardEncryption struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	ChatId               int32    `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesDiscardEncryption) Reset()         { *m = TLMessagesDiscardEncryption{} }
func (m *TLMessagesDiscardEncryption) String() string { return proto.CompactTextString(m) }
func (*TLMessagesDiscardEncryption) ProtoMessage()    {}
func (*TLMessagesDiscardEncryption) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{200}
}
func (m *TLMessagesDiscardEncryption) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesDiscardEncryption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesDiscardEncryption.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesDiscardEncryption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesDiscardEncryption.Merge(m, src)
}
func (m *TLMessagesDiscardEncryption) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesDiscardEncryption) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesDiscardEncryption.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesDiscardEncryption proto.InternalMessageInfo

func (m *TLMessagesDiscardEncryption) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesDiscardEncryption) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesDiscardEncryption) GetChatId() int32 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.editChatAbout#def60797 peer:InputPeer about:string = Bool;
//
type TLMessagesEditChatAbout struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	About                string     `protobuf:"bytes,4,opt,name=about,proto3" json:"about,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesEditChatAbout) Reset()         { *m = TLMessagesEditChatAbout{} }
func (m *TLMessagesEditChatAbout) String() string { return proto.CompactTextString(m) }
func (*TLMessagesEditChatAbout) ProtoMessage()    {}
func (*TLMessagesEditChatAbout) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{201}
}
func (m *TLMessagesEditChatAbout) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesEditChatAbout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesEditChatAbout.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesEditChatAbout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesEditChatAbout.Merge(m, src)
}
func (m *TLMessagesEditChatAbout) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesEditChatAbout) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesEditChatAbout.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesEditChatAbout proto.InternalMessageInfo

func (m *TLMessagesEditChatAbout) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesEditChatAbout) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesEditChatAbout) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesEditChatAbout) GetAbout() string {
	if m != nil {
		return m.About
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  messages.editChatAdmin#a9e69f2e chat_id:int user_id:InputUser is_admin:Bool = Bool;
//
type TLMessagesEditChatAdmin struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	ChatId               int32      `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	UserId               *InputUser `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsAdmin              *Bool      `protobuf:"bytes,5,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesEditChatAdmin) Reset()         { *m = TLMessagesEditChatAdmin{} }
func (m *TLMessagesEditChatAdmin) String() string { return proto.CompactTextString(m) }
func (*TLMessagesEditChatAdmin) ProtoMessage()    {}
func (*TLMessagesEditChatAdmin) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{202}
}
func (m *TLMessagesEditChatAdmin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesEditChatAdmin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesEditChatAdmin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesEditChatAdmin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesEditChatAdmin.Merge(m, src)
}
func (m *TLMessagesEditChatAdmin) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesEditChatAdmin) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesEditChatAdmin.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesEditChatAdmin proto.InternalMessageInfo

func (m *TLMessagesEditChatAdmin) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesEditChatAdmin) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesEditChatAdmin) GetChatId() int32 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

func (m *TLMessagesEditChatAdmin) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLMessagesEditChatAdmin) GetIsAdmin() *Bool {
	if m != nil {
		return m.IsAdmin
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.editChatDefaultBannedRights#a5866b41 peer:InputPeer banned_rights:ChatBannedRights = Updates;
//
type TLMessagesEditChatDefaultBannedRights struct {
	Cmd                  TLCmd             `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string            `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer        `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	BannedRights         *ChatBannedRights `protobuf:"bytes,4,opt,name=banned_rights,json=bannedRights,proto3" json:"banned_rights,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLMessagesEditChatDefaultBannedRights) Reset()         { *m = TLMessagesEditChatDefaultBannedRights{} }
func (m *TLMessagesEditChatDefaultBannedRights) String() string { return proto.CompactTextString(m) }
func (*TLMessagesEditChatDefaultBannedRights) ProtoMessage()    {}
func (*TLMessagesEditChatDefaultBannedRights) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{203}
}
func (m *TLMessagesEditChatDefaultBannedRights) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesEditChatDefaultBannedRights) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesEditChatDefaultBannedRights.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesEditChatDefaultBannedRights) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesEditChatDefaultBannedRights.Merge(m, src)
}
func (m *TLMessagesEditChatDefaultBannedRights) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesEditChatDefaultBannedRights) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesEditChatDefaultBannedRights.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesEditChatDefaultBannedRights proto.InternalMessageInfo

func (m *TLMessagesEditChatDefaultBannedRights) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesEditChatDefaultBannedRights) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesEditChatDefaultBannedRights) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesEditChatDefaultBannedRights) GetBannedRights() *ChatBannedRights {
	if m != nil {
		return m.BannedRights
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.editChatPhoto#ca4c79d8 chat_id:int photo:InputChatPhoto = Updates;
//
type TLMessagesEditChatPhoto struct {
	Cmd                  TLCmd           `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string          `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	ChatId               int32           `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	Photo                *InputChatPhoto `protobuf:"bytes,4,opt,name=photo,proto3" json:"photo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLMessagesEditChatPhoto) Reset()         { *m = TLMessagesEditChatPhoto{} }
func (m *TLMessagesEditChatPhoto) String() string { return proto.CompactTextString(m) }
func (*TLMessagesEditChatPhoto) ProtoMessage()    {}
func (*TLMessagesEditChatPhoto) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{204}
}
func (m *TLMessagesEditChatPhoto) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesEditChatPhoto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesEditChatPhoto.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesEditChatPhoto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesEditChatPhoto.Merge(m, src)
}
func (m *TLMessagesEditChatPhoto) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesEditChatPhoto) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesEditChatPhoto.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesEditChatPhoto proto.InternalMessageInfo

func (m *TLMessagesEditChatPhoto) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesEditChatPhoto) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesEditChatPhoto) GetChatId() int32 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

func (m *TLMessagesEditChatPhoto) GetPhoto() *InputChatPhoto {
	if m != nil {
		return m.Photo
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.editChatTitle#dc452855 chat_id:int title:string = Updates;
//
type TLMessagesEditChatTitle struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	ChatId               int32    `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	Title                string   `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesEditChatTitle) Reset()         { *m = TLMessagesEditChatTitle{} }
func (m *TLMessagesEditChatTitle) String() string { return proto.CompactTextString(m) }
func (*TLMessagesEditChatTitle) ProtoMessage()    {}
func (*TLMessagesEditChatTitle) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{205}
}
func (m *TLMessagesEditChatTitle) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesEditChatTitle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesEditChatTitle.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesEditChatTitle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesEditChatTitle.Merge(m, src)
}
func (m *TLMessagesEditChatTitle) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesEditChatTitle) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesEditChatTitle.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesEditChatTitle proto.InternalMessageInfo

func (m *TLMessagesEditChatTitle) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesEditChatTitle) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesEditChatTitle) GetChatId() int32 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

func (m *TLMessagesEditChatTitle) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  messages.editInlineBotMessage#130c2c85 flags:# no_webpage:flags.1?true id:InputBotInlineMessageID message:flags.11?string reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> = Bool;
//  messages.editInlineBotMessage#adc3e828 flags:# no_webpage:flags.1?true stop_geo_live:flags.12?true id:InputBotInlineMessageID message:flags.11?string media:flags.14?InputMedia reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> geo_point:flags.13?InputGeoPoint = Bool;
//  messages.editInlineBotMessage#83557dba flags:# no_webpage:flags.1?true id:InputBotInlineMessageID message:flags.11?string media:flags.14?InputMedia reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> = Bool;
//
type TLMessagesEditInlineBotMessage struct {
	Cmd                  TLCmd                    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string                   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32                    `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	NoWebpage            bool                     `protobuf:"varint,4,opt,name=no_webpage,json=noWebpage,proto3" json:"no_webpage,omitempty"`
	Id                   *InputBotInlineMessageID `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	Message              string                   `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	ReplyMarkup          *ReplyMarkup             `protobuf:"bytes,7,opt,name=reply_markup,json=replyMarkup,proto3" json:"reply_markup,omitempty"`
	Entities             []*MessageEntity         `protobuf:"bytes,8,rep,name=entities,proto3" json:"entities,omitempty"`
	StopGeoLive          bool                     `protobuf:"varint,9,opt,name=stop_geo_live,json=stopGeoLive,proto3" json:"stop_geo_live,omitempty"`
	Media                *InputMedia              `protobuf:"bytes,10,opt,name=media,proto3" json:"media,omitempty"`
	GeoPoint             *InputGeoPoint           `protobuf:"bytes,11,opt,name=geo_point,json=geoPoint,proto3" json:"geo_point,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *TLMessagesEditInlineBotMessage) Reset()         { *m = TLMessagesEditInlineBotMessage{} }
func (m *TLMessagesEditInlineBotMessage) String() string { return proto.CompactTextString(m) }
func (*TLMessagesEditInlineBotMessage) ProtoMessage()    {}
func (*TLMessagesEditInlineBotMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{206}
}
func (m *TLMessagesEditInlineBotMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesEditInlineBotMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesEditInlineBotMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesEditInlineBotMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesEditInlineBotMessage.Merge(m, src)
}
func (m *TLMessagesEditInlineBotMessage) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesEditInlineBotMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesEditInlineBotMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesEditInlineBotMessage proto.InternalMessageInfo

func (m *TLMessagesEditInlineBotMessage) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesEditInlineBotMessage) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesEditInlineBotMessage) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesEditInlineBotMessage) GetNoWebpage() bool {
	if m != nil {
		return m.NoWebpage
	}
	return false
}

func (m *TLMessagesEditInlineBotMessage) GetId() *InputBotInlineMessageID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLMessagesEditInlineBotMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TLMessagesEditInlineBotMessage) GetReplyMarkup() *ReplyMarkup {
	if m != nil {
		return m.ReplyMarkup
	}
	return nil
}

func (m *TLMessagesEditInlineBotMessage) GetEntities() []*MessageEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

func (m *TLMessagesEditInlineBotMessage) GetStopGeoLive() bool {
	if m != nil {
		return m.StopGeoLive
	}
	return false
}

func (m *TLMessagesEditInlineBotMessage) GetMedia() *InputMedia {
	if m != nil {
		return m.Media
	}
	return nil
}

func (m *TLMessagesEditInlineBotMessage) GetGeoPoint() *InputGeoPoint {
	if m != nil {
		return m.GeoPoint
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.editMessage#ce91e4ca flags:# no_webpage:flags.1?true peer:InputPeer id:int message:flags.11?string reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> = Updates;
//  messages.editMessage#c000e4c8 flags:# no_webpage:flags.1?true stop_geo_live:flags.12?true peer:InputPeer id:int message:flags.11?string media:flags.14?InputMedia reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> geo_point:flags.13?InputGeoPoint = Updates;
//  messages.editMessage#d116f31e flags:# no_webpage:flags.1?true peer:InputPeer id:int message:flags.11?string media:flags.14?InputMedia reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> = Updates;
//  messages.editMessage#48f71778 flags:# no_webpage:flags.1?true peer:InputPeer id:int message:flags.11?string media:flags.14?InputMedia reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> schedule_date:flags.15?int = Updates;
//
type TLMessagesEditMessage struct {
	Cmd                  TLCmd            `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string           `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32            `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	NoWebpage            bool             `protobuf:"varint,4,opt,name=no_webpage,json=noWebpage,proto3" json:"no_webpage,omitempty"`
	Peer                 *InputPeer       `protobuf:"bytes,5,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   int32            `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`
	Message              string           `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
	ReplyMarkup          *ReplyMarkup     `protobuf:"bytes,8,opt,name=reply_markup,json=replyMarkup,proto3" json:"reply_markup,omitempty"`
	Entities             []*MessageEntity `protobuf:"bytes,9,rep,name=entities,proto3" json:"entities,omitempty"`
	StopGeoLive          bool             `protobuf:"varint,10,opt,name=stop_geo_live,json=stopGeoLive,proto3" json:"stop_geo_live,omitempty"`
	Media                *InputMedia      `protobuf:"bytes,11,opt,name=media,proto3" json:"media,omitempty"`
	GeoPoint             *InputGeoPoint   `protobuf:"bytes,12,opt,name=geo_point,json=geoPoint,proto3" json:"geo_point,omitempty"`
	ScheduleDate         int32            `protobuf:"varint,13,opt,name=schedule_date,json=scheduleDate,proto3" json:"schedule_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLMessagesEditMessage) Reset()         { *m = TLMessagesEditMessage{} }
func (m *TLMessagesEditMessage) String() string { return proto.CompactTextString(m) }
func (*TLMessagesEditMessage) ProtoMessage()    {}
func (*TLMessagesEditMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{207}
}
func (m *TLMessagesEditMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesEditMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesEditMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesEditMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesEditMessage.Merge(m, src)
}
func (m *TLMessagesEditMessage) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesEditMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesEditMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesEditMessage proto.InternalMessageInfo

func (m *TLMessagesEditMessage) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesEditMessage) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesEditMessage) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesEditMessage) GetNoWebpage() bool {
	if m != nil {
		return m.NoWebpage
	}
	return false
}

func (m *TLMessagesEditMessage) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesEditMessage) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TLMessagesEditMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TLMessagesEditMessage) GetReplyMarkup() *ReplyMarkup {
	if m != nil {
		return m.ReplyMarkup
	}
	return nil
}

func (m *TLMessagesEditMessage) GetEntities() []*MessageEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

func (m *TLMessagesEditMessage) GetStopGeoLive() bool {
	if m != nil {
		return m.StopGeoLive
	}
	return false
}

func (m *TLMessagesEditMessage) GetMedia() *InputMedia {
	if m != nil {
		return m.Media
	}
	return nil
}

func (m *TLMessagesEditMessage) GetGeoPoint() *InputGeoPoint {
	if m != nil {
		return m.GeoPoint
	}
	return nil
}

func (m *TLMessagesEditMessage) GetScheduleDate() int32 {
	if m != nil {
		return m.ScheduleDate
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.exportChatInvite#7d885289 chat_id:int = ExportedChatInvite;
//  messages.exportChatInvite#df7534c peer:InputPeer = ExportedChatInvite;
//
type TLMessagesExportChatInvite struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	ChatId               int32      `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesExportChatInvite) Reset()         { *m = TLMessagesExportChatInvite{} }
func (m *TLMessagesExportChatInvite) String() string { return proto.CompactTextString(m) }
func (*TLMessagesExportChatInvite) ProtoMessage()    {}
func (*TLMessagesExportChatInvite) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{208}
}
func (m *TLMessagesExportChatInvite) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesExportChatInvite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesExportChatInvite.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesExportChatInvite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesExportChatInvite.Merge(m, src)
}
func (m *TLMessagesExportChatInvite) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesExportChatInvite) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesExportChatInvite.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesExportChatInvite proto.InternalMessageInfo

func (m *TLMessagesExportChatInvite) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesExportChatInvite) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesExportChatInvite) GetChatId() int32 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

func (m *TLMessagesExportChatInvite) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.faveSticker#b9ffc55b id:InputDocument unfave:Bool = Bool;
//
type TLMessagesFaveSticker struct {
	Cmd                  TLCmd          `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string         `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Id                   *InputDocument `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Unfave               *Bool          `protobuf:"bytes,4,opt,name=unfave,proto3" json:"unfave,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TLMessagesFaveSticker) Reset()         { *m = TLMessagesFaveSticker{} }
func (m *TLMessagesFaveSticker) String() string { return proto.CompactTextString(m) }
func (*TLMessagesFaveSticker) ProtoMessage()    {}
func (*TLMessagesFaveSticker) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{209}
}
func (m *TLMessagesFaveSticker) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesFaveSticker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesFaveSticker.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesFaveSticker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesFaveSticker.Merge(m, src)
}
func (m *TLMessagesFaveSticker) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesFaveSticker) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesFaveSticker.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesFaveSticker proto.InternalMessageInfo

func (m *TLMessagesFaveSticker) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesFaveSticker) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesFaveSticker) GetId() *InputDocument {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLMessagesFaveSticker) GetUnfave() *Bool {
	if m != nil {
		return m.Unfave
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.forwardMessage#33963bf9 peer:InputPeer id:int random_id:long = Updates;
//
type TLMessagesForwardMessage struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   int32      `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	RandomId             int64      `protobuf:"varint,5,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesForwardMessage) Reset()         { *m = TLMessagesForwardMessage{} }
func (m *TLMessagesForwardMessage) String() string { return proto.CompactTextString(m) }
func (*TLMessagesForwardMessage) ProtoMessage()    {}
func (*TLMessagesForwardMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{210}
}
func (m *TLMessagesForwardMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesForwardMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesForwardMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesForwardMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesForwardMessage.Merge(m, src)
}
func (m *TLMessagesForwardMessage) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesForwardMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesForwardMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesForwardMessage proto.InternalMessageInfo

func (m *TLMessagesForwardMessage) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesForwardMessage) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesForwardMessage) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesForwardMessage) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TLMessagesForwardMessage) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.forwardMessages#708e0195 flags:# silent:flags.5?true background:flags.6?true with_my_score:flags.8?true from_peer:InputPeer id:Vector<int> random_id:Vector<long> to_peer:InputPeer = Updates;
//  messages.forwardMessages#d9fee60e flags:# silent:flags.5?true background:flags.6?true with_my_score:flags.8?true from_peer:InputPeer id:Vector<int> random_id:Vector<long> to_peer:InputPeer schedule_date:flags.10?int = Updates;
//
type TLMessagesForwardMessages struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32      `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Silent               bool       `protobuf:"varint,4,opt,name=silent,proto3" json:"silent,omitempty"`
	Background           bool       `protobuf:"varint,5,opt,name=background,proto3" json:"background,omitempty"`
	WithMyScore          bool       `protobuf:"varint,6,opt,name=with_my_score,json=withMyScore,proto3" json:"with_my_score,omitempty"`
	FromPeer             *InputPeer `protobuf:"bytes,7,opt,name=from_peer,json=fromPeer,proto3" json:"from_peer,omitempty"`
	Id                   []int32    `protobuf:"varint,8,rep,packed,name=id,proto3" json:"id,omitempty"`
	RandomId             []int64    `protobuf:"varint,9,rep,packed,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	ToPeer               *InputPeer `protobuf:"bytes,10,opt,name=to_peer,json=toPeer,proto3" json:"to_peer,omitempty"`
	ScheduleDate         int32      `protobuf:"varint,11,opt,name=schedule_date,json=scheduleDate,proto3" json:"schedule_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesForwardMessages) Reset()         { *m = TLMessagesForwardMessages{} }
func (m *TLMessagesForwardMessages) String() string { return proto.CompactTextString(m) }
func (*TLMessagesForwardMessages) ProtoMessage()    {}
func (*TLMessagesForwardMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{211}
}
func (m *TLMessagesForwardMessages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesForwardMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesForwardMessages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesForwardMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesForwardMessages.Merge(m, src)
}
func (m *TLMessagesForwardMessages) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesForwardMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesForwardMessages.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesForwardMessages proto.InternalMessageInfo

func (m *TLMessagesForwardMessages) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesForwardMessages) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesForwardMessages) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesForwardMessages) GetSilent() bool {
	if m != nil {
		return m.Silent
	}
	return false
}

func (m *TLMessagesForwardMessages) GetBackground() bool {
	if m != nil {
		return m.Background
	}
	return false
}

func (m *TLMessagesForwardMessages) GetWithMyScore() bool {
	if m != nil {
		return m.WithMyScore
	}
	return false
}

func (m *TLMessagesForwardMessages) GetFromPeer() *InputPeer {
	if m != nil {
		return m.FromPeer
	}
	return nil
}

func (m *TLMessagesForwardMessages) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLMessagesForwardMessages) GetRandomId() []int64 {
	if m != nil {
		return m.RandomId
	}
	return nil
}

func (m *TLMessagesForwardMessages) GetToPeer() *InputPeer {
	if m != nil {
		return m.ToPeer
	}
	return nil
}

func (m *TLMessagesForwardMessages) GetScheduleDate() int32 {
	if m != nil {
		return m.ScheduleDate
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getAllChats#eba80ff0 except_ids:Vector<int> = messages.Chats;
//
type TLMessagesGetAllChats struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	ExceptIds            []int32  `protobuf:"varint,3,rep,packed,name=except_ids,json=exceptIds,proto3" json:"except_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesGetAllChats) Reset()         { *m = TLMessagesGetAllChats{} }
func (m *TLMessagesGetAllChats) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetAllChats) ProtoMessage()    {}
func (*TLMessagesGetAllChats) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{212}
}
func (m *TLMessagesGetAllChats) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetAllChats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetAllChats.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetAllChats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetAllChats.Merge(m, src)
}
func (m *TLMessagesGetAllChats) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetAllChats) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetAllChats.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetAllChats proto.InternalMessageInfo

func (m *TLMessagesGetAllChats) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetAllChats) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetAllChats) GetExceptIds() []int32 {
	if m != nil {
		return m.ExceptIds
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getAllDrafts#6a3f8d65 = Updates;
//
type TLMessagesGetAllDrafts struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesGetAllDrafts) Reset()         { *m = TLMessagesGetAllDrafts{} }
func (m *TLMessagesGetAllDrafts) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetAllDrafts) ProtoMessage()    {}
func (*TLMessagesGetAllDrafts) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{213}
}
func (m *TLMessagesGetAllDrafts) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetAllDrafts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetAllDrafts.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetAllDrafts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetAllDrafts.Merge(m, src)
}
func (m *TLMessagesGetAllDrafts) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetAllDrafts) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetAllDrafts.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetAllDrafts proto.InternalMessageInfo

func (m *TLMessagesGetAllDrafts) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetAllDrafts) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getAllStickers#1c9618b1 hash:int = messages.AllStickers;
//
type TLMessagesGetAllStickers struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Hash                 int32    `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesGetAllStickers) Reset()         { *m = TLMessagesGetAllStickers{} }
func (m *TLMessagesGetAllStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetAllStickers) ProtoMessage()    {}
func (*TLMessagesGetAllStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{214}
}
func (m *TLMessagesGetAllStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetAllStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetAllStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetAllStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetAllStickers.Merge(m, src)
}
func (m *TLMessagesGetAllStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetAllStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetAllStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetAllStickers proto.InternalMessageInfo

func (m *TLMessagesGetAllStickers) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetAllStickers) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetAllStickers) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getArchivedStickers#57f17692 flags:# masks:flags.0?true offset_id:long limit:int = messages.ArchivedStickers;
//
type TLMessagesGetArchivedStickers struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32    `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Masks                bool     `protobuf:"varint,4,opt,name=masks,proto3" json:"masks,omitempty"`
	OffsetId             int64    `protobuf:"varint,5,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	Limit                int32    `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesGetArchivedStickers) Reset()         { *m = TLMessagesGetArchivedStickers{} }
func (m *TLMessagesGetArchivedStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetArchivedStickers) ProtoMessage()    {}
func (*TLMessagesGetArchivedStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{215}
}
func (m *TLMessagesGetArchivedStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetArchivedStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetArchivedStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetArchivedStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetArchivedStickers.Merge(m, src)
}
func (m *TLMessagesGetArchivedStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetArchivedStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetArchivedStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetArchivedStickers proto.InternalMessageInfo

func (m *TLMessagesGetArchivedStickers) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetArchivedStickers) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetArchivedStickers) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesGetArchivedStickers) GetMasks() bool {
	if m != nil {
		return m.Masks
	}
	return false
}

func (m *TLMessagesGetArchivedStickers) GetOffsetId() int64 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLMessagesGetArchivedStickers) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getAttachedStickers#cc5b67cc media:InputStickeredMedia = Vector<StickerSetCovered>;
//
type TLMessagesGetAttachedStickers struct {
	Cmd                  TLCmd                `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string               `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Media                *InputStickeredMedia `protobuf:"bytes,3,opt,name=media,proto3" json:"media,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TLMessagesGetAttachedStickers) Reset()         { *m = TLMessagesGetAttachedStickers{} }
func (m *TLMessagesGetAttachedStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetAttachedStickers) ProtoMessage()    {}
func (*TLMessagesGetAttachedStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{216}
}
func (m *TLMessagesGetAttachedStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetAttachedStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetAttachedStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetAttachedStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetAttachedStickers.Merge(m, src)
}
func (m *TLMessagesGetAttachedStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetAttachedStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetAttachedStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetAttachedStickers proto.InternalMessageInfo

func (m *TLMessagesGetAttachedStickers) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetAttachedStickers) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetAttachedStickers) GetMedia() *InputStickeredMedia {
	if m != nil {
		return m.Media
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getBotCallbackAnswer#810a9fec flags:# game:flags.1?true peer:InputPeer msg_id:int data:flags.0?bytes = messages.BotCallbackAnswer;
//  messages.getBotCallbackAnswer#a6e94f04 peer:InputPeer msg_id:int data:bytes = messages.BotCallbackAnswer;
//  messages.getBotCallbackAnswer#9342ca07 flags:# game:flags.1?true peer:InputPeer msg_id:int data:flags.0?bytes password:flags.2?InputCheckPasswordSRP = messages.BotCallbackAnswer;
//
type TLMessagesGetBotCallbackAnswer struct {
	Cmd                  TLCmd                  `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string                 `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32                  `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Game                 bool                   `protobuf:"varint,4,opt,name=game,proto3" json:"game,omitempty"`
	Peer                 *InputPeer             `protobuf:"bytes,5,opt,name=peer,proto3" json:"peer,omitempty"`
	MsgId                int32                  `protobuf:"varint,6,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	Data                 []byte                 `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty"`
	Password             *InputCheckPasswordSRP `protobuf:"bytes,8,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TLMessagesGetBotCallbackAnswer) Reset()         { *m = TLMessagesGetBotCallbackAnswer{} }
func (m *TLMessagesGetBotCallbackAnswer) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetBotCallbackAnswer) ProtoMessage()    {}
func (*TLMessagesGetBotCallbackAnswer) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{217}
}
func (m *TLMessagesGetBotCallbackAnswer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetBotCallbackAnswer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetBotCallbackAnswer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetBotCallbackAnswer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetBotCallbackAnswer.Merge(m, src)
}
func (m *TLMessagesGetBotCallbackAnswer) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetBotCallbackAnswer) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetBotCallbackAnswer.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetBotCallbackAnswer proto.InternalMessageInfo

func (m *TLMessagesGetBotCallbackAnswer) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetBotCallbackAnswer) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetBotCallbackAnswer) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesGetBotCallbackAnswer) GetGame() bool {
	if m != nil {
		return m.Game
	}
	return false
}

func (m *TLMessagesGetBotCallbackAnswer) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetBotCallbackAnswer) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *TLMessagesGetBotCallbackAnswer) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TLMessagesGetBotCallbackAnswer) GetPassword() *InputCheckPasswordSRP {
	if m != nil {
		return m.Password
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getChats#3c6aa187 id:Vector<int> = messages.Chats;
//
type TLMessagesGetChats struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Id                   []int32  `protobuf:"varint,3,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesGetChats) Reset()         { *m = TLMessagesGetChats{} }
func (m *TLMessagesGetChats) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetChats) ProtoMessage()    {}
func (*TLMessagesGetChats) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{218}
}
func (m *TLMessagesGetChats) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetChats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetChats.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetChats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetChats.Merge(m, src)
}
func (m *TLMessagesGetChats) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetChats) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetChats.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetChats proto.InternalMessageInfo

func (m *TLMessagesGetChats) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetChats) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetChats) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getCommonChats#d0a48c4 user_id:InputUser max_id:int limit:int = messages.Chats;
//
type TLMessagesGetCommonChats struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	UserId               *InputUser `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	MaxId                int32      `protobuf:"varint,4,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	Limit                int32      `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesGetCommonChats) Reset()         { *m = TLMessagesGetCommonChats{} }
func (m *TLMessagesGetCommonChats) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetCommonChats) ProtoMessage()    {}
func (*TLMessagesGetCommonChats) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{219}
}
func (m *TLMessagesGetCommonChats) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetCommonChats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetCommonChats.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetCommonChats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetCommonChats.Merge(m, src)
}
func (m *TLMessagesGetCommonChats) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetCommonChats) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetCommonChats.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetCommonChats proto.InternalMessageInfo

func (m *TLMessagesGetCommonChats) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetCommonChats) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetCommonChats) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLMessagesGetCommonChats) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

func (m *TLMessagesGetCommonChats) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getDhConfig#26cf8950 version:int random_length:int = messages.DhConfig;
//
type TLMessagesGetDhConfig struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Version              int32    `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	RandomLength         int32    `protobuf:"varint,4,opt,name=random_length,json=randomLength,proto3" json:"random_length,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesGetDhConfig) Reset()         { *m = TLMessagesGetDhConfig{} }
func (m *TLMessagesGetDhConfig) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetDhConfig) ProtoMessage()    {}
func (*TLMessagesGetDhConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{220}
}
func (m *TLMessagesGetDhConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetDhConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetDhConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetDhConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetDhConfig.Merge(m, src)
}
func (m *TLMessagesGetDhConfig) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetDhConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetDhConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetDhConfig proto.InternalMessageInfo

func (m *TLMessagesGetDhConfig) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetDhConfig) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetDhConfig) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *TLMessagesGetDhConfig) GetRandomLength() int32 {
	if m != nil {
		return m.RandomLength
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getDialogFilters#f19ed96d = Vector<DialogFilter>;
//
type TLMessagesGetDialogFilters struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesGetDialogFilters) Reset()         { *m = TLMessagesGetDialogFilters{} }
func (m *TLMessagesGetDialogFilters) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetDialogFilters) ProtoMessage()    {}
func (*TLMessagesGetDialogFilters) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{221}
}
func (m *TLMessagesGetDialogFilters) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetDialogFilters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetDialogFilters.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetDialogFilters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetDialogFilters.Merge(m, src)
}
func (m *TLMessagesGetDialogFilters) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetDialogFilters) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetDialogFilters.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetDialogFilters proto.InternalMessageInfo

func (m *TLMessagesGetDialogFilters) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetDialogFilters) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getDialogUnreadMarks#22e24e22 = Vector<DialogPeer>;
//
type TLMessagesGetDialogUnreadMarks struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesGetDialogUnreadMarks) Reset()         { *m = TLMessagesGetDialogUnreadMarks{} }
func (m *TLMessagesGetDialogUnreadMarks) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetDialogUnreadMarks) ProtoMessage()    {}
func (*TLMessagesGetDialogUnreadMarks) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{222}
}
func (m *TLMessagesGetDialogUnreadMarks) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetDialogUnreadMarks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetDialogUnreadMarks.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetDialogUnreadMarks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetDialogUnreadMarks.Merge(m, src)
}
func (m *TLMessagesGetDialogUnreadMarks) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetDialogUnreadMarks) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetDialogUnreadMarks.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetDialogUnreadMarks proto.InternalMessageInfo

func (m *TLMessagesGetDialogUnreadMarks) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetDialogUnreadMarks) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getDialogs#191ba9c5 flags:# exclude_pinned:flags.0?true offset_date:int offset_id:int offset_peer:InputPeer limit:int = messages.Dialogs;
//  messages.getDialogs#6b47f94d offset_date:int offset_id:int offset_peer:InputPeer limit:int = messages.Dialogs;
//  messages.getDialogs#b098aee6 flags:# exclude_pinned:flags.0?true offset_date:int offset_id:int offset_peer:InputPeer limit:int hash:int = messages.Dialogs;
//  messages.getDialogs#a0ee3b73 flags:# exclude_pinned:flags.0?true folder_id:flags.1?int offset_date:int offset_id:int offset_peer:InputPeer limit:int hash:int = messages.Dialogs;
//
type TLMessagesGetDialogs struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32      `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	ExcludePinned        bool       `protobuf:"varint,4,opt,name=exclude_pinned,json=excludePinned,proto3" json:"exclude_pinned,omitempty"`
	OffsetDate           int32      `protobuf:"varint,5,opt,name=offset_date,json=offsetDate,proto3" json:"offset_date,omitempty"`
	OffsetId             int32      `protobuf:"varint,6,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	OffsetPeer           *InputPeer `protobuf:"bytes,7,opt,name=offset_peer,json=offsetPeer,proto3" json:"offset_peer,omitempty"`
	Limit                int32      `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"`
	Hash                 int32      `protobuf:"varint,9,opt,name=hash,proto3" json:"hash,omitempty"`
	FolderId             int32      `protobuf:"varint,10,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesGetDialogs) Reset()         { *m = TLMessagesGetDialogs{} }
func (m *TLMessagesGetDialogs) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetDialogs) ProtoMessage()    {}
func (*TLMessagesGetDialogs) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{223}
}
func (m *TLMessagesGetDialogs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetDialogs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetDialogs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetDialogs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetDialogs.Merge(m, src)
}
func (m *TLMessagesGetDialogs) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetDialogs) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetDialogs.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetDialogs proto.InternalMessageInfo

func (m *TLMessagesGetDialogs) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetDialogs) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetDialogs) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesGetDialogs) GetExcludePinned() bool {
	if m != nil {
		return m.ExcludePinned
	}
	return false
}

func (m *TLMessagesGetDialogs) GetOffsetDate() int32 {
	if m != nil {
		return m.OffsetDate
	}
	return 0
}

func (m *TLMessagesGetDialogs) GetOffsetId() int32 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLMessagesGetDialogs) GetOffsetPeer() *InputPeer {
	if m != nil {
		return m.OffsetPeer
	}
	return nil
}

func (m *TLMessagesGetDialogs) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLMessagesGetDialogs) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

func (m *TLMessagesGetDialogs) GetFolderId() int32 {
	if m != nil {
		return m.FolderId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getDiscussionMessage#446972fd peer:InputPeer msg_id:int = messages.DiscussionMessage;
//
type TLMessagesGetDiscussionMessage struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	MsgId                int32      `protobuf:"varint,4,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesGetDiscussionMessage) Reset()         { *m = TLMessagesGetDiscussionMessage{} }
func (m *TLMessagesGetDiscussionMessage) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetDiscussionMessage) ProtoMessage()    {}
func (*TLMessagesGetDiscussionMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{224}
}
func (m *TLMessagesGetDiscussionMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetDiscussionMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetDiscussionMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetDiscussionMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetDiscussionMessage.Merge(m, src)
}
func (m *TLMessagesGetDiscussionMessage) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetDiscussionMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetDiscussionMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetDiscussionMessage proto.InternalMessageInfo

func (m *TLMessagesGetDiscussionMessage) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetDiscussionMessage) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetDiscussionMessage) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetDiscussionMessage) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getDocumentByHash#338e2464 sha256:bytes size:int mime_type:string = Document;
//
type TLMessagesGetDocumentByHash struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Sha256               []byte   `protobuf:"bytes,3,opt,name=sha256,proto3" json:"sha256,omitempty"`
	Size_                int32    `protobuf:"varint,4,opt,name=size_,json=size,proto3" json:"size_,omitempty"`
	MimeType             string   `protobuf:"bytes,5,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesGetDocumentByHash) Reset()         { *m = TLMessagesGetDocumentByHash{} }
func (m *TLMessagesGetDocumentByHash) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetDocumentByHash) ProtoMessage()    {}
func (*TLMessagesGetDocumentByHash) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{225}
}
func (m *TLMessagesGetDocumentByHash) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetDocumentByHash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetDocumentByHash.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetDocumentByHash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetDocumentByHash.Merge(m, src)
}
func (m *TLMessagesGetDocumentByHash) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetDocumentByHash) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetDocumentByHash.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetDocumentByHash proto.InternalMessageInfo

func (m *TLMessagesGetDocumentByHash) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetDocumentByHash) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetDocumentByHash) GetSha256() []byte {
	if m != nil {
		return m.Sha256
	}
	return nil
}

func (m *TLMessagesGetDocumentByHash) GetSize_() int32 {
	if m != nil {
		return m.Size_
	}
	return 0
}

func (m *TLMessagesGetDocumentByHash) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getEmojiKeywords#35a0e062 lang_code:string = EmojiKeywordsDifference;
//
type TLMessagesGetEmojiKeywords struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	LangCode             string   `protobuf:"bytes,3,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesGetEmojiKeywords) Reset()         { *m = TLMessagesGetEmojiKeywords{} }
func (m *TLMessagesGetEmojiKeywords) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetEmojiKeywords) ProtoMessage()    {}
func (*TLMessagesGetEmojiKeywords) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{226}
}
func (m *TLMessagesGetEmojiKeywords) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetEmojiKeywords) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetEmojiKeywords.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetEmojiKeywords) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetEmojiKeywords.Merge(m, src)
}
func (m *TLMessagesGetEmojiKeywords) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetEmojiKeywords) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetEmojiKeywords.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetEmojiKeywords proto.InternalMessageInfo

func (m *TLMessagesGetEmojiKeywords) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetEmojiKeywords) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetEmojiKeywords) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getEmojiKeywordsDifference#1508b6af lang_code:string from_version:int = EmojiKeywordsDifference;
//
type TLMessagesGetEmojiKeywordsDifference struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	LangCode             string   `protobuf:"bytes,3,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	FromVersion          int32    `protobuf:"varint,4,opt,name=from_version,json=fromVersion,proto3" json:"from_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesGetEmojiKeywordsDifference) Reset()         { *m = TLMessagesGetEmojiKeywordsDifference{} }
func (m *TLMessagesGetEmojiKeywordsDifference) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetEmojiKeywordsDifference) ProtoMessage()    {}
func (*TLMessagesGetEmojiKeywordsDifference) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{227}
}
func (m *TLMessagesGetEmojiKeywordsDifference) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetEmojiKeywordsDifference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetEmojiKeywordsDifference.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetEmojiKeywordsDifference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetEmojiKeywordsDifference.Merge(m, src)
}
func (m *TLMessagesGetEmojiKeywordsDifference) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetEmojiKeywordsDifference) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetEmojiKeywordsDifference.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetEmojiKeywordsDifference proto.InternalMessageInfo

func (m *TLMessagesGetEmojiKeywordsDifference) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetEmojiKeywordsDifference) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetEmojiKeywordsDifference) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

func (m *TLMessagesGetEmojiKeywordsDifference) GetFromVersion() int32 {
	if m != nil {
		return m.FromVersion
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getEmojiKeywordsLanguages#4e9963b2 lang_codes:Vector<string> = Vector<EmojiLanguage>;
//
type TLMessagesGetEmojiKeywordsLanguages struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	LangCodes            []string `protobuf:"bytes,3,rep,name=lang_codes,json=langCodes,proto3" json:"lang_codes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesGetEmojiKeywordsLanguages) Reset()         { *m = TLMessagesGetEmojiKeywordsLanguages{} }
func (m *TLMessagesGetEmojiKeywordsLanguages) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetEmojiKeywordsLanguages) ProtoMessage()    {}
func (*TLMessagesGetEmojiKeywordsLanguages) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{228}
}
func (m *TLMessagesGetEmojiKeywordsLanguages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetEmojiKeywordsLanguages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetEmojiKeywordsLanguages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetEmojiKeywordsLanguages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetEmojiKeywordsLanguages.Merge(m, src)
}
func (m *TLMessagesGetEmojiKeywordsLanguages) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetEmojiKeywordsLanguages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetEmojiKeywordsLanguages.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetEmojiKeywordsLanguages proto.InternalMessageInfo

func (m *TLMessagesGetEmojiKeywordsLanguages) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetEmojiKeywordsLanguages) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetEmojiKeywordsLanguages) GetLangCodes() []string {
	if m != nil {
		return m.LangCodes
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getEmojiURL#d5b10c26 lang_code:string = EmojiURL;
//
type TLMessagesGetEmojiURL struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	LangCode             string   `protobuf:"bytes,3,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesGetEmojiURL) Reset()         { *m = TLMessagesGetEmojiURL{} }
func (m *TLMessagesGetEmojiURL) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetEmojiURL) ProtoMessage()    {}
func (*TLMessagesGetEmojiURL) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{229}
}
func (m *TLMessagesGetEmojiURL) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetEmojiURL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetEmojiURL.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetEmojiURL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetEmojiURL.Merge(m, src)
}
func (m *TLMessagesGetEmojiURL) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetEmojiURL) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetEmojiURL.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetEmojiURL proto.InternalMessageInfo

func (m *TLMessagesGetEmojiURL) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetEmojiURL) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetEmojiURL) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getFavedStickers#21ce0b0e hash:int = messages.FavedStickers;
//
type TLMessagesGetFavedStickers struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Hash                 int32    `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesGetFavedStickers) Reset()         { *m = TLMessagesGetFavedStickers{} }
func (m *TLMessagesGetFavedStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetFavedStickers) ProtoMessage()    {}
func (*TLMessagesGetFavedStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{230}
}
func (m *TLMessagesGetFavedStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetFavedStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetFavedStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetFavedStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetFavedStickers.Merge(m, src)
}
func (m *TLMessagesGetFavedStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetFavedStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetFavedStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetFavedStickers proto.InternalMessageInfo

func (m *TLMessagesGetFavedStickers) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetFavedStickers) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetFavedStickers) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getFeaturedStickers#2dacca4f hash:int = messages.FeaturedStickers;
//
type TLMessagesGetFeaturedStickers struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Hash                 int32    `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesGetFeaturedStickers) Reset()         { *m = TLMessagesGetFeaturedStickers{} }
func (m *TLMessagesGetFeaturedStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetFeaturedStickers) ProtoMessage()    {}
func (*TLMessagesGetFeaturedStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{231}
}
func (m *TLMessagesGetFeaturedStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetFeaturedStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetFeaturedStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetFeaturedStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetFeaturedStickers.Merge(m, src)
}
func (m *TLMessagesGetFeaturedStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetFeaturedStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetFeaturedStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetFeaturedStickers proto.InternalMessageInfo

func (m *TLMessagesGetFeaturedStickers) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetFeaturedStickers) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetFeaturedStickers) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getFullChat#3b831c66 chat_id:int = messages.ChatFull;
//
type TLMessagesGetFullChat struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	ChatId               int32    `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesGetFullChat) Reset()         { *m = TLMessagesGetFullChat{} }
func (m *TLMessagesGetFullChat) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetFullChat) ProtoMessage()    {}
func (*TLMessagesGetFullChat) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{232}
}
func (m *TLMessagesGetFullChat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetFullChat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetFullChat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetFullChat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetFullChat.Merge(m, src)
}
func (m *TLMessagesGetFullChat) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetFullChat) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetFullChat.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetFullChat proto.InternalMessageInfo

func (m *TLMessagesGetFullChat) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetFullChat) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetFullChat) GetChatId() int32 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getGameHighScores#e822649d peer:InputPeer id:int user_id:InputUser = messages.HighScores;
//
type TLMessagesGetGameHighScores struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   int32      `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	UserId               *InputUser `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesGetGameHighScores) Reset()         { *m = TLMessagesGetGameHighScores{} }
func (m *TLMessagesGetGameHighScores) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetGameHighScores) ProtoMessage()    {}
func (*TLMessagesGetGameHighScores) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{233}
}
func (m *TLMessagesGetGameHighScores) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetGameHighScores) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetGameHighScores.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetGameHighScores) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetGameHighScores.Merge(m, src)
}
func (m *TLMessagesGetGameHighScores) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetGameHighScores) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetGameHighScores.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetGameHighScores proto.InternalMessageInfo

func (m *TLMessagesGetGameHighScores) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetGameHighScores) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetGameHighScores) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetGameHighScores) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TLMessagesGetGameHighScores) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getHistory#afa92846 peer:InputPeer offset_id:int offset_date:int add_offset:int limit:int max_id:int min_id:int = messages.Messages;
//  messages.getHistory#dcbb8260 peer:InputPeer offset_id:int offset_date:int add_offset:int limit:int max_id:int min_id:int hash:int = messages.Messages;
//
type TLMessagesGetHistory struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	OffsetId             int32      `protobuf:"varint,4,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	OffsetDate           int32      `protobuf:"varint,5,opt,name=offset_date,json=offsetDate,proto3" json:"offset_date,omitempty"`
	AddOffset            int32      `protobuf:"varint,6,opt,name=add_offset,json=addOffset,proto3" json:"add_offset,omitempty"`
	Limit                int32      `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	MaxId                int32      `protobuf:"varint,8,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	MinId                int32      `protobuf:"varint,9,opt,name=min_id,json=minId,proto3" json:"min_id,omitempty"`
	Hash                 int32      `protobuf:"varint,10,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesGetHistory) Reset()         { *m = TLMessagesGetHistory{} }
func (m *TLMessagesGetHistory) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetHistory) ProtoMessage()    {}
func (*TLMessagesGetHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{234}
}
func (m *TLMessagesGetHistory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetHistory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetHistory.Merge(m, src)
}
func (m *TLMessagesGetHistory) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetHistory.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetHistory proto.InternalMessageInfo

func (m *TLMessagesGetHistory) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetHistory) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetHistory) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetHistory) GetOffsetId() int32 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLMessagesGetHistory) GetOffsetDate() int32 {
	if m != nil {
		return m.OffsetDate
	}
	return 0
}

func (m *TLMessagesGetHistory) GetAddOffset() int32 {
	if m != nil {
		return m.AddOffset
	}
	return 0
}

func (m *TLMessagesGetHistory) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLMessagesGetHistory) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

func (m *TLMessagesGetHistory) GetMinId() int32 {
	if m != nil {
		return m.MinId
	}
	return 0
}

func (m *TLMessagesGetHistory) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getInlineBotResults#514e999d flags:# bot:InputUser peer:InputPeer geo_point:flags.0?InputGeoPoint query:string offset:string = messages.BotResults;
//
type TLMessagesGetInlineBotResults struct {
	Cmd                  TLCmd          `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string         `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32          `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Bot                  *InputUser     `protobuf:"bytes,4,opt,name=bot,proto3" json:"bot,omitempty"`
	Peer                 *InputPeer     `protobuf:"bytes,5,opt,name=peer,proto3" json:"peer,omitempty"`
	GeoPoint             *InputGeoPoint `protobuf:"bytes,6,opt,name=geo_point,json=geoPoint,proto3" json:"geo_point,omitempty"`
	Query                string         `protobuf:"bytes,7,opt,name=query,proto3" json:"query,omitempty"`
	Offset               string         `protobuf:"bytes,8,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TLMessagesGetInlineBotResults) Reset()         { *m = TLMessagesGetInlineBotResults{} }
func (m *TLMessagesGetInlineBotResults) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetInlineBotResults) ProtoMessage()    {}
func (*TLMessagesGetInlineBotResults) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{235}
}
func (m *TLMessagesGetInlineBotResults) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetInlineBotResults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetInlineBotResults.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetInlineBotResults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetInlineBotResults.Merge(m, src)
}
func (m *TLMessagesGetInlineBotResults) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetInlineBotResults) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetInlineBotResults.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetInlineBotResults proto.InternalMessageInfo

func (m *TLMessagesGetInlineBotResults) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetInlineBotResults) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetInlineBotResults) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesGetInlineBotResults) GetBot() *InputUser {
	if m != nil {
		return m.Bot
	}
	return nil
}

func (m *TLMessagesGetInlineBotResults) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetInlineBotResults) GetGeoPoint() *InputGeoPoint {
	if m != nil {
		return m.GeoPoint
	}
	return nil
}

func (m *TLMessagesGetInlineBotResults) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *TLMessagesGetInlineBotResults) GetOffset() string {
	if m != nil {
		return m.Offset
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getInlineGameHighScores#f635e1b id:InputBotInlineMessageID user_id:InputUser = messages.HighScores;
//
type TLMessagesGetInlineGameHighScores struct {
	Cmd                  TLCmd                    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string                   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Id                   *InputBotInlineMessageID `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	UserId               *InputUser               `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *TLMessagesGetInlineGameHighScores) Reset()         { *m = TLMessagesGetInlineGameHighScores{} }
func (m *TLMessagesGetInlineGameHighScores) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetInlineGameHighScores) ProtoMessage()    {}
func (*TLMessagesGetInlineGameHighScores) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{236}
}
func (m *TLMessagesGetInlineGameHighScores) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetInlineGameHighScores) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetInlineGameHighScores.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetInlineGameHighScores) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetInlineGameHighScores.Merge(m, src)
}
func (m *TLMessagesGetInlineGameHighScores) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetInlineGameHighScores) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetInlineGameHighScores.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetInlineGameHighScores proto.InternalMessageInfo

func (m *TLMessagesGetInlineGameHighScores) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetInlineGameHighScores) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetInlineGameHighScores) GetId() *InputBotInlineMessageID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLMessagesGetInlineGameHighScores) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getMaskStickers#65b8c79f hash:int = messages.AllStickers;
//
type TLMessagesGetMaskStickers struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Hash                 int32    `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesGetMaskStickers) Reset()         { *m = TLMessagesGetMaskStickers{} }
func (m *TLMessagesGetMaskStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetMaskStickers) ProtoMessage()    {}
func (*TLMessagesGetMaskStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{237}
}
func (m *TLMessagesGetMaskStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetMaskStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetMaskStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetMaskStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetMaskStickers.Merge(m, src)
}
func (m *TLMessagesGetMaskStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetMaskStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetMaskStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetMaskStickers proto.InternalMessageInfo

func (m *TLMessagesGetMaskStickers) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetMaskStickers) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetMaskStickers) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getMessageEditData#fda68d36 peer:InputPeer id:int = messages.MessageEditData;
//
type TLMessagesGetMessageEditData struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   int32      `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesGetMessageEditData) Reset()         { *m = TLMessagesGetMessageEditData{} }
func (m *TLMessagesGetMessageEditData) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetMessageEditData) ProtoMessage()    {}
func (*TLMessagesGetMessageEditData) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{238}
}
func (m *TLMessagesGetMessageEditData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetMessageEditData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetMessageEditData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetMessageEditData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetMessageEditData.Merge(m, src)
}
func (m *TLMessagesGetMessageEditData) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetMessageEditData) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetMessageEditData.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetMessageEditData proto.InternalMessageInfo

func (m *TLMessagesGetMessageEditData) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetMessageEditData) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetMessageEditData) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetMessageEditData) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getMessages#4222fa74 id:Vector<int> = messages.Messages;
//  messages.getMessages#63c66506 id:Vector<InputMessage> = messages.Messages;
//
type TLMessagesGetMessages struct {
	Cmd                  TLCmd           `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string          `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Id4222FA7471         []int32         `protobuf:"varint,3,rep,packed,name=id4222FA7471,proto3" json:"id4222FA7471,omitempty"`
	Id63C6650685         []*InputMessage `protobuf:"bytes,4,rep,name=id63C6650685,proto3" json:"id63C6650685,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLMessagesGetMessages) Reset()         { *m = TLMessagesGetMessages{} }
func (m *TLMessagesGetMessages) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetMessages) ProtoMessage()    {}
func (*TLMessagesGetMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{239}
}
func (m *TLMessagesGetMessages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetMessages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetMessages.Merge(m, src)
}
func (m *TLMessagesGetMessages) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetMessages.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetMessages proto.InternalMessageInfo

func (m *TLMessagesGetMessages) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetMessages) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetMessages) GetId4222FA7471() []int32 {
	if m != nil {
		return m.Id4222FA7471
	}
	return nil
}

func (m *TLMessagesGetMessages) GetId63C6650685() []*InputMessage {
	if m != nil {
		return m.Id63C6650685
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getMessagesViews#c4c8a55d peer:InputPeer id:Vector<int> increment:Bool = Vector<int>;
//  messages.getMessagesViews#5784d3e1 peer:InputPeer id:Vector<int> increment:Bool = messages.MessageViews;
//
type TLMessagesGetMessagesViews struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   []int32    `protobuf:"varint,4,rep,packed,name=id,proto3" json:"id,omitempty"`
	Increment            *Bool      `protobuf:"bytes,5,opt,name=increment,proto3" json:"increment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesGetMessagesViews) Reset()         { *m = TLMessagesGetMessagesViews{} }
func (m *TLMessagesGetMessagesViews) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetMessagesViews) ProtoMessage()    {}
func (*TLMessagesGetMessagesViews) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{240}
}
func (m *TLMessagesGetMessagesViews) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetMessagesViews) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetMessagesViews.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetMessagesViews) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetMessagesViews.Merge(m, src)
}
func (m *TLMessagesGetMessagesViews) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetMessagesViews) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetMessagesViews.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetMessagesViews proto.InternalMessageInfo

func (m *TLMessagesGetMessagesViews) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetMessagesViews) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetMessagesViews) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetMessagesViews) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLMessagesGetMessagesViews) GetIncrement() *Bool {
	if m != nil {
		return m.Increment
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getOldFeaturedStickers#5fe7025b offset:int limit:int hash:int = messages.FeaturedStickers;
//
type TLMessagesGetOldFeaturedStickers struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Offset               int32    `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32    `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Hash                 int32    `protobuf:"varint,5,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesGetOldFeaturedStickers) Reset()         { *m = TLMessagesGetOldFeaturedStickers{} }
func (m *TLMessagesGetOldFeaturedStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetOldFeaturedStickers) ProtoMessage()    {}
func (*TLMessagesGetOldFeaturedStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{241}
}
func (m *TLMessagesGetOldFeaturedStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetOldFeaturedStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetOldFeaturedStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetOldFeaturedStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetOldFeaturedStickers.Merge(m, src)
}
func (m *TLMessagesGetOldFeaturedStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetOldFeaturedStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetOldFeaturedStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetOldFeaturedStickers proto.InternalMessageInfo

func (m *TLMessagesGetOldFeaturedStickers) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetOldFeaturedStickers) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetOldFeaturedStickers) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TLMessagesGetOldFeaturedStickers) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLMessagesGetOldFeaturedStickers) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getOnlines#6e2be050 peer:InputPeer = ChatOnlines;
//
type TLMessagesGetOnlines struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesGetOnlines) Reset()         { *m = TLMessagesGetOnlines{} }
func (m *TLMessagesGetOnlines) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetOnlines) ProtoMessage()    {}
func (*TLMessagesGetOnlines) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{242}
}
func (m *TLMessagesGetOnlines) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetOnlines) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetOnlines.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetOnlines) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetOnlines.Merge(m, src)
}
func (m *TLMessagesGetOnlines) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetOnlines) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetOnlines.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetOnlines proto.InternalMessageInfo

func (m *TLMessagesGetOnlines) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetOnlines) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetOnlines) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getPeerDialogs#2d9776b9 peers:Vector<InputPeer> = messages.PeerDialogs;
//  messages.getPeerDialogs#e470bcfd peers:Vector<InputDialogPeer> = messages.PeerDialogs;
//
type TLMessagesGetPeerDialogs struct {
	Cmd                  TLCmd              `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string             `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peers2D9776B971      []*InputPeer       `protobuf:"bytes,3,rep,name=peers2D9776B971,proto3" json:"peers2D9776B971,omitempty"`
	PeersE470BCFD85      []*InputDialogPeer `protobuf:"bytes,4,rep,name=peersE470BCFD85,proto3" json:"peersE470BCFD85,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLMessagesGetPeerDialogs) Reset()         { *m = TLMessagesGetPeerDialogs{} }
func (m *TLMessagesGetPeerDialogs) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetPeerDialogs) ProtoMessage()    {}
func (*TLMessagesGetPeerDialogs) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{243}
}
func (m *TLMessagesGetPeerDialogs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetPeerDialogs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetPeerDialogs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetPeerDialogs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetPeerDialogs.Merge(m, src)
}
func (m *TLMessagesGetPeerDialogs) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetPeerDialogs) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetPeerDialogs.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetPeerDialogs proto.InternalMessageInfo

func (m *TLMessagesGetPeerDialogs) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetPeerDialogs) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetPeerDialogs) GetPeers2D9776B971() []*InputPeer {
	if m != nil {
		return m.Peers2D9776B971
	}
	return nil
}

func (m *TLMessagesGetPeerDialogs) GetPeersE470BCFD85() []*InputDialogPeer {
	if m != nil {
		return m.PeersE470BCFD85
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getPeerSettings#3672e09c peer:InputPeer = PeerSettings;
//
type TLMessagesGetPeerSettings struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesGetPeerSettings) Reset()         { *m = TLMessagesGetPeerSettings{} }
func (m *TLMessagesGetPeerSettings) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetPeerSettings) ProtoMessage()    {}
func (*TLMessagesGetPeerSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{244}
}
func (m *TLMessagesGetPeerSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetPeerSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetPeerSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetPeerSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetPeerSettings.Merge(m, src)
}
func (m *TLMessagesGetPeerSettings) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetPeerSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetPeerSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetPeerSettings proto.InternalMessageInfo

func (m *TLMessagesGetPeerSettings) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetPeerSettings) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetPeerSettings) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getPinnedDialogs#e254d64e = messages.PeerDialogs;
//  messages.getPinnedDialogs#d6b94df2 folder_id:int = messages.PeerDialogs;
//
type TLMessagesGetPinnedDialogs struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	FolderId             int32    `protobuf:"varint,3,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesGetPinnedDialogs) Reset()         { *m = TLMessagesGetPinnedDialogs{} }
func (m *TLMessagesGetPinnedDialogs) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetPinnedDialogs) ProtoMessage()    {}
func (*TLMessagesGetPinnedDialogs) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{245}
}
func (m *TLMessagesGetPinnedDialogs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetPinnedDialogs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetPinnedDialogs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetPinnedDialogs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetPinnedDialogs.Merge(m, src)
}
func (m *TLMessagesGetPinnedDialogs) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetPinnedDialogs) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetPinnedDialogs.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetPinnedDialogs proto.InternalMessageInfo

func (m *TLMessagesGetPinnedDialogs) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetPinnedDialogs) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetPinnedDialogs) GetFolderId() int32 {
	if m != nil {
		return m.FolderId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getPollResults#73bb643b peer:InputPeer msg_id:int = Updates;
//
type TLMessagesGetPollResults struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	MsgId                int32      `protobuf:"varint,4,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesGetPollResults) Reset()         { *m = TLMessagesGetPollResults{} }
func (m *TLMessagesGetPollResults) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetPollResults) ProtoMessage()    {}
func (*TLMessagesGetPollResults) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{246}
}
func (m *TLMessagesGetPollResults) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetPollResults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetPollResults.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetPollResults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetPollResults.Merge(m, src)
}
func (m *TLMessagesGetPollResults) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetPollResults) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetPollResults.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetPollResults proto.InternalMessageInfo

func (m *TLMessagesGetPollResults) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetPollResults) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetPollResults) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetPollResults) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getPollVotes#b86e380e flags:# peer:InputPeer id:int option:flags.0?bytes offset:flags.1?string limit:int = messages.VotesList;
//
type TLMessagesGetPollVotes struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32      `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   int32      `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
	Option               []byte     `protobuf:"bytes,6,opt,name=option,proto3" json:"option,omitempty"`
	Offset               string     `protobuf:"bytes,7,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32      `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesGetPollVotes) Reset()         { *m = TLMessagesGetPollVotes{} }
func (m *TLMessagesGetPollVotes) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetPollVotes) ProtoMessage()    {}
func (*TLMessagesGetPollVotes) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{247}
}
func (m *TLMessagesGetPollVotes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetPollVotes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetPollVotes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetPollVotes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetPollVotes.Merge(m, src)
}
func (m *TLMessagesGetPollVotes) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetPollVotes) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetPollVotes.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetPollVotes proto.InternalMessageInfo

func (m *TLMessagesGetPollVotes) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetPollVotes) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetPollVotes) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesGetPollVotes) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetPollVotes) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TLMessagesGetPollVotes) GetOption() []byte {
	if m != nil {
		return m.Option
	}
	return nil
}

func (m *TLMessagesGetPollVotes) GetOffset() string {
	if m != nil {
		return m.Offset
	}
	return ""
}

func (m *TLMessagesGetPollVotes) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getRecentLocations#249431e2 peer:InputPeer limit:int = messages.Messages;
//  messages.getRecentLocations#bbc45b09 peer:InputPeer limit:int hash:int = messages.Messages;
//
type TLMessagesGetRecentLocations struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Limit                int32      `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Hash                 int32      `protobuf:"varint,5,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesGetRecentLocations) Reset()         { *m = TLMessagesGetRecentLocations{} }
func (m *TLMessagesGetRecentLocations) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetRecentLocations) ProtoMessage()    {}
func (*TLMessagesGetRecentLocations) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{248}
}
func (m *TLMessagesGetRecentLocations) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetRecentLocations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetRecentLocations.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetRecentLocations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetRecentLocations.Merge(m, src)
}
func (m *TLMessagesGetRecentLocations) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetRecentLocations) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetRecentLocations.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetRecentLocations proto.InternalMessageInfo

func (m *TLMessagesGetRecentLocations) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetRecentLocations) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetRecentLocations) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetRecentLocations) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLMessagesGetRecentLocations) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getRecentStickers#5ea192c9 flags:# attached:flags.0?true hash:int = messages.RecentStickers;
//
type TLMessagesGetRecentStickers struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32    `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Attached             bool     `protobuf:"varint,4,opt,name=attached,proto3" json:"attached,omitempty"`
	Hash                 int32    `protobuf:"varint,5,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesGetRecentStickers) Reset()         { *m = TLMessagesGetRecentStickers{} }
func (m *TLMessagesGetRecentStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetRecentStickers) ProtoMessage()    {}
func (*TLMessagesGetRecentStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{249}
}
func (m *TLMessagesGetRecentStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetRecentStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetRecentStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetRecentStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetRecentStickers.Merge(m, src)
}
func (m *TLMessagesGetRecentStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetRecentStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetRecentStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetRecentStickers proto.InternalMessageInfo

func (m *TLMessagesGetRecentStickers) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetRecentStickers) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetRecentStickers) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesGetRecentStickers) GetAttached() bool {
	if m != nil {
		return m.Attached
	}
	return false
}

func (m *TLMessagesGetRecentStickers) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getReplies#24b581ba peer:InputPeer msg_id:int offset_id:int offset_date:int add_offset:int limit:int max_id:int min_id:int hash:int = messages.Messages;
//
type TLMessagesGetReplies struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	MsgId                int32      `protobuf:"varint,4,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	OffsetId             int32      `protobuf:"varint,5,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	OffsetDate           int32      `protobuf:"varint,6,opt,name=offset_date,json=offsetDate,proto3" json:"offset_date,omitempty"`
	AddOffset            int32      `protobuf:"varint,7,opt,name=add_offset,json=addOffset,proto3" json:"add_offset,omitempty"`
	Limit                int32      `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"`
	MaxId                int32      `protobuf:"varint,9,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	MinId                int32      `protobuf:"varint,10,opt,name=min_id,json=minId,proto3" json:"min_id,omitempty"`
	Hash                 int32      `protobuf:"varint,11,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesGetReplies) Reset()         { *m = TLMessagesGetReplies{} }
func (m *TLMessagesGetReplies) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetReplies) ProtoMessage()    {}
func (*TLMessagesGetReplies) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{250}
}
func (m *TLMessagesGetReplies) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetReplies) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetReplies.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetReplies) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetReplies.Merge(m, src)
}
func (m *TLMessagesGetReplies) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetReplies) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetReplies.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetReplies proto.InternalMessageInfo

func (m *TLMessagesGetReplies) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetReplies) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetReplies) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetReplies) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *TLMessagesGetReplies) GetOffsetId() int32 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLMessagesGetReplies) GetOffsetDate() int32 {
	if m != nil {
		return m.OffsetDate
	}
	return 0
}

func (m *TLMessagesGetReplies) GetAddOffset() int32 {
	if m != nil {
		return m.AddOffset
	}
	return 0
}

func (m *TLMessagesGetReplies) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLMessagesGetReplies) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

func (m *TLMessagesGetReplies) GetMinId() int32 {
	if m != nil {
		return m.MinId
	}
	return 0
}

func (m *TLMessagesGetReplies) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getSavedGifs#83bf3d52 hash:int = messages.SavedGifs;
//
type TLMessagesGetSavedGifs struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Hash                 int32    `protobuf:"varint,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesGetSavedGifs) Reset()         { *m = TLMessagesGetSavedGifs{} }
func (m *TLMessagesGetSavedGifs) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetSavedGifs) ProtoMessage()    {}
func (*TLMessagesGetSavedGifs) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{251}
}
func (m *TLMessagesGetSavedGifs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetSavedGifs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetSavedGifs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetSavedGifs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetSavedGifs.Merge(m, src)
}
func (m *TLMessagesGetSavedGifs) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetSavedGifs) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetSavedGifs.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetSavedGifs proto.InternalMessageInfo

func (m *TLMessagesGetSavedGifs) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetSavedGifs) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetSavedGifs) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getScheduledHistory#e2c2685b peer:InputPeer hash:int = messages.Messages;
//
type TLMessagesGetScheduledHistory struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Hash                 int32      `protobuf:"varint,4,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesGetScheduledHistory) Reset()         { *m = TLMessagesGetScheduledHistory{} }
func (m *TLMessagesGetScheduledHistory) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetScheduledHistory) ProtoMessage()    {}
func (*TLMessagesGetScheduledHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{252}
}
func (m *TLMessagesGetScheduledHistory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetScheduledHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetScheduledHistory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetScheduledHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetScheduledHistory.Merge(m, src)
}
func (m *TLMessagesGetScheduledHistory) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetScheduledHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetScheduledHistory.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetScheduledHistory proto.InternalMessageInfo

func (m *TLMessagesGetScheduledHistory) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetScheduledHistory) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetScheduledHistory) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetScheduledHistory) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getScheduledMessages#bdbb0464 peer:InputPeer id:Vector<int> = messages.Messages;
//
type TLMessagesGetScheduledMessages struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   []int32    `protobuf:"varint,4,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesGetScheduledMessages) Reset()         { *m = TLMessagesGetScheduledMessages{} }
func (m *TLMessagesGetScheduledMessages) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetScheduledMessages) ProtoMessage()    {}
func (*TLMessagesGetScheduledMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{253}
}
func (m *TLMessagesGetScheduledMessages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetScheduledMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetScheduledMessages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetScheduledMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetScheduledMessages.Merge(m, src)
}
func (m *TLMessagesGetScheduledMessages) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetScheduledMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetScheduledMessages.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetScheduledMessages proto.InternalMessageInfo

func (m *TLMessagesGetScheduledMessages) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetScheduledMessages) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetScheduledMessages) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetScheduledMessages) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getSearchCounters#732eef00 peer:InputPeer filters:Vector<MessagesFilter> = Vector<messages.SearchCounter>;
//
type TLMessagesGetSearchCounters struct {
	Cmd                  TLCmd             `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string            `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer        `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Filters              []*MessagesFilter `protobuf:"bytes,4,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLMessagesGetSearchCounters) Reset()         { *m = TLMessagesGetSearchCounters{} }
func (m *TLMessagesGetSearchCounters) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetSearchCounters) ProtoMessage()    {}
func (*TLMessagesGetSearchCounters) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{254}
}
func (m *TLMessagesGetSearchCounters) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetSearchCounters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetSearchCounters.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetSearchCounters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetSearchCounters.Merge(m, src)
}
func (m *TLMessagesGetSearchCounters) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetSearchCounters) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetSearchCounters.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetSearchCounters proto.InternalMessageInfo

func (m *TLMessagesGetSearchCounters) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetSearchCounters) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetSearchCounters) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetSearchCounters) GetFilters() []*MessagesFilter {
	if m != nil {
		return m.Filters
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getSplitRanges#1cff7e08 = Vector<MessageRange>;
//
type TLMessagesGetSplitRanges struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesGetSplitRanges) Reset()         { *m = TLMessagesGetSplitRanges{} }
func (m *TLMessagesGetSplitRanges) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetSplitRanges) ProtoMessage()    {}
func (*TLMessagesGetSplitRanges) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{255}
}
func (m *TLMessagesGetSplitRanges) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetSplitRanges) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetSplitRanges.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetSplitRanges) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetSplitRanges.Merge(m, src)
}
func (m *TLMessagesGetSplitRanges) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetSplitRanges) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetSplitRanges.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetSplitRanges proto.InternalMessageInfo

func (m *TLMessagesGetSplitRanges) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetSplitRanges) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getStatsURL#83f6c0cd peer:InputPeer = StatsURL;
//  messages.getStatsURL#812c2ae6 flags:# dark:flags.0?true peer:InputPeer params:string = StatsURL;
//
type TLMessagesGetStatsURL struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Flags                int32      `protobuf:"varint,4,opt,name=flags,proto3" json:"flags,omitempty"`
	Dark                 bool       `protobuf:"varint,5,opt,name=dark,proto3" json:"dark,omitempty"`
	Params               string     `protobuf:"bytes,6,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesGetStatsURL) Reset()         { *m = TLMessagesGetStatsURL{} }
func (m *TLMessagesGetStatsURL) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetStatsURL) ProtoMessage()    {}
func (*TLMessagesGetStatsURL) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{256}
}
func (m *TLMessagesGetStatsURL) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetStatsURL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetStatsURL.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetStatsURL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetStatsURL.Merge(m, src)
}
func (m *TLMessagesGetStatsURL) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetStatsURL) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetStatsURL.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetStatsURL proto.InternalMessageInfo

func (m *TLMessagesGetStatsURL) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetStatsURL) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetStatsURL) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetStatsURL) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesGetStatsURL) GetDark() bool {
	if m != nil {
		return m.Dark
	}
	return false
}

func (m *TLMessagesGetStatsURL) GetParams() string {
	if m != nil {
		return m.Params
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getStickerSet#2619a90e stickerset:InputStickerSet = messages.StickerSet;
//
type TLMessagesGetStickerSet struct {
	Cmd                  TLCmd            `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string           `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Stickerset           *InputStickerSet `protobuf:"bytes,3,opt,name=stickerset,proto3" json:"stickerset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLMessagesGetStickerSet) Reset()         { *m = TLMessagesGetStickerSet{} }
func (m *TLMessagesGetStickerSet) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetStickerSet) ProtoMessage()    {}
func (*TLMessagesGetStickerSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{257}
}
func (m *TLMessagesGetStickerSet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetStickerSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetStickerSet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetStickerSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetStickerSet.Merge(m, src)
}
func (m *TLMessagesGetStickerSet) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetStickerSet) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetStickerSet.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetStickerSet proto.InternalMessageInfo

func (m *TLMessagesGetStickerSet) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetStickerSet) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetStickerSet) GetStickerset() *InputStickerSet {
	if m != nil {
		return m.Stickerset
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getStickers#ae22e045 emoticon:string hash:string = messages.Stickers;
//  messages.getStickers#43d4f2c emoticon:string hash:int = messages.Stickers;
//
type TLMessagesGetStickers struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Emoticon             string   `protobuf:"bytes,3,opt,name=emoticon,proto3" json:"emoticon,omitempty"`
	HashAE22E04551       string   `protobuf:"bytes,4,opt,name=hashAE22E04551,proto3" json:"hashAE22E04551,omitempty"`
	Hash43D4F2C85        int32    `protobuf:"varint,5,opt,name=hash43D4F2C85,proto3" json:"hash43D4F2C85,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesGetStickers) Reset()         { *m = TLMessagesGetStickers{} }
func (m *TLMessagesGetStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetStickers) ProtoMessage()    {}
func (*TLMessagesGetStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{258}
}
func (m *TLMessagesGetStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetStickers.Merge(m, src)
}
func (m *TLMessagesGetStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetStickers proto.InternalMessageInfo

func (m *TLMessagesGetStickers) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetStickers) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetStickers) GetEmoticon() string {
	if m != nil {
		return m.Emoticon
	}
	return ""
}

func (m *TLMessagesGetStickers) GetHashAE22E04551() string {
	if m != nil {
		return m.HashAE22E04551
	}
	return ""
}

func (m *TLMessagesGetStickers) GetHash43D4F2C85() int32 {
	if m != nil {
		return m.Hash43D4F2C85
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getSuggestedDialogFilters#a29cd42c = Vector<DialogFilterSuggested>;
//
type TLMessagesGetSuggestedDialogFilters struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesGetSuggestedDialogFilters) Reset()         { *m = TLMessagesGetSuggestedDialogFilters{} }
func (m *TLMessagesGetSuggestedDialogFilters) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetSuggestedDialogFilters) ProtoMessage()    {}
func (*TLMessagesGetSuggestedDialogFilters) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{259}
}
func (m *TLMessagesGetSuggestedDialogFilters) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetSuggestedDialogFilters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetSuggestedDialogFilters.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetSuggestedDialogFilters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetSuggestedDialogFilters.Merge(m, src)
}
func (m *TLMessagesGetSuggestedDialogFilters) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetSuggestedDialogFilters) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetSuggestedDialogFilters.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetSuggestedDialogFilters proto.InternalMessageInfo

func (m *TLMessagesGetSuggestedDialogFilters) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetSuggestedDialogFilters) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getUnreadMentions#46578472 peer:InputPeer offset_id:int add_offset:int limit:int max_id:int min_id:int = messages.Messages;
//
type TLMessagesGetUnreadMentions struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	OffsetId             int32      `protobuf:"varint,4,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	AddOffset            int32      `protobuf:"varint,5,opt,name=add_offset,json=addOffset,proto3" json:"add_offset,omitempty"`
	Limit                int32      `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	MaxId                int32      `protobuf:"varint,7,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	MinId                int32      `protobuf:"varint,8,opt,name=min_id,json=minId,proto3" json:"min_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesGetUnreadMentions) Reset()         { *m = TLMessagesGetUnreadMentions{} }
func (m *TLMessagesGetUnreadMentions) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetUnreadMentions) ProtoMessage()    {}
func (*TLMessagesGetUnreadMentions) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{260}
}
func (m *TLMessagesGetUnreadMentions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetUnreadMentions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetUnreadMentions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetUnreadMentions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetUnreadMentions.Merge(m, src)
}
func (m *TLMessagesGetUnreadMentions) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetUnreadMentions) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetUnreadMentions.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetUnreadMentions proto.InternalMessageInfo

func (m *TLMessagesGetUnreadMentions) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetUnreadMentions) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetUnreadMentions) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesGetUnreadMentions) GetOffsetId() int32 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLMessagesGetUnreadMentions) GetAddOffset() int32 {
	if m != nil {
		return m.AddOffset
	}
	return 0
}

func (m *TLMessagesGetUnreadMentions) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLMessagesGetUnreadMentions) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

func (m *TLMessagesGetUnreadMentions) GetMinId() int32 {
	if m != nil {
		return m.MinId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getWebPage#32ca8f91 url:string hash:int = WebPage;
//
type TLMessagesGetWebPage struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Url                  string   `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Hash                 int32    `protobuf:"varint,4,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesGetWebPage) Reset()         { *m = TLMessagesGetWebPage{} }
func (m *TLMessagesGetWebPage) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetWebPage) ProtoMessage()    {}
func (*TLMessagesGetWebPage) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{261}
}
func (m *TLMessagesGetWebPage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetWebPage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetWebPage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetWebPage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetWebPage.Merge(m, src)
}
func (m *TLMessagesGetWebPage) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetWebPage) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetWebPage.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetWebPage proto.InternalMessageInfo

func (m *TLMessagesGetWebPage) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetWebPage) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetWebPage) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *TLMessagesGetWebPage) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.getWebPagePreview#25223e24 message:string = MessageMedia;
//  messages.getWebPagePreview#8b68b0cc flags:# message:string entities:flags.3?Vector<MessageEntity> = MessageMedia;
//
type TLMessagesGetWebPagePreview struct {
	Cmd                  TLCmd            `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string           `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Message              string           `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Flags                int32            `protobuf:"varint,4,opt,name=flags,proto3" json:"flags,omitempty"`
	Entities             []*MessageEntity `protobuf:"bytes,5,rep,name=entities,proto3" json:"entities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLMessagesGetWebPagePreview) Reset()         { *m = TLMessagesGetWebPagePreview{} }
func (m *TLMessagesGetWebPagePreview) String() string { return proto.CompactTextString(m) }
func (*TLMessagesGetWebPagePreview) ProtoMessage()    {}
func (*TLMessagesGetWebPagePreview) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{262}
}
func (m *TLMessagesGetWebPagePreview) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesGetWebPagePreview) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesGetWebPagePreview.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesGetWebPagePreview) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesGetWebPagePreview.Merge(m, src)
}
func (m *TLMessagesGetWebPagePreview) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesGetWebPagePreview) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesGetWebPagePreview.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesGetWebPagePreview proto.InternalMessageInfo

func (m *TLMessagesGetWebPagePreview) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesGetWebPagePreview) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesGetWebPagePreview) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TLMessagesGetWebPagePreview) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesGetWebPagePreview) GetEntities() []*MessageEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.hidePeerSettingsBar#4facb138 peer:InputPeer = Bool;
//
type TLMessagesHidePeerSettingsBar struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesHidePeerSettingsBar) Reset()         { *m = TLMessagesHidePeerSettingsBar{} }
func (m *TLMessagesHidePeerSettingsBar) String() string { return proto.CompactTextString(m) }
func (*TLMessagesHidePeerSettingsBar) ProtoMessage()    {}
func (*TLMessagesHidePeerSettingsBar) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{263}
}
func (m *TLMessagesHidePeerSettingsBar) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesHidePeerSettingsBar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesHidePeerSettingsBar.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesHidePeerSettingsBar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesHidePeerSettingsBar.Merge(m, src)
}
func (m *TLMessagesHidePeerSettingsBar) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesHidePeerSettingsBar) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesHidePeerSettingsBar.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesHidePeerSettingsBar proto.InternalMessageInfo

func (m *TLMessagesHidePeerSettingsBar) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesHidePeerSettingsBar) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesHidePeerSettingsBar) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.hideReportSpam#a8f1709b peer:InputPeer = Bool;
//
type TLMessagesHideReportSpam struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesHideReportSpam) Reset()         { *m = TLMessagesHideReportSpam{} }
func (m *TLMessagesHideReportSpam) String() string { return proto.CompactTextString(m) }
func (*TLMessagesHideReportSpam) ProtoMessage()    {}
func (*TLMessagesHideReportSpam) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{264}
}
func (m *TLMessagesHideReportSpam) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesHideReportSpam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesHideReportSpam.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesHideReportSpam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesHideReportSpam.Merge(m, src)
}
func (m *TLMessagesHideReportSpam) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesHideReportSpam) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesHideReportSpam.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesHideReportSpam proto.InternalMessageInfo

func (m *TLMessagesHideReportSpam) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesHideReportSpam) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesHideReportSpam) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.importChatInvite#6c50051c hash:string = Updates;
//
type TLMessagesImportChatInvite struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Hash                 string   `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesImportChatInvite) Reset()         { *m = TLMessagesImportChatInvite{} }
func (m *TLMessagesImportChatInvite) String() string { return proto.CompactTextString(m) }
func (*TLMessagesImportChatInvite) ProtoMessage()    {}
func (*TLMessagesImportChatInvite) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{265}
}
func (m *TLMessagesImportChatInvite) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesImportChatInvite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesImportChatInvite.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesImportChatInvite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesImportChatInvite.Merge(m, src)
}
func (m *TLMessagesImportChatInvite) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesImportChatInvite) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesImportChatInvite.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesImportChatInvite proto.InternalMessageInfo

func (m *TLMessagesImportChatInvite) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesImportChatInvite) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesImportChatInvite) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  messages.installStickerSet#c78fe460 stickerset:InputStickerSet archived:Bool = messages.StickerSetInstallResult;
//  messages.installStickerSet#7b30c3a6 stickerset:InputStickerSet disabled:Bool = Bool;
//
type TLMessagesInstallStickerSet struct {
	Cmd                  TLCmd            `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string           `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Stickerset           *InputStickerSet `protobuf:"bytes,3,opt,name=stickerset,proto3" json:"stickerset,omitempty"`
	Archived             *Bool            `protobuf:"bytes,4,opt,name=archived,proto3" json:"archived,omitempty"`
	Disabled             *Bool            `protobuf:"bytes,5,opt,name=disabled,proto3" json:"disabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLMessagesInstallStickerSet) Reset()         { *m = TLMessagesInstallStickerSet{} }
func (m *TLMessagesInstallStickerSet) String() string { return proto.CompactTextString(m) }
func (*TLMessagesInstallStickerSet) ProtoMessage()    {}
func (*TLMessagesInstallStickerSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{266}
}
func (m *TLMessagesInstallStickerSet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesInstallStickerSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesInstallStickerSet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesInstallStickerSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesInstallStickerSet.Merge(m, src)
}
func (m *TLMessagesInstallStickerSet) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesInstallStickerSet) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesInstallStickerSet.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesInstallStickerSet proto.InternalMessageInfo

func (m *TLMessagesInstallStickerSet) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesInstallStickerSet) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesInstallStickerSet) GetStickerset() *InputStickerSet {
	if m != nil {
		return m.Stickerset
	}
	return nil
}

func (m *TLMessagesInstallStickerSet) GetArchived() *Bool {
	if m != nil {
		return m.Archived
	}
	return nil
}

func (m *TLMessagesInstallStickerSet) GetDisabled() *Bool {
	if m != nil {
		return m.Disabled
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.markDialogUnread#c286d98f flags:# unread:flags.0?true peer:InputDialogPeer = Bool;
//
type TLMessagesMarkDialogUnread struct {
	Cmd                  TLCmd            `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string           `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32            `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Unread               bool             `protobuf:"varint,4,opt,name=unread,proto3" json:"unread,omitempty"`
	Peer                 *InputDialogPeer `protobuf:"bytes,5,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLMessagesMarkDialogUnread) Reset()         { *m = TLMessagesMarkDialogUnread{} }
func (m *TLMessagesMarkDialogUnread) String() string { return proto.CompactTextString(m) }
func (*TLMessagesMarkDialogUnread) ProtoMessage()    {}
func (*TLMessagesMarkDialogUnread) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{267}
}
func (m *TLMessagesMarkDialogUnread) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesMarkDialogUnread) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesMarkDialogUnread.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesMarkDialogUnread) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesMarkDialogUnread.Merge(m, src)
}
func (m *TLMessagesMarkDialogUnread) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesMarkDialogUnread) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesMarkDialogUnread.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesMarkDialogUnread proto.InternalMessageInfo

func (m *TLMessagesMarkDialogUnread) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesMarkDialogUnread) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesMarkDialogUnread) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesMarkDialogUnread) GetUnread() bool {
	if m != nil {
		return m.Unread
	}
	return false
}

func (m *TLMessagesMarkDialogUnread) GetPeer() *InputDialogPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.migrateChat#15a3b8e3 chat_id:int = Updates;
//
type TLMessagesMigrateChat struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	ChatId               int32    `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesMigrateChat) Reset()         { *m = TLMessagesMigrateChat{} }
func (m *TLMessagesMigrateChat) String() string { return proto.CompactTextString(m) }
func (*TLMessagesMigrateChat) ProtoMessage()    {}
func (*TLMessagesMigrateChat) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{268}
}
func (m *TLMessagesMigrateChat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesMigrateChat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesMigrateChat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesMigrateChat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesMigrateChat.Merge(m, src)
}
func (m *TLMessagesMigrateChat) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesMigrateChat) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesMigrateChat.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesMigrateChat proto.InternalMessageInfo

func (m *TLMessagesMigrateChat) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesMigrateChat) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesMigrateChat) GetChatId() int32 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.readDiscussion#f731a9f4 peer:InputPeer msg_id:int read_max_id:int = Bool;
//
type TLMessagesReadDiscussion struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	MsgId                int32      `protobuf:"varint,4,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	ReadMaxId            int32      `protobuf:"varint,5,opt,name=read_max_id,json=readMaxId,proto3" json:"read_max_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesReadDiscussion) Reset()         { *m = TLMessagesReadDiscussion{} }
func (m *TLMessagesReadDiscussion) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReadDiscussion) ProtoMessage()    {}
func (*TLMessagesReadDiscussion) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{269}
}
func (m *TLMessagesReadDiscussion) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReadDiscussion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReadDiscussion.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesReadDiscussion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReadDiscussion.Merge(m, src)
}
func (m *TLMessagesReadDiscussion) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReadDiscussion) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReadDiscussion.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReadDiscussion proto.InternalMessageInfo

func (m *TLMessagesReadDiscussion) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesReadDiscussion) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesReadDiscussion) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesReadDiscussion) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *TLMessagesReadDiscussion) GetReadMaxId() int32 {
	if m != nil {
		return m.ReadMaxId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.readEncryptedHistory#7f4b690a peer:InputEncryptedChat max_date:int = Bool;
//
type TLMessagesReadEncryptedHistory struct {
	Cmd                  TLCmd               `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string              `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputEncryptedChat `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	MaxDate              int32               `protobuf:"varint,4,opt,name=max_date,json=maxDate,proto3" json:"max_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLMessagesReadEncryptedHistory) Reset()         { *m = TLMessagesReadEncryptedHistory{} }
func (m *TLMessagesReadEncryptedHistory) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReadEncryptedHistory) ProtoMessage()    {}
func (*TLMessagesReadEncryptedHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{270}
}
func (m *TLMessagesReadEncryptedHistory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReadEncryptedHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReadEncryptedHistory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesReadEncryptedHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReadEncryptedHistory.Merge(m, src)
}
func (m *TLMessagesReadEncryptedHistory) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReadEncryptedHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReadEncryptedHistory.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReadEncryptedHistory proto.InternalMessageInfo

func (m *TLMessagesReadEncryptedHistory) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesReadEncryptedHistory) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesReadEncryptedHistory) GetPeer() *InputEncryptedChat {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesReadEncryptedHistory) GetMaxDate() int32 {
	if m != nil {
		return m.MaxDate
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.readFeaturedStickers#5b118126 id:Vector<long> = Bool;
//
type TLMessagesReadFeaturedStickers struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Id                   []int64  `protobuf:"varint,3,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesReadFeaturedStickers) Reset()         { *m = TLMessagesReadFeaturedStickers{} }
func (m *TLMessagesReadFeaturedStickers) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReadFeaturedStickers) ProtoMessage()    {}
func (*TLMessagesReadFeaturedStickers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{271}
}
func (m *TLMessagesReadFeaturedStickers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReadFeaturedStickers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReadFeaturedStickers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesReadFeaturedStickers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReadFeaturedStickers.Merge(m, src)
}
func (m *TLMessagesReadFeaturedStickers) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReadFeaturedStickers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReadFeaturedStickers.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReadFeaturedStickers proto.InternalMessageInfo

func (m *TLMessagesReadFeaturedStickers) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesReadFeaturedStickers) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesReadFeaturedStickers) GetId() []int64 {
	if m != nil {
		return m.Id
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.readHistory#e306d3a peer:InputPeer max_id:int = messages.AffectedMessages;
//  messages.readHistory#b04f2510 peer:InputPeer max_id:int offset:int = messages.AffectedHistory;
//
type TLMessagesReadHistory struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	MaxId                int32      `protobuf:"varint,4,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	Offset               int32      `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesReadHistory) Reset()         { *m = TLMessagesReadHistory{} }
func (m *TLMessagesReadHistory) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReadHistory) ProtoMessage()    {}
func (*TLMessagesReadHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{272}
}
func (m *TLMessagesReadHistory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReadHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReadHistory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesReadHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReadHistory.Merge(m, src)
}
func (m *TLMessagesReadHistory) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReadHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReadHistory.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReadHistory proto.InternalMessageInfo

func (m *TLMessagesReadHistory) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesReadHistory) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesReadHistory) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesReadHistory) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

func (m *TLMessagesReadHistory) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.readMentions#f0189d3 peer:InputPeer = messages.AffectedHistory;
//
type TLMessagesReadMentions struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesReadMentions) Reset()         { *m = TLMessagesReadMentions{} }
func (m *TLMessagesReadMentions) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReadMentions) ProtoMessage()    {}
func (*TLMessagesReadMentions) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{273}
}
func (m *TLMessagesReadMentions) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReadMentions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReadMentions.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesReadMentions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReadMentions.Merge(m, src)
}
func (m *TLMessagesReadMentions) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReadMentions) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReadMentions.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReadMentions proto.InternalMessageInfo

func (m *TLMessagesReadMentions) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesReadMentions) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesReadMentions) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.readMessageContents#36a73f77 id:Vector<int> = messages.AffectedMessages;
//
type TLMessagesReadMessageContents struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Id                   []int32  `protobuf:"varint,3,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesReadMessageContents) Reset()         { *m = TLMessagesReadMessageContents{} }
func (m *TLMessagesReadMessageContents) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReadMessageContents) ProtoMessage()    {}
func (*TLMessagesReadMessageContents) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{274}
}
func (m *TLMessagesReadMessageContents) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReadMessageContents) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReadMessageContents.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesReadMessageContents) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReadMessageContents.Merge(m, src)
}
func (m *TLMessagesReadMessageContents) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReadMessageContents) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReadMessageContents.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReadMessageContents proto.InternalMessageInfo

func (m *TLMessagesReadMessageContents) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesReadMessageContents) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesReadMessageContents) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.receivedMessages#5a954c0 max_id:int = Vector<ReceivedNotifyMessage>;
//
type TLMessagesReceivedMessages struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	MaxId                int32    `protobuf:"varint,3,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesReceivedMessages) Reset()         { *m = TLMessagesReceivedMessages{} }
func (m *TLMessagesReceivedMessages) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReceivedMessages) ProtoMessage()    {}
func (*TLMessagesReceivedMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{275}
}
func (m *TLMessagesReceivedMessages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReceivedMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReceivedMessages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesReceivedMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReceivedMessages.Merge(m, src)
}
func (m *TLMessagesReceivedMessages) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReceivedMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReceivedMessages.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReceivedMessages proto.InternalMessageInfo

func (m *TLMessagesReceivedMessages) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesReceivedMessages) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesReceivedMessages) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.receivedQueue#55a5bb66 max_qts:int = Vector<long>;
//
type TLMessagesReceivedQueue struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	MaxQts               int32    `protobuf:"varint,3,opt,name=max_qts,json=maxQts,proto3" json:"max_qts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesReceivedQueue) Reset()         { *m = TLMessagesReceivedQueue{} }
func (m *TLMessagesReceivedQueue) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReceivedQueue) ProtoMessage()    {}
func (*TLMessagesReceivedQueue) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{276}
}
func (m *TLMessagesReceivedQueue) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReceivedQueue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReceivedQueue.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesReceivedQueue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReceivedQueue.Merge(m, src)
}
func (m *TLMessagesReceivedQueue) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReceivedQueue) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReceivedQueue.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReceivedQueue proto.InternalMessageInfo

func (m *TLMessagesReceivedQueue) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesReceivedQueue) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesReceivedQueue) GetMaxQts() int32 {
	if m != nil {
		return m.MaxQts
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.reorderPinnedDialogs#959ff644 flags:# force:flags.0?true order:Vector<InputPeer> = Bool;
//  messages.reorderPinnedDialogs#5b51d63f flags:# force:flags.0?true order:Vector<InputDialogPeer> = Bool;
//  messages.reorderPinnedDialogs#3b1adf37 flags:# force:flags.0?true folder_id:int order:Vector<InputDialogPeer> = Bool;
//
type TLMessagesReorderPinnedDialogs struct {
	Cmd                  TLCmd              `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string             `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32              `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Force                bool               `protobuf:"varint,4,opt,name=force,proto3" json:"force,omitempty"`
	Order959FF64471      []*InputPeer       `protobuf:"bytes,5,rep,name=order959FF64471,proto3" json:"order959FF64471,omitempty"`
	Order5B51D63F85      []*InputDialogPeer `protobuf:"bytes,6,rep,name=order5B51D63F85,proto3" json:"order5B51D63F85,omitempty"`
	FolderId             int32              `protobuf:"varint,7,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLMessagesReorderPinnedDialogs) Reset()         { *m = TLMessagesReorderPinnedDialogs{} }
func (m *TLMessagesReorderPinnedDialogs) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReorderPinnedDialogs) ProtoMessage()    {}
func (*TLMessagesReorderPinnedDialogs) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{277}
}
func (m *TLMessagesReorderPinnedDialogs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReorderPinnedDialogs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReorderPinnedDialogs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesReorderPinnedDialogs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReorderPinnedDialogs.Merge(m, src)
}
func (m *TLMessagesReorderPinnedDialogs) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReorderPinnedDialogs) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReorderPinnedDialogs.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReorderPinnedDialogs proto.InternalMessageInfo

func (m *TLMessagesReorderPinnedDialogs) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesReorderPinnedDialogs) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesReorderPinnedDialogs) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesReorderPinnedDialogs) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

func (m *TLMessagesReorderPinnedDialogs) GetOrder959FF64471() []*InputPeer {
	if m != nil {
		return m.Order959FF64471
	}
	return nil
}

func (m *TLMessagesReorderPinnedDialogs) GetOrder5B51D63F85() []*InputDialogPeer {
	if m != nil {
		return m.Order5B51D63F85
	}
	return nil
}

func (m *TLMessagesReorderPinnedDialogs) GetFolderId() int32 {
	if m != nil {
		return m.FolderId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.reorderStickerSets#78337739 flags:# masks:flags.0?true order:Vector<long> = Bool;
//  messages.reorderStickerSets#9fcfbc30 order:Vector<long> = Bool;
//
type TLMessagesReorderStickerSets struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32    `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Masks                bool     `protobuf:"varint,4,opt,name=masks,proto3" json:"masks,omitempty"`
	Order                []int64  `protobuf:"varint,5,rep,packed,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesReorderStickerSets) Reset()         { *m = TLMessagesReorderStickerSets{} }
func (m *TLMessagesReorderStickerSets) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReorderStickerSets) ProtoMessage()    {}
func (*TLMessagesReorderStickerSets) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{278}
}
func (m *TLMessagesReorderStickerSets) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReorderStickerSets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReorderStickerSets.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesReorderStickerSets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReorderStickerSets.Merge(m, src)
}
func (m *TLMessagesReorderStickerSets) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReorderStickerSets) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReorderStickerSets.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReorderStickerSets proto.InternalMessageInfo

func (m *TLMessagesReorderStickerSets) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesReorderStickerSets) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesReorderStickerSets) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesReorderStickerSets) GetMasks() bool {
	if m != nil {
		return m.Masks
	}
	return false
}

func (m *TLMessagesReorderStickerSets) GetOrder() []int64 {
	if m != nil {
		return m.Order
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.report#bd82b658 peer:InputPeer id:Vector<int> reason:ReportReason = Bool;
//
type TLMessagesReport struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   []int32       `protobuf:"varint,4,rep,packed,name=id,proto3" json:"id,omitempty"`
	Reason               *ReportReason `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesReport) Reset()         { *m = TLMessagesReport{} }
func (m *TLMessagesReport) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReport) ProtoMessage()    {}
func (*TLMessagesReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{279}
}
func (m *TLMessagesReport) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReport.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReport.Merge(m, src)
}
func (m *TLMessagesReport) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReport) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReport.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReport proto.InternalMessageInfo

func (m *TLMessagesReport) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesReport) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesReport) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesReport) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLMessagesReport) GetReason() *ReportReason {
	if m != nil {
		return m.Reason
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.reportEncryptedSpam#4b0c8c0f peer:InputEncryptedChat = Bool;
//
type TLMessagesReportEncryptedSpam struct {
	Cmd                  TLCmd               `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string              `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputEncryptedChat `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLMessagesReportEncryptedSpam) Reset()         { *m = TLMessagesReportEncryptedSpam{} }
func (m *TLMessagesReportEncryptedSpam) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReportEncryptedSpam) ProtoMessage()    {}
func (*TLMessagesReportEncryptedSpam) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{280}
}
func (m *TLMessagesReportEncryptedSpam) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReportEncryptedSpam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReportEncryptedSpam.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesReportEncryptedSpam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReportEncryptedSpam.Merge(m, src)
}
func (m *TLMessagesReportEncryptedSpam) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReportEncryptedSpam) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReportEncryptedSpam.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReportEncryptedSpam proto.InternalMessageInfo

func (m *TLMessagesReportEncryptedSpam) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesReportEncryptedSpam) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesReportEncryptedSpam) GetPeer() *InputEncryptedChat {
	if m != nil {
		return m.Peer
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.reportSpam#cf1592db peer:InputPeer = Bool;
//
type TLMessagesReportSpam struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesReportSpam) Reset()         { *m = TLMessagesReportSpam{} }
func (m *TLMessagesReportSpam) String() string { return proto.CompactTextString(m) }
func (*TLMessagesReportSpam) ProtoMessage()    {}
func (*TLMessagesReportSpam) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{281}
}
func (m *TLMessagesReportSpam) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesReportSpam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesReportSpam.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesReportSpam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesReportSpam.Merge(m, src)
}
func (m *TLMessagesReportSpam) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesReportSpam) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesReportSpam.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesReportSpam proto.InternalMessageInfo

func (m *TLMessagesReportSpam) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesReportSpam) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesReportSpam) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.requestEncryption#f64daf43 user_id:InputUser random_id:int g_a:bytes = EncryptedChat;
//
type TLMessagesRequestEncryption struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	UserId               *InputUser `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RandomId             int32      `protobuf:"varint,4,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	GA                   []byte     `protobuf:"bytes,5,opt,name=g_a,json=gA,proto3" json:"g_a,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesRequestEncryption) Reset()         { *m = TLMessagesRequestEncryption{} }
func (m *TLMessagesRequestEncryption) String() string { return proto.CompactTextString(m) }
func (*TLMessagesRequestEncryption) ProtoMessage()    {}
func (*TLMessagesRequestEncryption) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{282}
}
func (m *TLMessagesRequestEncryption) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesRequestEncryption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesRequestEncryption.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesRequestEncryption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesRequestEncryption.Merge(m, src)
}
func (m *TLMessagesRequestEncryption) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesRequestEncryption) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesRequestEncryption.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesRequestEncryption proto.InternalMessageInfo

func (m *TLMessagesRequestEncryption) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesRequestEncryption) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesRequestEncryption) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLMessagesRequestEncryption) GetRandomId() int32 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *TLMessagesRequestEncryption) GetGA() []byte {
	if m != nil {
		return m.GA
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.requestUrlAuth#e33f5613 peer:InputPeer msg_id:int button_id:int = UrlAuthResult;
//
type TLMessagesRequestUrlAuth struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	MsgId                int32      `protobuf:"varint,4,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	ButtonId             int32      `protobuf:"varint,5,opt,name=button_id,json=buttonId,proto3" json:"button_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesRequestUrlAuth) Reset()         { *m = TLMessagesRequestUrlAuth{} }
func (m *TLMessagesRequestUrlAuth) String() string { return proto.CompactTextString(m) }
func (*TLMessagesRequestUrlAuth) ProtoMessage()    {}
func (*TLMessagesRequestUrlAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{283}
}
func (m *TLMessagesRequestUrlAuth) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesRequestUrlAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesRequestUrlAuth.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesRequestUrlAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesRequestUrlAuth.Merge(m, src)
}
func (m *TLMessagesRequestUrlAuth) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesRequestUrlAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesRequestUrlAuth.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesRequestUrlAuth proto.InternalMessageInfo

func (m *TLMessagesRequestUrlAuth) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesRequestUrlAuth) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesRequestUrlAuth) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesRequestUrlAuth) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *TLMessagesRequestUrlAuth) GetButtonId() int32 {
	if m != nil {
		return m.ButtonId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.saveDraft#bc39e14b flags:# no_webpage:flags.1?true reply_to_msg_id:flags.0?int peer:InputPeer message:string entities:flags.3?Vector<MessageEntity> = Bool;
//
type TLMessagesSaveDraft struct {
	Cmd                  TLCmd            `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string           `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32            `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	NoWebpage            bool             `protobuf:"varint,4,opt,name=no_webpage,json=noWebpage,proto3" json:"no_webpage,omitempty"`
	ReplyToMsgId         int32            `protobuf:"varint,5,opt,name=reply_to_msg_id,json=replyToMsgId,proto3" json:"reply_to_msg_id,omitempty"`
	Peer                 *InputPeer       `protobuf:"bytes,6,opt,name=peer,proto3" json:"peer,omitempty"`
	Message              string           `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
	Entities             []*MessageEntity `protobuf:"bytes,8,rep,name=entities,proto3" json:"entities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLMessagesSaveDraft) Reset()         { *m = TLMessagesSaveDraft{} }
func (m *TLMessagesSaveDraft) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSaveDraft) ProtoMessage()    {}
func (*TLMessagesSaveDraft) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{284}
}
func (m *TLMessagesSaveDraft) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSaveDraft) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSaveDraft.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSaveDraft) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSaveDraft.Merge(m, src)
}
func (m *TLMessagesSaveDraft) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSaveDraft) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSaveDraft.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSaveDraft proto.InternalMessageInfo

func (m *TLMessagesSaveDraft) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesSaveDraft) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesSaveDraft) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesSaveDraft) GetNoWebpage() bool {
	if m != nil {
		return m.NoWebpage
	}
	return false
}

func (m *TLMessagesSaveDraft) GetReplyToMsgId() int32 {
	if m != nil {
		return m.ReplyToMsgId
	}
	return 0
}

func (m *TLMessagesSaveDraft) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSaveDraft) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TLMessagesSaveDraft) GetEntities() []*MessageEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.saveGif#327a30cb id:InputDocument unsave:Bool = Bool;
//
type TLMessagesSaveGif struct {
	Cmd                  TLCmd          `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string         `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Id                   *InputDocument `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Unsave               *Bool          `protobuf:"bytes,4,opt,name=unsave,proto3" json:"unsave,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TLMessagesSaveGif) Reset()         { *m = TLMessagesSaveGif{} }
func (m *TLMessagesSaveGif) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSaveGif) ProtoMessage()    {}
func (*TLMessagesSaveGif) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{285}
}
func (m *TLMessagesSaveGif) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSaveGif) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSaveGif.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSaveGif) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSaveGif.Merge(m, src)
}
func (m *TLMessagesSaveGif) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSaveGif) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSaveGif.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSaveGif proto.InternalMessageInfo

func (m *TLMessagesSaveGif) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesSaveGif) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesSaveGif) GetId() *InputDocument {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLMessagesSaveGif) GetUnsave() *Bool {
	if m != nil {
		return m.Unsave
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.saveRecentSticker#392718f8 flags:# attached:flags.0?true id:InputDocument unsave:Bool = Bool;
//  messages.saveRecentSticker#348e39bf id:InputDocument unsave:Bool = Bool;
//
type TLMessagesSaveRecentSticker struct {
	Cmd                  TLCmd          `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string         `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32          `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Attached             bool           `protobuf:"varint,4,opt,name=attached,proto3" json:"attached,omitempty"`
	Id                   *InputDocument `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	Unsave               *Bool          `protobuf:"bytes,6,opt,name=unsave,proto3" json:"unsave,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TLMessagesSaveRecentSticker) Reset()         { *m = TLMessagesSaveRecentSticker{} }
func (m *TLMessagesSaveRecentSticker) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSaveRecentSticker) ProtoMessage()    {}
func (*TLMessagesSaveRecentSticker) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{286}
}
func (m *TLMessagesSaveRecentSticker) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSaveRecentSticker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSaveRecentSticker.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSaveRecentSticker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSaveRecentSticker.Merge(m, src)
}
func (m *TLMessagesSaveRecentSticker) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSaveRecentSticker) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSaveRecentSticker.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSaveRecentSticker proto.InternalMessageInfo

func (m *TLMessagesSaveRecentSticker) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesSaveRecentSticker) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesSaveRecentSticker) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesSaveRecentSticker) GetAttached() bool {
	if m != nil {
		return m.Attached
	}
	return false
}

func (m *TLMessagesSaveRecentSticker) GetId() *InputDocument {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLMessagesSaveRecentSticker) GetUnsave() *Bool {
	if m != nil {
		return m.Unsave
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.search#39e9ea0 flags:# peer:InputPeer q:string from_id:flags.0?InputUser filter:MessagesFilter min_date:int max_date:int offset_id:int add_offset:int limit:int max_id:int min_id:int = messages.Messages;
//  messages.search#f288a275 flags:# peer:InputPeer q:string from_id:flags.0?InputUser filter:MessagesFilter min_date:int max_date:int offset:int max_id:int limit:int = messages.Messages;
//  messages.search#d4569248 flags:# important_only:flags.0?true peer:InputPeer q:string filter:MessagesFilter min_date:int max_date:int offset:int max_id:int limit:int = messages.Messages;
//  messages.search#8614ef68 flags:# peer:InputPeer q:string from_id:flags.0?InputUser filter:MessagesFilter min_date:int max_date:int offset_id:int add_offset:int limit:int max_id:int min_id:int hash:int = messages.Messages;
//  messages.search#4e17810b flags:# peer:InputPeer q:string from_id:flags.0?InputUser top_msg_id:flags.1?int filter:MessagesFilter min_date:int max_date:int offset_id:int add_offset:int limit:int max_id:int min_id:int hash:int = messages.Messages;
//  messages.search#c352eec flags:# peer:InputPeer q:string from_id:flags.0?InputPeer top_msg_id:flags.1?int filter:MessagesFilter min_date:int max_date:int offset_id:int add_offset:int limit:int max_id:int min_id:int hash:int = messages.Messages;
//
type TLMessagesSearch struct {
	Cmd                  TLCmd           `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string          `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32           `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Peer                 *InputPeer      `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	Q                    string          `protobuf:"bytes,5,opt,name=q,proto3" json:"q,omitempty"`
	FromId39E9EA071      *InputUser      `protobuf:"bytes,6,opt,name=from_id39E9EA071,json=fromId39E9EA071,proto3" json:"from_id39E9EA071,omitempty"`
	Filter               *MessagesFilter `protobuf:"bytes,7,opt,name=filter,proto3" json:"filter,omitempty"`
	MinDate              int32           `protobuf:"varint,8,opt,name=min_date,json=minDate,proto3" json:"min_date,omitempty"`
	MaxDate              int32           `protobuf:"varint,9,opt,name=max_date,json=maxDate,proto3" json:"max_date,omitempty"`
	OffsetId             int32           `protobuf:"varint,10,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	AddOffset            int32           `protobuf:"varint,11,opt,name=add_offset,json=addOffset,proto3" json:"add_offset,omitempty"`
	Limit                int32           `protobuf:"varint,12,opt,name=limit,proto3" json:"limit,omitempty"`
	MaxId                int32           `protobuf:"varint,13,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	MinId                int32           `protobuf:"varint,14,opt,name=min_id,json=minId,proto3" json:"min_id,omitempty"`
	Offset               int32           `protobuf:"varint,15,opt,name=offset,proto3" json:"offset,omitempty"`
	ImportantOnly        bool            `protobuf:"varint,16,opt,name=important_only,json=importantOnly,proto3" json:"important_only,omitempty"`
	Hash                 int32           `protobuf:"varint,17,opt,name=hash,proto3" json:"hash,omitempty"`
	TopMsgId             int32           `protobuf:"varint,18,opt,name=top_msg_id,json=topMsgId,proto3" json:"top_msg_id,omitempty"`
	FromIdC352EEC120     *InputPeer      `protobuf:"bytes,19,opt,name=from_idC352EEC120,json=fromIdC352EEC120,proto3" json:"from_idC352EEC120,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLMessagesSearch) Reset()         { *m = TLMessagesSearch{} }
func (m *TLMessagesSearch) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSearch) ProtoMessage()    {}
func (*TLMessagesSearch) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{287}
}
func (m *TLMessagesSearch) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSearch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSearch.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSearch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSearch.Merge(m, src)
}
func (m *TLMessagesSearch) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSearch) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSearch.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSearch proto.InternalMessageInfo

func (m *TLMessagesSearch) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesSearch) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesSearch) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesSearch) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSearch) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

func (m *TLMessagesSearch) GetFromId39E9EA071() *InputUser {
	if m != nil {
		return m.FromId39E9EA071
	}
	return nil
}

func (m *TLMessagesSearch) GetFilter() *MessagesFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *TLMessagesSearch) GetMinDate() int32 {
	if m != nil {
		return m.MinDate
	}
	return 0
}

func (m *TLMessagesSearch) GetMaxDate() int32 {
	if m != nil {
		return m.MaxDate
	}
	return 0
}

func (m *TLMessagesSearch) GetOffsetId() int32 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLMessagesSearch) GetAddOffset() int32 {
	if m != nil {
		return m.AddOffset
	}
	return 0
}

func (m *TLMessagesSearch) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLMessagesSearch) GetMaxId() int32 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

func (m *TLMessagesSearch) GetMinId() int32 {
	if m != nil {
		return m.MinId
	}
	return 0
}

func (m *TLMessagesSearch) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TLMessagesSearch) GetImportantOnly() bool {
	if m != nil {
		return m.ImportantOnly
	}
	return false
}

func (m *TLMessagesSearch) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

func (m *TLMessagesSearch) GetTopMsgId() int32 {
	if m != nil {
		return m.TopMsgId
	}
	return 0
}

func (m *TLMessagesSearch) GetFromIdC352EEC120() *InputPeer {
	if m != nil {
		return m.FromIdC352EEC120
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.searchGifs#bf9a776b q:string offset:int = messages.FoundGifs;
//
type TLMessagesSearchGifs struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Q                    string   `protobuf:"bytes,3,opt,name=q,proto3" json:"q,omitempty"`
	Offset               int32    `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesSearchGifs) Reset()         { *m = TLMessagesSearchGifs{} }
func (m *TLMessagesSearchGifs) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSearchGifs) ProtoMessage()    {}
func (*TLMessagesSearchGifs) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{288}
}
func (m *TLMessagesSearchGifs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSearchGifs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSearchGifs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSearchGifs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSearchGifs.Merge(m, src)
}
func (m *TLMessagesSearchGifs) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSearchGifs) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSearchGifs.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSearchGifs proto.InternalMessageInfo

func (m *TLMessagesSearchGifs) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesSearchGifs) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesSearchGifs) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

func (m *TLMessagesSearchGifs) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.searchGlobal#9e3cacb0 q:string offset_date:int offset_peer:InputPeer offset_id:int limit:int = messages.Messages;
//  messages.searchGlobal#f79c611 q:string offset_rate:int offset_peer:InputPeer offset_id:int limit:int = messages.Messages;
//  messages.searchGlobal#bf7225a4 flags:# folder_id:flags.0?int q:string offset_rate:int offset_peer:InputPeer offset_id:int limit:int = messages.Messages;
//  messages.searchGlobal#4bc6589a flags:# folder_id:flags.0?int q:string filter:MessagesFilter min_date:int max_date:int offset_rate:int offset_peer:InputPeer offset_id:int limit:int = messages.Messages;
//
type TLMessagesSearchGlobal struct {
	Cmd                  TLCmd           `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string          `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Q                    string          `protobuf:"bytes,3,opt,name=q,proto3" json:"q,omitempty"`
	OffsetDate           int32           `protobuf:"varint,4,opt,name=offset_date,json=offsetDate,proto3" json:"offset_date,omitempty"`
	OffsetPeer           *InputPeer      `protobuf:"bytes,5,opt,name=offset_peer,json=offsetPeer,proto3" json:"offset_peer,omitempty"`
	OffsetId             int32           `protobuf:"varint,6,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	Limit                int32           `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	OffsetRate           int32           `protobuf:"varint,8,opt,name=offset_rate,json=offsetRate,proto3" json:"offset_rate,omitempty"`
	Flags                int32           `protobuf:"varint,9,opt,name=flags,proto3" json:"flags,omitempty"`
	FolderId             int32           `protobuf:"varint,10,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	Filter               *MessagesFilter `protobuf:"bytes,11,opt,name=filter,proto3" json:"filter,omitempty"`
	MinDate              int32           `protobuf:"varint,12,opt,name=min_date,json=minDate,proto3" json:"min_date,omitempty"`
	MaxDate              int32           `protobuf:"varint,13,opt,name=max_date,json=maxDate,proto3" json:"max_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLMessagesSearchGlobal) Reset()         { *m = TLMessagesSearchGlobal{} }
func (m *TLMessagesSearchGlobal) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSearchGlobal) ProtoMessage()    {}
func (*TLMessagesSearchGlobal) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{289}
}
func (m *TLMessagesSearchGlobal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSearchGlobal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSearchGlobal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSearchGlobal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSearchGlobal.Merge(m, src)
}
func (m *TLMessagesSearchGlobal) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSearchGlobal) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSearchGlobal.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSearchGlobal proto.InternalMessageInfo

func (m *TLMessagesSearchGlobal) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesSearchGlobal) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesSearchGlobal) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

func (m *TLMessagesSearchGlobal) GetOffsetDate() int32 {
	if m != nil {
		return m.OffsetDate
	}
	return 0
}

func (m *TLMessagesSearchGlobal) GetOffsetPeer() *InputPeer {
	if m != nil {
		return m.OffsetPeer
	}
	return nil
}

func (m *TLMessagesSearchGlobal) GetOffsetId() int32 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLMessagesSearchGlobal) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLMessagesSearchGlobal) GetOffsetRate() int32 {
	if m != nil {
		return m.OffsetRate
	}
	return 0
}

func (m *TLMessagesSearchGlobal) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesSearchGlobal) GetFolderId() int32 {
	if m != nil {
		return m.FolderId
	}
	return 0
}

func (m *TLMessagesSearchGlobal) GetFilter() *MessagesFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *TLMessagesSearchGlobal) GetMinDate() int32 {
	if m != nil {
		return m.MinDate
	}
	return 0
}

func (m *TLMessagesSearchGlobal) GetMaxDate() int32 {
	if m != nil {
		return m.MaxDate
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.searchStickerSets#c2b7d08b flags:# exclude_featured:flags.0?true q:string hash:int = messages.FoundStickerSets;
//
type TLMessagesSearchStickerSets struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32    `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	ExcludeFeatured      bool     `protobuf:"varint,4,opt,name=exclude_featured,json=excludeFeatured,proto3" json:"exclude_featured,omitempty"`
	Q                    string   `protobuf:"bytes,5,opt,name=q,proto3" json:"q,omitempty"`
	Hash                 int32    `protobuf:"varint,6,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesSearchStickerSets) Reset()         { *m = TLMessagesSearchStickerSets{} }
func (m *TLMessagesSearchStickerSets) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSearchStickerSets) ProtoMessage()    {}
func (*TLMessagesSearchStickerSets) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{290}
}
func (m *TLMessagesSearchStickerSets) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSearchStickerSets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSearchStickerSets.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSearchStickerSets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSearchStickerSets.Merge(m, src)
}
func (m *TLMessagesSearchStickerSets) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSearchStickerSets) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSearchStickerSets.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSearchStickerSets proto.InternalMessageInfo

func (m *TLMessagesSearchStickerSets) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesSearchStickerSets) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesSearchStickerSets) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesSearchStickerSets) GetExcludeFeatured() bool {
	if m != nil {
		return m.ExcludeFeatured
	}
	return false
}

func (m *TLMessagesSearchStickerSets) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

func (m *TLMessagesSearchStickerSets) GetHash() int32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.sendBroadcast#bf73f4da contacts:Vector<InputUser> random_id:Vector<long> message:string media:InputMedia = Updates;
//
type TLMessagesSendBroadcast struct {
	Cmd                  TLCmd        `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string       `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Contacts             []*InputUser `protobuf:"bytes,3,rep,name=contacts,proto3" json:"contacts,omitempty"`
	RandomId             []int64      `protobuf:"varint,4,rep,packed,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	Message              string       `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Media                *InputMedia  `protobuf:"bytes,6,opt,name=media,proto3" json:"media,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TLMessagesSendBroadcast) Reset()         { *m = TLMessagesSendBroadcast{} }
func (m *TLMessagesSendBroadcast) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendBroadcast) ProtoMessage()    {}
func (*TLMessagesSendBroadcast) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{291}
}
func (m *TLMessagesSendBroadcast) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendBroadcast) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendBroadcast.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSendBroadcast) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendBroadcast.Merge(m, src)
}
func (m *TLMessagesSendBroadcast) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendBroadcast) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendBroadcast.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendBroadcast proto.InternalMessageInfo

func (m *TLMessagesSendBroadcast) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesSendBroadcast) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesSendBroadcast) GetContacts() []*InputUser {
	if m != nil {
		return m.Contacts
	}
	return nil
}

func (m *TLMessagesSendBroadcast) GetRandomId() []int64 {
	if m != nil {
		return m.RandomId
	}
	return nil
}

func (m *TLMessagesSendBroadcast) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TLMessagesSendBroadcast) GetMedia() *InputMedia {
	if m != nil {
		return m.Media
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.sendEncrypted#a9776773 peer:InputEncryptedChat random_id:long data:bytes = messages.SentEncryptedMessage;
//  messages.sendEncrypted#44fa7a15 flags:# silent:flags.0?true peer:InputEncryptedChat random_id:long data:bytes = messages.SentEncryptedMessage;
//
type TLMessagesSendEncrypted struct {
	Cmd                  TLCmd               `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string              `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputEncryptedChat `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	RandomId             int64               `protobuf:"varint,4,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	Data                 []byte              `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	Flags                int32               `protobuf:"varint,6,opt,name=flags,proto3" json:"flags,omitempty"`
	Silent               bool                `protobuf:"varint,7,opt,name=silent,proto3" json:"silent,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLMessagesSendEncrypted) Reset()         { *m = TLMessagesSendEncrypted{} }
func (m *TLMessagesSendEncrypted) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendEncrypted) ProtoMessage()    {}
func (*TLMessagesSendEncrypted) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{292}
}
func (m *TLMessagesSendEncrypted) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendEncrypted) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendEncrypted.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSendEncrypted) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendEncrypted.Merge(m, src)
}
func (m *TLMessagesSendEncrypted) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendEncrypted) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendEncrypted.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendEncrypted proto.InternalMessageInfo

func (m *TLMessagesSendEncrypted) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesSendEncrypted) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesSendEncrypted) GetPeer() *InputEncryptedChat {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSendEncrypted) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *TLMessagesSendEncrypted) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TLMessagesSendEncrypted) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesSendEncrypted) GetSilent() bool {
	if m != nil {
		return m.Silent
	}
	return false
}

///////////////////////////////////////////////////////////////////////////////
//  messages.sendEncryptedFile#9a901b66 peer:InputEncryptedChat random_id:long data:bytes file:InputEncryptedFile = messages.SentEncryptedMessage;
//  messages.sendEncryptedFile#5559481d flags:# silent:flags.0?true peer:InputEncryptedChat random_id:long data:bytes file:InputEncryptedFile = messages.SentEncryptedMessage;
//
type TLMessagesSendEncryptedFile struct {
	Cmd                  TLCmd               `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string              `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputEncryptedChat `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	RandomId             int64               `protobuf:"varint,4,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	Data                 []byte              `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	File                 *InputEncryptedFile `protobuf:"bytes,6,opt,name=file,proto3" json:"file,omitempty"`
	Flags                int32               `protobuf:"varint,7,opt,name=flags,proto3" json:"flags,omitempty"`
	Silent               bool                `protobuf:"varint,8,opt,name=silent,proto3" json:"silent,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLMessagesSendEncryptedFile) Reset()         { *m = TLMessagesSendEncryptedFile{} }
func (m *TLMessagesSendEncryptedFile) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendEncryptedFile) ProtoMessage()    {}
func (*TLMessagesSendEncryptedFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{293}
}
func (m *TLMessagesSendEncryptedFile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendEncryptedFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendEncryptedFile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSendEncryptedFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendEncryptedFile.Merge(m, src)
}
func (m *TLMessagesSendEncryptedFile) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendEncryptedFile) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendEncryptedFile.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendEncryptedFile proto.InternalMessageInfo

func (m *TLMessagesSendEncryptedFile) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesSendEncryptedFile) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesSendEncryptedFile) GetPeer() *InputEncryptedChat {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSendEncryptedFile) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *TLMessagesSendEncryptedFile) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TLMessagesSendEncryptedFile) GetFile() *InputEncryptedFile {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *TLMessagesSendEncryptedFile) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesSendEncryptedFile) GetSilent() bool {
	if m != nil {
		return m.Silent
	}
	return false
}

///////////////////////////////////////////////////////////////////////////////
//  messages.sendEncryptedService#32d439a4 peer:InputEncryptedChat random_id:long data:bytes = messages.SentEncryptedMessage;
//
type TLMessagesSendEncryptedService struct {
	Cmd                  TLCmd               `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string              `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputEncryptedChat `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	RandomId             int64               `protobuf:"varint,4,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	Data                 []byte              `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLMessagesSendEncryptedService) Reset()         { *m = TLMessagesSendEncryptedService{} }
func (m *TLMessagesSendEncryptedService) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendEncryptedService) ProtoMessage()    {}
func (*TLMessagesSendEncryptedService) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{294}
}
func (m *TLMessagesSendEncryptedService) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendEncryptedService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendEncryptedService.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSendEncryptedService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendEncryptedService.Merge(m, src)
}
func (m *TLMessagesSendEncryptedService) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendEncryptedService) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendEncryptedService.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendEncryptedService proto.InternalMessageInfo

func (m *TLMessagesSendEncryptedService) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesSendEncryptedService) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesSendEncryptedService) GetPeer() *InputEncryptedChat {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSendEncryptedService) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *TLMessagesSendEncryptedService) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.sendInlineBotResult#b16e06fe flags:# silent:flags.5?true background:flags.6?true clear_draft:flags.7?true peer:InputPeer reply_to_msg_id:flags.0?int random_id:long query_id:long id:string = Updates;
//  messages.sendInlineBotResult#220815b0 flags:# silent:flags.5?true background:flags.6?true clear_draft:flags.7?true hide_via:flags.11?true peer:InputPeer reply_to_msg_id:flags.0?int random_id:long query_id:long id:string schedule_date:flags.10?int = Updates;
//
type TLMessagesSendInlineBotResult struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32      `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Silent               bool       `protobuf:"varint,4,opt,name=silent,proto3" json:"silent,omitempty"`
	Background           bool       `protobuf:"varint,5,opt,name=background,proto3" json:"background,omitempty"`
	ClearDraft           bool       `protobuf:"varint,6,opt,name=clear_draft,json=clearDraft,proto3" json:"clear_draft,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,7,opt,name=peer,proto3" json:"peer,omitempty"`
	ReplyToMsgId         int32      `protobuf:"varint,8,opt,name=reply_to_msg_id,json=replyToMsgId,proto3" json:"reply_to_msg_id,omitempty"`
	RandomId             int64      `protobuf:"varint,9,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	QueryId              int64      `protobuf:"varint,10,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	Id                   string     `protobuf:"bytes,11,opt,name=id,proto3" json:"id,omitempty"`
	HideVia              bool       `protobuf:"varint,12,opt,name=hide_via,json=hideVia,proto3" json:"hide_via,omitempty"`
	ScheduleDate         int32      `protobuf:"varint,13,opt,name=schedule_date,json=scheduleDate,proto3" json:"schedule_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesSendInlineBotResult) Reset()         { *m = TLMessagesSendInlineBotResult{} }
func (m *TLMessagesSendInlineBotResult) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendInlineBotResult) ProtoMessage()    {}
func (*TLMessagesSendInlineBotResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{295}
}
func (m *TLMessagesSendInlineBotResult) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendInlineBotResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendInlineBotResult.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSendInlineBotResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendInlineBotResult.Merge(m, src)
}
func (m *TLMessagesSendInlineBotResult) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendInlineBotResult) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendInlineBotResult.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendInlineBotResult proto.InternalMessageInfo

func (m *TLMessagesSendInlineBotResult) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesSendInlineBotResult) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesSendInlineBotResult) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesSendInlineBotResult) GetSilent() bool {
	if m != nil {
		return m.Silent
	}
	return false
}

func (m *TLMessagesSendInlineBotResult) GetBackground() bool {
	if m != nil {
		return m.Background
	}
	return false
}

func (m *TLMessagesSendInlineBotResult) GetClearDraft() bool {
	if m != nil {
		return m.ClearDraft
	}
	return false
}

func (m *TLMessagesSendInlineBotResult) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSendInlineBotResult) GetReplyToMsgId() int32 {
	if m != nil {
		return m.ReplyToMsgId
	}
	return 0
}

func (m *TLMessagesSendInlineBotResult) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *TLMessagesSendInlineBotResult) GetQueryId() int64 {
	if m != nil {
		return m.QueryId
	}
	return 0
}

func (m *TLMessagesSendInlineBotResult) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TLMessagesSendInlineBotResult) GetHideVia() bool {
	if m != nil {
		return m.HideVia
	}
	return false
}

func (m *TLMessagesSendInlineBotResult) GetScheduleDate() int32 {
	if m != nil {
		return m.ScheduleDate
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.sendMedia#c8f16791 flags:# silent:flags.5?true background:flags.6?true clear_draft:flags.7?true peer:InputPeer reply_to_msg_id:flags.0?int media:InputMedia random_id:long reply_markup:flags.2?ReplyMarkup = Updates;
//  messages.sendMedia#b8d1262b flags:# silent:flags.5?true background:flags.6?true clear_draft:flags.7?true peer:InputPeer reply_to_msg_id:flags.0?int media:InputMedia message:string random_id:long reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> = Updates;
//  messages.sendMedia#3491eba9 flags:# silent:flags.5?true background:flags.6?true clear_draft:flags.7?true peer:InputPeer reply_to_msg_id:flags.0?int media:InputMedia message:string random_id:long reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> schedule_date:flags.10?int = Updates;
//
type TLMessagesSendMedia struct {
	Cmd                  TLCmd            `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string           `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32            `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Silent               bool             `protobuf:"varint,4,opt,name=silent,proto3" json:"silent,omitempty"`
	Background           bool             `protobuf:"varint,5,opt,name=background,proto3" json:"background,omitempty"`
	ClearDraft           bool             `protobuf:"varint,6,opt,name=clear_draft,json=clearDraft,proto3" json:"clear_draft,omitempty"`
	Peer                 *InputPeer       `protobuf:"bytes,7,opt,name=peer,proto3" json:"peer,omitempty"`
	ReplyToMsgId         int32            `protobuf:"varint,8,opt,name=reply_to_msg_id,json=replyToMsgId,proto3" json:"reply_to_msg_id,omitempty"`
	Media                *InputMedia      `protobuf:"bytes,9,opt,name=media,proto3" json:"media,omitempty"`
	RandomId             int64            `protobuf:"varint,10,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	ReplyMarkup          *ReplyMarkup     `protobuf:"bytes,11,opt,name=reply_markup,json=replyMarkup,proto3" json:"reply_markup,omitempty"`
	Message              string           `protobuf:"bytes,12,opt,name=message,proto3" json:"message,omitempty"`
	Entities             []*MessageEntity `protobuf:"bytes,13,rep,name=entities,proto3" json:"entities,omitempty"`
	ScheduleDate         int32            `protobuf:"varint,14,opt,name=schedule_date,json=scheduleDate,proto3" json:"schedule_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLMessagesSendMedia) Reset()         { *m = TLMessagesSendMedia{} }
func (m *TLMessagesSendMedia) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendMedia) ProtoMessage()    {}
func (*TLMessagesSendMedia) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{296}
}
func (m *TLMessagesSendMedia) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendMedia) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendMedia.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSendMedia) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendMedia.Merge(m, src)
}
func (m *TLMessagesSendMedia) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendMedia) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendMedia.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendMedia proto.InternalMessageInfo

func (m *TLMessagesSendMedia) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesSendMedia) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesSendMedia) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesSendMedia) GetSilent() bool {
	if m != nil {
		return m.Silent
	}
	return false
}

func (m *TLMessagesSendMedia) GetBackground() bool {
	if m != nil {
		return m.Background
	}
	return false
}

func (m *TLMessagesSendMedia) GetClearDraft() bool {
	if m != nil {
		return m.ClearDraft
	}
	return false
}

func (m *TLMessagesSendMedia) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSendMedia) GetReplyToMsgId() int32 {
	if m != nil {
		return m.ReplyToMsgId
	}
	return 0
}

func (m *TLMessagesSendMedia) GetMedia() *InputMedia {
	if m != nil {
		return m.Media
	}
	return nil
}

func (m *TLMessagesSendMedia) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *TLMessagesSendMedia) GetReplyMarkup() *ReplyMarkup {
	if m != nil {
		return m.ReplyMarkup
	}
	return nil
}

func (m *TLMessagesSendMedia) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TLMessagesSendMedia) GetEntities() []*MessageEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

func (m *TLMessagesSendMedia) GetScheduleDate() int32 {
	if m != nil {
		return m.ScheduleDate
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.sendMessage#fa88427a flags:# no_webpage:flags.1?true silent:flags.5?true background:flags.6?true clear_draft:flags.7?true peer:InputPeer reply_to_msg_id:flags.0?int message:string random_id:long reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> = Updates;
//  messages.sendMessage#520c3870 flags:# no_webpage:flags.1?true silent:flags.5?true background:flags.6?true clear_draft:flags.7?true peer:InputPeer reply_to_msg_id:flags.0?int message:string random_id:long reply_markup:flags.2?ReplyMarkup entities:flags.3?Vector<MessageEntity> schedule_date:flags.10?int = Updates;
//
type TLMessagesSendMessage struct {
	Cmd                  TLCmd            `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string           `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32            `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	NoWebpage            bool             `protobuf:"varint,4,opt,name=no_webpage,json=noWebpage,proto3" json:"no_webpage,omitempty"`
	Silent               bool             `protobuf:"varint,5,opt,name=silent,proto3" json:"silent,omitempty"`
	Background           bool             `protobuf:"varint,6,opt,name=background,proto3" json:"background,omitempty"`
	ClearDraft           bool             `protobuf:"varint,7,opt,name=clear_draft,json=clearDraft,proto3" json:"clear_draft,omitempty"`
	Peer                 *InputPeer       `protobuf:"bytes,8,opt,name=peer,proto3" json:"peer,omitempty"`
	ReplyToMsgId         int32            `protobuf:"varint,9,opt,name=reply_to_msg_id,json=replyToMsgId,proto3" json:"reply_to_msg_id,omitempty"`
	Message              string           `protobuf:"bytes,10,opt,name=message,proto3" json:"message,omitempty"`
	RandomId             int64            `protobuf:"varint,11,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	ReplyMarkup          *ReplyMarkup     `protobuf:"bytes,12,opt,name=reply_markup,json=replyMarkup,proto3" json:"reply_markup,omitempty"`
	Entities             []*MessageEntity `protobuf:"bytes,13,rep,name=entities,proto3" json:"entities,omitempty"`
	ScheduleDate         int32            `protobuf:"varint,14,opt,name=schedule_date,json=scheduleDate,proto3" json:"schedule_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLMessagesSendMessage) Reset()         { *m = TLMessagesSendMessage{} }
func (m *TLMessagesSendMessage) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendMessage) ProtoMessage()    {}
func (*TLMessagesSendMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{297}
}
func (m *TLMessagesSendMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSendMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendMessage.Merge(m, src)
}
func (m *TLMessagesSendMessage) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendMessage proto.InternalMessageInfo

func (m *TLMessagesSendMessage) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesSendMessage) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesSendMessage) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesSendMessage) GetNoWebpage() bool {
	if m != nil {
		return m.NoWebpage
	}
	return false
}

func (m *TLMessagesSendMessage) GetSilent() bool {
	if m != nil {
		return m.Silent
	}
	return false
}

func (m *TLMessagesSendMessage) GetBackground() bool {
	if m != nil {
		return m.Background
	}
	return false
}

func (m *TLMessagesSendMessage) GetClearDraft() bool {
	if m != nil {
		return m.ClearDraft
	}
	return false
}

func (m *TLMessagesSendMessage) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSendMessage) GetReplyToMsgId() int32 {
	if m != nil {
		return m.ReplyToMsgId
	}
	return 0
}

func (m *TLMessagesSendMessage) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TLMessagesSendMessage) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *TLMessagesSendMessage) GetReplyMarkup() *ReplyMarkup {
	if m != nil {
		return m.ReplyMarkup
	}
	return nil
}

func (m *TLMessagesSendMessage) GetEntities() []*MessageEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

func (m *TLMessagesSendMessage) GetScheduleDate() int32 {
	if m != nil {
		return m.ScheduleDate
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.sendMultiMedia#2095512f flags:# silent:flags.5?true background:flags.6?true clear_draft:flags.7?true peer:InputPeer reply_to_msg_id:flags.0?int multi_media:Vector<InputSingleMedia> = Updates;
//  messages.sendMultiMedia#cc0110cb flags:# silent:flags.5?true background:flags.6?true clear_draft:flags.7?true peer:InputPeer reply_to_msg_id:flags.0?int multi_media:Vector<InputSingleMedia> schedule_date:flags.10?int = Updates;
//
type TLMessagesSendMultiMedia struct {
	Cmd                  TLCmd               `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string              `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32               `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Silent               bool                `protobuf:"varint,4,opt,name=silent,proto3" json:"silent,omitempty"`
	Background           bool                `protobuf:"varint,5,opt,name=background,proto3" json:"background,omitempty"`
	ClearDraft           bool                `protobuf:"varint,6,opt,name=clear_draft,json=clearDraft,proto3" json:"clear_draft,omitempty"`
	Peer                 *InputPeer          `protobuf:"bytes,7,opt,name=peer,proto3" json:"peer,omitempty"`
	ReplyToMsgId         int32               `protobuf:"varint,8,opt,name=reply_to_msg_id,json=replyToMsgId,proto3" json:"reply_to_msg_id,omitempty"`
	MultiMedia           []*InputSingleMedia `protobuf:"bytes,9,rep,name=multi_media,json=multiMedia,proto3" json:"multi_media,omitempty"`
	ScheduleDate         int32               `protobuf:"varint,10,opt,name=schedule_date,json=scheduleDate,proto3" json:"schedule_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLMessagesSendMultiMedia) Reset()         { *m = TLMessagesSendMultiMedia{} }
func (m *TLMessagesSendMultiMedia) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendMultiMedia) ProtoMessage()    {}
func (*TLMessagesSendMultiMedia) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{298}
}
func (m *TLMessagesSendMultiMedia) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendMultiMedia) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendMultiMedia.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSendMultiMedia) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendMultiMedia.Merge(m, src)
}
func (m *TLMessagesSendMultiMedia) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendMultiMedia) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendMultiMedia.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendMultiMedia proto.InternalMessageInfo

func (m *TLMessagesSendMultiMedia) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesSendMultiMedia) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesSendMultiMedia) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesSendMultiMedia) GetSilent() bool {
	if m != nil {
		return m.Silent
	}
	return false
}

func (m *TLMessagesSendMultiMedia) GetBackground() bool {
	if m != nil {
		return m.Background
	}
	return false
}

func (m *TLMessagesSendMultiMedia) GetClearDraft() bool {
	if m != nil {
		return m.ClearDraft
	}
	return false
}

func (m *TLMessagesSendMultiMedia) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSendMultiMedia) GetReplyToMsgId() int32 {
	if m != nil {
		return m.ReplyToMsgId
	}
	return 0
}

func (m *TLMessagesSendMultiMedia) GetMultiMedia() []*InputSingleMedia {
	if m != nil {
		return m.MultiMedia
	}
	return nil
}

func (m *TLMessagesSendMultiMedia) GetScheduleDate() int32 {
	if m != nil {
		return m.ScheduleDate
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.sendScheduledMessages#bd38850a peer:InputPeer id:Vector<int> = Updates;
//
type TLMessagesSendScheduledMessages struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   []int32    `protobuf:"varint,4,rep,packed,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesSendScheduledMessages) Reset()         { *m = TLMessagesSendScheduledMessages{} }
func (m *TLMessagesSendScheduledMessages) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendScheduledMessages) ProtoMessage()    {}
func (*TLMessagesSendScheduledMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{299}
}
func (m *TLMessagesSendScheduledMessages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendScheduledMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendScheduledMessages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSendScheduledMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendScheduledMessages.Merge(m, src)
}
func (m *TLMessagesSendScheduledMessages) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendScheduledMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendScheduledMessages.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendScheduledMessages proto.InternalMessageInfo

func (m *TLMessagesSendScheduledMessages) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesSendScheduledMessages) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesSendScheduledMessages) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSendScheduledMessages) GetId() []int32 {
	if m != nil {
		return m.Id
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.sendScreenshotNotification#c97df020 peer:InputPeer reply_to_msg_id:int random_id:long = Updates;
//
type TLMessagesSendScreenshotNotification struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	ReplyToMsgId         int32      `protobuf:"varint,4,opt,name=reply_to_msg_id,json=replyToMsgId,proto3" json:"reply_to_msg_id,omitempty"`
	RandomId             int64      `protobuf:"varint,5,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesSendScreenshotNotification) Reset()         { *m = TLMessagesSendScreenshotNotification{} }
func (m *TLMessagesSendScreenshotNotification) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendScreenshotNotification) ProtoMessage()    {}
func (*TLMessagesSendScreenshotNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{300}
}
func (m *TLMessagesSendScreenshotNotification) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendScreenshotNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendScreenshotNotification.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSendScreenshotNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendScreenshotNotification.Merge(m, src)
}
func (m *TLMessagesSendScreenshotNotification) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendScreenshotNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendScreenshotNotification.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendScreenshotNotification proto.InternalMessageInfo

func (m *TLMessagesSendScreenshotNotification) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesSendScreenshotNotification) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesSendScreenshotNotification) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSendScreenshotNotification) GetReplyToMsgId() int32 {
	if m != nil {
		return m.ReplyToMsgId
	}
	return 0
}

func (m *TLMessagesSendScreenshotNotification) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.sendVote#10ea6184 peer:InputPeer msg_id:int options:Vector<bytes> = Updates;
//
type TLMessagesSendVote struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	MsgId                int32      `protobuf:"varint,4,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	Options              [][]byte   `protobuf:"bytes,5,rep,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesSendVote) Reset()         { *m = TLMessagesSendVote{} }
func (m *TLMessagesSendVote) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSendVote) ProtoMessage()    {}
func (*TLMessagesSendVote) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{301}
}
func (m *TLMessagesSendVote) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSendVote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSendVote.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSendVote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSendVote.Merge(m, src)
}
func (m *TLMessagesSendVote) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSendVote) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSendVote.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSendVote proto.InternalMessageInfo

func (m *TLMessagesSendVote) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesSendVote) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesSendVote) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSendVote) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *TLMessagesSendVote) GetOptions() [][]byte {
	if m != nil {
		return m.Options
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.setBotCallbackAnswer#d58f130a flags:# alert:flags.1?true query_id:long message:flags.0?string url:flags.2?string cache_time:int = Bool;
//  messages.setBotCallbackAnswer#481c591a flags:# alert:flags.1?true query_id:long message:flags.0?string = Bool;
//
type TLMessagesSetBotCallbackAnswer struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32    `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Alert                bool     `protobuf:"varint,4,opt,name=alert,proto3" json:"alert,omitempty"`
	QueryId              int64    `protobuf:"varint,5,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	Message              string   `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	Url                  string   `protobuf:"bytes,7,opt,name=url,proto3" json:"url,omitempty"`
	CacheTime            int32    `protobuf:"varint,8,opt,name=cache_time,json=cacheTime,proto3" json:"cache_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesSetBotCallbackAnswer) Reset()         { *m = TLMessagesSetBotCallbackAnswer{} }
func (m *TLMessagesSetBotCallbackAnswer) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSetBotCallbackAnswer) ProtoMessage()    {}
func (*TLMessagesSetBotCallbackAnswer) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{302}
}
func (m *TLMessagesSetBotCallbackAnswer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSetBotCallbackAnswer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSetBotCallbackAnswer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSetBotCallbackAnswer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSetBotCallbackAnswer.Merge(m, src)
}
func (m *TLMessagesSetBotCallbackAnswer) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSetBotCallbackAnswer) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSetBotCallbackAnswer.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSetBotCallbackAnswer proto.InternalMessageInfo

func (m *TLMessagesSetBotCallbackAnswer) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesSetBotCallbackAnswer) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesSetBotCallbackAnswer) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesSetBotCallbackAnswer) GetAlert() bool {
	if m != nil {
		return m.Alert
	}
	return false
}

func (m *TLMessagesSetBotCallbackAnswer) GetQueryId() int64 {
	if m != nil {
		return m.QueryId
	}
	return 0
}

func (m *TLMessagesSetBotCallbackAnswer) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TLMessagesSetBotCallbackAnswer) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *TLMessagesSetBotCallbackAnswer) GetCacheTime() int32 {
	if m != nil {
		return m.CacheTime
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.setBotPrecheckoutResults#9c2dd95 flags:# success:flags.1?true query_id:long error:flags.0?string = Bool;
//
type TLMessagesSetBotPrecheckoutResults struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32    `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Success              bool     `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
	QueryId              int64    `protobuf:"varint,5,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	Error                string   `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesSetBotPrecheckoutResults) Reset()         { *m = TLMessagesSetBotPrecheckoutResults{} }
func (m *TLMessagesSetBotPrecheckoutResults) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSetBotPrecheckoutResults) ProtoMessage()    {}
func (*TLMessagesSetBotPrecheckoutResults) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{303}
}
func (m *TLMessagesSetBotPrecheckoutResults) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSetBotPrecheckoutResults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSetBotPrecheckoutResults.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSetBotPrecheckoutResults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSetBotPrecheckoutResults.Merge(m, src)
}
func (m *TLMessagesSetBotPrecheckoutResults) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSetBotPrecheckoutResults) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSetBotPrecheckoutResults.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSetBotPrecheckoutResults proto.InternalMessageInfo

func (m *TLMessagesSetBotPrecheckoutResults) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesSetBotPrecheckoutResults) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesSetBotPrecheckoutResults) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesSetBotPrecheckoutResults) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *TLMessagesSetBotPrecheckoutResults) GetQueryId() int64 {
	if m != nil {
		return m.QueryId
	}
	return 0
}

func (m *TLMessagesSetBotPrecheckoutResults) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  messages.setBotShippingResults#e5f672fa flags:# query_id:long error:flags.0?string shipping_options:flags.1?Vector<ShippingOption> = Bool;
//
type TLMessagesSetBotShippingResults struct {
	Cmd                  TLCmd             `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string            `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32             `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	QueryId              int64             `protobuf:"varint,4,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	Error                string            `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	ShippingOptions      []*ShippingOption `protobuf:"bytes,6,rep,name=shipping_options,json=shippingOptions,proto3" json:"shipping_options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TLMessagesSetBotShippingResults) Reset()         { *m = TLMessagesSetBotShippingResults{} }
func (m *TLMessagesSetBotShippingResults) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSetBotShippingResults) ProtoMessage()    {}
func (*TLMessagesSetBotShippingResults) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{304}
}
func (m *TLMessagesSetBotShippingResults) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSetBotShippingResults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSetBotShippingResults.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSetBotShippingResults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSetBotShippingResults.Merge(m, src)
}
func (m *TLMessagesSetBotShippingResults) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSetBotShippingResults) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSetBotShippingResults.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSetBotShippingResults proto.InternalMessageInfo

func (m *TLMessagesSetBotShippingResults) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesSetBotShippingResults) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesSetBotShippingResults) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesSetBotShippingResults) GetQueryId() int64 {
	if m != nil {
		return m.QueryId
	}
	return 0
}

func (m *TLMessagesSetBotShippingResults) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *TLMessagesSetBotShippingResults) GetShippingOptions() []*ShippingOption {
	if m != nil {
		return m.ShippingOptions
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.setEncryptedTyping#791451ed peer:InputEncryptedChat typing:Bool = Bool;
//
type TLMessagesSetEncryptedTyping struct {
	Cmd                  TLCmd               `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string              `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputEncryptedChat `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Typing               *Bool               `protobuf:"bytes,4,opt,name=typing,proto3" json:"typing,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLMessagesSetEncryptedTyping) Reset()         { *m = TLMessagesSetEncryptedTyping{} }
func (m *TLMessagesSetEncryptedTyping) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSetEncryptedTyping) ProtoMessage()    {}
func (*TLMessagesSetEncryptedTyping) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{305}
}
func (m *TLMessagesSetEncryptedTyping) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSetEncryptedTyping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSetEncryptedTyping.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSetEncryptedTyping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSetEncryptedTyping.Merge(m, src)
}
func (m *TLMessagesSetEncryptedTyping) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSetEncryptedTyping) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSetEncryptedTyping.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSetEncryptedTyping proto.InternalMessageInfo

func (m *TLMessagesSetEncryptedTyping) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesSetEncryptedTyping) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesSetEncryptedTyping) GetPeer() *InputEncryptedChat {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSetEncryptedTyping) GetTyping() *Bool {
	if m != nil {
		return m.Typing
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.setGameScore#8ef8ecc0 flags:# edit_message:flags.0?true force:flags.1?true peer:InputPeer id:int user_id:InputUser score:int = Updates;
//
type TLMessagesSetGameScore struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32      `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	EditMessage          bool       `protobuf:"varint,4,opt,name=edit_message,json=editMessage,proto3" json:"edit_message,omitempty"`
	Force                bool       `protobuf:"varint,5,opt,name=force,proto3" json:"force,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,6,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   int32      `protobuf:"varint,7,opt,name=id,proto3" json:"id,omitempty"`
	UserId               *InputUser `protobuf:"bytes,8,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Score                int32      `protobuf:"varint,9,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesSetGameScore) Reset()         { *m = TLMessagesSetGameScore{} }
func (m *TLMessagesSetGameScore) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSetGameScore) ProtoMessage()    {}
func (*TLMessagesSetGameScore) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{306}
}
func (m *TLMessagesSetGameScore) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSetGameScore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSetGameScore.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSetGameScore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSetGameScore.Merge(m, src)
}
func (m *TLMessagesSetGameScore) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSetGameScore) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSetGameScore.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSetGameScore proto.InternalMessageInfo

func (m *TLMessagesSetGameScore) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesSetGameScore) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesSetGameScore) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesSetGameScore) GetEditMessage() bool {
	if m != nil {
		return m.EditMessage
	}
	return false
}

func (m *TLMessagesSetGameScore) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

func (m *TLMessagesSetGameScore) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSetGameScore) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TLMessagesSetGameScore) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLMessagesSetGameScore) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.setInlineBotResults#eb5ea206 flags:# gallery:flags.0?true private:flags.1?true query_id:long results:Vector<InputBotInlineResult> cache_time:int next_offset:flags.2?string switch_pm:flags.3?InlineBotSwitchPM = Bool;
//
type TLMessagesSetInlineBotResults struct {
	Cmd                  TLCmd                   `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string                  `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32                   `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Gallery              bool                    `protobuf:"varint,4,opt,name=gallery,proto3" json:"gallery,omitempty"`
	Private              bool                    `protobuf:"varint,5,opt,name=private,proto3" json:"private,omitempty"`
	QueryId              int64                   `protobuf:"varint,6,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	Results              []*InputBotInlineResult `protobuf:"bytes,7,rep,name=results,proto3" json:"results,omitempty"`
	CacheTime            int32                   `protobuf:"varint,8,opt,name=cache_time,json=cacheTime,proto3" json:"cache_time,omitempty"`
	NextOffset           string                  `protobuf:"bytes,9,opt,name=next_offset,json=nextOffset,proto3" json:"next_offset,omitempty"`
	SwitchPm             *InlineBotSwitchPM      `protobuf:"bytes,10,opt,name=switch_pm,json=switchPm,proto3" json:"switch_pm,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *TLMessagesSetInlineBotResults) Reset()         { *m = TLMessagesSetInlineBotResults{} }
func (m *TLMessagesSetInlineBotResults) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSetInlineBotResults) ProtoMessage()    {}
func (*TLMessagesSetInlineBotResults) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{307}
}
func (m *TLMessagesSetInlineBotResults) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSetInlineBotResults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSetInlineBotResults.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSetInlineBotResults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSetInlineBotResults.Merge(m, src)
}
func (m *TLMessagesSetInlineBotResults) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSetInlineBotResults) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSetInlineBotResults.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSetInlineBotResults proto.InternalMessageInfo

func (m *TLMessagesSetInlineBotResults) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesSetInlineBotResults) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesSetInlineBotResults) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesSetInlineBotResults) GetGallery() bool {
	if m != nil {
		return m.Gallery
	}
	return false
}

func (m *TLMessagesSetInlineBotResults) GetPrivate() bool {
	if m != nil {
		return m.Private
	}
	return false
}

func (m *TLMessagesSetInlineBotResults) GetQueryId() int64 {
	if m != nil {
		return m.QueryId
	}
	return 0
}

func (m *TLMessagesSetInlineBotResults) GetResults() []*InputBotInlineResult {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *TLMessagesSetInlineBotResults) GetCacheTime() int32 {
	if m != nil {
		return m.CacheTime
	}
	return 0
}

func (m *TLMessagesSetInlineBotResults) GetNextOffset() string {
	if m != nil {
		return m.NextOffset
	}
	return ""
}

func (m *TLMessagesSetInlineBotResults) GetSwitchPm() *InlineBotSwitchPM {
	if m != nil {
		return m.SwitchPm
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.setInlineGameScore#15ad9f64 flags:# edit_message:flags.0?true force:flags.1?true id:InputBotInlineMessageID user_id:InputUser score:int = Bool;
//
type TLMessagesSetInlineGameScore struct {
	Cmd                  TLCmd                    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string                   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32                    `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	EditMessage          bool                     `protobuf:"varint,4,opt,name=edit_message,json=editMessage,proto3" json:"edit_message,omitempty"`
	Force                bool                     `protobuf:"varint,5,opt,name=force,proto3" json:"force,omitempty"`
	Id                   *InputBotInlineMessageID `protobuf:"bytes,6,opt,name=id,proto3" json:"id,omitempty"`
	UserId               *InputUser               `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Score                int32                    `protobuf:"varint,8,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *TLMessagesSetInlineGameScore) Reset()         { *m = TLMessagesSetInlineGameScore{} }
func (m *TLMessagesSetInlineGameScore) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSetInlineGameScore) ProtoMessage()    {}
func (*TLMessagesSetInlineGameScore) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{308}
}
func (m *TLMessagesSetInlineGameScore) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSetInlineGameScore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSetInlineGameScore.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSetInlineGameScore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSetInlineGameScore.Merge(m, src)
}
func (m *TLMessagesSetInlineGameScore) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSetInlineGameScore) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSetInlineGameScore.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSetInlineGameScore proto.InternalMessageInfo

func (m *TLMessagesSetInlineGameScore) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesSetInlineGameScore) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesSetInlineGameScore) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesSetInlineGameScore) GetEditMessage() bool {
	if m != nil {
		return m.EditMessage
	}
	return false
}

func (m *TLMessagesSetInlineGameScore) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

func (m *TLMessagesSetInlineGameScore) GetId() *InputBotInlineMessageID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLMessagesSetInlineGameScore) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLMessagesSetInlineGameScore) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.setTyping#a3825e50 peer:InputPeer action:SendMessageAction = Bool;
//  messages.setTyping#58943ee2 flags:# peer:InputPeer top_msg_id:flags.0?int action:SendMessageAction = Bool;
//
type TLMessagesSetTyping struct {
	Cmd                  TLCmd              `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string             `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer         `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Action               *SendMessageAction `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`
	Flags                int32              `protobuf:"varint,5,opt,name=flags,proto3" json:"flags,omitempty"`
	TopMsgId             int32              `protobuf:"varint,6,opt,name=top_msg_id,json=topMsgId,proto3" json:"top_msg_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLMessagesSetTyping) Reset()         { *m = TLMessagesSetTyping{} }
func (m *TLMessagesSetTyping) String() string { return proto.CompactTextString(m) }
func (*TLMessagesSetTyping) ProtoMessage()    {}
func (*TLMessagesSetTyping) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{309}
}
func (m *TLMessagesSetTyping) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesSetTyping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesSetTyping.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesSetTyping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesSetTyping.Merge(m, src)
}
func (m *TLMessagesSetTyping) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesSetTyping) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesSetTyping.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesSetTyping proto.InternalMessageInfo

func (m *TLMessagesSetTyping) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesSetTyping) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesSetTyping) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesSetTyping) GetAction() *SendMessageAction {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *TLMessagesSetTyping) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesSetTyping) GetTopMsgId() int32 {
	if m != nil {
		return m.TopMsgId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.startBot#e6df7378 bot:InputUser peer:InputPeer random_id:long start_param:string = Updates;
//
type TLMessagesStartBot struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Bot                  *InputUser `protobuf:"bytes,3,opt,name=bot,proto3" json:"bot,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,4,opt,name=peer,proto3" json:"peer,omitempty"`
	RandomId             int64      `protobuf:"varint,5,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	StartParam           string     `protobuf:"bytes,6,opt,name=start_param,json=startParam,proto3" json:"start_param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesStartBot) Reset()         { *m = TLMessagesStartBot{} }
func (m *TLMessagesStartBot) String() string { return proto.CompactTextString(m) }
func (*TLMessagesStartBot) ProtoMessage()    {}
func (*TLMessagesStartBot) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{310}
}
func (m *TLMessagesStartBot) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesStartBot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesStartBot.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesStartBot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesStartBot.Merge(m, src)
}
func (m *TLMessagesStartBot) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesStartBot) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesStartBot.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesStartBot proto.InternalMessageInfo

func (m *TLMessagesStartBot) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesStartBot) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesStartBot) GetBot() *InputUser {
	if m != nil {
		return m.Bot
	}
	return nil
}

func (m *TLMessagesStartBot) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesStartBot) GetRandomId() int64 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *TLMessagesStartBot) GetStartParam() string {
	if m != nil {
		return m.StartParam
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  messages.toggleChatAdmins#ec8bd9e1 chat_id:int enabled:Bool = Updates;
//
type TLMessagesToggleChatAdmins struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	ChatId               int32    `protobuf:"varint,3,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	Enabled              *Bool    `protobuf:"bytes,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesToggleChatAdmins) Reset()         { *m = TLMessagesToggleChatAdmins{} }
func (m *TLMessagesToggleChatAdmins) String() string { return proto.CompactTextString(m) }
func (*TLMessagesToggleChatAdmins) ProtoMessage()    {}
func (*TLMessagesToggleChatAdmins) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{311}
}
func (m *TLMessagesToggleChatAdmins) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesToggleChatAdmins) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesToggleChatAdmins.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesToggleChatAdmins) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesToggleChatAdmins.Merge(m, src)
}
func (m *TLMessagesToggleChatAdmins) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesToggleChatAdmins) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesToggleChatAdmins.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesToggleChatAdmins proto.InternalMessageInfo

func (m *TLMessagesToggleChatAdmins) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesToggleChatAdmins) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesToggleChatAdmins) GetChatId() int32 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

func (m *TLMessagesToggleChatAdmins) GetEnabled() *Bool {
	if m != nil {
		return m.Enabled
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.toggleDialogPin#3289be6a flags:# pinned:flags.0?true peer:InputPeer = Bool;
//  messages.toggleDialogPin#a731e257 flags:# pinned:flags.0?true peer:InputDialogPeer = Bool;
//
type TLMessagesToggleDialogPin struct {
	Cmd                  TLCmd            `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string           `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32            `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Pinned               bool             `protobuf:"varint,4,opt,name=pinned,proto3" json:"pinned,omitempty"`
	Peer3289BE6A71       *InputPeer       `protobuf:"bytes,5,opt,name=peer3289BE6A71,proto3" json:"peer3289BE6A71,omitempty"`
	PeerA731E25785       *InputDialogPeer `protobuf:"bytes,6,opt,name=peerA731E25785,proto3" json:"peerA731E25785,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLMessagesToggleDialogPin) Reset()         { *m = TLMessagesToggleDialogPin{} }
func (m *TLMessagesToggleDialogPin) String() string { return proto.CompactTextString(m) }
func (*TLMessagesToggleDialogPin) ProtoMessage()    {}
func (*TLMessagesToggleDialogPin) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{312}
}
func (m *TLMessagesToggleDialogPin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesToggleDialogPin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesToggleDialogPin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesToggleDialogPin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesToggleDialogPin.Merge(m, src)
}
func (m *TLMessagesToggleDialogPin) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesToggleDialogPin) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesToggleDialogPin.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesToggleDialogPin proto.InternalMessageInfo

func (m *TLMessagesToggleDialogPin) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesToggleDialogPin) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesToggleDialogPin) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesToggleDialogPin) GetPinned() bool {
	if m != nil {
		return m.Pinned
	}
	return false
}

func (m *TLMessagesToggleDialogPin) GetPeer3289BE6A71() *InputPeer {
	if m != nil {
		return m.Peer3289BE6A71
	}
	return nil
}

func (m *TLMessagesToggleDialogPin) GetPeerA731E25785() *InputDialogPeer {
	if m != nil {
		return m.PeerA731E25785
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.toggleStickerSets#b5052fea flags:# uninstall:flags.0?true archive:flags.1?true unarchive:flags.2?true stickersets:Vector<InputStickerSet> = Bool;
//
type TLMessagesToggleStickerSets struct {
	Cmd                  TLCmd              `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string             `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32              `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Uninstall            bool               `protobuf:"varint,4,opt,name=uninstall,proto3" json:"uninstall,omitempty"`
	Archive              bool               `protobuf:"varint,5,opt,name=archive,proto3" json:"archive,omitempty"`
	Unarchive            bool               `protobuf:"varint,6,opt,name=unarchive,proto3" json:"unarchive,omitempty"`
	Stickersets          []*InputStickerSet `protobuf:"bytes,7,rep,name=stickersets,proto3" json:"stickersets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLMessagesToggleStickerSets) Reset()         { *m = TLMessagesToggleStickerSets{} }
func (m *TLMessagesToggleStickerSets) String() string { return proto.CompactTextString(m) }
func (*TLMessagesToggleStickerSets) ProtoMessage()    {}
func (*TLMessagesToggleStickerSets) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{313}
}
func (m *TLMessagesToggleStickerSets) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesToggleStickerSets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesToggleStickerSets.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesToggleStickerSets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesToggleStickerSets.Merge(m, src)
}
func (m *TLMessagesToggleStickerSets) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesToggleStickerSets) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesToggleStickerSets.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesToggleStickerSets proto.InternalMessageInfo

func (m *TLMessagesToggleStickerSets) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesToggleStickerSets) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesToggleStickerSets) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesToggleStickerSets) GetUninstall() bool {
	if m != nil {
		return m.Uninstall
	}
	return false
}

func (m *TLMessagesToggleStickerSets) GetArchive() bool {
	if m != nil {
		return m.Archive
	}
	return false
}

func (m *TLMessagesToggleStickerSets) GetUnarchive() bool {
	if m != nil {
		return m.Unarchive
	}
	return false
}

func (m *TLMessagesToggleStickerSets) GetStickersets() []*InputStickerSet {
	if m != nil {
		return m.Stickersets
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.uninstallStickerSet#f96e55de stickerset:InputStickerSet = Bool;
//
type TLMessagesUninstallStickerSet struct {
	Cmd                  TLCmd            `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string           `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Stickerset           *InputStickerSet `protobuf:"bytes,3,opt,name=stickerset,proto3" json:"stickerset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLMessagesUninstallStickerSet) Reset()         { *m = TLMessagesUninstallStickerSet{} }
func (m *TLMessagesUninstallStickerSet) String() string { return proto.CompactTextString(m) }
func (*TLMessagesUninstallStickerSet) ProtoMessage()    {}
func (*TLMessagesUninstallStickerSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{314}
}
func (m *TLMessagesUninstallStickerSet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesUninstallStickerSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesUninstallStickerSet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesUninstallStickerSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesUninstallStickerSet.Merge(m, src)
}
func (m *TLMessagesUninstallStickerSet) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesUninstallStickerSet) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesUninstallStickerSet.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesUninstallStickerSet proto.InternalMessageInfo

func (m *TLMessagesUninstallStickerSet) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesUninstallStickerSet) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesUninstallStickerSet) GetStickerset() *InputStickerSet {
	if m != nil {
		return m.Stickerset
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.unpinAllMessages#f025bc8b peer:InputPeer = messages.AffectedHistory;
//
type TLMessagesUnpinAllMessages struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesUnpinAllMessages) Reset()         { *m = TLMessagesUnpinAllMessages{} }
func (m *TLMessagesUnpinAllMessages) String() string { return proto.CompactTextString(m) }
func (*TLMessagesUnpinAllMessages) ProtoMessage()    {}
func (*TLMessagesUnpinAllMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{315}
}
func (m *TLMessagesUnpinAllMessages) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesUnpinAllMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesUnpinAllMessages.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesUnpinAllMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesUnpinAllMessages.Merge(m, src)
}
func (m *TLMessagesUnpinAllMessages) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesUnpinAllMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesUnpinAllMessages.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesUnpinAllMessages proto.InternalMessageInfo

func (m *TLMessagesUnpinAllMessages) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesUnpinAllMessages) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesUnpinAllMessages) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.updateDialogFilter#1ad4a04a flags:# id:int filter:flags.0?DialogFilter = Bool;
//
type TLMessagesUpdateDialogFilter struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32         `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Id                   int32         `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	Filter               *DialogFilter `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLMessagesUpdateDialogFilter) Reset()         { *m = TLMessagesUpdateDialogFilter{} }
func (m *TLMessagesUpdateDialogFilter) String() string { return proto.CompactTextString(m) }
func (*TLMessagesUpdateDialogFilter) ProtoMessage()    {}
func (*TLMessagesUpdateDialogFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{316}
}
func (m *TLMessagesUpdateDialogFilter) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesUpdateDialogFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesUpdateDialogFilter.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesUpdateDialogFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesUpdateDialogFilter.Merge(m, src)
}
func (m *TLMessagesUpdateDialogFilter) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesUpdateDialogFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesUpdateDialogFilter.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesUpdateDialogFilter proto.InternalMessageInfo

func (m *TLMessagesUpdateDialogFilter) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesUpdateDialogFilter) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesUpdateDialogFilter) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesUpdateDialogFilter) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TLMessagesUpdateDialogFilter) GetFilter() *DialogFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.updateDialogFiltersOrder#c563c1e4 order:Vector<int> = Bool;
//
type TLMessagesUpdateDialogFiltersOrder struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Order                []int32  `protobuf:"varint,3,rep,packed,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLMessagesUpdateDialogFiltersOrder) Reset()         { *m = TLMessagesUpdateDialogFiltersOrder{} }
func (m *TLMessagesUpdateDialogFiltersOrder) String() string { return proto.CompactTextString(m) }
func (*TLMessagesUpdateDialogFiltersOrder) ProtoMessage()    {}
func (*TLMessagesUpdateDialogFiltersOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{317}
}
func (m *TLMessagesUpdateDialogFiltersOrder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesUpdateDialogFiltersOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesUpdateDialogFiltersOrder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesUpdateDialogFiltersOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesUpdateDialogFiltersOrder.Merge(m, src)
}
func (m *TLMessagesUpdateDialogFiltersOrder) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesUpdateDialogFiltersOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesUpdateDialogFiltersOrder.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesUpdateDialogFiltersOrder proto.InternalMessageInfo

func (m *TLMessagesUpdateDialogFiltersOrder) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesUpdateDialogFiltersOrder) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesUpdateDialogFiltersOrder) GetOrder() []int32 {
	if m != nil {
		return m.Order
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.updatePinnedMessage#d2aaf7ec flags:# silent:flags.0?true peer:InputPeer id:int = Updates;
//
type TLMessagesUpdatePinnedMessage struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32      `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Silent               bool       `protobuf:"varint,4,opt,name=silent,proto3" json:"silent,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,5,opt,name=peer,proto3" json:"peer,omitempty"`
	Id                   int32      `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLMessagesUpdatePinnedMessage) Reset()         { *m = TLMessagesUpdatePinnedMessage{} }
func (m *TLMessagesUpdatePinnedMessage) String() string { return proto.CompactTextString(m) }
func (*TLMessagesUpdatePinnedMessage) ProtoMessage()    {}
func (*TLMessagesUpdatePinnedMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{318}
}
func (m *TLMessagesUpdatePinnedMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesUpdatePinnedMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesUpdatePinnedMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesUpdatePinnedMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesUpdatePinnedMessage.Merge(m, src)
}
func (m *TLMessagesUpdatePinnedMessage) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesUpdatePinnedMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesUpdatePinnedMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesUpdatePinnedMessage proto.InternalMessageInfo

func (m *TLMessagesUpdatePinnedMessage) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesUpdatePinnedMessage) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesUpdatePinnedMessage) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLMessagesUpdatePinnedMessage) GetSilent() bool {
	if m != nil {
		return m.Silent
	}
	return false
}

func (m *TLMessagesUpdatePinnedMessage) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesUpdatePinnedMessage) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  messages.uploadEncryptedFile#5057c497 peer:InputEncryptedChat file:InputEncryptedFile = EncryptedFile;
//
type TLMessagesUploadEncryptedFile struct {
	Cmd                  TLCmd               `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string              `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputEncryptedChat `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	File                 *InputEncryptedFile `protobuf:"bytes,4,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLMessagesUploadEncryptedFile) Reset()         { *m = TLMessagesUploadEncryptedFile{} }
func (m *TLMessagesUploadEncryptedFile) String() string { return proto.CompactTextString(m) }
func (*TLMessagesUploadEncryptedFile) ProtoMessage()    {}
func (*TLMessagesUploadEncryptedFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{319}
}
func (m *TLMessagesUploadEncryptedFile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesUploadEncryptedFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesUploadEncryptedFile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesUploadEncryptedFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesUploadEncryptedFile.Merge(m, src)
}
func (m *TLMessagesUploadEncryptedFile) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesUploadEncryptedFile) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesUploadEncryptedFile.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesUploadEncryptedFile proto.InternalMessageInfo

func (m *TLMessagesUploadEncryptedFile) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesUploadEncryptedFile) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesUploadEncryptedFile) GetPeer() *InputEncryptedChat {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesUploadEncryptedFile) GetFile() *InputEncryptedFile {
	if m != nil {
		return m.File
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  messages.uploadMedia#519bc2b1 peer:InputPeer media:InputMedia = MessageMedia;
//
type TLMessagesUploadMedia struct {
	Cmd                  TLCmd       `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string      `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer  `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Media                *InputMedia `protobuf:"bytes,4,opt,name=media,proto3" json:"media,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TLMessagesUploadMedia) Reset()         { *m = TLMessagesUploadMedia{} }
func (m *TLMessagesUploadMedia) String() string { return proto.CompactTextString(m) }
func (*TLMessagesUploadMedia) ProtoMessage()    {}
func (*TLMessagesUploadMedia) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{320}
}
func (m *TLMessagesUploadMedia) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLMessagesUploadMedia) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLMessagesUploadMedia.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLMessagesUploadMedia) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLMessagesUploadMedia.Merge(m, src)
}
func (m *TLMessagesUploadMedia) XXX_Size() int {
	return m.Size()
}
func (m *TLMessagesUploadMedia) XXX_DiscardUnknown() {
	xxx_messageInfo_TLMessagesUploadMedia.DiscardUnknown(m)
}

var xxx_messageInfo_TLMessagesUploadMedia proto.InternalMessageInfo

func (m *TLMessagesUploadMedia) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLMessagesUploadMedia) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLMessagesUploadMedia) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLMessagesUploadMedia) GetMedia() *InputMedia {
	if m != nil {
		return m.Media
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  payments.clearSavedInfo#d83d70c1 flags:# credentials:flags.0?true info:flags.1?true = Bool;
//
type TLPaymentsClearSavedInfo struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32    `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Credentials          bool     `protobuf:"varint,4,opt,name=credentials,proto3" json:"credentials,omitempty"`
	Info                 bool     `protobuf:"varint,5,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLPaymentsClearSavedInfo) Reset()         { *m = TLPaymentsClearSavedInfo{} }
func (m *TLPaymentsClearSavedInfo) String() string { return proto.CompactTextString(m) }
func (*TLPaymentsClearSavedInfo) ProtoMessage()    {}
func (*TLPaymentsClearSavedInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{321}
}
func (m *TLPaymentsClearSavedInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPaymentsClearSavedInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPaymentsClearSavedInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPaymentsClearSavedInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPaymentsClearSavedInfo.Merge(m, src)
}
func (m *TLPaymentsClearSavedInfo) XXX_Size() int {
	return m.Size()
}
func (m *TLPaymentsClearSavedInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPaymentsClearSavedInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TLPaymentsClearSavedInfo proto.InternalMessageInfo

func (m *TLPaymentsClearSavedInfo) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPaymentsClearSavedInfo) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLPaymentsClearSavedInfo) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLPaymentsClearSavedInfo) GetCredentials() bool {
	if m != nil {
		return m.Credentials
	}
	return false
}

func (m *TLPaymentsClearSavedInfo) GetInfo() bool {
	if m != nil {
		return m.Info
	}
	return false
}

///////////////////////////////////////////////////////////////////////////////
//  payments.getBankCardData#2e79d779 number:string = payments.BankCardData;
//
type TLPaymentsGetBankCardData struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Number               string   `protobuf:"bytes,3,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLPaymentsGetBankCardData) Reset()         { *m = TLPaymentsGetBankCardData{} }
func (m *TLPaymentsGetBankCardData) String() string { return proto.CompactTextString(m) }
func (*TLPaymentsGetBankCardData) ProtoMessage()    {}
func (*TLPaymentsGetBankCardData) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{322}
}
func (m *TLPaymentsGetBankCardData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPaymentsGetBankCardData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPaymentsGetBankCardData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPaymentsGetBankCardData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPaymentsGetBankCardData.Merge(m, src)
}
func (m *TLPaymentsGetBankCardData) XXX_Size() int {
	return m.Size()
}
func (m *TLPaymentsGetBankCardData) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPaymentsGetBankCardData.DiscardUnknown(m)
}

var xxx_messageInfo_TLPaymentsGetBankCardData proto.InternalMessageInfo

func (m *TLPaymentsGetBankCardData) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPaymentsGetBankCardData) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLPaymentsGetBankCardData) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  payments.getPaymentForm#99f09745 msg_id:int = payments.PaymentForm;
//
type TLPaymentsGetPaymentForm struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	MsgId                int32    `protobuf:"varint,3,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLPaymentsGetPaymentForm) Reset()         { *m = TLPaymentsGetPaymentForm{} }
func (m *TLPaymentsGetPaymentForm) String() string { return proto.CompactTextString(m) }
func (*TLPaymentsGetPaymentForm) ProtoMessage()    {}
func (*TLPaymentsGetPaymentForm) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{323}
}
func (m *TLPaymentsGetPaymentForm) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPaymentsGetPaymentForm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPaymentsGetPaymentForm.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPaymentsGetPaymentForm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPaymentsGetPaymentForm.Merge(m, src)
}
func (m *TLPaymentsGetPaymentForm) XXX_Size() int {
	return m.Size()
}
func (m *TLPaymentsGetPaymentForm) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPaymentsGetPaymentForm.DiscardUnknown(m)
}

var xxx_messageInfo_TLPaymentsGetPaymentForm proto.InternalMessageInfo

func (m *TLPaymentsGetPaymentForm) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPaymentsGetPaymentForm) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLPaymentsGetPaymentForm) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  payments.getPaymentReceipt#a092a980 msg_id:int = payments.PaymentReceipt;
//
type TLPaymentsGetPaymentReceipt struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	MsgId                int32    `protobuf:"varint,3,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLPaymentsGetPaymentReceipt) Reset()         { *m = TLPaymentsGetPaymentReceipt{} }
func (m *TLPaymentsGetPaymentReceipt) String() string { return proto.CompactTextString(m) }
func (*TLPaymentsGetPaymentReceipt) ProtoMessage()    {}
func (*TLPaymentsGetPaymentReceipt) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{324}
}
func (m *TLPaymentsGetPaymentReceipt) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPaymentsGetPaymentReceipt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPaymentsGetPaymentReceipt.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPaymentsGetPaymentReceipt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPaymentsGetPaymentReceipt.Merge(m, src)
}
func (m *TLPaymentsGetPaymentReceipt) XXX_Size() int {
	return m.Size()
}
func (m *TLPaymentsGetPaymentReceipt) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPaymentsGetPaymentReceipt.DiscardUnknown(m)
}

var xxx_messageInfo_TLPaymentsGetPaymentReceipt proto.InternalMessageInfo

func (m *TLPaymentsGetPaymentReceipt) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPaymentsGetPaymentReceipt) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLPaymentsGetPaymentReceipt) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  payments.getSavedInfo#227d824b = payments.SavedInfo;
//
type TLPaymentsGetSavedInfo struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLPaymentsGetSavedInfo) Reset()         { *m = TLPaymentsGetSavedInfo{} }
func (m *TLPaymentsGetSavedInfo) String() string { return proto.CompactTextString(m) }
func (*TLPaymentsGetSavedInfo) ProtoMessage()    {}
func (*TLPaymentsGetSavedInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{325}
}
func (m *TLPaymentsGetSavedInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPaymentsGetSavedInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPaymentsGetSavedInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPaymentsGetSavedInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPaymentsGetSavedInfo.Merge(m, src)
}
func (m *TLPaymentsGetSavedInfo) XXX_Size() int {
	return m.Size()
}
func (m *TLPaymentsGetSavedInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPaymentsGetSavedInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TLPaymentsGetSavedInfo proto.InternalMessageInfo

func (m *TLPaymentsGetSavedInfo) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPaymentsGetSavedInfo) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  payments.sendPaymentForm#2b8879b3 flags:# msg_id:int requested_info_id:flags.0?string shipping_option_id:flags.1?string credentials:InputPaymentCredentials = payments.PaymentResult;
//
type TLPaymentsSendPaymentForm struct {
	Cmd                  TLCmd                    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string                   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32                    `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	MsgId                int32                    `protobuf:"varint,4,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	RequestedInfoId      string                   `protobuf:"bytes,5,opt,name=requested_info_id,json=requestedInfoId,proto3" json:"requested_info_id,omitempty"`
	ShippingOptionId     string                   `protobuf:"bytes,6,opt,name=shipping_option_id,json=shippingOptionId,proto3" json:"shipping_option_id,omitempty"`
	Credentials          *InputPaymentCredentials `protobuf:"bytes,7,opt,name=credentials,proto3" json:"credentials,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *TLPaymentsSendPaymentForm) Reset()         { *m = TLPaymentsSendPaymentForm{} }
func (m *TLPaymentsSendPaymentForm) String() string { return proto.CompactTextString(m) }
func (*TLPaymentsSendPaymentForm) ProtoMessage()    {}
func (*TLPaymentsSendPaymentForm) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{326}
}
func (m *TLPaymentsSendPaymentForm) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPaymentsSendPaymentForm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPaymentsSendPaymentForm.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPaymentsSendPaymentForm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPaymentsSendPaymentForm.Merge(m, src)
}
func (m *TLPaymentsSendPaymentForm) XXX_Size() int {
	return m.Size()
}
func (m *TLPaymentsSendPaymentForm) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPaymentsSendPaymentForm.DiscardUnknown(m)
}

var xxx_messageInfo_TLPaymentsSendPaymentForm proto.InternalMessageInfo

func (m *TLPaymentsSendPaymentForm) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPaymentsSendPaymentForm) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLPaymentsSendPaymentForm) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLPaymentsSendPaymentForm) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *TLPaymentsSendPaymentForm) GetRequestedInfoId() string {
	if m != nil {
		return m.RequestedInfoId
	}
	return ""
}

func (m *TLPaymentsSendPaymentForm) GetShippingOptionId() string {
	if m != nil {
		return m.ShippingOptionId
	}
	return ""
}

func (m *TLPaymentsSendPaymentForm) GetCredentials() *InputPaymentCredentials {
	if m != nil {
		return m.Credentials
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  payments.validateRequestedInfo#770a8e74 flags:# save:flags.0?true msg_id:int info:PaymentRequestedInfo = payments.ValidatedRequestedInfo;
//
type TLPaymentsValidateRequestedInfo struct {
	Cmd                  TLCmd                 `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string                `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32                 `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Save                 bool                  `protobuf:"varint,4,opt,name=save,proto3" json:"save,omitempty"`
	MsgId                int32                 `protobuf:"varint,5,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	Info                 *PaymentRequestedInfo `protobuf:"bytes,6,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TLPaymentsValidateRequestedInfo) Reset()         { *m = TLPaymentsValidateRequestedInfo{} }
func (m *TLPaymentsValidateRequestedInfo) String() string { return proto.CompactTextString(m) }
func (*TLPaymentsValidateRequestedInfo) ProtoMessage()    {}
func (*TLPaymentsValidateRequestedInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{327}
}
func (m *TLPaymentsValidateRequestedInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPaymentsValidateRequestedInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPaymentsValidateRequestedInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPaymentsValidateRequestedInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPaymentsValidateRequestedInfo.Merge(m, src)
}
func (m *TLPaymentsValidateRequestedInfo) XXX_Size() int {
	return m.Size()
}
func (m *TLPaymentsValidateRequestedInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPaymentsValidateRequestedInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TLPaymentsValidateRequestedInfo proto.InternalMessageInfo

func (m *TLPaymentsValidateRequestedInfo) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPaymentsValidateRequestedInfo) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLPaymentsValidateRequestedInfo) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLPaymentsValidateRequestedInfo) GetSave() bool {
	if m != nil {
		return m.Save
	}
	return false
}

func (m *TLPaymentsValidateRequestedInfo) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *TLPaymentsValidateRequestedInfo) GetInfo() *PaymentRequestedInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  phone.acceptCall#3bd2b4a0 peer:InputPhoneCall g_b:bytes protocol:PhoneCallProtocol = phone.PhoneCall;
//
type TLPhoneAcceptCall struct {
	Cmd                  TLCmd              `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string             `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPhoneCall    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	GB                   []byte             `protobuf:"bytes,4,opt,name=g_b,json=gB,proto3" json:"g_b,omitempty"`
	Protocol             *PhoneCallProtocol `protobuf:"bytes,5,opt,name=protocol,proto3" json:"protocol,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLPhoneAcceptCall) Reset()         { *m = TLPhoneAcceptCall{} }
func (m *TLPhoneAcceptCall) String() string { return proto.CompactTextString(m) }
func (*TLPhoneAcceptCall) ProtoMessage()    {}
func (*TLPhoneAcceptCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{328}
}
func (m *TLPhoneAcceptCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneAcceptCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneAcceptCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneAcceptCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneAcceptCall.Merge(m, src)
}
func (m *TLPhoneAcceptCall) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneAcceptCall) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneAcceptCall.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneAcceptCall proto.InternalMessageInfo

func (m *TLPhoneAcceptCall) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPhoneAcceptCall) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLPhoneAcceptCall) GetPeer() *InputPhoneCall {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLPhoneAcceptCall) GetGB() []byte {
	if m != nil {
		return m.GB
	}
	return nil
}

func (m *TLPhoneAcceptCall) GetProtocol() *PhoneCallProtocol {
	if m != nil {
		return m.Protocol
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  phone.checkGroupCall#b74a7bea call:InputGroupCall source:int = Bool;
//
type TLPhoneCheckGroupCall struct {
	Cmd                  TLCmd           `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string          `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Call                 *InputGroupCall `protobuf:"bytes,3,opt,name=call,proto3" json:"call,omitempty"`
	Source               int32           `protobuf:"varint,4,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneCheckGroupCall) Reset()         { *m = TLPhoneCheckGroupCall{} }
func (m *TLPhoneCheckGroupCall) String() string { return proto.CompactTextString(m) }
func (*TLPhoneCheckGroupCall) ProtoMessage()    {}
func (*TLPhoneCheckGroupCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{329}
}
func (m *TLPhoneCheckGroupCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneCheckGroupCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneCheckGroupCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneCheckGroupCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneCheckGroupCall.Merge(m, src)
}
func (m *TLPhoneCheckGroupCall) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneCheckGroupCall) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneCheckGroupCall.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneCheckGroupCall proto.InternalMessageInfo

func (m *TLPhoneCheckGroupCall) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPhoneCheckGroupCall) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLPhoneCheckGroupCall) GetCall() *InputGroupCall {
	if m != nil {
		return m.Call
	}
	return nil
}

func (m *TLPhoneCheckGroupCall) GetSource() int32 {
	if m != nil {
		return m.Source
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  phone.confirmCall#2efe1722 peer:InputPhoneCall g_a:bytes key_fingerprint:long protocol:PhoneCallProtocol = phone.PhoneCall;
//
type TLPhoneConfirmCall struct {
	Cmd                  TLCmd              `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string             `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPhoneCall    `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	GA                   []byte             `protobuf:"bytes,4,opt,name=g_a,json=gA,proto3" json:"g_a,omitempty"`
	KeyFingerprint       int64              `protobuf:"varint,5,opt,name=key_fingerprint,json=keyFingerprint,proto3" json:"key_fingerprint,omitempty"`
	Protocol             *PhoneCallProtocol `protobuf:"bytes,6,opt,name=protocol,proto3" json:"protocol,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLPhoneConfirmCall) Reset()         { *m = TLPhoneConfirmCall{} }
func (m *TLPhoneConfirmCall) String() string { return proto.CompactTextString(m) }
func (*TLPhoneConfirmCall) ProtoMessage()    {}
func (*TLPhoneConfirmCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{330}
}
func (m *TLPhoneConfirmCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneConfirmCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneConfirmCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneConfirmCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneConfirmCall.Merge(m, src)
}
func (m *TLPhoneConfirmCall) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneConfirmCall) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneConfirmCall.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneConfirmCall proto.InternalMessageInfo

func (m *TLPhoneConfirmCall) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPhoneConfirmCall) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLPhoneConfirmCall) GetPeer() *InputPhoneCall {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLPhoneConfirmCall) GetGA() []byte {
	if m != nil {
		return m.GA
	}
	return nil
}

func (m *TLPhoneConfirmCall) GetKeyFingerprint() int64 {
	if m != nil {
		return m.KeyFingerprint
	}
	return 0
}

func (m *TLPhoneConfirmCall) GetProtocol() *PhoneCallProtocol {
	if m != nil {
		return m.Protocol
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  phone.createGroupCall#bd3dabe0 peer:InputPeer random_id:int = Updates;
//
type TLPhoneCreateGroupCall struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPeer `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	RandomId             int32      `protobuf:"varint,4,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLPhoneCreateGroupCall) Reset()         { *m = TLPhoneCreateGroupCall{} }
func (m *TLPhoneCreateGroupCall) String() string { return proto.CompactTextString(m) }
func (*TLPhoneCreateGroupCall) ProtoMessage()    {}
func (*TLPhoneCreateGroupCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{331}
}
func (m *TLPhoneCreateGroupCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneCreateGroupCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneCreateGroupCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneCreateGroupCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneCreateGroupCall.Merge(m, src)
}
func (m *TLPhoneCreateGroupCall) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneCreateGroupCall) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneCreateGroupCall.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneCreateGroupCall proto.InternalMessageInfo

func (m *TLPhoneCreateGroupCall) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPhoneCreateGroupCall) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLPhoneCreateGroupCall) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLPhoneCreateGroupCall) GetRandomId() int32 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  phone.discardCall#78d413a6 peer:InputPhoneCall duration:int reason:PhoneCallDiscardReason connection_id:long = Updates;
//  phone.discardCall#b2cbc1c0 flags:# video:flags.0?true peer:InputPhoneCall duration:int reason:PhoneCallDiscardReason connection_id:long = Updates;
//
type TLPhoneDiscardCall struct {
	Cmd                  TLCmd                   `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string                  `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPhoneCall         `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Duration             int32                   `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	Reason               *PhoneCallDiscardReason `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	ConnectionId         int64                   `protobuf:"varint,6,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	Flags                int32                   `protobuf:"varint,7,opt,name=flags,proto3" json:"flags,omitempty"`
	Video                bool                    `protobuf:"varint,8,opt,name=video,proto3" json:"video,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *TLPhoneDiscardCall) Reset()         { *m = TLPhoneDiscardCall{} }
func (m *TLPhoneDiscardCall) String() string { return proto.CompactTextString(m) }
func (*TLPhoneDiscardCall) ProtoMessage()    {}
func (*TLPhoneDiscardCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{332}
}
func (m *TLPhoneDiscardCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneDiscardCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneDiscardCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneDiscardCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneDiscardCall.Merge(m, src)
}
func (m *TLPhoneDiscardCall) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneDiscardCall) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneDiscardCall.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneDiscardCall proto.InternalMessageInfo

func (m *TLPhoneDiscardCall) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPhoneDiscardCall) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLPhoneDiscardCall) GetPeer() *InputPhoneCall {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLPhoneDiscardCall) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *TLPhoneDiscardCall) GetReason() *PhoneCallDiscardReason {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *TLPhoneDiscardCall) GetConnectionId() int64 {
	if m != nil {
		return m.ConnectionId
	}
	return 0
}

func (m *TLPhoneDiscardCall) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLPhoneDiscardCall) GetVideo() bool {
	if m != nil {
		return m.Video
	}
	return false
}

///////////////////////////////////////////////////////////////////////////////
//  phone.discardGroupCall#7a777135 call:InputGroupCall = Updates;
//
type TLPhoneDiscardGroupCall struct {
	Cmd                  TLCmd           `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string          `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Call                 *InputGroupCall `protobuf:"bytes,3,opt,name=call,proto3" json:"call,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneDiscardGroupCall) Reset()         { *m = TLPhoneDiscardGroupCall{} }
func (m *TLPhoneDiscardGroupCall) String() string { return proto.CompactTextString(m) }
func (*TLPhoneDiscardGroupCall) ProtoMessage()    {}
func (*TLPhoneDiscardGroupCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{333}
}
func (m *TLPhoneDiscardGroupCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneDiscardGroupCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneDiscardGroupCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneDiscardGroupCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneDiscardGroupCall.Merge(m, src)
}
func (m *TLPhoneDiscardGroupCall) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneDiscardGroupCall) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneDiscardGroupCall.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneDiscardGroupCall proto.InternalMessageInfo

func (m *TLPhoneDiscardGroupCall) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPhoneDiscardGroupCall) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLPhoneDiscardGroupCall) GetCall() *InputGroupCall {
	if m != nil {
		return m.Call
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  phone.editGroupCallMember#63146ae4 flags:# muted:flags.0?true call:InputGroupCall user_id:InputUser = Updates;
//
type TLPhoneEditGroupCallMember struct {
	Cmd                  TLCmd           `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string          `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32           `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Muted                bool            `protobuf:"varint,4,opt,name=muted,proto3" json:"muted,omitempty"`
	Call                 *InputGroupCall `protobuf:"bytes,5,opt,name=call,proto3" json:"call,omitempty"`
	UserId               *InputUser      `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneEditGroupCallMember) Reset()         { *m = TLPhoneEditGroupCallMember{} }
func (m *TLPhoneEditGroupCallMember) String() string { return proto.CompactTextString(m) }
func (*TLPhoneEditGroupCallMember) ProtoMessage()    {}
func (*TLPhoneEditGroupCallMember) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{334}
}
func (m *TLPhoneEditGroupCallMember) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneEditGroupCallMember) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneEditGroupCallMember.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneEditGroupCallMember) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneEditGroupCallMember.Merge(m, src)
}
func (m *TLPhoneEditGroupCallMember) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneEditGroupCallMember) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneEditGroupCallMember.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneEditGroupCallMember proto.InternalMessageInfo

func (m *TLPhoneEditGroupCallMember) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPhoneEditGroupCallMember) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLPhoneEditGroupCallMember) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLPhoneEditGroupCallMember) GetMuted() bool {
	if m != nil {
		return m.Muted
	}
	return false
}

func (m *TLPhoneEditGroupCallMember) GetCall() *InputGroupCall {
	if m != nil {
		return m.Call
	}
	return nil
}

func (m *TLPhoneEditGroupCallMember) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  phone.getCallConfig#55451fa9 = DataJSON;
//
type TLPhoneGetCallConfig struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLPhoneGetCallConfig) Reset()         { *m = TLPhoneGetCallConfig{} }
func (m *TLPhoneGetCallConfig) String() string { return proto.CompactTextString(m) }
func (*TLPhoneGetCallConfig) ProtoMessage()    {}
func (*TLPhoneGetCallConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{335}
}
func (m *TLPhoneGetCallConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneGetCallConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneGetCallConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneGetCallConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneGetCallConfig.Merge(m, src)
}
func (m *TLPhoneGetCallConfig) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneGetCallConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneGetCallConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneGetCallConfig proto.InternalMessageInfo

func (m *TLPhoneGetCallConfig) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPhoneGetCallConfig) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  phone.getGroupCall#c7cb017 call:InputGroupCall = phone.GroupCall;
//
type TLPhoneGetGroupCall struct {
	Cmd                  TLCmd           `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string          `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Call                 *InputGroupCall `protobuf:"bytes,3,opt,name=call,proto3" json:"call,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneGetGroupCall) Reset()         { *m = TLPhoneGetGroupCall{} }
func (m *TLPhoneGetGroupCall) String() string { return proto.CompactTextString(m) }
func (*TLPhoneGetGroupCall) ProtoMessage()    {}
func (*TLPhoneGetGroupCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{336}
}
func (m *TLPhoneGetGroupCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneGetGroupCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneGetGroupCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneGetGroupCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneGetGroupCall.Merge(m, src)
}
func (m *TLPhoneGetGroupCall) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneGetGroupCall) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneGetGroupCall.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneGetGroupCall proto.InternalMessageInfo

func (m *TLPhoneGetGroupCall) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPhoneGetGroupCall) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLPhoneGetGroupCall) GetCall() *InputGroupCall {
	if m != nil {
		return m.Call
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  phone.getGroupParticipants#c9f1d285 call:InputGroupCall ids:Vector<int> sources:Vector<int> offset:string limit:int = phone.GroupParticipants;
//
type TLPhoneGetGroupParticipants struct {
	Cmd                  TLCmd           `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string          `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Call                 *InputGroupCall `protobuf:"bytes,3,opt,name=call,proto3" json:"call,omitempty"`
	Ids                  []int32         `protobuf:"varint,4,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Sources              []int32         `protobuf:"varint,5,rep,packed,name=sources,proto3" json:"sources,omitempty"`
	Offset               string          `protobuf:"bytes,6,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32           `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneGetGroupParticipants) Reset()         { *m = TLPhoneGetGroupParticipants{} }
func (m *TLPhoneGetGroupParticipants) String() string { return proto.CompactTextString(m) }
func (*TLPhoneGetGroupParticipants) ProtoMessage()    {}
func (*TLPhoneGetGroupParticipants) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{337}
}
func (m *TLPhoneGetGroupParticipants) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneGetGroupParticipants) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneGetGroupParticipants.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneGetGroupParticipants) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneGetGroupParticipants.Merge(m, src)
}
func (m *TLPhoneGetGroupParticipants) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneGetGroupParticipants) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneGetGroupParticipants.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneGetGroupParticipants proto.InternalMessageInfo

func (m *TLPhoneGetGroupParticipants) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPhoneGetGroupParticipants) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLPhoneGetGroupParticipants) GetCall() *InputGroupCall {
	if m != nil {
		return m.Call
	}
	return nil
}

func (m *TLPhoneGetGroupParticipants) GetIds() []int32 {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *TLPhoneGetGroupParticipants) GetSources() []int32 {
	if m != nil {
		return m.Sources
	}
	return nil
}

func (m *TLPhoneGetGroupParticipants) GetOffset() string {
	if m != nil {
		return m.Offset
	}
	return ""
}

func (m *TLPhoneGetGroupParticipants) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  phone.inviteToGroupCall#7b393160 call:InputGroupCall users:Vector<InputUser> = Updates;
//
type TLPhoneInviteToGroupCall struct {
	Cmd                  TLCmd           `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string          `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Call                 *InputGroupCall `protobuf:"bytes,3,opt,name=call,proto3" json:"call,omitempty"`
	Users                []*InputUser    `protobuf:"bytes,4,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneInviteToGroupCall) Reset()         { *m = TLPhoneInviteToGroupCall{} }
func (m *TLPhoneInviteToGroupCall) String() string { return proto.CompactTextString(m) }
func (*TLPhoneInviteToGroupCall) ProtoMessage()    {}
func (*TLPhoneInviteToGroupCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{338}
}
func (m *TLPhoneInviteToGroupCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneInviteToGroupCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneInviteToGroupCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneInviteToGroupCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneInviteToGroupCall.Merge(m, src)
}
func (m *TLPhoneInviteToGroupCall) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneInviteToGroupCall) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneInviteToGroupCall.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneInviteToGroupCall proto.InternalMessageInfo

func (m *TLPhoneInviteToGroupCall) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPhoneInviteToGroupCall) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLPhoneInviteToGroupCall) GetCall() *InputGroupCall {
	if m != nil {
		return m.Call
	}
	return nil
}

func (m *TLPhoneInviteToGroupCall) GetUsers() []*InputUser {
	if m != nil {
		return m.Users
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  phone.joinGroupCall#5f9c8e62 flags:# muted:flags.0?true call:InputGroupCall params:DataJSON = Updates;
//
type TLPhoneJoinGroupCall struct {
	Cmd                  TLCmd           `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string          `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32           `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Muted                bool            `protobuf:"varint,4,opt,name=muted,proto3" json:"muted,omitempty"`
	Call                 *InputGroupCall `protobuf:"bytes,5,opt,name=call,proto3" json:"call,omitempty"`
	Params               *DataJSON       `protobuf:"bytes,6,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneJoinGroupCall) Reset()         { *m = TLPhoneJoinGroupCall{} }
func (m *TLPhoneJoinGroupCall) String() string { return proto.CompactTextString(m) }
func (*TLPhoneJoinGroupCall) ProtoMessage()    {}
func (*TLPhoneJoinGroupCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{339}
}
func (m *TLPhoneJoinGroupCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneJoinGroupCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneJoinGroupCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneJoinGroupCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneJoinGroupCall.Merge(m, src)
}
func (m *TLPhoneJoinGroupCall) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneJoinGroupCall) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneJoinGroupCall.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneJoinGroupCall proto.InternalMessageInfo

func (m *TLPhoneJoinGroupCall) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPhoneJoinGroupCall) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLPhoneJoinGroupCall) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLPhoneJoinGroupCall) GetMuted() bool {
	if m != nil {
		return m.Muted
	}
	return false
}

func (m *TLPhoneJoinGroupCall) GetCall() *InputGroupCall {
	if m != nil {
		return m.Call
	}
	return nil
}

func (m *TLPhoneJoinGroupCall) GetParams() *DataJSON {
	if m != nil {
		return m.Params
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  phone.leaveGroupCall#500377f9 call:InputGroupCall source:int = Updates;
//
type TLPhoneLeaveGroupCall struct {
	Cmd                  TLCmd           `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string          `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Call                 *InputGroupCall `protobuf:"bytes,3,opt,name=call,proto3" json:"call,omitempty"`
	Source               int32           `protobuf:"varint,4,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneLeaveGroupCall) Reset()         { *m = TLPhoneLeaveGroupCall{} }
func (m *TLPhoneLeaveGroupCall) String() string { return proto.CompactTextString(m) }
func (*TLPhoneLeaveGroupCall) ProtoMessage()    {}
func (*TLPhoneLeaveGroupCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{340}
}
func (m *TLPhoneLeaveGroupCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneLeaveGroupCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneLeaveGroupCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneLeaveGroupCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneLeaveGroupCall.Merge(m, src)
}
func (m *TLPhoneLeaveGroupCall) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneLeaveGroupCall) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneLeaveGroupCall.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneLeaveGroupCall proto.InternalMessageInfo

func (m *TLPhoneLeaveGroupCall) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPhoneLeaveGroupCall) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLPhoneLeaveGroupCall) GetCall() *InputGroupCall {
	if m != nil {
		return m.Call
	}
	return nil
}

func (m *TLPhoneLeaveGroupCall) GetSource() int32 {
	if m != nil {
		return m.Source
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  phone.receivedCall#17d54f61 peer:InputPhoneCall = Bool;
//
type TLPhoneReceivedCall struct {
	Cmd                  TLCmd           `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string          `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPhoneCall `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneReceivedCall) Reset()         { *m = TLPhoneReceivedCall{} }
func (m *TLPhoneReceivedCall) String() string { return proto.CompactTextString(m) }
func (*TLPhoneReceivedCall) ProtoMessage()    {}
func (*TLPhoneReceivedCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{341}
}
func (m *TLPhoneReceivedCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneReceivedCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneReceivedCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneReceivedCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneReceivedCall.Merge(m, src)
}
func (m *TLPhoneReceivedCall) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneReceivedCall) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneReceivedCall.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneReceivedCall proto.InternalMessageInfo

func (m *TLPhoneReceivedCall) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPhoneReceivedCall) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLPhoneReceivedCall) GetPeer() *InputPhoneCall {
	if m != nil {
		return m.Peer
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  phone.requestCall#5b95b3d4 user_id:InputUser random_id:int g_a_hash:bytes protocol:PhoneCallProtocol = phone.PhoneCall;
//  phone.requestCall#42ff96ed flags:# video:flags.0?true user_id:InputUser random_id:int g_a_hash:bytes protocol:PhoneCallProtocol = phone.PhoneCall;
//
type TLPhoneRequestCall struct {
	Cmd                  TLCmd              `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string             `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	UserId               *InputUser         `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RandomId             int32              `protobuf:"varint,4,opt,name=random_id,json=randomId,proto3" json:"random_id,omitempty"`
	GAHash               []byte             `protobuf:"bytes,5,opt,name=g_a_hash,json=gAHash,proto3" json:"g_a_hash,omitempty"`
	Protocol             *PhoneCallProtocol `protobuf:"bytes,6,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Flags                int32              `protobuf:"varint,7,opt,name=flags,proto3" json:"flags,omitempty"`
	Video                bool               `protobuf:"varint,8,opt,name=video,proto3" json:"video,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLPhoneRequestCall) Reset()         { *m = TLPhoneRequestCall{} }
func (m *TLPhoneRequestCall) String() string { return proto.CompactTextString(m) }
func (*TLPhoneRequestCall) ProtoMessage()    {}
func (*TLPhoneRequestCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{342}
}
func (m *TLPhoneRequestCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneRequestCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneRequestCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneRequestCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneRequestCall.Merge(m, src)
}
func (m *TLPhoneRequestCall) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneRequestCall) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneRequestCall.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneRequestCall proto.InternalMessageInfo

func (m *TLPhoneRequestCall) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPhoneRequestCall) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLPhoneRequestCall) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLPhoneRequestCall) GetRandomId() int32 {
	if m != nil {
		return m.RandomId
	}
	return 0
}

func (m *TLPhoneRequestCall) GetGAHash() []byte {
	if m != nil {
		return m.GAHash
	}
	return nil
}

func (m *TLPhoneRequestCall) GetProtocol() *PhoneCallProtocol {
	if m != nil {
		return m.Protocol
	}
	return nil
}

func (m *TLPhoneRequestCall) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLPhoneRequestCall) GetVideo() bool {
	if m != nil {
		return m.Video
	}
	return false
}

///////////////////////////////////////////////////////////////////////////////
//  phone.saveCallDebug#277add7e peer:InputPhoneCall debug:DataJSON = Bool;
//
type TLPhoneSaveCallDebug struct {
	Cmd                  TLCmd           `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string          `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPhoneCall `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Debug                *DataJSON       `protobuf:"bytes,4,opt,name=debug,proto3" json:"debug,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneSaveCallDebug) Reset()         { *m = TLPhoneSaveCallDebug{} }
func (m *TLPhoneSaveCallDebug) String() string { return proto.CompactTextString(m) }
func (*TLPhoneSaveCallDebug) ProtoMessage()    {}
func (*TLPhoneSaveCallDebug) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{343}
}
func (m *TLPhoneSaveCallDebug) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneSaveCallDebug) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneSaveCallDebug.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneSaveCallDebug) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneSaveCallDebug.Merge(m, src)
}
func (m *TLPhoneSaveCallDebug) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneSaveCallDebug) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneSaveCallDebug.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneSaveCallDebug proto.InternalMessageInfo

func (m *TLPhoneSaveCallDebug) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPhoneSaveCallDebug) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLPhoneSaveCallDebug) GetPeer() *InputPhoneCall {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLPhoneSaveCallDebug) GetDebug() *DataJSON {
	if m != nil {
		return m.Debug
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  phone.sendSignalingData#ff7a9383 peer:InputPhoneCall data:bytes = Bool;
//
type TLPhoneSendSignalingData struct {
	Cmd                  TLCmd           `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string          `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPhoneCall `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Data                 []byte          `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneSendSignalingData) Reset()         { *m = TLPhoneSendSignalingData{} }
func (m *TLPhoneSendSignalingData) String() string { return proto.CompactTextString(m) }
func (*TLPhoneSendSignalingData) ProtoMessage()    {}
func (*TLPhoneSendSignalingData) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{344}
}
func (m *TLPhoneSendSignalingData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneSendSignalingData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneSendSignalingData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneSendSignalingData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneSendSignalingData.Merge(m, src)
}
func (m *TLPhoneSendSignalingData) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneSendSignalingData) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneSendSignalingData.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneSendSignalingData proto.InternalMessageInfo

func (m *TLPhoneSendSignalingData) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPhoneSendSignalingData) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLPhoneSendSignalingData) GetPeer() *InputPhoneCall {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLPhoneSendSignalingData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  phone.setCallRating#1c536a34 peer:InputPhoneCall rating:int comment:string = Updates;
//  phone.setCallRating#59ead627 flags:# user_initiative:flags.0?true peer:InputPhoneCall rating:int comment:string = Updates;
//
type TLPhoneSetCallRating struct {
	Cmd                  TLCmd           `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string          `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Peer                 *InputPhoneCall `protobuf:"bytes,3,opt,name=peer,proto3" json:"peer,omitempty"`
	Rating               int32           `protobuf:"varint,4,opt,name=rating,proto3" json:"rating,omitempty"`
	Comment              string          `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	Flags                int32           `protobuf:"varint,6,opt,name=flags,proto3" json:"flags,omitempty"`
	UserInitiative       bool            `protobuf:"varint,7,opt,name=user_initiative,json=userInitiative,proto3" json:"user_initiative,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneSetCallRating) Reset()         { *m = TLPhoneSetCallRating{} }
func (m *TLPhoneSetCallRating) String() string { return proto.CompactTextString(m) }
func (*TLPhoneSetCallRating) ProtoMessage()    {}
func (*TLPhoneSetCallRating) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{345}
}
func (m *TLPhoneSetCallRating) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneSetCallRating) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneSetCallRating.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneSetCallRating) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneSetCallRating.Merge(m, src)
}
func (m *TLPhoneSetCallRating) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneSetCallRating) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneSetCallRating.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneSetCallRating proto.InternalMessageInfo

func (m *TLPhoneSetCallRating) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPhoneSetCallRating) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLPhoneSetCallRating) GetPeer() *InputPhoneCall {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *TLPhoneSetCallRating) GetRating() int32 {
	if m != nil {
		return m.Rating
	}
	return 0
}

func (m *TLPhoneSetCallRating) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *TLPhoneSetCallRating) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLPhoneSetCallRating) GetUserInitiative() bool {
	if m != nil {
		return m.UserInitiative
	}
	return false
}

///////////////////////////////////////////////////////////////////////////////
//  phone.toggleGroupCallSettings#74bbb43d flags:# call:InputGroupCall join_muted:flags.0?Bool = Updates;
//
type TLPhoneToggleGroupCallSettings struct {
	Cmd                  TLCmd           `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string          `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32           `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Call                 *InputGroupCall `protobuf:"bytes,4,opt,name=call,proto3" json:"call,omitempty"`
	JoinMuted            *Bool           `protobuf:"bytes,5,opt,name=join_muted,json=joinMuted,proto3" json:"join_muted,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhoneToggleGroupCallSettings) Reset()         { *m = TLPhoneToggleGroupCallSettings{} }
func (m *TLPhoneToggleGroupCallSettings) String() string { return proto.CompactTextString(m) }
func (*TLPhoneToggleGroupCallSettings) ProtoMessage()    {}
func (*TLPhoneToggleGroupCallSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{346}
}
func (m *TLPhoneToggleGroupCallSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhoneToggleGroupCallSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhoneToggleGroupCallSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhoneToggleGroupCallSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhoneToggleGroupCallSettings.Merge(m, src)
}
func (m *TLPhoneToggleGroupCallSettings) XXX_Size() int {
	return m.Size()
}
func (m *TLPhoneToggleGroupCallSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhoneToggleGroupCallSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhoneToggleGroupCallSettings proto.InternalMessageInfo

func (m *TLPhoneToggleGroupCallSettings) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPhoneToggleGroupCallSettings) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLPhoneToggleGroupCallSettings) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLPhoneToggleGroupCallSettings) GetCall() *InputGroupCall {
	if m != nil {
		return m.Call
	}
	return nil
}

func (m *TLPhoneToggleGroupCallSettings) GetJoinMuted() *Bool {
	if m != nil {
		return m.JoinMuted
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  photos.deletePhotos#87cf7f2f id:Vector<InputPhoto> = Vector<long>;
//
type TLPhotosDeletePhotos struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Id                   []*InputPhoto `protobuf:"bytes,3,rep,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLPhotosDeletePhotos) Reset()         { *m = TLPhotosDeletePhotos{} }
func (m *TLPhotosDeletePhotos) String() string { return proto.CompactTextString(m) }
func (*TLPhotosDeletePhotos) ProtoMessage()    {}
func (*TLPhotosDeletePhotos) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{347}
}
func (m *TLPhotosDeletePhotos) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhotosDeletePhotos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhotosDeletePhotos.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhotosDeletePhotos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhotosDeletePhotos.Merge(m, src)
}
func (m *TLPhotosDeletePhotos) XXX_Size() int {
	return m.Size()
}
func (m *TLPhotosDeletePhotos) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhotosDeletePhotos.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhotosDeletePhotos proto.InternalMessageInfo

func (m *TLPhotosDeletePhotos) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPhotosDeletePhotos) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLPhotosDeletePhotos) GetId() []*InputPhoto {
	if m != nil {
		return m.Id
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  photos.getUserPhotos#91cd32a8 user_id:InputUser offset:int max_id:long limit:int = photos.Photos;
//
type TLPhotosGetUserPhotos struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	UserId               *InputUser `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Offset               int32      `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	MaxId                int64      `protobuf:"varint,5,opt,name=max_id,json=maxId,proto3" json:"max_id,omitempty"`
	Limit                int32      `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLPhotosGetUserPhotos) Reset()         { *m = TLPhotosGetUserPhotos{} }
func (m *TLPhotosGetUserPhotos) String() string { return proto.CompactTextString(m) }
func (*TLPhotosGetUserPhotos) ProtoMessage()    {}
func (*TLPhotosGetUserPhotos) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{348}
}
func (m *TLPhotosGetUserPhotos) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhotosGetUserPhotos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhotosGetUserPhotos.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhotosGetUserPhotos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhotosGetUserPhotos.Merge(m, src)
}
func (m *TLPhotosGetUserPhotos) XXX_Size() int {
	return m.Size()
}
func (m *TLPhotosGetUserPhotos) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhotosGetUserPhotos.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhotosGetUserPhotos proto.InternalMessageInfo

func (m *TLPhotosGetUserPhotos) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPhotosGetUserPhotos) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLPhotosGetUserPhotos) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLPhotosGetUserPhotos) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TLPhotosGetUserPhotos) GetMaxId() int64 {
	if m != nil {
		return m.MaxId
	}
	return 0
}

func (m *TLPhotosGetUserPhotos) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  photos.updateProfilePhoto#f0bb5152 id:InputPhoto = UserProfilePhoto;
//  photos.updateProfilePhoto#eef579a0 id:InputPhoto crop:InputPhotoCrop = UserProfilePhoto;
//  photos.updateProfilePhoto#72d4742c id:InputPhoto = photos.Photo;
//
type TLPhotosUpdateProfilePhoto struct {
	Cmd                  TLCmd           `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string          `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Id                   *InputPhoto     `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Crop                 *InputPhotoCrop `protobuf:"bytes,4,opt,name=crop,proto3" json:"crop,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhotosUpdateProfilePhoto) Reset()         { *m = TLPhotosUpdateProfilePhoto{} }
func (m *TLPhotosUpdateProfilePhoto) String() string { return proto.CompactTextString(m) }
func (*TLPhotosUpdateProfilePhoto) ProtoMessage()    {}
func (*TLPhotosUpdateProfilePhoto) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{349}
}
func (m *TLPhotosUpdateProfilePhoto) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhotosUpdateProfilePhoto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhotosUpdateProfilePhoto.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhotosUpdateProfilePhoto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhotosUpdateProfilePhoto.Merge(m, src)
}
func (m *TLPhotosUpdateProfilePhoto) XXX_Size() int {
	return m.Size()
}
func (m *TLPhotosUpdateProfilePhoto) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhotosUpdateProfilePhoto.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhotosUpdateProfilePhoto proto.InternalMessageInfo

func (m *TLPhotosUpdateProfilePhoto) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPhotosUpdateProfilePhoto) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLPhotosUpdateProfilePhoto) GetId() *InputPhoto {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLPhotosUpdateProfilePhoto) GetCrop() *InputPhotoCrop {
	if m != nil {
		return m.Crop
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  photos.uploadProfilePhoto#4f32c098 file:InputFile = photos.Photo;
//  photos.uploadProfilePhoto#d50f9c88 file:InputFile caption:string geo_point:InputGeoPoint crop:InputPhotoCrop = photos.Photo;
//  photos.uploadProfilePhoto#89f30f69 flags:# file:flags.0?InputFile video:flags.1?InputFile video_start_ts:flags.2?double = photos.Photo;
//
type TLPhotosUploadProfilePhoto struct {
	Cmd                  TLCmd           `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string          `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	File                 *InputFile      `protobuf:"bytes,3,opt,name=file,proto3" json:"file,omitempty"`
	Caption              string          `protobuf:"bytes,4,opt,name=caption,proto3" json:"caption,omitempty"`
	GeoPoint             *InputGeoPoint  `protobuf:"bytes,5,opt,name=geo_point,json=geoPoint,proto3" json:"geo_point,omitempty"`
	Crop                 *InputPhotoCrop `protobuf:"bytes,6,opt,name=crop,proto3" json:"crop,omitempty"`
	Flags                int32           `protobuf:"varint,7,opt,name=flags,proto3" json:"flags,omitempty"`
	Video                *InputFile      `protobuf:"bytes,8,opt,name=video,proto3" json:"video,omitempty"`
	VideoStartTs         float64         `protobuf:"fixed64,9,opt,name=video_start_ts,json=videoStartTs,proto3" json:"video_start_ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TLPhotosUploadProfilePhoto) Reset()         { *m = TLPhotosUploadProfilePhoto{} }
func (m *TLPhotosUploadProfilePhoto) String() string { return proto.CompactTextString(m) }
func (*TLPhotosUploadProfilePhoto) ProtoMessage()    {}
func (*TLPhotosUploadProfilePhoto) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{350}
}
func (m *TLPhotosUploadProfilePhoto) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPhotosUploadProfilePhoto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPhotosUploadProfilePhoto.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPhotosUploadProfilePhoto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPhotosUploadProfilePhoto.Merge(m, src)
}
func (m *TLPhotosUploadProfilePhoto) XXX_Size() int {
	return m.Size()
}
func (m *TLPhotosUploadProfilePhoto) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPhotosUploadProfilePhoto.DiscardUnknown(m)
}

var xxx_messageInfo_TLPhotosUploadProfilePhoto proto.InternalMessageInfo

func (m *TLPhotosUploadProfilePhoto) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPhotosUploadProfilePhoto) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLPhotosUploadProfilePhoto) GetFile() *InputFile {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *TLPhotosUploadProfilePhoto) GetCaption() string {
	if m != nil {
		return m.Caption
	}
	return ""
}

func (m *TLPhotosUploadProfilePhoto) GetGeoPoint() *InputGeoPoint {
	if m != nil {
		return m.GeoPoint
	}
	return nil
}

func (m *TLPhotosUploadProfilePhoto) GetCrop() *InputPhotoCrop {
	if m != nil {
		return m.Crop
	}
	return nil
}

func (m *TLPhotosUploadProfilePhoto) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLPhotosUploadProfilePhoto) GetVideo() *InputFile {
	if m != nil {
		return m.Video
	}
	return nil
}

func (m *TLPhotosUploadProfilePhoto) GetVideoStartTs() float64 {
	if m != nil {
		return m.VideoStartTs
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  stats.getBroadcastStats#ab42441a flags:# dark:flags.0?true channel:InputChannel = stats.BroadcastStats;
//  stats.getBroadcastStats#e6300dba flags:# dark:flags.0?true channel:InputChannel tz_offset:int = stats.BroadcastStats;
//
type TLStatsGetBroadcastStats struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32         `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Dark                 bool          `protobuf:"varint,4,opt,name=dark,proto3" json:"dark,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
	TzOffset             int32         `protobuf:"varint,6,opt,name=tz_offset,json=tzOffset,proto3" json:"tz_offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLStatsGetBroadcastStats) Reset()         { *m = TLStatsGetBroadcastStats{} }
func (m *TLStatsGetBroadcastStats) String() string { return proto.CompactTextString(m) }
func (*TLStatsGetBroadcastStats) ProtoMessage()    {}
func (*TLStatsGetBroadcastStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{351}
}
func (m *TLStatsGetBroadcastStats) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStatsGetBroadcastStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStatsGetBroadcastStats.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLStatsGetBroadcastStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStatsGetBroadcastStats.Merge(m, src)
}
func (m *TLStatsGetBroadcastStats) XXX_Size() int {
	return m.Size()
}
func (m *TLStatsGetBroadcastStats) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStatsGetBroadcastStats.DiscardUnknown(m)
}

var xxx_messageInfo_TLStatsGetBroadcastStats proto.InternalMessageInfo

func (m *TLStatsGetBroadcastStats) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLStatsGetBroadcastStats) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLStatsGetBroadcastStats) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLStatsGetBroadcastStats) GetDark() bool {
	if m != nil {
		return m.Dark
	}
	return false
}

func (m *TLStatsGetBroadcastStats) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLStatsGetBroadcastStats) GetTzOffset() int32 {
	if m != nil {
		return m.TzOffset
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  stats.getMegagroupStats#dcdf8607 flags:# dark:flags.0?true channel:InputChannel = stats.MegagroupStats;
//
type TLStatsGetMegagroupStats struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32         `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Dark                 bool          `protobuf:"varint,4,opt,name=dark,proto3" json:"dark,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLStatsGetMegagroupStats) Reset()         { *m = TLStatsGetMegagroupStats{} }
func (m *TLStatsGetMegagroupStats) String() string { return proto.CompactTextString(m) }
func (*TLStatsGetMegagroupStats) ProtoMessage()    {}
func (*TLStatsGetMegagroupStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{352}
}
func (m *TLStatsGetMegagroupStats) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStatsGetMegagroupStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStatsGetMegagroupStats.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLStatsGetMegagroupStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStatsGetMegagroupStats.Merge(m, src)
}
func (m *TLStatsGetMegagroupStats) XXX_Size() int {
	return m.Size()
}
func (m *TLStatsGetMegagroupStats) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStatsGetMegagroupStats.DiscardUnknown(m)
}

var xxx_messageInfo_TLStatsGetMegagroupStats proto.InternalMessageInfo

func (m *TLStatsGetMegagroupStats) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLStatsGetMegagroupStats) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLStatsGetMegagroupStats) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLStatsGetMegagroupStats) GetDark() bool {
	if m != nil {
		return m.Dark
	}
	return false
}

func (m *TLStatsGetMegagroupStats) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  stats.getMessagePublicForwards#5630281b channel:InputChannel msg_id:int offset_rate:int offset_peer:InputPeer offset_id:int limit:int = messages.Messages;
//
type TLStatsGetMessagePublicForwards struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	MsgId                int32         `protobuf:"varint,4,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	OffsetRate           int32         `protobuf:"varint,5,opt,name=offset_rate,json=offsetRate,proto3" json:"offset_rate,omitempty"`
	OffsetPeer           *InputPeer    `protobuf:"bytes,6,opt,name=offset_peer,json=offsetPeer,proto3" json:"offset_peer,omitempty"`
	OffsetId             int32         `protobuf:"varint,7,opt,name=offset_id,json=offsetId,proto3" json:"offset_id,omitempty"`
	Limit                int32         `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLStatsGetMessagePublicForwards) Reset()         { *m = TLStatsGetMessagePublicForwards{} }
func (m *TLStatsGetMessagePublicForwards) String() string { return proto.CompactTextString(m) }
func (*TLStatsGetMessagePublicForwards) ProtoMessage()    {}
func (*TLStatsGetMessagePublicForwards) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{353}
}
func (m *TLStatsGetMessagePublicForwards) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStatsGetMessagePublicForwards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStatsGetMessagePublicForwards.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLStatsGetMessagePublicForwards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStatsGetMessagePublicForwards.Merge(m, src)
}
func (m *TLStatsGetMessagePublicForwards) XXX_Size() int {
	return m.Size()
}
func (m *TLStatsGetMessagePublicForwards) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStatsGetMessagePublicForwards.DiscardUnknown(m)
}

var xxx_messageInfo_TLStatsGetMessagePublicForwards proto.InternalMessageInfo

func (m *TLStatsGetMessagePublicForwards) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLStatsGetMessagePublicForwards) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLStatsGetMessagePublicForwards) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLStatsGetMessagePublicForwards) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *TLStatsGetMessagePublicForwards) GetOffsetRate() int32 {
	if m != nil {
		return m.OffsetRate
	}
	return 0
}

func (m *TLStatsGetMessagePublicForwards) GetOffsetPeer() *InputPeer {
	if m != nil {
		return m.OffsetPeer
	}
	return nil
}

func (m *TLStatsGetMessagePublicForwards) GetOffsetId() int32 {
	if m != nil {
		return m.OffsetId
	}
	return 0
}

func (m *TLStatsGetMessagePublicForwards) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  stats.getMessageStats#b6e0a3f5 flags:# dark:flags.0?true channel:InputChannel msg_id:int = stats.MessageStats;
//
type TLStatsGetMessageStats struct {
	Cmd                  TLCmd         `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string        `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32         `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Dark                 bool          `protobuf:"varint,4,opt,name=dark,proto3" json:"dark,omitempty"`
	Channel              *InputChannel `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
	MsgId                int32         `protobuf:"varint,6,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TLStatsGetMessageStats) Reset()         { *m = TLStatsGetMessageStats{} }
func (m *TLStatsGetMessageStats) String() string { return proto.CompactTextString(m) }
func (*TLStatsGetMessageStats) ProtoMessage()    {}
func (*TLStatsGetMessageStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{354}
}
func (m *TLStatsGetMessageStats) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStatsGetMessageStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStatsGetMessageStats.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLStatsGetMessageStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStatsGetMessageStats.Merge(m, src)
}
func (m *TLStatsGetMessageStats) XXX_Size() int {
	return m.Size()
}
func (m *TLStatsGetMessageStats) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStatsGetMessageStats.DiscardUnknown(m)
}

var xxx_messageInfo_TLStatsGetMessageStats proto.InternalMessageInfo

func (m *TLStatsGetMessageStats) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLStatsGetMessageStats) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLStatsGetMessageStats) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLStatsGetMessageStats) GetDark() bool {
	if m != nil {
		return m.Dark
	}
	return false
}

func (m *TLStatsGetMessageStats) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLStatsGetMessageStats) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  stats.loadAsyncGraph#621d5fa0 flags:# token:string x:flags.0?long = StatsGraph;
//
type TLStatsLoadAsyncGraph struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32    `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Token                string   `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	X                    int64    `protobuf:"varint,5,opt,name=x,proto3" json:"x,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLStatsLoadAsyncGraph) Reset()         { *m = TLStatsLoadAsyncGraph{} }
func (m *TLStatsLoadAsyncGraph) String() string { return proto.CompactTextString(m) }
func (*TLStatsLoadAsyncGraph) ProtoMessage()    {}
func (*TLStatsLoadAsyncGraph) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{355}
}
func (m *TLStatsLoadAsyncGraph) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStatsLoadAsyncGraph) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStatsLoadAsyncGraph.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLStatsLoadAsyncGraph) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStatsLoadAsyncGraph.Merge(m, src)
}
func (m *TLStatsLoadAsyncGraph) XXX_Size() int {
	return m.Size()
}
func (m *TLStatsLoadAsyncGraph) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStatsLoadAsyncGraph.DiscardUnknown(m)
}

var xxx_messageInfo_TLStatsLoadAsyncGraph proto.InternalMessageInfo

func (m *TLStatsLoadAsyncGraph) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLStatsLoadAsyncGraph) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLStatsLoadAsyncGraph) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLStatsLoadAsyncGraph) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *TLStatsLoadAsyncGraph) GetX() int64 {
	if m != nil {
		return m.X
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  stickers.addStickerToSet#8653febe stickerset:InputStickerSet sticker:InputStickerSetItem = messages.StickerSet;
//
type TLStickersAddStickerToSet struct {
	Cmd                  TLCmd                `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string               `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Stickerset           *InputStickerSet     `protobuf:"bytes,3,opt,name=stickerset,proto3" json:"stickerset,omitempty"`
	Sticker              *InputStickerSetItem `protobuf:"bytes,4,opt,name=sticker,proto3" json:"sticker,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TLStickersAddStickerToSet) Reset()         { *m = TLStickersAddStickerToSet{} }
func (m *TLStickersAddStickerToSet) String() string { return proto.CompactTextString(m) }
func (*TLStickersAddStickerToSet) ProtoMessage()    {}
func (*TLStickersAddStickerToSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{356}
}
func (m *TLStickersAddStickerToSet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStickersAddStickerToSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStickersAddStickerToSet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLStickersAddStickerToSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStickersAddStickerToSet.Merge(m, src)
}
func (m *TLStickersAddStickerToSet) XXX_Size() int {
	return m.Size()
}
func (m *TLStickersAddStickerToSet) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStickersAddStickerToSet.DiscardUnknown(m)
}

var xxx_messageInfo_TLStickersAddStickerToSet proto.InternalMessageInfo

func (m *TLStickersAddStickerToSet) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLStickersAddStickerToSet) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLStickersAddStickerToSet) GetStickerset() *InputStickerSet {
	if m != nil {
		return m.Stickerset
	}
	return nil
}

func (m *TLStickersAddStickerToSet) GetSticker() *InputStickerSetItem {
	if m != nil {
		return m.Sticker
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  stickers.changeStickerPosition#ffb6d4ca sticker:InputDocument position:int = messages.StickerSet;
//
type TLStickersChangeStickerPosition struct {
	Cmd                  TLCmd          `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string         `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Sticker              *InputDocument `protobuf:"bytes,3,opt,name=sticker,proto3" json:"sticker,omitempty"`
	Position             int32          `protobuf:"varint,4,opt,name=position,proto3" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TLStickersChangeStickerPosition) Reset()         { *m = TLStickersChangeStickerPosition{} }
func (m *TLStickersChangeStickerPosition) String() string { return proto.CompactTextString(m) }
func (*TLStickersChangeStickerPosition) ProtoMessage()    {}
func (*TLStickersChangeStickerPosition) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{357}
}
func (m *TLStickersChangeStickerPosition) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStickersChangeStickerPosition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStickersChangeStickerPosition.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLStickersChangeStickerPosition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStickersChangeStickerPosition.Merge(m, src)
}
func (m *TLStickersChangeStickerPosition) XXX_Size() int {
	return m.Size()
}
func (m *TLStickersChangeStickerPosition) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStickersChangeStickerPosition.DiscardUnknown(m)
}

var xxx_messageInfo_TLStickersChangeStickerPosition proto.InternalMessageInfo

func (m *TLStickersChangeStickerPosition) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLStickersChangeStickerPosition) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLStickersChangeStickerPosition) GetSticker() *InputDocument {
	if m != nil {
		return m.Sticker
	}
	return nil
}

func (m *TLStickersChangeStickerPosition) GetPosition() int32 {
	if m != nil {
		return m.Position
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  stickers.createStickerSet#9bd86e6a flags:# masks:flags.0?true user_id:InputUser title:string short_name:string stickers:Vector<InputStickerSetItem> = messages.StickerSet;
//  stickers.createStickerSet#f1036780 flags:# masks:flags.0?true animated:flags.1?true user_id:InputUser title:string short_name:string thumb:flags.2?InputDocument stickers:Vector<InputStickerSetItem> = messages.StickerSet;
//
type TLStickersCreateStickerSet struct {
	Cmd                  TLCmd                  `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string                 `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32                  `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Masks                bool                   `protobuf:"varint,4,opt,name=masks,proto3" json:"masks,omitempty"`
	UserId               *InputUser             `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title                string                 `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	ShortName            string                 `protobuf:"bytes,7,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	Stickers             []*InputStickerSetItem `protobuf:"bytes,8,rep,name=stickers,proto3" json:"stickers,omitempty"`
	Animated             bool                   `protobuf:"varint,9,opt,name=animated,proto3" json:"animated,omitempty"`
	Thumb                *InputDocument         `protobuf:"bytes,10,opt,name=thumb,proto3" json:"thumb,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TLStickersCreateStickerSet) Reset()         { *m = TLStickersCreateStickerSet{} }
func (m *TLStickersCreateStickerSet) String() string { return proto.CompactTextString(m) }
func (*TLStickersCreateStickerSet) ProtoMessage()    {}
func (*TLStickersCreateStickerSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{358}
}
func (m *TLStickersCreateStickerSet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStickersCreateStickerSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStickersCreateStickerSet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLStickersCreateStickerSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStickersCreateStickerSet.Merge(m, src)
}
func (m *TLStickersCreateStickerSet) XXX_Size() int {
	return m.Size()
}
func (m *TLStickersCreateStickerSet) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStickersCreateStickerSet.DiscardUnknown(m)
}

var xxx_messageInfo_TLStickersCreateStickerSet proto.InternalMessageInfo

func (m *TLStickersCreateStickerSet) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLStickersCreateStickerSet) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLStickersCreateStickerSet) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLStickersCreateStickerSet) GetMasks() bool {
	if m != nil {
		return m.Masks
	}
	return false
}

func (m *TLStickersCreateStickerSet) GetUserId() *InputUser {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *TLStickersCreateStickerSet) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *TLStickersCreateStickerSet) GetShortName() string {
	if m != nil {
		return m.ShortName
	}
	return ""
}

func (m *TLStickersCreateStickerSet) GetStickers() []*InputStickerSetItem {
	if m != nil {
		return m.Stickers
	}
	return nil
}

func (m *TLStickersCreateStickerSet) GetAnimated() bool {
	if m != nil {
		return m.Animated
	}
	return false
}

func (m *TLStickersCreateStickerSet) GetThumb() *InputDocument {
	if m != nil {
		return m.Thumb
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  stickers.removeStickerFromSet#f7760f51 sticker:InputDocument = messages.StickerSet;
//
type TLStickersRemoveStickerFromSet struct {
	Cmd                  TLCmd          `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string         `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Sticker              *InputDocument `protobuf:"bytes,3,opt,name=sticker,proto3" json:"sticker,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TLStickersRemoveStickerFromSet) Reset()         { *m = TLStickersRemoveStickerFromSet{} }
func (m *TLStickersRemoveStickerFromSet) String() string { return proto.CompactTextString(m) }
func (*TLStickersRemoveStickerFromSet) ProtoMessage()    {}
func (*TLStickersRemoveStickerFromSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{359}
}
func (m *TLStickersRemoveStickerFromSet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStickersRemoveStickerFromSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStickersRemoveStickerFromSet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLStickersRemoveStickerFromSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStickersRemoveStickerFromSet.Merge(m, src)
}
func (m *TLStickersRemoveStickerFromSet) XXX_Size() int {
	return m.Size()
}
func (m *TLStickersRemoveStickerFromSet) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStickersRemoveStickerFromSet.DiscardUnknown(m)
}

var xxx_messageInfo_TLStickersRemoveStickerFromSet proto.InternalMessageInfo

func (m *TLStickersRemoveStickerFromSet) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLStickersRemoveStickerFromSet) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLStickersRemoveStickerFromSet) GetSticker() *InputDocument {
	if m != nil {
		return m.Sticker
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  stickers.setStickerSetThumb#9a364e30 stickerset:InputStickerSet thumb:InputDocument = messages.StickerSet;
//
type TLStickersSetStickerSetThumb struct {
	Cmd                  TLCmd            `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string           `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Stickerset           *InputStickerSet `protobuf:"bytes,3,opt,name=stickerset,proto3" json:"stickerset,omitempty"`
	Thumb                *InputDocument   `protobuf:"bytes,4,opt,name=thumb,proto3" json:"thumb,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TLStickersSetStickerSetThumb) Reset()         { *m = TLStickersSetStickerSetThumb{} }
func (m *TLStickersSetStickerSetThumb) String() string { return proto.CompactTextString(m) }
func (*TLStickersSetStickerSetThumb) ProtoMessage()    {}
func (*TLStickersSetStickerSetThumb) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{360}
}
func (m *TLStickersSetStickerSetThumb) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLStickersSetStickerSetThumb) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLStickersSetStickerSetThumb.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLStickersSetStickerSetThumb) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLStickersSetStickerSetThumb.Merge(m, src)
}
func (m *TLStickersSetStickerSetThumb) XXX_Size() int {
	return m.Size()
}
func (m *TLStickersSetStickerSetThumb) XXX_DiscardUnknown() {
	xxx_messageInfo_TLStickersSetStickerSetThumb.DiscardUnknown(m)
}

var xxx_messageInfo_TLStickersSetStickerSetThumb proto.InternalMessageInfo

func (m *TLStickersSetStickerSetThumb) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLStickersSetStickerSetThumb) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLStickersSetStickerSetThumb) GetStickerset() *InputStickerSet {
	if m != nil {
		return m.Stickerset
	}
	return nil
}

func (m *TLStickersSetStickerSetThumb) GetThumb() *InputDocument {
	if m != nil {
		return m.Thumb
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  updates.getChannelDifference#3173d78 flags:# force:flags.0?true channel:InputChannel filter:ChannelMessagesFilter pts:int limit:int = updates.ChannelDifference;
//  updates.getChannelDifference#bb32d7c0 channel:InputChannel filter:ChannelMessagesFilter pts:int limit:int = updates.ChannelDifference;
//
type TLUpdatesGetChannelDifference struct {
	Cmd                  TLCmd                  `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string                 `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32                  `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Force                bool                   `protobuf:"varint,4,opt,name=force,proto3" json:"force,omitempty"`
	Channel              *InputChannel          `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
	Filter               *ChannelMessagesFilter `protobuf:"bytes,6,opt,name=filter,proto3" json:"filter,omitempty"`
	Pts                  int32                  `protobuf:"varint,7,opt,name=pts,proto3" json:"pts,omitempty"`
	Limit                int32                  `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TLUpdatesGetChannelDifference) Reset()         { *m = TLUpdatesGetChannelDifference{} }
func (m *TLUpdatesGetChannelDifference) String() string { return proto.CompactTextString(m) }
func (*TLUpdatesGetChannelDifference) ProtoMessage()    {}
func (*TLUpdatesGetChannelDifference) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{361}
}
func (m *TLUpdatesGetChannelDifference) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUpdatesGetChannelDifference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUpdatesGetChannelDifference.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLUpdatesGetChannelDifference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUpdatesGetChannelDifference.Merge(m, src)
}
func (m *TLUpdatesGetChannelDifference) XXX_Size() int {
	return m.Size()
}
func (m *TLUpdatesGetChannelDifference) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUpdatesGetChannelDifference.DiscardUnknown(m)
}

var xxx_messageInfo_TLUpdatesGetChannelDifference proto.InternalMessageInfo

func (m *TLUpdatesGetChannelDifference) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLUpdatesGetChannelDifference) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLUpdatesGetChannelDifference) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLUpdatesGetChannelDifference) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

func (m *TLUpdatesGetChannelDifference) GetChannel() *InputChannel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (m *TLUpdatesGetChannelDifference) GetFilter() *ChannelMessagesFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *TLUpdatesGetChannelDifference) GetPts() int32 {
	if m != nil {
		return m.Pts
	}
	return 0
}

func (m *TLUpdatesGetChannelDifference) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  updates.getDifference#25939651 flags:# pts:int pts_total_limit:flags.0?int date:int qts:int = updates.Difference;
//  updates.getDifference#a041495 pts:int date:int qts:int = updates.Difference;
//
type TLUpdatesGetDifference struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Flags                int32    `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Pts                  int32    `protobuf:"varint,4,opt,name=pts,proto3" json:"pts,omitempty"`
	PtsTotalLimit        int32    `protobuf:"varint,5,opt,name=pts_total_limit,json=ptsTotalLimit,proto3" json:"pts_total_limit,omitempty"`
	Date                 int32    `protobuf:"varint,6,opt,name=date,proto3" json:"date,omitempty"`
	Qts                  int32    `protobuf:"varint,7,opt,name=qts,proto3" json:"qts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLUpdatesGetDifference) Reset()         { *m = TLUpdatesGetDifference{} }
func (m *TLUpdatesGetDifference) String() string { return proto.CompactTextString(m) }
func (*TLUpdatesGetDifference) ProtoMessage()    {}
func (*TLUpdatesGetDifference) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{362}
}
func (m *TLUpdatesGetDifference) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUpdatesGetDifference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUpdatesGetDifference.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLUpdatesGetDifference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUpdatesGetDifference.Merge(m, src)
}
func (m *TLUpdatesGetDifference) XXX_Size() int {
	return m.Size()
}
func (m *TLUpdatesGetDifference) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUpdatesGetDifference.DiscardUnknown(m)
}

var xxx_messageInfo_TLUpdatesGetDifference proto.InternalMessageInfo

func (m *TLUpdatesGetDifference) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLUpdatesGetDifference) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLUpdatesGetDifference) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLUpdatesGetDifference) GetPts() int32 {
	if m != nil {
		return m.Pts
	}
	return 0
}

func (m *TLUpdatesGetDifference) GetPtsTotalLimit() int32 {
	if m != nil {
		return m.PtsTotalLimit
	}
	return 0
}

func (m *TLUpdatesGetDifference) GetDate() int32 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *TLUpdatesGetDifference) GetQts() int32 {
	if m != nil {
		return m.Qts
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  updates.getState#edd4882a = updates.State;
//
type TLUpdatesGetState struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLUpdatesGetState) Reset()         { *m = TLUpdatesGetState{} }
func (m *TLUpdatesGetState) String() string { return proto.CompactTextString(m) }
func (*TLUpdatesGetState) ProtoMessage()    {}
func (*TLUpdatesGetState) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{363}
}
func (m *TLUpdatesGetState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUpdatesGetState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUpdatesGetState.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLUpdatesGetState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUpdatesGetState.Merge(m, src)
}
func (m *TLUpdatesGetState) XXX_Size() int {
	return m.Size()
}
func (m *TLUpdatesGetState) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUpdatesGetState.DiscardUnknown(m)
}

var xxx_messageInfo_TLUpdatesGetState proto.InternalMessageInfo

func (m *TLUpdatesGetState) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLUpdatesGetState) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
//  upload.getCdnFile#2000bcc3 file_token:bytes offset:int limit:int = upload.CdnFile;
//
type TLUploadGetCdnFile struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	FileToken            []byte   `protobuf:"bytes,3,opt,name=file_token,json=fileToken,proto3" json:"file_token,omitempty"`
	Offset               int32    `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32    `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLUploadGetCdnFile) Reset()         { *m = TLUploadGetCdnFile{} }
func (m *TLUploadGetCdnFile) String() string { return proto.CompactTextString(m) }
func (*TLUploadGetCdnFile) ProtoMessage()    {}
func (*TLUploadGetCdnFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{364}
}
func (m *TLUploadGetCdnFile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUploadGetCdnFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUploadGetCdnFile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLUploadGetCdnFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUploadGetCdnFile.Merge(m, src)
}
func (m *TLUploadGetCdnFile) XXX_Size() int {
	return m.Size()
}
func (m *TLUploadGetCdnFile) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUploadGetCdnFile.DiscardUnknown(m)
}

var xxx_messageInfo_TLUploadGetCdnFile proto.InternalMessageInfo

func (m *TLUploadGetCdnFile) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLUploadGetCdnFile) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLUploadGetCdnFile) GetFileToken() []byte {
	if m != nil {
		return m.FileToken
	}
	return nil
}

func (m *TLUploadGetCdnFile) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TLUploadGetCdnFile) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  upload.getCdnFileHashes#f715c87b file_token:bytes offset:int = Vector<CdnFileHash>;
//  upload.getCdnFileHashes#4da54231 file_token:bytes offset:int = Vector<FileHash>;
//
type TLUploadGetCdnFileHashes struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	FileToken            []byte   `protobuf:"bytes,3,opt,name=file_token,json=fileToken,proto3" json:"file_token,omitempty"`
	Offset               int32    `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLUploadGetCdnFileHashes) Reset()         { *m = TLUploadGetCdnFileHashes{} }
func (m *TLUploadGetCdnFileHashes) String() string { return proto.CompactTextString(m) }
func (*TLUploadGetCdnFileHashes) ProtoMessage()    {}
func (*TLUploadGetCdnFileHashes) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{365}
}
func (m *TLUploadGetCdnFileHashes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUploadGetCdnFileHashes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUploadGetCdnFileHashes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLUploadGetCdnFileHashes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUploadGetCdnFileHashes.Merge(m, src)
}
func (m *TLUploadGetCdnFileHashes) XXX_Size() int {
	return m.Size()
}
func (m *TLUploadGetCdnFileHashes) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUploadGetCdnFileHashes.DiscardUnknown(m)
}

var xxx_messageInfo_TLUploadGetCdnFileHashes proto.InternalMessageInfo

func (m *TLUploadGetCdnFileHashes) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLUploadGetCdnFileHashes) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLUploadGetCdnFileHashes) GetFileToken() []byte {
	if m != nil {
		return m.FileToken
	}
	return nil
}

func (m *TLUploadGetCdnFileHashes) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  upload.getFile#e3a6cfb5 location:InputFileLocation offset:int limit:int = upload.File;
//  upload.getFile#b15a9afc flags:# precise:flags.0?true location:InputFileLocation offset:int limit:int = upload.File;
//
type TLUploadGetFile struct {
	Cmd                  TLCmd              `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string             `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Location             *InputFileLocation `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	Offset               int32              `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32              `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Flags                int32              `protobuf:"varint,6,opt,name=flags,proto3" json:"flags,omitempty"`
	Precise              bool               `protobuf:"varint,7,opt,name=precise,proto3" json:"precise,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLUploadGetFile) Reset()         { *m = TLUploadGetFile{} }
func (m *TLUploadGetFile) String() string { return proto.CompactTextString(m) }
func (*TLUploadGetFile) ProtoMessage()    {}
func (*TLUploadGetFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{366}
}
func (m *TLUploadGetFile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUploadGetFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUploadGetFile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLUploadGetFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUploadGetFile.Merge(m, src)
}
func (m *TLUploadGetFile) XXX_Size() int {
	return m.Size()
}
func (m *TLUploadGetFile) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUploadGetFile.DiscardUnknown(m)
}

var xxx_messageInfo_TLUploadGetFile proto.InternalMessageInfo

func (m *TLUploadGetFile) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLUploadGetFile) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLUploadGetFile) GetLocation() *InputFileLocation {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *TLUploadGetFile) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TLUploadGetFile) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TLUploadGetFile) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *TLUploadGetFile) GetPrecise() bool {
	if m != nil {
		return m.Precise
	}
	return false
}

///////////////////////////////////////////////////////////////////////////////
//  upload.getFileHashes#c7025931 location:InputFileLocation offset:int = Vector<FileHash>;
//
type TLUploadGetFileHashes struct {
	Cmd                  TLCmd              `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string             `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Location             *InputFileLocation `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	Offset               int32              `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TLUploadGetFileHashes) Reset()         { *m = TLUploadGetFileHashes{} }
func (m *TLUploadGetFileHashes) String() string { return proto.CompactTextString(m) }
func (*TLUploadGetFileHashes) ProtoMessage()    {}
func (*TLUploadGetFileHashes) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{367}
}
func (m *TLUploadGetFileHashes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUploadGetFileHashes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUploadGetFileHashes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLUploadGetFileHashes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUploadGetFileHashes.Merge(m, src)
}
func (m *TLUploadGetFileHashes) XXX_Size() int {
	return m.Size()
}
func (m *TLUploadGetFileHashes) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUploadGetFileHashes.DiscardUnknown(m)
}

var xxx_messageInfo_TLUploadGetFileHashes proto.InternalMessageInfo

func (m *TLUploadGetFileHashes) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLUploadGetFileHashes) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLUploadGetFileHashes) GetLocation() *InputFileLocation {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *TLUploadGetFileHashes) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  upload.getWebFile#24e6818d location:InputWebFileLocation offset:int limit:int = upload.WebFile;
//
type TLUploadGetWebFile struct {
	Cmd                  TLCmd                 `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string                `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Location             *InputWebFileLocation `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	Offset               int32                 `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32                 `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TLUploadGetWebFile) Reset()         { *m = TLUploadGetWebFile{} }
func (m *TLUploadGetWebFile) String() string { return proto.CompactTextString(m) }
func (*TLUploadGetWebFile) ProtoMessage()    {}
func (*TLUploadGetWebFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{368}
}
func (m *TLUploadGetWebFile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUploadGetWebFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUploadGetWebFile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLUploadGetWebFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUploadGetWebFile.Merge(m, src)
}
func (m *TLUploadGetWebFile) XXX_Size() int {
	return m.Size()
}
func (m *TLUploadGetWebFile) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUploadGetWebFile.DiscardUnknown(m)
}

var xxx_messageInfo_TLUploadGetWebFile proto.InternalMessageInfo

func (m *TLUploadGetWebFile) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLUploadGetWebFile) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLUploadGetWebFile) GetLocation() *InputWebFileLocation {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *TLUploadGetWebFile) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *TLUploadGetWebFile) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
//  upload.reuploadCdnFile#1af91c09 file_token:bytes request_token:bytes = Vector<CdnFileHash>;
//  upload.reuploadCdnFile#9b2754a8 file_token:bytes request_token:bytes = Vector<FileHash>;
//
type TLUploadReuploadCdnFile struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	FileToken            []byte   `protobuf:"bytes,3,opt,name=file_token,json=fileToken,proto3" json:"file_token,omitempty"`
	RequestToken         []byte   `protobuf:"bytes,4,opt,name=request_token,json=requestToken,proto3" json:"request_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLUploadReuploadCdnFile) Reset()         { *m = TLUploadReuploadCdnFile{} }
func (m *TLUploadReuploadCdnFile) String() string { return proto.CompactTextString(m) }
func (*TLUploadReuploadCdnFile) ProtoMessage()    {}
func (*TLUploadReuploadCdnFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{369}
}
func (m *TLUploadReuploadCdnFile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUploadReuploadCdnFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUploadReuploadCdnFile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLUploadReuploadCdnFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUploadReuploadCdnFile.Merge(m, src)
}
func (m *TLUploadReuploadCdnFile) XXX_Size() int {
	return m.Size()
}
func (m *TLUploadReuploadCdnFile) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUploadReuploadCdnFile.DiscardUnknown(m)
}

var xxx_messageInfo_TLUploadReuploadCdnFile proto.InternalMessageInfo

func (m *TLUploadReuploadCdnFile) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLUploadReuploadCdnFile) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLUploadReuploadCdnFile) GetFileToken() []byte {
	if m != nil {
		return m.FileToken
	}
	return nil
}

func (m *TLUploadReuploadCdnFile) GetRequestToken() []byte {
	if m != nil {
		return m.RequestToken
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  upload.saveBigFilePart#de7b673d file_id:long file_part:int file_total_parts:int bytes:bytes = Bool;
//
type TLUploadSaveBigFilePart struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	FileId               int64    `protobuf:"varint,3,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	FilePart             int32    `protobuf:"varint,4,opt,name=file_part,json=filePart,proto3" json:"file_part,omitempty"`
	FileTotalParts       int32    `protobuf:"varint,5,opt,name=file_total_parts,json=fileTotalParts,proto3" json:"file_total_parts,omitempty"`
	Bytes                []byte   `protobuf:"bytes,6,opt,name=bytes,proto3" json:"bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLUploadSaveBigFilePart) Reset()         { *m = TLUploadSaveBigFilePart{} }
func (m *TLUploadSaveBigFilePart) String() string { return proto.CompactTextString(m) }
func (*TLUploadSaveBigFilePart) ProtoMessage()    {}
func (*TLUploadSaveBigFilePart) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{370}
}
func (m *TLUploadSaveBigFilePart) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUploadSaveBigFilePart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUploadSaveBigFilePart.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLUploadSaveBigFilePart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUploadSaveBigFilePart.Merge(m, src)
}
func (m *TLUploadSaveBigFilePart) XXX_Size() int {
	return m.Size()
}
func (m *TLUploadSaveBigFilePart) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUploadSaveBigFilePart.DiscardUnknown(m)
}

var xxx_messageInfo_TLUploadSaveBigFilePart proto.InternalMessageInfo

func (m *TLUploadSaveBigFilePart) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLUploadSaveBigFilePart) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLUploadSaveBigFilePart) GetFileId() int64 {
	if m != nil {
		return m.FileId
	}
	return 0
}

func (m *TLUploadSaveBigFilePart) GetFilePart() int32 {
	if m != nil {
		return m.FilePart
	}
	return 0
}

func (m *TLUploadSaveBigFilePart) GetFileTotalParts() int32 {
	if m != nil {
		return m.FileTotalParts
	}
	return 0
}

func (m *TLUploadSaveBigFilePart) GetBytes() []byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  upload.saveFilePart#b304a621 file_id:long file_part:int bytes:bytes = Bool;
//
type TLUploadSaveFilePart struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	FileId               int64    `protobuf:"varint,3,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	FilePart             int32    `protobuf:"varint,4,opt,name=file_part,json=filePart,proto3" json:"file_part,omitempty"`
	Bytes                []byte   `protobuf:"bytes,5,opt,name=bytes,proto3" json:"bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLUploadSaveFilePart) Reset()         { *m = TLUploadSaveFilePart{} }
func (m *TLUploadSaveFilePart) String() string { return proto.CompactTextString(m) }
func (*TLUploadSaveFilePart) ProtoMessage()    {}
func (*TLUploadSaveFilePart) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{371}
}
func (m *TLUploadSaveFilePart) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUploadSaveFilePart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUploadSaveFilePart.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLUploadSaveFilePart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUploadSaveFilePart.Merge(m, src)
}
func (m *TLUploadSaveFilePart) XXX_Size() int {
	return m.Size()
}
func (m *TLUploadSaveFilePart) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUploadSaveFilePart.DiscardUnknown(m)
}

var xxx_messageInfo_TLUploadSaveFilePart proto.InternalMessageInfo

func (m *TLUploadSaveFilePart) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLUploadSaveFilePart) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLUploadSaveFilePart) GetFileId() int64 {
	if m != nil {
		return m.FileId
	}
	return 0
}

func (m *TLUploadSaveFilePart) GetFilePart() int32 {
	if m != nil {
		return m.FilePart
	}
	return 0
}

func (m *TLUploadSaveFilePart) GetBytes() []byte {
	if m != nil {
		return m.Bytes
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  users.getFullUser#ca30a5b1 id:InputUser = UserFull;
//
type TLUsersGetFullUser struct {
	Cmd                  TLCmd      `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string     `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Id                   *InputUser `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TLUsersGetFullUser) Reset()         { *m = TLUsersGetFullUser{} }
func (m *TLUsersGetFullUser) String() string { return proto.CompactTextString(m) }
func (*TLUsersGetFullUser) ProtoMessage()    {}
func (*TLUsersGetFullUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{372}
}
func (m *TLUsersGetFullUser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUsersGetFullUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUsersGetFullUser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLUsersGetFullUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUsersGetFullUser.Merge(m, src)
}
func (m *TLUsersGetFullUser) XXX_Size() int {
	return m.Size()
}
func (m *TLUsersGetFullUser) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUsersGetFullUser.DiscardUnknown(m)
}

var xxx_messageInfo_TLUsersGetFullUser proto.InternalMessageInfo

func (m *TLUsersGetFullUser) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLUsersGetFullUser) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLUsersGetFullUser) GetId() *InputUser {
	if m != nil {
		return m.Id
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  users.getUsers#d91a548 id:Vector<InputUser> = Vector<User>;
//
type TLUsersGetUsers struct {
	Cmd                  TLCmd        `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string       `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Id                   []*InputUser `protobuf:"bytes,3,rep,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TLUsersGetUsers) Reset()         { *m = TLUsersGetUsers{} }
func (m *TLUsersGetUsers) String() string { return proto.CompactTextString(m) }
func (*TLUsersGetUsers) ProtoMessage()    {}
func (*TLUsersGetUsers) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{373}
}
func (m *TLUsersGetUsers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUsersGetUsers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUsersGetUsers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLUsersGetUsers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUsersGetUsers.Merge(m, src)
}
func (m *TLUsersGetUsers) XXX_Size() int {
	return m.Size()
}
func (m *TLUsersGetUsers) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUsersGetUsers.DiscardUnknown(m)
}

var xxx_messageInfo_TLUsersGetUsers proto.InternalMessageInfo

func (m *TLUsersGetUsers) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLUsersGetUsers) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLUsersGetUsers) GetId() []*InputUser {
	if m != nil {
		return m.Id
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  users.setSecureValueErrors#90c894b5 id:InputUser errors:Vector<SecureValueError> = Bool;
//
type TLUsersSetSecureValueErrors struct {
	Cmd                  TLCmd               `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string              `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Id                   *InputUser          `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Errors               []*SecureValueError `protobuf:"bytes,4,rep,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TLUsersSetSecureValueErrors) Reset()         { *m = TLUsersSetSecureValueErrors{} }
func (m *TLUsersSetSecureValueErrors) String() string { return proto.CompactTextString(m) }
func (*TLUsersSetSecureValueErrors) ProtoMessage()    {}
func (*TLUsersSetSecureValueErrors) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{374}
}
func (m *TLUsersSetSecureValueErrors) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLUsersSetSecureValueErrors) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLUsersSetSecureValueErrors.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLUsersSetSecureValueErrors) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLUsersSetSecureValueErrors.Merge(m, src)
}
func (m *TLUsersSetSecureValueErrors) XXX_Size() int {
	return m.Size()
}
func (m *TLUsersSetSecureValueErrors) XXX_DiscardUnknown() {
	xxx_messageInfo_TLUsersSetSecureValueErrors.DiscardUnknown(m)
}

var xxx_messageInfo_TLUsersSetSecureValueErrors proto.InternalMessageInfo

func (m *TLUsersSetSecureValueErrors) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLUsersSetSecureValueErrors) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLUsersSetSecureValueErrors) GetId() *InputUser {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TLUsersSetSecureValueErrors) GetErrors() []*SecureValueError {
	if m != nil {
		return m.Errors
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  wallet.getKeySecretSalt#b57f346 revoke:Bool = wallet.KeySecretSalt;
//
type TLWalletGetKeySecretSalt struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Revoke               *Bool    `protobuf:"bytes,3,opt,name=revoke,proto3" json:"revoke,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLWalletGetKeySecretSalt) Reset()         { *m = TLWalletGetKeySecretSalt{} }
func (m *TLWalletGetKeySecretSalt) String() string { return proto.CompactTextString(m) }
func (*TLWalletGetKeySecretSalt) ProtoMessage()    {}
func (*TLWalletGetKeySecretSalt) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{375}
}
func (m *TLWalletGetKeySecretSalt) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLWalletGetKeySecretSalt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLWalletGetKeySecretSalt.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLWalletGetKeySecretSalt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLWalletGetKeySecretSalt.Merge(m, src)
}
func (m *TLWalletGetKeySecretSalt) XXX_Size() int {
	return m.Size()
}
func (m *TLWalletGetKeySecretSalt) XXX_DiscardUnknown() {
	xxx_messageInfo_TLWalletGetKeySecretSalt.DiscardUnknown(m)
}

var xxx_messageInfo_TLWalletGetKeySecretSalt proto.InternalMessageInfo

func (m *TLWalletGetKeySecretSalt) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLWalletGetKeySecretSalt) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLWalletGetKeySecretSalt) GetRevoke() *Bool {
	if m != nil {
		return m.Revoke
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
//  wallet.sendLiteRequest#e2c9d33e body:bytes = wallet.LiteResponse;
//
type TLWalletSendLiteRequest struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Body                 []byte   `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLWalletSendLiteRequest) Reset()         { *m = TLWalletSendLiteRequest{} }
func (m *TLWalletSendLiteRequest) String() string { return proto.CompactTextString(m) }
func (*TLWalletSendLiteRequest) ProtoMessage()    {}
func (*TLWalletSendLiteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{376}
}
func (m *TLWalletSendLiteRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLWalletSendLiteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLWalletSendLiteRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLWalletSendLiteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLWalletSendLiteRequest.Merge(m, src)
}
func (m *TLWalletSendLiteRequest) XXX_Size() int {
	return m.Size()
}
func (m *TLWalletSendLiteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TLWalletSendLiteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TLWalletSendLiteRequest proto.InternalMessageInfo

func (m *TLWalletSendLiteRequest) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLWalletSendLiteRequest) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLWalletSendLiteRequest) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

///////////////////////////////////////////////////////////////////////////////
// Vector api result type
type Vector_WallPaper struct {
	Datas                []*WallPaper `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Vector_WallPaper) Reset()         { *m = Vector_WallPaper{} }
func (m *Vector_WallPaper) String() string { return proto.CompactTextString(m) }
func (*Vector_WallPaper) ProtoMessage()    {}
func (*Vector_WallPaper) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{377}
}
func (m *Vector_WallPaper) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_WallPaper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_WallPaper.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_WallPaper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_WallPaper.Merge(m, src)
}
func (m *Vector_WallPaper) XXX_Size() int {
	return m.Size()
}
func (m *Vector_WallPaper) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_WallPaper.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_WallPaper proto.InternalMessageInfo

func (m *Vector_WallPaper) GetDatas() []*WallPaper {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_User struct {
	Datas                []*User  `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vector_User) Reset()         { *m = Vector_User{} }
func (m *Vector_User) String() string { return proto.CompactTextString(m) }
func (*Vector_User) ProtoMessage()    {}
func (*Vector_User) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{378}
}
func (m *Vector_User) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_User.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_User.Merge(m, src)
}
func (m *Vector_User) XXX_Size() int {
	return m.Size()
}
func (m *Vector_User) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_User.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_User proto.InternalMessageInfo

func (m *Vector_User) GetDatas() []*User {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_ContactStatus struct {
	Datas                []*ContactStatus `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Vector_ContactStatus) Reset()         { *m = Vector_ContactStatus{} }
func (m *Vector_ContactStatus) String() string { return proto.CompactTextString(m) }
func (*Vector_ContactStatus) ProtoMessage()    {}
func (*Vector_ContactStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{379}
}
func (m *Vector_ContactStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_ContactStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_ContactStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_ContactStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_ContactStatus.Merge(m, src)
}
func (m *Vector_ContactStatus) XXX_Size() int {
	return m.Size()
}
func (m *Vector_ContactStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_ContactStatus.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_ContactStatus proto.InternalMessageInfo

func (m *Vector_ContactStatus) GetDatas() []*ContactStatus {
	if m != nil {
		return m.Datas
	}
	return nil
}

type VectorInt struct {
	Datas                []int32  `protobuf:"varint,1,rep,packed,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VectorInt) Reset()         { *m = VectorInt{} }
func (m *VectorInt) String() string { return proto.CompactTextString(m) }
func (*VectorInt) ProtoMessage()    {}
func (*VectorInt) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{380}
}
func (m *VectorInt) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VectorInt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VectorInt.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VectorInt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VectorInt.Merge(m, src)
}
func (m *VectorInt) XXX_Size() int {
	return m.Size()
}
func (m *VectorInt) XXX_DiscardUnknown() {
	xxx_messageInfo_VectorInt.DiscardUnknown(m)
}

var xxx_messageInfo_VectorInt proto.InternalMessageInfo

func (m *VectorInt) GetDatas() []int32 {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_ReceivedNotifyMessage struct {
	Datas                []*ReceivedNotifyMessage `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Vector_ReceivedNotifyMessage) Reset()         { *m = Vector_ReceivedNotifyMessage{} }
func (m *Vector_ReceivedNotifyMessage) String() string { return proto.CompactTextString(m) }
func (*Vector_ReceivedNotifyMessage) ProtoMessage()    {}
func (*Vector_ReceivedNotifyMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{381}
}
func (m *Vector_ReceivedNotifyMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_ReceivedNotifyMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_ReceivedNotifyMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_ReceivedNotifyMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_ReceivedNotifyMessage.Merge(m, src)
}
func (m *Vector_ReceivedNotifyMessage) XXX_Size() int {
	return m.Size()
}
func (m *Vector_ReceivedNotifyMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_ReceivedNotifyMessage.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_ReceivedNotifyMessage proto.InternalMessageInfo

func (m *Vector_ReceivedNotifyMessage) GetDatas() []*ReceivedNotifyMessage {
	if m != nil {
		return m.Datas
	}
	return nil
}

type VectorLong struct {
	Datas                []int64  `protobuf:"varint,1,rep,packed,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VectorLong) Reset()         { *m = VectorLong{} }
func (m *VectorLong) String() string { return proto.CompactTextString(m) }
func (*VectorLong) ProtoMessage()    {}
func (*VectorLong) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{382}
}
func (m *VectorLong) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VectorLong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VectorLong.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VectorLong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VectorLong.Merge(m, src)
}
func (m *VectorLong) XXX_Size() int {
	return m.Size()
}
func (m *VectorLong) XXX_DiscardUnknown() {
	xxx_messageInfo_VectorLong.DiscardUnknown(m)
}

var xxx_messageInfo_VectorLong proto.InternalMessageInfo

func (m *VectorLong) GetDatas() []int64 {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_StickerSetCovered struct {
	Datas                []*StickerSetCovered `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Vector_StickerSetCovered) Reset()         { *m = Vector_StickerSetCovered{} }
func (m *Vector_StickerSetCovered) String() string { return proto.CompactTextString(m) }
func (*Vector_StickerSetCovered) ProtoMessage()    {}
func (*Vector_StickerSetCovered) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{383}
}
func (m *Vector_StickerSetCovered) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_StickerSetCovered) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_StickerSetCovered.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_StickerSetCovered) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_StickerSetCovered.Merge(m, src)
}
func (m *Vector_StickerSetCovered) XXX_Size() int {
	return m.Size()
}
func (m *Vector_StickerSetCovered) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_StickerSetCovered.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_StickerSetCovered proto.InternalMessageInfo

func (m *Vector_StickerSetCovered) GetDatas() []*StickerSetCovered {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_CdnFileHash struct {
	Datas                []*CdnFileHash `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Vector_CdnFileHash) Reset()         { *m = Vector_CdnFileHash{} }
func (m *Vector_CdnFileHash) String() string { return proto.CompactTextString(m) }
func (*Vector_CdnFileHash) ProtoMessage()    {}
func (*Vector_CdnFileHash) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{384}
}
func (m *Vector_CdnFileHash) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_CdnFileHash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_CdnFileHash.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_CdnFileHash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_CdnFileHash.Merge(m, src)
}
func (m *Vector_CdnFileHash) XXX_Size() int {
	return m.Size()
}
func (m *Vector_CdnFileHash) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_CdnFileHash.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_CdnFileHash proto.InternalMessageInfo

func (m *Vector_CdnFileHash) GetDatas() []*CdnFileHash {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_LangPackString struct {
	Datas                []*LangPackString `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Vector_LangPackString) Reset()         { *m = Vector_LangPackString{} }
func (m *Vector_LangPackString) String() string { return proto.CompactTextString(m) }
func (*Vector_LangPackString) ProtoMessage()    {}
func (*Vector_LangPackString) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{385}
}
func (m *Vector_LangPackString) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_LangPackString) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_LangPackString.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_LangPackString) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_LangPackString.Merge(m, src)
}
func (m *Vector_LangPackString) XXX_Size() int {
	return m.Size()
}
func (m *Vector_LangPackString) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_LangPackString.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_LangPackString proto.InternalMessageInfo

func (m *Vector_LangPackString) GetDatas() []*LangPackString {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_LangPackLanguage struct {
	Datas                []*LangPackLanguage `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Vector_LangPackLanguage) Reset()         { *m = Vector_LangPackLanguage{} }
func (m *Vector_LangPackLanguage) String() string { return proto.CompactTextString(m) }
func (*Vector_LangPackLanguage) ProtoMessage()    {}
func (*Vector_LangPackLanguage) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{386}
}
func (m *Vector_LangPackLanguage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_LangPackLanguage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_LangPackLanguage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_LangPackLanguage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_LangPackLanguage.Merge(m, src)
}
func (m *Vector_LangPackLanguage) XXX_Size() int {
	return m.Size()
}
func (m *Vector_LangPackLanguage) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_LangPackLanguage.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_LangPackLanguage proto.InternalMessageInfo

func (m *Vector_LangPackLanguage) GetDatas() []*LangPackLanguage {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_SecureValue struct {
	Datas                []*SecureValue `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Vector_SecureValue) Reset()         { *m = Vector_SecureValue{} }
func (m *Vector_SecureValue) String() string { return proto.CompactTextString(m) }
func (*Vector_SecureValue) ProtoMessage()    {}
func (*Vector_SecureValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{387}
}
func (m *Vector_SecureValue) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_SecureValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_SecureValue.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_SecureValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_SecureValue.Merge(m, src)
}
func (m *Vector_SecureValue) XXX_Size() int {
	return m.Size()
}
func (m *Vector_SecureValue) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_SecureValue.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_SecureValue proto.InternalMessageInfo

func (m *Vector_SecureValue) GetDatas() []*SecureValue {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_SavedContact struct {
	Datas                []*SavedContact `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Vector_SavedContact) Reset()         { *m = Vector_SavedContact{} }
func (m *Vector_SavedContact) String() string { return proto.CompactTextString(m) }
func (*Vector_SavedContact) ProtoMessage()    {}
func (*Vector_SavedContact) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{388}
}
func (m *Vector_SavedContact) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_SavedContact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_SavedContact.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_SavedContact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_SavedContact.Merge(m, src)
}
func (m *Vector_SavedContact) XXX_Size() int {
	return m.Size()
}
func (m *Vector_SavedContact) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_SavedContact.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_SavedContact proto.InternalMessageInfo

func (m *Vector_SavedContact) GetDatas() []*SavedContact {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_MessageRange struct {
	Datas                []*MessageRange `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Vector_MessageRange) Reset()         { *m = Vector_MessageRange{} }
func (m *Vector_MessageRange) String() string { return proto.CompactTextString(m) }
func (*Vector_MessageRange) ProtoMessage()    {}
func (*Vector_MessageRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{389}
}
func (m *Vector_MessageRange) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_MessageRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_MessageRange.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_MessageRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_MessageRange.Merge(m, src)
}
func (m *Vector_MessageRange) XXX_Size() int {
	return m.Size()
}
func (m *Vector_MessageRange) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_MessageRange.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_MessageRange proto.InternalMessageInfo

func (m *Vector_MessageRange) GetDatas() []*MessageRange {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_DialogPeer struct {
	Datas                []*DialogPeer `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Vector_DialogPeer) Reset()         { *m = Vector_DialogPeer{} }
func (m *Vector_DialogPeer) String() string { return proto.CompactTextString(m) }
func (*Vector_DialogPeer) ProtoMessage()    {}
func (*Vector_DialogPeer) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{390}
}
func (m *Vector_DialogPeer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_DialogPeer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_DialogPeer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_DialogPeer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_DialogPeer.Merge(m, src)
}
func (m *Vector_DialogPeer) XXX_Size() int {
	return m.Size()
}
func (m *Vector_DialogPeer) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_DialogPeer.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_DialogPeer proto.InternalMessageInfo

func (m *Vector_DialogPeer) GetDatas() []*DialogPeer {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_FileHash struct {
	Datas                []*FileHash `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Vector_FileHash) Reset()         { *m = Vector_FileHash{} }
func (m *Vector_FileHash) String() string { return proto.CompactTextString(m) }
func (*Vector_FileHash) ProtoMessage()    {}
func (*Vector_FileHash) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{391}
}
func (m *Vector_FileHash) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_FileHash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_FileHash.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_FileHash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_FileHash.Merge(m, src)
}
func (m *Vector_FileHash) XXX_Size() int {
	return m.Size()
}
func (m *Vector_FileHash) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_FileHash.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_FileHash proto.InternalMessageInfo

func (m *Vector_FileHash) GetDatas() []*FileHash {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_EmojiLanguage struct {
	Datas                []*EmojiLanguage `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Vector_EmojiLanguage) Reset()         { *m = Vector_EmojiLanguage{} }
func (m *Vector_EmojiLanguage) String() string { return proto.CompactTextString(m) }
func (*Vector_EmojiLanguage) ProtoMessage()    {}
func (*Vector_EmojiLanguage) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{392}
}
func (m *Vector_EmojiLanguage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_EmojiLanguage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_EmojiLanguage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_EmojiLanguage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_EmojiLanguage.Merge(m, src)
}
func (m *Vector_EmojiLanguage) XXX_Size() int {
	return m.Size()
}
func (m *Vector_EmojiLanguage) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_EmojiLanguage.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_EmojiLanguage proto.InternalMessageInfo

func (m *Vector_EmojiLanguage) GetDatas() []*EmojiLanguage {
	if m != nil {
		return m.Datas
	}
	return nil
}

type VectorMessages_SearchCounter struct {
	Datas                []*Messages_SearchCounter `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *VectorMessages_SearchCounter) Reset()         { *m = VectorMessages_SearchCounter{} }
func (m *VectorMessages_SearchCounter) String() string { return proto.CompactTextString(m) }
func (*VectorMessages_SearchCounter) ProtoMessage()    {}
func (*VectorMessages_SearchCounter) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{393}
}
func (m *VectorMessages_SearchCounter) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VectorMessages_SearchCounter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VectorMessages_SearchCounter.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VectorMessages_SearchCounter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VectorMessages_SearchCounter.Merge(m, src)
}
func (m *VectorMessages_SearchCounter) XXX_Size() int {
	return m.Size()
}
func (m *VectorMessages_SearchCounter) XXX_DiscardUnknown() {
	xxx_messageInfo_VectorMessages_SearchCounter.DiscardUnknown(m)
}

var xxx_messageInfo_VectorMessages_SearchCounter proto.InternalMessageInfo

func (m *VectorMessages_SearchCounter) GetDatas() []*Messages_SearchCounter {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_DialogFilter struct {
	Datas                []*DialogFilter `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Vector_DialogFilter) Reset()         { *m = Vector_DialogFilter{} }
func (m *Vector_DialogFilter) String() string { return proto.CompactTextString(m) }
func (*Vector_DialogFilter) ProtoMessage()    {}
func (*Vector_DialogFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{394}
}
func (m *Vector_DialogFilter) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_DialogFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_DialogFilter.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_DialogFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_DialogFilter.Merge(m, src)
}
func (m *Vector_DialogFilter) XXX_Size() int {
	return m.Size()
}
func (m *Vector_DialogFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_DialogFilter.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_DialogFilter proto.InternalMessageInfo

func (m *Vector_DialogFilter) GetDatas() []*DialogFilter {
	if m != nil {
		return m.Datas
	}
	return nil
}

type Vector_DialogFilterSuggested struct {
	Datas                []*DialogFilterSuggested `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Vector_DialogFilterSuggested) Reset()         { *m = Vector_DialogFilterSuggested{} }
func (m *Vector_DialogFilterSuggested) String() string { return proto.CompactTextString(m) }
func (*Vector_DialogFilterSuggested) ProtoMessage()    {}
func (*Vector_DialogFilterSuggested) Descriptor() ([]byte, []int) {
	return fileDescriptor_171aad061a6a5831, []int{395}
}
func (m *Vector_DialogFilterSuggested) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Vector_DialogFilterSuggested) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Vector_DialogFilterSuggested.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Vector_DialogFilterSuggested) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector_DialogFilterSuggested.Merge(m, src)
}
func (m *Vector_DialogFilterSuggested) XXX_Size() int {
	return m.Size()
}
func (m *Vector_DialogFilterSuggested) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector_DialogFilterSuggested.DiscardUnknown(m)
}

var xxx_messageInfo_Vector_DialogFilterSuggested proto.InternalMessageInfo

func (m *Vector_DialogFilterSuggested) GetDatas() []*DialogFilterSuggested {
	if m != nil {
		return m.Datas
	}
	return nil
}

func init() {
	proto.RegisterType((*TLAccountAcceptAuthorization)(nil), "mtproto.TL_account_acceptAuthorization")
	proto.RegisterType((*TLAccountCancelPasswordEmail)(nil), "mtproto.TL_account_cancelPasswordEmail")
	proto.RegisterType((*TLAccountChangePhone)(nil), "mtproto.TL_account_changePhone")
	proto.RegisterType((*TLAccountCheckUsername)(nil), "mtproto.TL_account_checkUsername")
	proto.RegisterType((*TLAccountConfirmPasswordEmail)(nil), "mtproto.TL_account_confirmPasswordEmail")
	proto.RegisterType((*TLAccountConfirmPhone)(nil), "mtproto.TL_account_confirmPhone")
	proto.RegisterType((*TLAccountCreateTheme)(nil), "mtproto.TL_account_createTheme")
	proto.RegisterType((*TLAccountDeleteAccount)(nil), "mtproto.TL_account_deleteAccount")
	proto.RegisterType((*TLAccountDeleteSecureValue)(nil), "mtproto.TL_account_deleteSecureValue")
	proto.RegisterType((*TLAccountFinishTakeoutSession)(nil), "mtproto.TL_account_finishTakeoutSession")
	proto.RegisterType((*TLAccountGetAccountTTL)(nil), "mtproto.TL_account_getAccountTTL")
	proto.RegisterType((*TLAccountGetAllSecureValues)(nil), "mtproto.TL_account_getAllSecureValues")
	proto.RegisterType((*TLAccountGetAuthorizationForm)(nil), "mtproto.TL_account_getAuthorizationForm")
	proto.RegisterType((*TLAccountGetAuthorizations)(nil), "mtproto.TL_account_getAuthorizations")
	proto.RegisterType((*TLAccountGetAutoDownloadSettings)(nil), "mtproto.TL_account_getAutoDownloadSettings")
	proto.RegisterType((*TLAccountGetContactSignUpNotification)(nil), "mtproto.TL_account_getContactSignUpNotification")
	proto.RegisterType((*TLAccountGetContentSettings)(nil), "mtproto.TL_account_getContentSettings")
	proto.RegisterType((*TLAccountGetGlobalPrivacySettings)(nil), "mtproto.TL_account_getGlobalPrivacySettings")
	proto.RegisterType((*TLAccountGetMultiWallPapers)(nil), "mtproto.TL_account_getMultiWallPapers")
	proto.RegisterType((*TLAccountGetNotifyExceptions)(nil), "mtproto.TL_account_getNotifyExceptions")
	proto.RegisterType((*TLAccountGetNotifySettings)(nil), "mtproto.TL_account_getNotifySettings")
	proto.RegisterType((*TLAccountGetPassword)(nil), "mtproto.TL_account_getPassword")
	proto.RegisterType((*TLAccountGetPasswordSettings)(nil), "mtproto.TL_account_getPasswordSettings")
	proto.RegisterType((*TLAccountGetPrivacy)(nil), "mtproto.TL_account_getPrivacy")
	proto.RegisterType((*TLAccountGetSecureValue)(nil), "mtproto.TL_account_getSecureValue")
	proto.RegisterType((*TLAccountGetTheme)(nil), "mtproto.TL_account_getTheme")
	proto.RegisterType((*TLAccountGetThemes)(nil), "mtproto.TL_account_getThemes")
	proto.RegisterType((*TLAccountGetTmpPassword)(nil), "mtproto.TL_account_getTmpPassword")
	proto.RegisterType((*TLAccountGetWallPaper)(nil), "mtproto.TL_account_getWallPaper")
	proto.RegisterType((*TLAccountGetWallPapers)(nil), "mtproto.TL_account_getWallPapers")
	proto.RegisterType((*TLAccountGetWebAuthorizations)(nil), "mtproto.TL_account_getWebAuthorizations")
	proto.RegisterType((*TLAccountInitTakeoutSession)(nil), "mtproto.TL_account_initTakeoutSession")
	proto.RegisterType((*TLAccountInstallTheme)(nil), "mtproto.TL_account_installTheme")
	proto.RegisterType((*TLAccountInstallWallPaper)(nil), "mtproto.TL_account_installWallPaper")
	proto.RegisterType((*TLAccountRegisterDevice)(nil), "mtproto.TL_account_registerDevice")
	proto.RegisterType((*TLAccountReportPeer)(nil), "mtproto.TL_account_reportPeer")
	proto.RegisterType((*TLAccountResendPasswordEmail)(nil), "mtproto.TL_account_resendPasswordEmail")
	proto.RegisterType((*TLAccountResetAuthorization)(nil), "mtproto.TL_account_resetAuthorization")
	proto.RegisterType((*TLAccountResetNotifySettings)(nil), "mtproto.TL_account_resetNotifySettings")
	proto.RegisterType((*TLAccountResetWallPapers)(nil), "mtproto.TL_account_resetWallPapers")
	proto.RegisterType((*TLAccountResetWebAuthorization)(nil), "mtproto.TL_account_resetWebAuthorization")
	proto.RegisterType((*TLAccountResetWebAuthorizations)(nil), "mtproto.TL_account_resetWebAuthorizations")
	proto.RegisterType((*TLAccountSaveAutoDownloadSettings)(nil), "mtproto.TL_account_saveAutoDownloadSettings")
	proto.RegisterType((*TLAccountSaveSecureValue)(nil), "mtproto.TL_account_saveSecureValue")
	proto.RegisterType((*TLAccountSaveTheme)(nil), "mtproto.TL_account_saveTheme")
	proto.RegisterType((*TLAccountSaveWallPaper)(nil), "mtproto.TL_account_saveWallPaper")
	proto.RegisterType((*TLAccountSendChangePhoneCode)(nil), "mtproto.TL_account_sendChangePhoneCode")
	proto.RegisterType((*TLAccountSendConfirmPhoneCode)(nil), "mtproto.TL_account_sendConfirmPhoneCode")
	proto.RegisterType((*TLAccountSendVerifyEmailCode)(nil), "mtproto.TL_account_sendVerifyEmailCode")
	proto.RegisterType((*TLAccountSendVerifyPhoneCode)(nil), "mtproto.TL_account_sendVerifyPhoneCode")
	proto.RegisterType((*TLAccountSetAccountTTL)(nil), "mtproto.TL_account_setAccountTTL")
	proto.RegisterType((*TLAccountSetContactSignUpNotification)(nil), "mtproto.TL_account_setContactSignUpNotification")
	proto.RegisterType((*TLAccountSetContentSettings)(nil), "mtproto.TL_account_setContentSettings")
	proto.RegisterType((*TLAccountSetGlobalPrivacySettings)(nil), "mtproto.TL_account_setGlobalPrivacySettings")
	proto.RegisterType((*TLAccountSetPrivacy)(nil), "mtproto.TL_account_setPrivacy")
	proto.RegisterType((*TLAccountUnregisterDevice)(nil), "mtproto.TL_account_unregisterDevice")
	proto.RegisterType((*TLAccountUpdateDeviceLocked)(nil), "mtproto.TL_account_updateDeviceLocked")
	proto.RegisterType((*TLAccountUpdateNotifySettings)(nil), "mtproto.TL_account_updateNotifySettings")
	proto.RegisterType((*TLAccountUpdatePasswordSettings)(nil), "mtproto.TL_account_updatePasswordSettings")
	proto.RegisterType((*TLAccountUpdateProfile)(nil), "mtproto.TL_account_updateProfile")
	proto.RegisterType((*TLAccountUpdateStatus)(nil), "mtproto.TL_account_updateStatus")
	proto.RegisterType((*TLAccountUpdateTheme)(nil), "mtproto.TL_account_updateTheme")
	proto.RegisterType((*TLAccountUpdateUsername)(nil), "mtproto.TL_account_updateUsername")
	proto.RegisterType((*TLAccountUploadTheme)(nil), "mtproto.TL_account_uploadTheme")
	proto.RegisterType((*TLAccountUploadWallPaper)(nil), "mtproto.TL_account_uploadWallPaper")
	proto.RegisterType((*TLAccountVerifyEmail)(nil), "mtproto.TL_account_verifyEmail")
	proto.RegisterType((*TLAccountVerifyPhone)(nil), "mtproto.TL_account_verifyPhone")
	proto.RegisterType((*TLAuthAcceptLoginToken)(nil), "mtproto.TL_auth_acceptLoginToken")
	proto.RegisterType((*TLAuthBindTempAuthKey)(nil), "mtproto.TL_auth_bindTempAuthKey")
	proto.RegisterType((*TLAuthCancelCode)(nil), "mtproto.TL_auth_cancelCode")
	proto.RegisterType((*TLAuthCheckPassword)(nil), "mtproto.TL_auth_checkPassword")
	proto.RegisterType((*TLAuthCheckPhone)(nil), "mtproto.TL_auth_checkPhone")
	proto.RegisterType((*TLAuthDropTempAuthKeys)(nil), "mtproto.TL_auth_dropTempAuthKeys")
	proto.RegisterType((*TLAuthExportAuthorization)(nil), "mtproto.TL_auth_exportAuthorization")
	proto.RegisterType((*TLAuthExportLoginToken)(nil), "mtproto.TL_auth_exportLoginToken")
	proto.RegisterType((*TLAuthImportAuthorization)(nil), "mtproto.TL_auth_importAuthorization")
	proto.RegisterType((*TLAuthImportBotAuthorization)(nil), "mtproto.TL_auth_importBotAuthorization")
	proto.RegisterType((*TLAuthImportLoginToken)(nil), "mtproto.TL_auth_importLoginToken")
	proto.RegisterType((*TLAuthLogOut)(nil), "mtproto.TL_auth_logOut")
	proto.RegisterType((*TLAuthRecoverPassword)(nil), "mtproto.TL_auth_recoverPassword")
	proto.RegisterType((*TLAuthRequestPasswordRecovery)(nil), "mtproto.TL_auth_requestPasswordRecovery")
	proto.RegisterType((*TLAuthResendCode)(nil), "mtproto.TL_auth_resendCode")
	proto.RegisterType((*TLAuthResetAuthorizations)(nil), "mtproto.TL_auth_resetAuthorizations")
	proto.RegisterType((*TLAuthSendCode)(nil), "mtproto.TL_auth_sendCode")
	proto.RegisterType((*TLAuthSendInvites)(nil), "mtproto.TL_auth_sendInvites")
	proto.RegisterType((*TLAuthSignIn)(nil), "mtproto.TL_auth_signIn")
	proto.RegisterType((*TLAuthSignUp)(nil), "mtproto.TL_auth_signUp")
	proto.RegisterType((*TLBotsAnswerWebhookJSONQuery)(nil), "mtproto.TL_bots_answerWebhookJSONQuery")
	proto.RegisterType((*TLBotsSendCustomRequest)(nil), "mtproto.TL_bots_sendCustomRequest")
	proto.RegisterType((*TLBotsSetBotCommands)(nil), "mtproto.TL_bots_setBotCommands")
	proto.RegisterType((*TLChannelsCheckUsername)(nil), "mtproto.TL_channels_checkUsername")
	proto.RegisterType((*TLChannelsCreateChannel)(nil), "mtproto.TL_channels_createChannel")
	proto.RegisterType((*TLChannelsDeleteChannel)(nil), "mtproto.TL_channels_deleteChannel")
	proto.RegisterType((*TLChannelsDeleteHistory)(nil), "mtproto.TL_channels_deleteHistory")
	proto.RegisterType((*TLChannelsDeleteMessages)(nil), "mtproto.TL_channels_deleteMessages")
	proto.RegisterType((*TLChannelsDeleteUserHistory)(nil), "mtproto.TL_channels_deleteUserHistory")
	proto.RegisterType((*TLChannelsEditAbout)(nil), "mtproto.TL_channels_editAbout")
	proto.RegisterType((*TLChannelsEditAdmin)(nil), "mtproto.TL_channels_editAdmin")
	proto.RegisterType((*TLChannelsEditBanned)(nil), "mtproto.TL_channels_editBanned")
	proto.RegisterType((*TLChannelsEditCreator)(nil), "mtproto.TL_channels_editCreator")
	proto.RegisterType((*TLChannelsEditLocation)(nil), "mtproto.TL_channels_editLocation")
	proto.RegisterType((*TLChannelsEditPhoto)(nil), "mtproto.TL_channels_editPhoto")
	proto.RegisterType((*TLChannelsEditTitle)(nil), "mtproto.TL_channels_editTitle")
	proto.RegisterType((*TLChannelsExportInvite)(nil), "mtproto.TL_channels_exportInvite")
	proto.RegisterType((*TLChannelsExportMessageLink)(nil), "mtproto.TL_channels_exportMessageLink")
	proto.RegisterType((*TLChannelsGetAdminLog)(nil), "mtproto.TL_channels_getAdminLog")
	proto.RegisterType((*TLChannelsGetAdminedPublicChannels)(nil), "mtproto.TL_channels_getAdminedPublicChannels")
	proto.RegisterType((*TLChannelsGetBroadcastsForDiscussion)(nil), "mtproto.TL_channels_getBroadcastsForDiscussion")
	proto.RegisterType((*TLChannelsGetChannels)(nil), "mtproto.TL_channels_getChannels")
	proto.RegisterType((*TLChannelsGetDialogs)(nil), "mtproto.TL_channels_getDialogs")
	proto.RegisterType((*TLChannelsGetFullChannel)(nil), "mtproto.TL_channels_getFullChannel")
	proto.RegisterType((*TLChannelsGetGroupsForDiscussion)(nil), "mtproto.TL_channels_getGroupsForDiscussion")
	proto.RegisterType((*TLChannelsGetImportantHistory)(nil), "mtproto.TL_channels_getImportantHistory")
	proto.RegisterType((*TLChannelsGetInactiveChannels)(nil), "mtproto.TL_channels_getInactiveChannels")
	proto.RegisterType((*TLChannelsGetLeftChannels)(nil), "mtproto.TL_channels_getLeftChannels")
	proto.RegisterType((*TLChannelsGetMessages)(nil), "mtproto.TL_channels_getMessages")
	proto.RegisterType((*TLChannelsGetParticipant)(nil), "mtproto.TL_channels_getParticipant")
	proto.RegisterType((*TLChannelsGetParticipants)(nil), "mtproto.TL_channels_getParticipants")
	proto.RegisterType((*TLChannelsInviteToChannel)(nil), "mtproto.TL_channels_inviteToChannel")
	proto.RegisterType((*TLChannelsJoinChannel)(nil), "mtproto.TL_channels_joinChannel")
	proto.RegisterType((*TLChannelsKickFromChannel)(nil), "mtproto.TL_channels_kickFromChannel")
	proto.RegisterType((*TLChannelsLeaveChannel)(nil), "mtproto.TL_channels_leaveChannel")
	proto.RegisterType((*TLChannelsReadHistory)(nil), "mtproto.TL_channels_readHistory")
	proto.RegisterType((*TLChannelsReadMessageContents)(nil), "mtproto.TL_channels_readMessageContents")
	proto.RegisterType((*TLChannelsReportSpam)(nil), "mtproto.TL_channels_reportSpam")
	proto.RegisterType((*TLChannelsSetDiscussionGroup)(nil), "mtproto.TL_channels_setDiscussionGroup")
	proto.RegisterType((*TLChannelsSetStickers)(nil), "mtproto.TL_channels_setStickers")
	proto.RegisterType((*TLChannelsToggleComments)(nil), "mtproto.TL_channels_toggleComments")
	proto.RegisterType((*TLChannelsToggleInvites)(nil), "mtproto.TL_channels_toggleInvites")
	proto.RegisterType((*TLChannelsTogglePreHistoryHidden)(nil), "mtproto.TL_channels_togglePreHistoryHidden")
	proto.RegisterType((*TLChannelsToggleSignatures)(nil), "mtproto.TL_channels_toggleSignatures")
	proto.RegisterType((*TLChannelsToggleSlowMode)(nil), "mtproto.TL_channels_toggleSlowMode")
	proto.RegisterType((*TLChannelsUpdatePinnedMessage)(nil), "mtproto.TL_channels_updatePinnedMessage")
	proto.RegisterType((*TLChannelsUpdateUsername)(nil), "mtproto.TL_channels_updateUsername")
	proto.RegisterType((*TLContactsAcceptContact)(nil), "mtproto.TL_contacts_acceptContact")
	proto.RegisterType((*TLContactsAddContact)(nil), "mtproto.TL_contacts_addContact")
	proto.RegisterType((*TLContactsBlock)(nil), "mtproto.TL_contacts_block")
	proto.RegisterType((*TLContactsBlockFromReplies)(nil), "mtproto.TL_contacts_blockFromReplies")
	proto.RegisterType((*TLContactsDeleteByPhones)(nil), "mtproto.TL_contacts_deleteByPhones")
	proto.RegisterType((*TLContactsDeleteContact)(nil), "mtproto.TL_contacts_deleteContact")
	proto.RegisterType((*TLContactsDeleteContacts)(nil), "mtproto.TL_contacts_deleteContacts")
	proto.RegisterType((*TLContactsExportCard)(nil), "mtproto.TL_contacts_exportCard")
	proto.RegisterType((*TLContactsGetBlocked)(nil), "mtproto.TL_contacts_getBlocked")
	proto.RegisterType((*TLContactsGetContactIDs)(nil), "mtproto.TL_contacts_getContactIDs")
	proto.RegisterType((*TLContactsGetContacts)(nil), "mtproto.TL_contacts_getContacts")
	proto.RegisterType((*TLContactsGetLocated)(nil), "mtproto.TL_contacts_getLocated")
	proto.RegisterType((*TLContactsGetSaved)(nil), "mtproto.TL_contacts_getSaved")
	proto.RegisterType((*TLContactsGetStatuses)(nil), "mtproto.TL_contacts_getStatuses")
	proto.RegisterType((*TLContactsGetTopPeers)(nil), "mtproto.TL_contacts_getTopPeers")
	proto.RegisterType((*TLContactsImportCard)(nil), "mtproto.TL_contacts_importCard")
	proto.RegisterType((*TLContactsImportContacts)(nil), "mtproto.TL_contacts_importContacts")
	proto.RegisterType((*TLContactsResetSaved)(nil), "mtproto.TL_contacts_resetSaved")
	proto.RegisterType((*TLContactsResetTopPeerRating)(nil), "mtproto.TL_contacts_resetTopPeerRating")
	proto.RegisterType((*TLContactsResolveUsername)(nil), "mtproto.TL_contacts_resolveUsername")
	proto.RegisterType((*TLContactsSearch)(nil), "mtproto.TL_contacts_search")
	proto.RegisterType((*TLContactsToggleTopPeers)(nil), "mtproto.TL_contacts_toggleTopPeers")
	proto.RegisterType((*TLContactsUnblock)(nil), "mtproto.TL_contacts_unblock")
	proto.RegisterType((*TLFoldersDeleteFolder)(nil), "mtproto.TL_folders_deleteFolder")
	proto.RegisterType((*TLFoldersEditPeerFolders)(nil), "mtproto.TL_folders_editPeerFolders")
	proto.RegisterType((*TLHelpAcceptTermsOfService)(nil), "mtproto.TL_help_acceptTermsOfService")
	proto.RegisterType((*TLHelpDismissSuggestion)(nil), "mtproto.TL_help_dismissSuggestion")
	proto.RegisterType((*TLHelpEditUserInfo)(nil), "mtproto.TL_help_editUserInfo")
	proto.RegisterType((*TLHelpGetAppChangelog)(nil), "mtproto.TL_help_getAppChangelog")
	proto.RegisterType((*TLHelpGetAppConfig)(nil), "mtproto.TL_help_getAppConfig")
	proto.RegisterType((*TLHelpGetAppUpdate)(nil), "mtproto.TL_help_getAppUpdate")
	proto.RegisterType((*TLHelpGetCdnConfig)(nil), "mtproto.TL_help_getCdnConfig")
	proto.RegisterType((*TLHelpGetConfig)(nil), "mtproto.TL_help_getConfig")
	proto.RegisterType((*TLHelpGetCountriesList)(nil), "mtproto.TL_help_getCountriesList")
	proto.RegisterType((*TLHelpGetDeepLinkInfo)(nil), "mtproto.TL_help_getDeepLinkInfo")
	proto.RegisterType((*TLHelpGetInviteText)(nil), "mtproto.TL_help_getInviteText")
	proto.RegisterType((*TLHelpGetNearestDc)(nil), "mtproto.TL_help_getNearestDc")
	proto.RegisterType((*TLHelpGetPassportConfig)(nil), "mtproto.TL_help_getPassportConfig")
	proto.RegisterType((*TLHelpGetPromoData)(nil), "mtproto.TL_help_getPromoData")
	proto.RegisterType((*TLHelpGetProxyData)(nil), "mtproto.TL_help_getProxyData")
	proto.RegisterType((*TLHelpGetRecentMeUrls)(nil), "mtproto.TL_help_getRecentMeUrls")
	proto.RegisterType((*TLHelpGetSupport)(nil), "mtproto.TL_help_getSupport")
	proto.RegisterType((*TLHelpGetSupportName)(nil), "mtproto.TL_help_getSupportName")
	proto.RegisterType((*TLHelpGetTermsOfService)(nil), "mtproto.TL_help_getTermsOfService")
	proto.RegisterType((*TLHelpGetTermsOfServiceUpdate)(nil), "mtproto.TL_help_getTermsOfServiceUpdate")
	proto.RegisterType((*TLHelpGetUserInfo)(nil), "mtproto.TL_help_getUserInfo")
	proto.RegisterType((*TLHelpHidePromoData)(nil), "mtproto.TL_help_hidePromoData")
	proto.RegisterType((*TLHelpSaveAppLog)(nil), "mtproto.TL_help_saveAppLog")
	proto.RegisterType((*TLHelpSetBotUpdatesStatus)(nil), "mtproto.TL_help_setBotUpdatesStatus")
	proto.RegisterType((*TLHelpTest)(nil), "mtproto.TL_help_test")
	proto.RegisterType((*TLLangpackGetDifference)(nil), "mtproto.TL_langpack_getDifference")
	proto.RegisterType((*TLLangpackGetLangPack)(nil), "mtproto.TL_langpack_getLangPack")
	proto.RegisterType((*TLLangpackGetLanguage)(nil), "mtproto.TL_langpack_getLanguage")
	proto.RegisterType((*TLLangpackGetLanguages)(nil), "mtproto.TL_langpack_getLanguages")
	proto.RegisterType((*TLLangpackGetStrings)(nil), "mtproto.TL_langpack_getStrings")
	proto.RegisterType((*TLMessagesAcceptEncryption)(nil), "mtproto.TL_messages_acceptEncryption")
	proto.RegisterType((*TLMessagesAcceptUrlAuth)(nil), "mtproto.TL_messages_acceptUrlAuth")
	proto.RegisterType((*TLMessagesAddChatUser)(nil), "mtproto.TL_messages_addChatUser")
	proto.RegisterType((*TLMessagesCheckChatInvite)(nil), "mtproto.TL_messages_checkChatInvite")
	proto.RegisterType((*TLMessagesClearAllDrafts)(nil), "mtproto.TL_messages_clearAllDrafts")
	proto.RegisterType((*TLMessagesClearRecentStickers)(nil), "mtproto.TL_messages_clearRecentStickers")
	proto.RegisterType((*TLMessagesCreateChat)(nil), "mtproto.TL_messages_createChat")
	proto.RegisterType((*TLMessagesDeleteChatUser)(nil), "mtproto.TL_messages_deleteChatUser")
	proto.RegisterType((*TLMessagesDeleteHistory)(nil), "mtproto.TL_messages_deleteHistory")
	proto.RegisterType((*TLMessagesDeleteMessages)(nil), "mtproto.TL_messages_deleteMessages")
	proto.RegisterType((*TLMessagesDeleteScheduledMessages)(nil), "mtproto.TL_messages_deleteScheduledMessages")
	proto.RegisterType((*TLMessagesDiscardEncryption)(nil), "mtproto.TL_messages_discardEncryption")
	proto.RegisterType((*TLMessagesEditChatAbout)(nil), "mtproto.TL_messages_editChatAbout")
	proto.RegisterType((*TLMessagesEditChatAdmin)(nil), "mtproto.TL_messages_editChatAdmin")
	proto.RegisterType((*TLMessagesEditChatDefaultBannedRights)(nil), "mtproto.TL_messages_editChatDefaultBannedRights")
	proto.RegisterType((*TLMessagesEditChatPhoto)(nil), "mtproto.TL_messages_editChatPhoto")
	proto.RegisterType((*TLMessagesEditChatTitle)(nil), "mtproto.TL_messages_editChatTitle")
	proto.RegisterType((*TLMessagesEditInlineBotMessage)(nil), "mtproto.TL_messages_editInlineBotMessage")
	proto.RegisterType((*TLMessagesEditMessage)(nil), "mtproto.TL_messages_editMessage")
	proto.RegisterType((*TLMessagesExportChatInvite)(nil), "mtproto.TL_messages_exportChatInvite")
	proto.RegisterType((*TLMessagesFaveSticker)(nil), "mtproto.TL_messages_faveSticker")
	proto.RegisterType((*TLMessagesForwardMessage)(nil), "mtproto.TL_messages_forwardMessage")
	proto.RegisterType((*TLMessagesForwardMessages)(nil), "mtproto.TL_messages_forwardMessages")
	proto.RegisterType((*TLMessagesGetAllChats)(nil), "mtproto.TL_messages_getAllChats")
	proto.RegisterType((*TLMessagesGetAllDrafts)(nil), "mtproto.TL_messages_getAllDrafts")
	proto.RegisterType((*TLMessagesGetAllStickers)(nil), "mtproto.TL_messages_getAllStickers")
	proto.RegisterType((*TLMessagesGetArchivedStickers)(nil), "mtproto.TL_messages_getArchivedStickers")
	proto.RegisterType((*TLMessagesGetAttachedStickers)(nil), "mtproto.TL_messages_getAttachedStickers")
	proto.RegisterType((*TLMessagesGetBotCallbackAnswer)(nil), "mtproto.TL_messages_getBotCallbackAnswer")
	proto.RegisterType((*TLMessagesGetChats)(nil), "mtproto.TL_messages_getChats")
	proto.RegisterType((*TLMessagesGetCommonChats)(nil), "mtproto.TL_messages_getCommonChats")
	proto.RegisterType((*TLMessagesGetDhConfig)(nil), "mtproto.TL_messages_getDhConfig")
	proto.RegisterType((*TLMessagesGetDialogFilters)(nil), "mtproto.TL_messages_getDialogFilters")
	proto.RegisterType((*TLMessagesGetDialogUnreadMarks)(nil), "mtproto.TL_messages_getDialogUnreadMarks")
	proto.RegisterType((*TLMessagesGetDialogs)(nil), "mtproto.TL_messages_getDialogs")
	proto.RegisterType((*TLMessagesGetDiscussionMessage)(nil), "mtproto.TL_messages_getDiscussionMessage")
	proto.RegisterType((*TLMessagesGetDocumentByHash)(nil), "mtproto.TL_messages_getDocumentByHash")
	proto.RegisterType((*TLMessagesGetEmojiKeywords)(nil), "mtproto.TL_messages_getEmojiKeywords")
	proto.RegisterType((*TLMessagesGetEmojiKeywordsDifference)(nil), "mtproto.TL_messages_getEmojiKeywordsDifference")
	proto.RegisterType((*TLMessagesGetEmojiKeywordsLanguages)(nil), "mtproto.TL_messages_getEmojiKeywordsLanguages")
	proto.RegisterType((*TLMessagesGetEmojiURL)(nil), "mtproto.TL_messages_getEmojiURL")
	proto.RegisterType((*TLMessagesGetFavedStickers)(nil), "mtproto.TL_messages_getFavedStickers")
	proto.RegisterType((*TLMessagesGetFeaturedStickers)(nil), "mtproto.TL_messages_getFeaturedStickers")
	proto.RegisterType((*TLMessagesGetFullChat)(nil), "mtproto.TL_messages_getFullChat")
	proto.RegisterType((*TLMessagesGetGameHighScores)(nil), "mtproto.TL_messages_getGameHighScores")
	proto.RegisterType((*TLMessagesGetHistory)(nil), "mtproto.TL_messages_getHistory")
	proto.RegisterType((*TLMessagesGetInlineBotResults)(nil), "mtproto.TL_messages_getInlineBotResults")
	proto.RegisterType((*TLMessagesGetInlineGameHighScores)(nil), "mtproto.TL_messages_getInlineGameHighScores")
	proto.RegisterType((*TLMessagesGetMaskStickers)(nil), "mtproto.TL_messages_getMaskStickers")
	proto.RegisterType((*TLMessagesGetMessageEditData)(nil), "mtproto.TL_messages_getMessageEditData")
	proto.RegisterType((*TLMessagesGetMessages)(nil), "mtproto.TL_messages_getMessages")
	proto.RegisterType((*TLMessagesGetMessagesViews)(nil), "mtproto.TL_messages_getMessagesViews")
	proto.RegisterType((*TLMessagesGetOldFeaturedStickers)(nil), "mtproto.TL_messages_getOldFeaturedStickers")
	proto.RegisterType((*TLMessagesGetOnlines)(nil), "mtproto.TL_messages_getOnlines")
	proto.RegisterType((*TLMessagesGetPeerDialogs)(nil), "mtproto.TL_messages_getPeerDialogs")
	proto.RegisterType((*TLMessagesGetPeerSettings)(nil), "mtproto.TL_messages_getPeerSettings")
	proto.RegisterType((*TLMessagesGetPinnedDialogs)(nil), "mtproto.TL_messages_getPinnedDialogs")
	proto.RegisterType((*TLMessagesGetPollResults)(nil), "mtproto.TL_messages_getPollResults")
	proto.RegisterType((*TLMessagesGetPollVotes)(nil), "mtproto.TL_messages_getPollVotes")
	proto.RegisterType((*TLMessagesGetRecentLocations)(nil), "mtproto.TL_messages_getRecentLocations")
	proto.RegisterType((*TLMessagesGetRecentStickers)(nil), "mtproto.TL_messages_getRecentStickers")
	proto.RegisterType((*TLMessagesGetReplies)(nil), "mtproto.TL_messages_getReplies")
	proto.RegisterType((*TLMessagesGetSavedGifs)(nil), "mtproto.TL_messages_getSavedGifs")
	proto.RegisterType((*TLMessagesGetScheduledHistory)(nil), "mtproto.TL_messages_getScheduledHistory")
	proto.RegisterType((*TLMessagesGetScheduledMessages)(nil), "mtproto.TL_messages_getScheduledMessages")
	proto.RegisterType((*TLMessagesGetSearchCounters)(nil), "mtproto.TL_messages_getSearchCounters")
	proto.RegisterType((*TLMessagesGetSplitRanges)(nil), "mtproto.TL_messages_getSplitRanges")
	proto.RegisterType((*TLMessagesGetStatsURL)(nil), "mtproto.TL_messages_getStatsURL")
	proto.RegisterType((*TLMessagesGetStickerSet)(nil), "mtproto.TL_messages_getStickerSet")
	proto.RegisterType((*TLMessagesGetStickers)(nil), "mtproto.TL_messages_getStickers")
	proto.RegisterType((*TLMessagesGetSuggestedDialogFilters)(nil), "mtproto.TL_messages_getSuggestedDialogFilters")
	proto.RegisterType((*TLMessagesGetUnreadMentions)(nil), "mtproto.TL_messages_getUnreadMentions")
	proto.RegisterType((*TLMessagesGetWebPage)(nil), "mtproto.TL_messages_getWebPage")
	proto.RegisterType((*TLMessagesGetWebPagePreview)(nil), "mtproto.TL_messages_getWebPagePreview")
	proto.RegisterType((*TLMessagesHidePeerSettingsBar)(nil), "mtproto.TL_messages_hidePeerSettingsBar")
	proto.RegisterType((*TLMessagesHideReportSpam)(nil), "mtproto.TL_messages_hideReportSpam")
	proto.RegisterType((*TLMessagesImportChatInvite)(nil), "mtproto.TL_messages_importChatInvite")
	proto.RegisterType((*TLMessagesInstallStickerSet)(nil), "mtproto.TL_messages_installStickerSet")
	proto.RegisterType((*TLMessagesMarkDialogUnread)(nil), "mtproto.TL_messages_markDialogUnread")
	proto.RegisterType((*TLMessagesMigrateChat)(nil), "mtproto.TL_messages_migrateChat")
	proto.RegisterType((*TLMessagesReadDiscussion)(nil), "mtproto.TL_messages_readDiscussion")
	proto.RegisterType((*TLMessagesReadEncryptedHistory)(nil), "mtproto.TL_messages_readEncryptedHistory")
	proto.RegisterType((*TLMessagesReadFeaturedStickers)(nil), "mtproto.TL_messages_readFeaturedStickers")
	proto.RegisterType((*TLMessagesReadHistory)(nil), "mtproto.TL_messages_readHistory")
	proto.RegisterType((*TLMessagesReadMentions)(nil), "mtproto.TL_messages_readMentions")
	proto.RegisterType((*TLMessagesReadMessageContents)(nil), "mtproto.TL_messages_readMessageContents")
	proto.RegisterType((*TLMessagesReceivedMessages)(nil), "mtproto.TL_messages_receivedMessages")
	proto.RegisterType((*TLMessagesReceivedQueue)(nil), "mtproto.TL_messages_receivedQueue")
	proto.RegisterType((*TLMessagesReorderPinnedDialogs)(nil), "mtproto.TL_messages_reorderPinnedDialogs")
	proto.RegisterType((*TLMessagesReorderStickerSets)(nil), "mtproto.TL_messages_reorderStickerSets")
	proto.RegisterType((*TLMessagesReport)(nil), "mtproto.TL_messages_report")
	proto.RegisterType((*TLMessagesReportEncryptedSpam)(nil), "mtproto.TL_messages_reportEncryptedSpam")
	proto.RegisterType((*TLMessagesReportSpam)(nil), "mtproto.TL_messages_reportSpam")
	proto.RegisterType((*TLMessagesRequestEncryption)(nil), "mtproto.TL_messages_requestEncryption")
	proto.RegisterType((*TLMessagesRequestUrlAuth)(nil), "mtproto.TL_messages_requestUrlAuth")
	proto.RegisterType((*TLMessagesSaveDraft)(nil), "mtproto.TL_messages_saveDraft")
	proto.RegisterType((*TLMessagesSaveGif)(nil), "mtproto.TL_messages_saveGif")
	proto.RegisterType((*TLMessagesSaveRecentSticker)(nil), "mtproto.TL_messages_saveRecentSticker")
	proto.RegisterType((*TLMessagesSearch)(nil), "mtproto.TL_messages_search")
	proto.RegisterType((*TLMessagesSearchGifs)(nil), "mtproto.TL_messages_searchGifs")
	proto.RegisterType((*TLMessagesSearchGlobal)(nil), "mtproto.TL_messages_searchGlobal")
	proto.RegisterType((*TLMessagesSearchStickerSets)(nil), "mtproto.TL_messages_searchStickerSets")
	proto.RegisterType((*TLMessagesSendBroadcast)(nil), "mtproto.TL_messages_sendBroadcast")
	proto.RegisterType((*TLMessagesSendEncrypted)(nil), "mtproto.TL_messages_sendEncrypted")
	proto.RegisterType((*TLMessagesSendEncryptedFile)(nil), "mtproto.TL_messages_sendEncryptedFile")
	proto.RegisterType((*TLMessagesSendEncryptedService)(nil), "mtproto.TL_messages_sendEncryptedService")
	proto.RegisterType((*TLMessagesSendInlineBotResult)(nil), "mtproto.TL_messages_sendInlineBotResult")
	proto.RegisterType((*TLMessagesSendMedia)(nil), "mtproto.TL_messages_sendMedia")
	proto.RegisterType((*TLMessagesSendMessage)(nil), "mtproto.TL_messages_sendMessage")
	proto.RegisterType((*TLMessagesSendMultiMedia)(nil), "mtproto.TL_messages_sendMultiMedia")
	proto.RegisterType((*TLMessagesSendScheduledMessages)(nil), "mtproto.TL_messages_sendScheduledMessages")
	proto.RegisterType((*TLMessagesSendScreenshotNotification)(nil), "mtproto.TL_messages_sendScreenshotNotification")
	proto.RegisterType((*TLMessagesSendVote)(nil), "mtproto.TL_messages_sendVote")
	proto.RegisterType((*TLMessagesSetBotCallbackAnswer)(nil), "mtproto.TL_messages_setBotCallbackAnswer")
	proto.RegisterType((*TLMessagesSetBotPrecheckoutResults)(nil), "mtproto.TL_messages_setBotPrecheckoutResults")
	proto.RegisterType((*TLMessagesSetBotShippingResults)(nil), "mtproto.TL_messages_setBotShippingResults")
	proto.RegisterType((*TLMessagesSetEncryptedTyping)(nil), "mtproto.TL_messages_setEncryptedTyping")
	proto.RegisterType((*TLMessagesSetGameScore)(nil), "mtproto.TL_messages_setGameScore")
	proto.RegisterType((*TLMessagesSetInlineBotResults)(nil), "mtproto.TL_messages_setInlineBotResults")
	proto.RegisterType((*TLMessagesSetInlineGameScore)(nil), "mtproto.TL_messages_setInlineGameScore")
	proto.RegisterType((*TLMessagesSetTyping)(nil), "mtproto.TL_messages_setTyping")
	proto.RegisterType((*TLMessagesStartBot)(nil), "mtproto.TL_messages_startBot")
	proto.RegisterType((*TLMessagesToggleChatAdmins)(nil), "mtproto.TL_messages_toggleChatAdmins")
	proto.RegisterType((*TLMessagesToggleDialogPin)(nil), "mtproto.TL_messages_toggleDialogPin")
	proto.RegisterType((*TLMessagesToggleStickerSets)(nil), "mtproto.TL_messages_toggleStickerSets")
	proto.RegisterType((*TLMessagesUninstallStickerSet)(nil), "mtproto.TL_messages_uninstallStickerSet")
	proto.RegisterType((*TLMessagesUnpinAllMessages)(nil), "mtproto.TL_messages_unpinAllMessages")
	proto.RegisterType((*TLMessagesUpdateDialogFilter)(nil), "mtproto.TL_messages_updateDialogFilter")
	proto.RegisterType((*TLMessagesUpdateDialogFiltersOrder)(nil), "mtproto.TL_messages_updateDialogFiltersOrder")
	proto.RegisterType((*TLMessagesUpdatePinnedMessage)(nil), "mtproto.TL_messages_updatePinnedMessage")
	proto.RegisterType((*TLMessagesUploadEncryptedFile)(nil), "mtproto.TL_messages_uploadEncryptedFile")
	proto.RegisterType((*TLMessagesUploadMedia)(nil), "mtproto.TL_messages_uploadMedia")
	proto.RegisterType((*TLPaymentsClearSavedInfo)(nil), "mtproto.TL_payments_clearSavedInfo")
	proto.RegisterType((*TLPaymentsGetBankCardData)(nil), "mtproto.TL_payments_getBankCardData")
	proto.RegisterType((*TLPaymentsGetPaymentForm)(nil), "mtproto.TL_payments_getPaymentForm")
	proto.RegisterType((*TLPaymentsGetPaymentReceipt)(nil), "mtproto.TL_payments_getPaymentReceipt")
	proto.RegisterType((*TLPaymentsGetSavedInfo)(nil), "mtproto.TL_payments_getSavedInfo")
	proto.RegisterType((*TLPaymentsSendPaymentForm)(nil), "mtproto.TL_payments_sendPaymentForm")
	proto.RegisterType((*TLPaymentsValidateRequestedInfo)(nil), "mtproto.TL_payments_validateRequestedInfo")
	proto.RegisterType((*TLPhoneAcceptCall)(nil), "mtproto.TL_phone_acceptCall")
	proto.RegisterType((*TLPhoneCheckGroupCall)(nil), "mtproto.TL_phone_checkGroupCall")
	proto.RegisterType((*TLPhoneConfirmCall)(nil), "mtproto.TL_phone_confirmCall")
	proto.RegisterType((*TLPhoneCreateGroupCall)(nil), "mtproto.TL_phone_createGroupCall")
	proto.RegisterType((*TLPhoneDiscardCall)(nil), "mtproto.TL_phone_discardCall")
	proto.RegisterType((*TLPhoneDiscardGroupCall)(nil), "mtproto.TL_phone_discardGroupCall")
	proto.RegisterType((*TLPhoneEditGroupCallMember)(nil), "mtproto.TL_phone_editGroupCallMember")
	proto.RegisterType((*TLPhoneGetCallConfig)(nil), "mtproto.TL_phone_getCallConfig")
	proto.RegisterType((*TLPhoneGetGroupCall)(nil), "mtproto.TL_phone_getGroupCall")
	proto.RegisterType((*TLPhoneGetGroupParticipants)(nil), "mtproto.TL_phone_getGroupParticipants")
	proto.RegisterType((*TLPhoneInviteToGroupCall)(nil), "mtproto.TL_phone_inviteToGroupCall")
	proto.RegisterType((*TLPhoneJoinGroupCall)(nil), "mtproto.TL_phone_joinGroupCall")
	proto.RegisterType((*TLPhoneLeaveGroupCall)(nil), "mtproto.TL_phone_leaveGroupCall")
	proto.RegisterType((*TLPhoneReceivedCall)(nil), "mtproto.TL_phone_receivedCall")
	proto.RegisterType((*TLPhoneRequestCall)(nil), "mtproto.TL_phone_requestCall")
	proto.RegisterType((*TLPhoneSaveCallDebug)(nil), "mtproto.TL_phone_saveCallDebug")
	proto.RegisterType((*TLPhoneSendSignalingData)(nil), "mtproto.TL_phone_sendSignalingData")
	proto.RegisterType((*TLPhoneSetCallRating)(nil), "mtproto.TL_phone_setCallRating")
	proto.RegisterType((*TLPhoneToggleGroupCallSettings)(nil), "mtproto.TL_phone_toggleGroupCallSettings")
	proto.RegisterType((*TLPhotosDeletePhotos)(nil), "mtproto.TL_photos_deletePhotos")
	proto.RegisterType((*TLPhotosGetUserPhotos)(nil), "mtproto.TL_photos_getUserPhotos")
	proto.RegisterType((*TLPhotosUpdateProfilePhoto)(nil), "mtproto.TL_photos_updateProfilePhoto")
	proto.RegisterType((*TLPhotosUploadProfilePhoto)(nil), "mtproto.TL_photos_uploadProfilePhoto")
	proto.RegisterType((*TLStatsGetBroadcastStats)(nil), "mtproto.TL_stats_getBroadcastStats")
	proto.RegisterType((*TLStatsGetMegagroupStats)(nil), "mtproto.TL_stats_getMegagroupStats")
	proto.RegisterType((*TLStatsGetMessagePublicForwards)(nil), "mtproto.TL_stats_getMessagePublicForwards")
	proto.RegisterType((*TLStatsGetMessageStats)(nil), "mtproto.TL_stats_getMessageStats")
	proto.RegisterType((*TLStatsLoadAsyncGraph)(nil), "mtproto.TL_stats_loadAsyncGraph")
	proto.RegisterType((*TLStickersAddStickerToSet)(nil), "mtproto.TL_stickers_addStickerToSet")
	proto.RegisterType((*TLStickersChangeStickerPosition)(nil), "mtproto.TL_stickers_changeStickerPosition")
	proto.RegisterType((*TLStickersCreateStickerSet)(nil), "mtproto.TL_stickers_createStickerSet")
	proto.RegisterType((*TLStickersRemoveStickerFromSet)(nil), "mtproto.TL_stickers_removeStickerFromSet")
	proto.RegisterType((*TLStickersSetStickerSetThumb)(nil), "mtproto.TL_stickers_setStickerSetThumb")
	proto.RegisterType((*TLUpdatesGetChannelDifference)(nil), "mtproto.TL_updates_getChannelDifference")
	proto.RegisterType((*TLUpdatesGetDifference)(nil), "mtproto.TL_updates_getDifference")
	proto.RegisterType((*TLUpdatesGetState)(nil), "mtproto.TL_updates_getState")
	proto.RegisterType((*TLUploadGetCdnFile)(nil), "mtproto.TL_upload_getCdnFile")
	proto.RegisterType((*TLUploadGetCdnFileHashes)(nil), "mtproto.TL_upload_getCdnFileHashes")
	proto.RegisterType((*TLUploadGetFile)(nil), "mtproto.TL_upload_getFile")
	proto.RegisterType((*TLUploadGetFileHashes)(nil), "mtproto.TL_upload_getFileHashes")
	proto.RegisterType((*TLUploadGetWebFile)(nil), "mtproto.TL_upload_getWebFile")
	proto.RegisterType((*TLUploadReuploadCdnFile)(nil), "mtproto.TL_upload_reuploadCdnFile")
	proto.RegisterType((*TLUploadSaveBigFilePart)(nil), "mtproto.TL_upload_saveBigFilePart")
	proto.RegisterType((*TLUploadSaveFilePart)(nil), "mtproto.TL_upload_saveFilePart")
	proto.RegisterType((*TLUsersGetFullUser)(nil), "mtproto.TL_users_getFullUser")
	proto.RegisterType((*TLUsersGetUsers)(nil), "mtproto.TL_users_getUsers")
	proto.RegisterType((*TLUsersSetSecureValueErrors)(nil), "mtproto.TL_users_setSecureValueErrors")
	proto.RegisterType((*TLWalletGetKeySecretSalt)(nil), "mtproto.TL_wallet_getKeySecretSalt")
	proto.RegisterType((*TLWalletSendLiteRequest)(nil), "mtproto.TL_wallet_sendLiteRequest")
	proto.RegisterType((*Vector_WallPaper)(nil), "mtproto.Vector_WallPaper")
	proto.RegisterType((*Vector_User)(nil), "mtproto.Vector_User")
	proto.RegisterType((*Vector_ContactStatus)(nil), "mtproto.Vector_ContactStatus")
	proto.RegisterType((*VectorInt)(nil), "mtproto.Vector_int")
	proto.RegisterType((*Vector_ReceivedNotifyMessage)(nil), "mtproto.Vector_ReceivedNotifyMessage")
	proto.RegisterType((*VectorLong)(nil), "mtproto.Vector_long")
	proto.RegisterType((*Vector_StickerSetCovered)(nil), "mtproto.Vector_StickerSetCovered")
	proto.RegisterType((*Vector_CdnFileHash)(nil), "mtproto.Vector_CdnFileHash")
	proto.RegisterType((*Vector_LangPackString)(nil), "mtproto.Vector_LangPackString")
	proto.RegisterType((*Vector_LangPackLanguage)(nil), "mtproto.Vector_LangPackLanguage")
	proto.RegisterType((*Vector_SecureValue)(nil), "mtproto.Vector_SecureValue")
	proto.RegisterType((*Vector_SavedContact)(nil), "mtproto.Vector_SavedContact")
	proto.RegisterType((*Vector_MessageRange)(nil), "mtproto.Vector_MessageRange")
	proto.RegisterType((*Vector_DialogPeer)(nil), "mtproto.Vector_DialogPeer")
	proto.RegisterType((*Vector_FileHash)(nil), "mtproto.Vector_FileHash")
	proto.RegisterType((*Vector_EmojiLanguage)(nil), "mtproto.Vector_EmojiLanguage")
	proto.RegisterType((*VectorMessages_SearchCounter)(nil), "mtproto.Vector_messages_SearchCounter")
	proto.RegisterType((*Vector_DialogFilter)(nil), "mtproto.Vector_DialogFilter")
	proto.RegisterType((*Vector_DialogFilterSuggested)(nil), "mtproto.Vector_DialogFilterSuggested")
}

func init() { proto.RegisterFile("schema.tl.sync_service.proto", fileDescriptor_171aad061a6a5831) }

var fileDescriptor_171aad061a6a5831 = []byte{
	// 11917 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x7d, 0x6b, 0x6c, 0x24, 0xc9,
	0x79, 0x18, 0x86, 0xf3, 0x2e, 0x3e, 0x76, 0xaf, 0xf7, 0x1e, 0xdc, 0xbd, 0x77, 0xdd, 0x6b, 0x4f,
	0xd2, 0xdd, 0x2d, 0xc9, 0xdd, 0xe5, 0xf2, 0x2c, 0x3b, 0xe6, 0xf3, 0x44, 0x89, 0x7b, 0x4b, 0x35,
	0xb9, 0x77, 0xb0, 0x8d, 0x64, 0xd2, 0x9c, 0xae, 0x99, 0x69, 0xb1, 0xa7, 0xbb, 0xaf, 0xbb, 0x86,
	0x5c, 0x5e, 0x9c, 0x44, 0x8a, 0x5e, 0x89, 0x2c, 0x25, 0x70, 0x22, 0x1b, 0x90, 0x2d, 0xe8, 0xad,
	0xd8, 0x77, 0x90, 0xad, 0x48, 0xb1, 0x25, 0x5d, 0xe4, 0x44, 0x09, 0x24, 0xc5, 0xb2, 0x61, 0x25,
	0x92, 0x10, 0x01, 0x41, 0x02, 0x23, 0xb1, 0x0c, 0xc3, 0xb6, 0x90, 0xc4, 0x32, 0xf2, 0x10, 0x0c,
	0xe7, 0x47, 0x50, 0xaf, 0xee, 0xaa, 0xee, 0x1e, 0x72, 0xb8, 0xac, 0x21, 0x29, 0xc4, 0xbf, 0xc8,
	0xaa, 0xae, 0xa9, 0xfa, 0xea, 0xab, 0xaa, 0xaf, 0xbe, 0x77, 0x81, 0xfb, 0xa2, 0x66, 0x07, 0x75,
	0xad, 0xa7, 0xb1, 0xfb, 0x74, 0xb4, 0xe7, 0x35, 0x1b, 0x11, 0x0a, 0x77, 0x9c, 0x26, 0x7a, 0x3a,
	0x08, 0x7d, 0xec, 0x1b, 0xd5, 0x2e, 0xa6, 0xff, 0x5c, 0x78, 0xaa, 0xed, 0xe0, 0x4e, 0x6f, 0xeb,
	0xe9, 0xa6, 0xdf, 0x7d, 0xa6, 0xed, 0xb7, 0xfd, 0x67, 0x68, 0xf5, 0x56, 0xaf, 0x45, 0x4b, 0xb4,
	0x40, 0xff, 0x63, 0xbf, 0xbb, 0x70, 0x21, 0xe9, 0xb5, 0xe9, 0x87, 0xa8, 0x81, 0xf7, 0x02, 0x14,
	0xf1, 0x6f, 0x77, 0xaa, 0x23, 0xf2, 0xda, 0x73, 0xd2, 0x2f, 0xba, 0x36, 0xab, 0x84, 0x9f, 0x1b,
	0x01, 0x0f, 0x6c, 0xae, 0x35, 0xac, 0x66, 0xd3, 0xef, 0x79, 0x98, 0xfc, 0x45, 0x01, 0x9e, 0xef,
	0xe1, 0x8e, 0x1f, 0x3a, 0x2f, 0x5b, 0xd8, 0xf1, 0x3d, 0xe3, 0x21, 0x50, 0x6c, 0x76, 0xed, 0xc9,
	0xc2, 0x43, 0x85, 0x8b, 0x13, 0xd3, 0x13, 0x4f, 0x73, 0x78, 0x9f, 0xde, 0x5c, 0x5b, 0xec, 0xda,
	0x26, 0xf9, 0x64, 0xdc, 0x0f, 0x40, 0xd3, 0xb5, 0xa2, 0xa8, 0xe1, 0x59, 0x5d, 0x34, 0x39, 0xf2,
	0x50, 0xe1, 0x62, 0xdd, 0xac, 0xd3, 0x9a, 0xe7, 0xad, 0x2e, 0x32, 0xee, 0x02, 0x95, 0x2d, 0x1f,
	0x37, 0x1c, 0x7b, 0xb2, 0xf8, 0x50, 0xe1, 0x62, 0xd9, 0x2c, 0x6f, 0xf9, 0x78, 0xd5, 0x36, 0xee,
	0x04, 0xe5, 0xa8, 0xe9, 0x07, 0x68, 0xb2, 0x44, 0x7f, 0xc0, 0x0a, 0xa4, 0xaf, 0xa0, 0xb7, 0xe5,
	0x3a, 0xcd, 0xc6, 0x36, 0xda, 0x9b, 0x2c, 0xb3, 0xbe, 0x58, 0xcd, 0x5b, 0xd0, 0x9e, 0xf1, 0x63,
	0x60, 0x6c, 0xc7, 0x72, 0x7b, 0xa8, 0xd1, 0xb1, 0xa2, 0x0e, 0x8a, 0x26, 0x2b, 0x0f, 0x15, 0x2f,
	0x8e, 0x4e, 0x4f, 0xc6, 0x50, 0x6d, 0xa0, 0x66, 0x2f, 0x44, 0x2f, 0x90, 0x26, 0x6f, 0xb2, 0xa2,
	0x8e, 0x39, 0xba, 0x23, 0xfe, 0x45, 0x91, 0xb1, 0x0c, 0x46, 0x9b, 0x21, 0xb2, 0x91, 0x87, 0x1d,
	0xcb, 0x8d, 0x26, 0xab, 0x0f, 0x15, 0x2e, 0x8e, 0x4e, 0x3f, 0x92, 0xfa, 0xed, 0x62, 0xd2, 0x62,
	0xd9, 0x6b, 0x86, 0x7b, 0x01, 0x46, 0xb6, 0x29, 0xff, 0x0e, 0x5a, 0x0a, 0xca, 0x9a, 0x96, 0xd7,
	0x44, 0xee, 0xba, 0x15, 0x45, 0xbb, 0x7e, 0x68, 0x2f, 0x77, 0x2d, 0xc7, 0x3d, 0x32, 0xca, 0xe0,
	0x57, 0x0b, 0xe0, 0x6e, 0x79, 0x8c, 0x8e, 0xe5, 0xb5, 0xd1, 0x7a, 0xc7, 0xf7, 0xd0, 0xd1, 0x97,
	0xe3, 0x61, 0x30, 0x16, 0x90, 0x9e, 0x1a, 0x5e, 0xaf, 0xbb, 0x85, 0x42, 0xba, 0x28, 0x75, 0x73,
	0x94, 0xd6, 0x3d, 0x4f, 0xab, 0x8c, 0xc7, 0xc1, 0x19, 0xd6, 0xa4, 0xe9, 0xdb, 0x0c, 0xd5, 0x7c,
	0x91, 0xc6, 0x69, 0xf5, 0xa2, 0x6f, 0x53, 0x94, 0xd2, 0xc5, 0x8a, 0xdb, 0xc5, 0x8b, 0x25, 0x9a,
	0xc0, 0x5d, 0x30, 0xa9, 0x4c, 0x02, 0x35, 0xb7, 0x6f, 0x46, 0x28, 0x24, 0x60, 0x1d, 0x7d, 0x1a,
	0x17, 0x40, 0xad, 0xc7, 0x3b, 0xe3, 0x53, 0x88, 0xcb, 0x70, 0x07, 0x3c, 0x28, 0x0f, 0xec, 0x7b,
	0x2d, 0x27, 0xec, 0xea, 0x5d, 0x22, 0xc3, 0x00, 0x25, 0x3a, 0x6b, 0x36, 0x36, 0xfd, 0x1f, 0x7e,
	0xbc, 0x00, 0xee, 0xc9, 0x19, 0x58, 0xcf, 0xba, 0xe5, 0x2c, 0x4a, 0xf1, 0xe0, 0x45, 0x29, 0xa5,
	0x17, 0xe5, 0x3d, 0x23, 0xea, 0xd6, 0x0a, 0x91, 0x85, 0xd1, 0x66, 0x07, 0xe9, 0x58, 0x13, 0x03,
	0x94, 0x22, 0xb7, 0xd7, 0x16, 0x38, 0x21, 0xff, 0x93, 0x63, 0x8e, 0x1d, 0xec, 0xc6, 0xc7, 0x9c,
	0x16, 0x8c, 0x69, 0x50, 0xb3, 0xfd, 0x66, 0xaf, 0x8b, 0x3c, 0x4c, 0xf7, 0xcd, 0xe8, 0xf4, 0xdd,
	0xf1, 0x78, 0xab, 0x5e, 0xd0, 0xc3, 0x4b, 0xfc, 0xab, 0x19, 0xb7, 0x23, 0x3d, 0xb5, 0x5c, 0xab,
	0x4d, 0x0e, 0x3d, 0x25, 0x23, 0xb4, 0x60, 0xcc, 0x82, 0x5a, 0x84, 0x30, 0x76, 0xbc, 0xb6, 0x38,
	0xd1, 0xf7, 0xaa, 0x3d, 0xd1, 0xb9, 0x6d, 0xf0, 0x26, 0x66, 0xdc, 0x18, 0x46, 0xca, 0xee, 0xb4,
	0x91, 0x8b, 0x30, 0x9a, 0x67, 0xa5, 0xa3, 0x63, 0xe2, 0x6e, 0x50, 0x09, 0x91, 0x15, 0xf9, 0x1e,
	0xc7, 0x05, 0x2f, 0xc1, 0x7f, 0x54, 0x00, 0xf7, 0x65, 0x46, 0x95, 0x88, 0xd6, 0xd1, 0x47, 0x7e,
	0x1a, 0x94, 0xe9, 0x5d, 0x30, 0x59, 0xec, 0x4f, 0x1a, 0x37, 0xf7, 0x02, 0x64, 0xb2, 0x66, 0xf0,
	0x1f, 0x17, 0x94, 0xc3, 0xd2, 0x72, 0x3c, 0x27, 0xea, 0x6c, 0x5a, 0xdb, 0xc8, 0xef, 0xe1, 0x0d,
	0x14, 0x45, 0x5a, 0xae, 0x80, 0x78, 0xe9, 0x8a, 0xf2, 0xd2, 0x4d, 0x82, 0x6a, 0xd4, 0x6b, 0x36,
	0x51, 0x14, 0xd1, 0xcd, 0x51, 0x33, 0x45, 0x11, 0xfe, 0x8c, 0xb2, 0x36, 0x6d, 0x84, 0xf9, 0xc2,
	0x6c, 0x6e, 0xae, 0x1d, 0x9d, 0xb8, 0xfe, 0x4d, 0x70, 0x7f, 0xaa, 0x73, 0xd7, 0x95, 0x90, 0x13,
	0x1d, 0x7d, 0x84, 0x5f, 0x57, 0x71, 0x4a, 0x86, 0x90, 0xaf, 0xd4, 0x15, 0x3f, 0xec, 0x9e, 0xaa,
	0x6b, 0x15, 0x36, 0x94, 0x5d, 0x99, 0x86, 0x57, 0x03, 0x46, 0x10, 0x80, 0x99, 0x01, 0xfc, 0x25,
	0x7f, 0xd7, 0x73, 0x7d, 0xcb, 0x16, 0x87, 0xf3, 0xe8, 0xc3, 0xbc, 0x0d, 0x3c, 0xa1, 0x0e, 0xb3,
	0xe8, 0x7b, 0xd8, 0x6a, 0xe2, 0x0d, 0xa7, 0xed, 0xdd, 0x0c, 0x9e, 0xf7, 0xb1, 0xd3, 0x72, 0x9a,
	0x7a, 0xd8, 0x9a, 0xec, 0x36, 0x22, 0x63, 0x21, 0x0f, 0xeb, 0x9b, 0x4d, 0x0b, 0x3c, 0xa2, 0x8e,
	0xf0, 0x9c, 0xeb, 0x6f, 0x59, 0xee, 0x7a, 0xe8, 0xec, 0x58, 0xcd, 0x3d, 0x7d, 0xe3, 0x7c, 0xa8,
	0x90, 0x9e, 0xca, 0xf5, 0x9e, 0x8b, 0x9d, 0x17, 0x2d, 0xd7, 0x5d, 0xb7, 0x02, 0x14, 0x1e, 0x7d,
	0x08, 0x63, 0x16, 0x80, 0x5d, 0xcb, 0x75, 0x03, 0xda, 0x1d, 0x27, 0x4d, 0xf7, 0xa8, 0x74, 0x3a,
	0x1e, 0xce, 0x94, 0x9a, 0xc2, 0xdf, 0x2d, 0x28, 0xdc, 0x56, 0x1b, 0x61, 0xba, 0x8a, 0x7b, 0xcb,
	0xb7, 0x08, 0xa7, 0xaa, 0x65, 0x73, 0xf6, 0xa1, 0x4e, 0x8f, 0x80, 0xf1, 0xa6, 0xdf, 0x0d, 0xac,
	0x10, 0x35, 0x22, 0xbf, 0xe7, 0xd9, 0x9c, 0x46, 0x8d, 0xf1, 0xca, 0x0d, 0x52, 0x67, 0xbc, 0x01,
	0x94, 0x02, 0x84, 0x42, 0x7e, 0x87, 0x4d, 0xaa, 0x33, 0x62, 0x90, 0xae, 0x23, 0x14, 0x9a, 0xb4,
	0x15, 0xfc, 0x40, 0x21, 0x7d, 0xce, 0x58, 0x13, 0x6d, 0x4b, 0x19, 0xc3, 0x53, 0x1c, 0x08, 0x9e,
	0x9f, 0x52, 0x58, 0x81, 0x36, 0xc2, 0x82, 0x47, 0x3a, 0xfa, 0x9e, 0xfa, 0x76, 0x66, 0xdd, 0x44,
	0xdf, 0xfa, 0x26, 0x3b, 0x0d, 0xee, 0x6a, 0xf6, 0xc2, 0x10, 0x79, 0xb8, 0x11, 0xf0, 0xce, 0x13,
	0xbe, 0x68, 0xcc, 0x3c, 0xc7, 0x3f, 0x8a, 0x81, 0x29, 0x77, 0xf4, 0x2c, 0xa8, 0x89, 0xb6, 0x74,
	0x41, 0x47, 0xa7, 0x1f, 0x50, 0x91, 0xb4, 0x48, 0xd8, 0xd4, 0x18, 0x56, 0x73, 0xdd, 0x8c, 0xdb,
	0xc3, 0x77, 0x15, 0xc0, 0x5d, 0xa9, 0x39, 0xb1, 0xa3, 0x78, 0xf4, 0xa9, 0xbc, 0x0e, 0x14, 0x09,
	0x61, 0xce, 0x5d, 0x36, 0x3e, 0xc8, 0x5b, 0xd0, 0x9e, 0x49, 0x1a, 0xc1, 0xf7, 0x17, 0xc0, 0x79,
	0x15, 0x8c, 0x13, 0x65, 0x20, 0xfe, 0x45, 0x01, 0x9c, 0x53, 0xc1, 0xd1, 0xc4, 0x4d, 0xde, 0x0d,
	0x2a, 0x2d, 0x3f, 0xec, 0x5a, 0x58, 0xf0, 0x50, 0xac, 0x64, 0x3c, 0x09, 0xca, 0x98, 0x8c, 0xc0,
	0xd7, 0xef, 0x5c, 0x0e, 0xbb, 0x67, 0xb2, 0x16, 0xc6, 0x83, 0x60, 0x54, 0xb0, 0x8f, 0xe4, 0xa2,
	0x24, 0xa7, 0xb4, 0x68, 0x02, 0x51, 0xb5, 0x6a, 0xc3, 0x77, 0x16, 0xc0, 0x9d, 0x39, 0xc0, 0x47,
	0xc3, 0x83, 0xde, 0x00, 0xa5, 0x58, 0xa0, 0x2a, 0x9b, 0xf4, 0x7f, 0xf8, 0xdd, 0xcc, 0x8a, 0x6e,
	0x76, 0x03, 0x6d, 0x67, 0x91, 0x50, 0xb2, 0xbc, 0xf3, 0x31, 0x16, 0xc8, 0x07, 0xe3, 0x6e, 0x50,
	0x09, 0x50, 0xe8, 0xf8, 0x36, 0x87, 0x8c, 0x97, 0x94, 0x03, 0x53, 0x3e, 0xe4, 0x81, 0xf9, 0x79,
	0x55, 0x1e, 0x6a, 0xa3, 0x84, 0xc8, 0x1f, 0x7d, 0x56, 0x57, 0x40, 0x3d, 0xbe, 0x27, 0xf8, 0xc1,
	0xe9, 0x7b, 0xa3, 0x24, 0x2d, 0xa1, 0x9f, 0x66, 0x2d, 0x75, 0x5e, 0x73, 0x62, 0x71, 0x8b, 0xd2,
	0xe2, 0x6e, 0xa5, 0x79, 0xc1, 0x17, 0xd1, 0x96, 0x6e, 0xf6, 0xea, 0x07, 0x23, 0xca, 0x0d, 0xee,
	0x78, 0x0e, 0x3e, 0x1e, 0x16, 0xfe, 0x02, 0xa8, 0x35, 0x19, 0x8b, 0x25, 0x78, 0xf8, 0xb8, 0x4c,
	0xb6, 0x5d, 0x17, 0x45, 0x91, 0xd5, 0x46, 0x0d, 0x22, 0x99, 0x47, 0x74, 0xfb, 0xd4, 0xcc, 0x31,
	0x5e, 0x79, 0x93, 0xd4, 0xc9, 0x8d, 0x9a, 0x1d, 0x0b, 0x33, 0xe1, 0x2e, 0x69, 0xb4, 0x48, 0xea,
	0x8c, 0xa7, 0x80, 0x21, 0x1a, 0x75, 0x51, 0xdb, 0x6a, 0x87, 0x7e, 0x2f, 0x60, 0xd2, 0x5e, 0xcd,
	0xbc, 0x83, 0x7f, 0xb9, 0x1e, 0x7f, 0x30, 0x9e, 0x04, 0x67, 0xa5, 0x3e, 0x3d, 0x0f, 0xb9, 0xd1,
	0x64, 0x8d, 0x36, 0x3e, 0x93, 0x74, 0x4b, 0xab, 0xe9, 0xac, 0x1c, 0x17, 0x45, 0x93, 0x75, 0xfa,
	0x9d, 0x15, 0x0c, 0x08, 0xc6, 0xc9, 0x3f, 0x8d, 0xae, 0x75, 0xab, 0x11, 0x39, 0x2f, 0xa3, 0x49,
	0x40, 0xe7, 0x3c, 0x4a, 0x2a, 0xaf, 0x5b, 0xb7, 0x36, 0x9c, 0x97, 0x11, 0xfc, 0x6d, 0x75, 0x6f,
	0x3b, 0x5e, 0x84, 0x2d, 0xd7, 0x3d, 0x3d, 0xa4, 0x2f, 0x5e, 0xaf, 0xb2, 0xbc, 0x5e, 0x06, 0x28,
	0xd9, 0x56, 0xb8, 0xcd, 0xb1, 0x4c, 0xff, 0x87, 0xdf, 0x2c, 0x80, 0x7b, 0xb3, 0x33, 0x39, 0xf1,
	0x93, 0x6a, 0x5c, 0x95, 0x24, 0x7b, 0x36, 0xdf, 0x0b, 0xf1, 0xaf, 0xe2, 0x1f, 0xe4, 0x08, 0xf6,
	0x9f, 0x2b, 0x2a, 0xd4, 0x34, 0x44, 0x6d, 0x27, 0xc2, 0x28, 0x5c, 0x42, 0x3b, 0x4e, 0x53, 0xc3,
	0xda, 0xdc, 0x0f, 0x00, 0xf6, 0xb7, 0x91, 0x47, 0x55, 0xae, 0xfc, 0x34, 0xd4, 0x69, 0x0d, 0xb9,
	0x15, 0xa9, 0xbe, 0x83, 0x14, 0x62, 0x7d, 0x07, 0x29, 0x18, 0x0f, 0x83, 0x31, 0x9b, 0x8e, 0xdf,
	0xe8, 0xfa, 0x36, 0x72, 0xb9, 0x04, 0x36, 0xca, 0xea, 0xae, 0x93, 0x2a, 0xe3, 0x31, 0x30, 0x11,
	0xed, 0x45, 0x18, 0x75, 0x1b, 0x3b, 0x28, 0x24, 0x67, 0x96, 0x2e, 0x52, 0xdd, 0x1c, 0x67, 0xb5,
	0x2f, 0xb0, 0x4a, 0x72, 0xa5, 0x59, 0x41, 0x10, 0xb7, 0xa9, 0xd2, 0x36, 0xc0, 0x0a, 0x02, 0xd1,
	0xe0, 0x69, 0xd6, 0x20, 0xb2, 0x3c, 0x7b, 0xcb, 0xbf, 0x45, 0x37, 0xfe, 0xe8, 0xf4, 0x78, 0x3c,
	0xd1, 0x05, 0xdf, 0x77, 0x69, 0xfb, 0x0d, 0xd6, 0xc0, 0xb8, 0x17, 0xd4, 0x5d, 0xcb, 0x6b, 0x33,
	0x75, 0x51, 0x9d, 0x69, 0xd2, 0x48, 0xc5, 0xa2, 0x6f, 0xd3, 0x8d, 0x18, 0xa1, 0x66, 0x88, 0x30,
	0x3d, 0x02, 0x63, 0x26, 0x2f, 0x11, 0x24, 0xf8, 0xb8, 0x83, 0xc2, 0x46, 0xcf, 0xb1, 0xa3, 0xc9,
	0xd1, 0x87, 0x8a, 0x04, 0x09, 0xb4, 0xe6, 0xa6, 0x63, 0x47, 0xc9, 0xe6, 0x1b, 0x93, 0x37, 0xdf,
	0x79, 0x50, 0xf3, 0xfc, 0x46, 0xb7, 0x87, 0x91, 0x3d, 0x39, 0xce, 0x04, 0x7e, 0xcf, 0xbf, 0x4e,
	0x8a, 0xf0, 0xb3, 0x2a, 0x6b, 0x15, 0xa2, 0xc0, 0x0f, 0x31, 0xe1, 0x54, 0x75, 0xe8, 0xcd, 0x64,
	0x96, 0xd8, 0x48, 0xf1, 0x56, 0x31, 0x33, 0x6c, 0x3c, 0x15, 0xab, 0x6c, 0xd8, 0x66, 0xbb, 0x2b,
	0x6e, 0x69, 0x52, 0x68, 0x4c, 0xfa, 0x31, 0xd6, 0xe4, 0xa8, 0x5a, 0xe0, 0x10, 0x45, 0xc8, 0xb3,
	0x35, 0x6b, 0x81, 0xb1, 0x42, 0xd4, 0xc9, 0x10, 0xba, 0x55, 0xf3, 0xf2, 0x7d, 0x55, 0xe4, 0xf7,
	0x55, 0x76, 0x62, 0xba, 0xa5, 0x14, 0xf8, 0xd7, 0xc1, 0x85, 0xf4, 0x10, 0x1a, 0x6f, 0x61, 0xb8,
	0x0b, 0x1e, 0xca, 0x74, 0x9f, 0xba, 0x73, 0x87, 0x83, 0x3a, 0x1b, 0x3c, 0x7c, 0xd0, 0xc0, 0x1a,
	0xa6, 0xf7, 0xfb, 0x05, 0x45, 0x2f, 0x10, 0x59, 0x3b, 0x68, 0x28, 0xda, 0x94, 0x3e, 0x57, 0xfe,
	0x59, 0x50, 0x74, 0xfd, 0x5d, 0x7e, 0xdb, 0x93, 0x7f, 0x29, 0x2a, 0x9c, 0x76, 0x87, 0xdf, 0xef,
	0xf4, 0x7f, 0x63, 0x4e, 0x22, 0xde, 0x15, 0x7a, 0x9e, 0xee, 0x8f, 0x21, 0xc8, 0x83, 0x56, 0xa2,
	0xdf, 0x5f, 0x2a, 0x28, 0xdb, 0x83, 0xcc, 0x4f, 0xab, 0x80, 0xf3, 0x0c, 0x28, 0x53, 0xab, 0x10,
	0xa7, 0x08, 0xe7, 0x55, 0x8a, 0x20, 0x0d, 0x65, 0xb2, 0x76, 0xc6, 0x45, 0x70, 0x36, 0xa2, 0xb5,
	0x0d, 0x46, 0xfd, 0x88, 0x28, 0x51, 0xa2, 0xcb, 0x3e, 0xc1, 0xea, 0x37, 0x68, 0xf5, 0xaa, 0x0d,
	0x5f, 0x51, 0xc5, 0x09, 0x02, 0xba, 0x26, 0x8e, 0x20, 0xbe, 0xf9, 0x8b, 0x07, 0xde, 0xfc, 0x8f,
	0x81, 0x4a, 0xcf, 0x23, 0x43, 0x73, 0x42, 0x96, 0xa2, 0xfd, 0xfc, 0x23, 0xfc, 0xf3, 0x82, 0xc2,
	0x09, 0x93, 0xba, 0x93, 0xbf, 0xf3, 0x07, 0x83, 0x5d, 0x61, 0x0d, 0xca, 0x87, 0x60, 0x0d, 0x3e,
	0xa3, 0x9a, 0x3b, 0x09, 0xcd, 0x5e, 0x4c, 0x6c, 0x6b, 0xf4, 0xc6, 0x1b, 0xd2, 0xa9, 0x79, 0x02,
	0x9c, 0xb1, 0x5c, 0xd7, 0xdf, 0x6d, 0xb4, 0x5c, 0x2b, 0xea, 0x34, 0x2d, 0xd7, 0xe5, 0x27, 0x68,
	0x82, 0x56, 0xaf, 0x88, 0xda, 0x8c, 0x79, 0xae, 0x9c, 0x35, 0xcf, 0x5d, 0x06, 0x13, 0x42, 0xef,
	0xc1, 0x1b, 0x55, 0xf2, 0x90, 0x35, 0xce, 0x1b, 0xf1, 0x5f, 0x4d, 0x65, 0x0c, 0x25, 0xc9, 0x0d,
	0x47, 0x66, 0x9e, 0x83, 0xae, 0x8f, 0x8c, 0x28, 0xb2, 0x0b, 0x45, 0x97, 0x64, 0xd3, 0x3a, 0x15,
	0xf8, 0x12, 0x74, 0x98, 0xe1, 0x89, 0xfe, 0x7f, 0x7c, 0x08, 0xda, 0xcd, 0x6c, 0xa7, 0x17, 0x50,
	0xe8, 0xb4, 0xf6, 0x28, 0x03, 0xa0, 0x0d, 0x3d, 0x88, 0xf4, 0xc6, 0x25, 0x01, 0x56, 0xc8, 0xdb,
	0xc8, 0x6c, 0xe4, 0xbf, 0xda, 0xc8, 0x79, 0xeb, 0xf4, 0x9e, 0x14, 0xad, 0xd3, 0x6a, 0x50, 0x32,
	0x9e, 0x04, 0x45, 0x8c, 0xdd, 0x0c, 0x95, 0xe3, 0x43, 0x2c, 0x59, 0x7b, 0xd1, 0xe6, 0xe6, 0x9a,
	0x49, 0xda, 0xc0, 0x9f, 0x2f, 0x28, 0x16, 0x8a, 0x68, 0x98, 0x16, 0x0a, 0x42, 0x4c, 0x23, 0xc7,
	0x45, 0x1e, 0xe6, 0xa0, 0xa5, 0x89, 0x29, 0xfb, 0x08, 0x3f, 0xa9, 0xaa, 0xff, 0x23, 0xfd, 0x96,
	0x8c, 0x3e, 0x5b, 0xe9, 0xf5, 0xe0, 0x8e, 0x08, 0x79, 0x91, 0x83, 0x9d, 0x1d, 0xd4, 0x40, 0x9e,
	0xb5, 0xe5, 0x22, 0xa1, 0x65, 0x3f, 0x1b, 0x7f, 0x58, 0x66, 0xf5, 0xf0, 0x13, 0x29, 0xae, 0x67,
	0x58, 0xd6, 0x10, 0xe3, 0x59, 0x69, 0x7b, 0x15, 0x53, 0x0a, 0xaf, 0xdc, 0x21, 0xa5, 0x7d, 0xf6,
	0x9b, 0xaa, 0x18, 0x13, 0x9d, 0x8c, 0x86, 0x98, 0x70, 0x38, 0x61, 0xcf, 0x45, 0x44, 0x6c, 0x2e,
	0x66, 0x39, 0x1c, 0xde, 0xda, 0xec, 0xb9, 0xc8, 0x64, 0xed, 0xe0, 0xe7, 0x55, 0x15, 0x40, 0xcf,
	0x3b, 0x15, 0x42, 0xb3, 0x2a, 0x64, 0x96, 0x53, 0x42, 0x26, 0xbc, 0xa5, 0x6c, 0xdb, 0x5e, 0x60,
	0x5b, 0x18, 0x31, 0x78, 0xd7, 0xfc, 0xe6, 0x36, 0xb2, 0xb5, 0xa8, 0x61, 0xb8, 0x4e, 0xb4, 0x28,
	0xeb, 0x44, 0xe1, 0xbf, 0x53, 0xed, 0xbb, 0x6c, 0xe8, 0x13, 0x35, 0xe5, 0x18, 0x6f, 0xcc, 0x28,
	0x4b, 0x1e, 0xca, 0x4a, 0xba, 0x2a, 0x88, 0xd2, 0xbe, 0xfd, 0xe8, 0x88, 0x22, 0xb9, 0xb0, 0x09,
	0x9d, 0x0e, 0x83, 0xcd, 0x2a, 0x18, 0xf3, 0xd0, 0x6e, 0x23, 0x35, 0xb9, 0xc7, 0xe3, 0xd1, 0x05,
	0xcc, 0xe2, 0x47, 0x9c, 0x89, 0xe7, 0x53, 0x1c, 0xf5, 0xd0, 0x6e, 0x0c, 0xff, 0x51, 0x54, 0xd9,
	0x5f, 0x55, 0x6f, 0x10, 0x8e, 0xa1, 0xd0, 0x6f, 0x39, 0xee, 0xd0, 0xae, 0xda, 0xfb, 0x01, 0x68,
	0x39, 0x61, 0x84, 0xd9, 0x8f, 0xb8, 0x27, 0x0f, 0xad, 0xa1, 0x3f, 0xa2, 0x8a, 0x1b, 0xf1, 0xb5,
	0x2c, 0x14, 0x37, 0xfc, 0xe3, 0x9d, 0xa0, 0x6c, 0x6d, 0xf9, 0x3d, 0xcc, 0x95, 0x48, 0xac, 0x00,
	0xdf, 0xa9, 0x2a, 0x2d, 0xd9, 0x2c, 0x36, 0xb0, 0x85, 0x7b, 0x1a, 0x56, 0xf7, 0x09, 0x50, 0xf5,
	0x5b, 0x2d, 0xd7, 0xf1, 0x50, 0xfe, 0x7d, 0x23, 0xbe, 0xc2, 0xdf, 0x51, 0x5d, 0x90, 0x18, 0x14,
	0x9a, 0xe4, 0xa4, 0x7c, 0x4c, 0x1e, 0x42, 0x6f, 0x2a, 0x7c, 0x98, 0xca, 0x79, 0x3e, 0x4c, 0x95,
	0x7e, 0x3e, 0x4c, 0xd5, 0x01, 0x7d, 0x98, 0x12, 0xc5, 0x6e, 0x4d, 0x51, 0xec, 0xca, 0x5e, 0x4c,
	0xf5, 0xc3, 0x78, 0x31, 0xdd, 0x52, 0x74, 0x9d, 0x0c, 0x95, 0xc7, 0xe3, 0x64, 0xf7, 0x97, 0x85,
	0xd4, 0x2a, 0x12, 0x71, 0x7e, 0xa8, 0xab, 0xf8, 0x38, 0x28, 0x91, 0xe3, 0xc6, 0x17, 0x31, 0xa5,
	0xc9, 0x5b, 0x71, 0x5c, 0x64, 0xd2, 0xef, 0xc6, 0x45, 0xb2, 0xda, 0xbd, 0xee, 0x16, 0x3f, 0xe4,
	0x79, 0x0d, 0x59, 0x03, 0x72, 0x84, 0xa8, 0xa2, 0x9f, 0x42, 0xc1, 0x16, 0xb7, 0x46, 0x2a, 0xc4,
	0xf9, 0xea, 0x3a, 0x5d, 0xe6, 0x5a, 0xcb, 0xf5, 0xac, 0x35, 0x52, 0x41, 0x6e, 0x2c, 0xf8, 0x9f,
	0x54, 0x25, 0x05, 0x9b, 0xbd, 0x46, 0xf9, 0x59, 0xcc, 0xb5, 0x78, 0xc0, 0x5c, 0x15, 0x20, 0x4b,
	0x2a, 0x90, 0xb7, 0x2d, 0x26, 0xbf, 0x53, 0x5d, 0xda, 0x9d, 0x44, 0xa6, 0x19, 0x92, 0x3c, 0x13,
	0x7b, 0x53, 0x96, 0x24, 0x6f, 0xca, 0xaf, 0xe6, 0x41, 0xf1, 0x23, 0xe7, 0x04, 0xfb, 0x12, 0xbb,
	0x37, 0x7a, 0xb8, 0xc3, 0xbd, 0xab, 0xd7, 0xfc, 0xb6, 0xe3, 0x6d, 0x52, 0x06, 0x47, 0x07, 0x32,
	0x19, 0xdf, 0xc4, 0x2e, 0x50, 0x56, 0x80, 0x7f, 0xc4, 0xa9, 0x3c, 0x19, 0x73, 0xcb, 0xf1, 0xec,
	0x4d, 0xd4, 0x0d, 0xe6, 0x7b, 0xb8, 0xf3, 0x16, 0xb4, 0xa7, 0x83, 0xca, 0x9f, 0x0d, 0x50, 0xd8,
	0x65, 0xbd, 0x6f, 0xa3, 0x3d, 0xe1, 0x80, 0x56, 0x34, 0xc7, 0x49, 0x3d, 0x1f, 0x87, 0x39, 0xa2,
	0x79, 0xbe, 0xd7, 0x44, 0x5c, 0x55, 0xc6, 0x0a, 0xa4, 0x77, 0x74, 0x2b, 0x70, 0x42, 0x14, 0x35,
	0x2c, 0xcc, 0x6d, 0x53, 0x75, 0x5e, 0x33, 0x8f, 0x89, 0x48, 0x80, 0x84, 0xd7, 0x75, 0x83, 0x1b,
	0xeb, 0xe8, 0xc1, 0x1c, 0x33, 0xcf, 0xc6, 0x1f, 0xae, 0xb3, 0x7a, 0xf8, 0xb1, 0x02, 0x30, 0xc4,
	0x3c, 0x99, 0x1b, 0xb6, 0x1e, 0xc1, 0x57, 0xdf, 0xe6, 0x80, 0xaf, 0x71, 0x81, 0x80, 0x82, 0x28,
	0x73, 0x17, 0xc7, 0x64, 0xd5, 0x3f, 0x8a, 0xbb, 0xcb, 0x2d, 0x09, 0xbb, 0xb4, 0xd5, 0x71, 0x1d,
	0x3d, 0xf8, 0xee, 0x42, 0x72, 0x68, 0xec, 0xd0, 0x0f, 0xa4, 0x0d, 0xac, 0x81, 0x4f, 0xb9, 0x08,
	0xce, 0x22, 0xea, 0x3d, 0x16, 0xef, 0x61, 0xe6, 0xeb, 0x52, 0x34, 0x27, 0x58, 0xbd, 0x18, 0x0a,
	0x46, 0x4c, 0x2a, 0x22, 0xad, 0xd0, 0xad, 0xc0, 0x0f, 0x75, 0x9b, 0x5f, 0xce, 0x81, 0xb2, 0xdd,
	0x4c, 0x3c, 0x38, 0x4b, 0x76, 0x73, 0xd5, 0x86, 0x9f, 0x91, 0x26, 0xcf, 0x46, 0xd5, 0x49, 0x31,
	0xee, 0x02, 0x15, 0x2b, 0x70, 0x24, 0xaf, 0x51, 0x2b, 0x70, 0x56, 0x6d, 0xe3, 0x3c, 0xa8, 0x91,
	0x6a, 0x69, 0x23, 0x57, 0xad, 0xc0, 0x11, 0xf4, 0x8d, 0xa3, 0x4b, 0x92, 0xc2, 0x58, 0xcd, 0xaa,
	0x1d, 0xc1, 0x77, 0x15, 0x12, 0x24, 0x39, 0xdd, 0x21, 0x20, 0x69, 0x02, 0x8c, 0xc4, 0xd0, 0x8e,
	0x38, 0x94, 0xae, 0x6c, 0xed, 0x61, 0xc4, 0x24, 0x81, 0x31, 0x93, 0x15, 0xe0, 0xbf, 0xe7, 0xfe,
	0x66, 0x09, 0x18, 0x0b, 0xbe, 0x6e, 0x48, 0xf2, 0xb9, 0x92, 0x04, 0xa3, 0xa5, 0x7e, 0x18, 0x2d,
	0xab, 0x18, 0x7d, 0x14, 0x4c, 0x6c, 0xf9, 0x7c, 0xf7, 0x31, 0xf2, 0xcd, 0x58, 0x8f, 0xb1, 0x2d,
	0x06, 0x32, 0x5d, 0x6a, 0xf9, 0xe2, 0x60, 0x13, 0x1a, 0xfe, 0xc5, 0xf1, 0x56, 0x30, 0x21, 0x86,
	0x74, 0xfd, 0xf6, 0x8d, 0xde, 0xd1, 0x1d, 0xe1, 0xa1, 0x97, 0x5c, 0x45, 0x21, 0x6a, 0xfa, 0x3b,
	0x28, 0xd4, 0x47, 0x01, 0xf3, 0x42, 0x30, 0xb8, 0xb7, 0x0d, 0x1b, 0xef, 0xa5, 0x1e, 0x8a, 0x62,
	0x69, 0xd2, 0x64, 0xc3, 0x1f, 0xfd, 0x0a, 0x54, 0xee, 0x1d, 0x66, 0xf8, 0x3d, 0x75, 0xf7, 0xce,
	0xdf, 0x48, 0x0e, 0x65, 0xd6, 0x6e, 0xac, 0xc1, 0x06, 0xf9, 0xdf, 0x47, 0xc0, 0x59, 0x31, 0x80,
	0x3e, 0x04, 0x9c, 0x56, 0x8d, 0x73, 0x72, 0xc4, 0xab, 0xfd, 0x8e, 0x78, 0x4d, 0x3d, 0xe2, 0xfb,
	0x3a, 0x55, 0xc8, 0x0a, 0x6c, 0x30, 0x98, 0x02, 0xfb, 0x17, 0xb8, 0x93, 0xa5, 0xc0, 0xf7, 0xaa,
	0xb7, 0xe3, 0x60, 0x1d, 0x6e, 0x8a, 0x84, 0x8b, 0x90, 0x70, 0xc6, 0x6e, 0xc2, 0xba, 0x39, 0x26,
	0x21, 0x8d, 0x06, 0x6a, 0x08, 0x5e, 0x8c, 0x5f, 0x0e, 0xbc, 0x08, 0xbf, 0x5c, 0x48, 0x48, 0x46,
	0xe4, 0xb4, 0xbd, 0x55, 0xef, 0x47, 0x89, 0x37, 0xff, 0x61, 0x0a, 0xfa, 0x9b, 0xc1, 0x8f, 0x10,
	0xf4, 0x29, 0xf5, 0x50, 0x65, 0x5f, 0xf5, 0x50, 0x55, 0x55, 0x0f, 0xc1, 0x4f, 0xb2, 0xeb, 0x72,
	0xcb, 0xc7, 0x51, 0xc3, 0xf2, 0xa2, 0x5d, 0x14, 0xbe, 0x88, 0xb6, 0x3a, 0xbe, 0xbf, 0xfd, 0xe6,
	0x8d, 0x1b, 0xcf, 0xbf, 0xb5, 0xa7, 0x83, 0x4c, 0x92, 0xe3, 0xf1, 0x12, 0xe9, 0x29, 0x91, 0x10,
	0xaa, 0xb4, 0xbc, 0x6a, 0x1b, 0x8f, 0x81, 0x92, 0x6d, 0x61, 0x8b, 0xb3, 0xa4, 0x77, 0xc4, 0x9d,
	0x2f, 0x59, 0xd8, 0x22, 0x10, 0x98, 0xf4, 0x33, 0x61, 0x85, 0xce, 0x0b, 0x28, 0x29, 0x95, 0xe9,
	0x45, 0xd8, 0xef, 0x9a, 0x8c, 0xae, 0x6b, 0xd9, 0xfb, 0x4d, 0xda, 0x63, 0xa3, 0x8b, 0x70, 0x87,
	0x6b, 0x79, 0xeb, 0xe6, 0x18, 0xab, 0xbc, 0x4e, 0xeb, 0x8c, 0x27, 0x41, 0x25, 0xb0, 0x42, 0xab,
	0x1b, 0xf5, 0x07, 0x96, 0x37, 0x80, 0xef, 0x63, 0x02, 0x2b, 0x07, 0x97, 0x30, 0x20, 0x8b, 0x7e,
	0xb7, 0x6b, 0x79, 0x76, 0xa4, 0xc3, 0x69, 0xa1, 0xd6, 0xe4, 0x9d, 0x71, 0xc7, 0xec, 0x73, 0x12,
	0xc9, 0x12, 0x03, 0x99, 0x71, 0x23, 0xf8, 0x0a, 0xc3, 0x9d, 0x70, 0x80, 0xd4, 0x1d, 0x7e, 0xf9,
	0x0c, 0xa8, 0xf2, 0xae, 0xb9, 0x8a, 0xe2, 0xae, 0xb4, 0x5c, 0x41, 0x3f, 0x9a, 0xa2, 0x95, 0xa2,
	0x4a, 0x2a, 0xa5, 0x54, 0x49, 0xaf, 0x8c, 0xa4, 0x60, 0xa5, 0x41, 0x89, 0xbc, 0x8b, 0x61, 0x5d,
	0x2b, 0xf7, 0x81, 0xfa, 0x56, 0xe8, 0x5b, 0x76, 0xd3, 0x8a, 0x30, 0xbf, 0x50, 0x92, 0x0a, 0xf2,
	0x35, 0x76, 0x35, 0xe5, 0x8e, 0x2d, 0x49, 0x45, 0x1f, 0x85, 0x60, 0xac, 0x73, 0xad, 0x4a, 0x3a,
	0x57, 0x63, 0x06, 0xd4, 0xdb, 0xc8, 0x6f, 0x04, 0xbe, 0xe3, 0x61, 0xee, 0x8d, 0x97, 0xd2, 0x13,
	0x3e, 0x87, 0xfc, 0x75, 0xf2, 0xd5, 0xac, 0xb5, 0xf9, 0x7f, 0x84, 0xe2, 0x5a, 0xb6, 0x1d, 0xa2,
	0x28, 0xe2, 0xb7, 0x87, 0x28, 0xc2, 0x0f, 0xa4, 0xd6, 0x95, 0x85, 0x10, 0x6a, 0xc3, 0xd5, 0x61,
	0xd7, 0x15, 0x7e, 0x2a, 0x17, 0x9e, 0x37, 0x39, 0x11, 0xf6, 0x75, 0x10, 0x91, 0x43, 0xef, 0xb3,
	0xbb, 0x40, 0xa5, 0x6b, 0xdd, 0x92, 0xd8, 0xf1, 0xae, 0x75, 0x6b, 0xd5, 0x86, 0x1f, 0x61, 0xfa,
	0xba, 0x14, 0x98, 0x5c, 0x93, 0x10, 0x9d, 0x00, 0x9c, 0x4c, 0xac, 0x29, 0x51, 0x71, 0x6a, 0xc4,
	0xb1, 0xe1, 0xbf, 0x62, 0x56, 0xd8, 0x14, 0x80, 0xe4, 0xc0, 0x9e, 0x1c, 0x2e, 0x5f, 0x0f, 0xaa,
	0xe4, 0x8c, 0x0a, 0x64, 0x66, 0xf4, 0x90, 0x04, 0x3a, 0xb3, 0x42, 0x9a, 0xac, 0xda, 0xf0, 0xa3,
	0x4c, 0xd5, 0x11, 0x4f, 0x00, 0xd9, 0x0e, 0x9e, 0xa7, 0x27, 0xe0, 0xf8, 0x01, 0x8f, 0x4f, 0x62,
	0x49, 0xb6, 0x7e, 0x7c, 0xaa, 0x98, 0x03, 0xa1, 0xdd, 0x75, 0xbc, 0x53, 0x8e, 0x5a, 0xc3, 0x04,
	0x77, 0x5b, 0x04, 0xce, 0x46, 0xe8, 0xb4, 0x3b, 0x38, 0x9a, 0xbe, 0xb4, 0x70, 0xed, 0xda, 0xf4,
	0xd4, 0xe5, 0xd9, 0x29, 0xae, 0xd5, 0x4d, 0x6c, 0x05, 0x7c, 0x1c, 0x3a, 0x2b, 0x93, 0x36, 0x36,
	0xef, 0xb2, 0x92, 0x42, 0xf2, 0x4b, 0x63, 0x06, 0x94, 0x42, 0x9f, 0x53, 0xb0, 0xd1, 0xe9, 0x07,
	0xd3, 0x3d, 0xac, 0x5b, 0x21, 0x76, 0x9a, 0x4e, 0x60, 0x79, 0xd8, 0xf4, 0x5d, 0x64, 0xd2, 0xc6,
	0xc6, 0x0d, 0x15, 0x90, 0xd9, 0x4b, 0x2b, 0xd7, 0xe6, 0x66, 0x16, 0xe6, 0xe7, 0x66, 0xb8, 0x01,
	0x64, 0x52, 0xee, 0x06, 0xf7, 0x83, 0x22, 0xf9, 0x19, 0x11, 0xe1, 0x42, 0xcb, 0xdb, 0xe6, 0xec,
	0x33, 0xfd, 0x1f, 0x7e, 0x8f, 0x99, 0x87, 0x94, 0x65, 0x5a, 0x20, 0xff, 0xdb, 0xa7, 0x7d, 0x9d,
	0x6e, 0x82, 0x7b, 0xb6, 0x28, 0xa0, 0x1c, 0x3f, 0x0b, 0x2b, 0x4b, 0x73, 0x53, 0x57, 0x16, 0x97,
	0xe2, 0x85, 0xba, 0x2f, 0x8d, 0x66, 0x36, 0x2f, 0x8e, 0xa3, 0xbb, 0xb7, 0xa4, 0x52, 0xf2, 0x5b,
	0xc3, 0x4c, 0x75, 0x3b, 0x3b, 0x3d, 0x3b, 0x77, 0x75, 0x6e, 0x6a, 0x7a, 0x6e, 0x86, 0xaf, 0xde,
	0x79, 0x05, 0xed, 0xfd, 0xfb, 0x4c, 0x7e, 0x08, 0xff, 0x17, 0xd3, 0x11, 0x2b, 0x48, 0x5e, 0x24,
	0xd7, 0xae, 0x1f, 0x9e, 0x76, 0x2c, 0x1f, 0xc5, 0x8c, 0xfb, 0x9f, 0x99, 0x72, 0x4d, 0x99, 0xf6,
	0x9a, 0xaf, 0xcb, 0xe1, 0xe6, 0xd0, 0xf3, 0x56, 0x78, 0x83, 0xd2, 0xe1, 0x79, 0x83, 0xb2, 0xca,
	0x1b, 0x7c, 0x29, 0x87, 0x04, 0xaf, 0x77, 0x7c, 0xec, 0x9f, 0xc0, 0xd4, 0x9e, 0x02, 0xe5, 0x80,
	0x0c, 0xcd, 0xa7, 0x75, 0x4f, 0xa6, 0x39, 0x83, 0xcc, 0x64, 0xad, 0x72, 0x6f, 0x8f, 0x4d, 0xca,
	0x55, 0x9d, 0xc8, 0xed, 0x91, 0x4d, 0x59, 0x01, 0xdf, 0x9f, 0xde, 0x3a, 0x54, 0x37, 0xcb, 0x04,
	0xf1, 0x13, 0xe0, 0xbb, 0x7e, 0x6b, 0x44, 0xe5, 0x17, 0x18, 0x38, 0x9c, 0xa1, 0x59, 0x73, 0xbc,
	0xed, 0x13, 0xe4, 0x69, 0x84, 0xaa, 0xf6, 0xc7, 0xc0, 0x1d, 0x94, 0x5f, 0x46, 0xf6, 0xe2, 0xf2,
	0xc2, 0xec, 0xec, 0xd4, 0xd5, 0x99, 0x6b, 0x57, 0xf8, 0x91, 0x4d, 0x29, 0x5c, 0xb2, 0xed, 0xfa,
	0xa4, 0xfb, 0x78, 0x1a, 0x18, 0xbc, 0xe9, 0xf2, 0xd5, 0x99, 0x95, 0xf9, 0xa5, 0xe5, 0x85, 0xa9,
	0xa9, 0x39, 0x1e, 0x0a, 0x96, 0xf3, 0xc5, 0xb8, 0x1b, 0x54, 0x70, 0x27, 0x44, 0x96, 0xcd, 0x23,
	0xc0, 0x78, 0x09, 0x7e, 0x7f, 0x44, 0xa5, 0x7f, 0x6d, 0xc4, 0xae, 0xab, 0x35, 0xbf, 0x3d, 0x2c,
	0x81, 0x43, 0x42, 0x67, 0x69, 0x20, 0x74, 0x8e, 0x81, 0xc2, 0x4b, 0xfc, 0x88, 0x17, 0x5e, 0x32,
	0x56, 0xc1, 0x38, 0xda, 0x41, 0x1e, 0x8e, 0x1a, 0x2d, 0xc7, 0xc5, 0xb1, 0xe6, 0xea, 0xd1, 0xdc,
	0xbb, 0x7f, 0xcd, 0x6f, 0x2f, 0xd3, 0xc6, 0x2b, 0xb4, 0xad, 0x39, 0x86, 0xa4, 0x92, 0xf1, 0x3a,
	0x50, 0xa1, 0xd7, 0x71, 0x34, 0x59, 0xa5, 0xa2, 0x64, 0x2e, 0xb5, 0x65, 0x2d, 0x24, 0x7e, 0xba,
	0xc6, 0xec, 0x78, 0x94, 0x9f, 0xa6, 0xd5, 0x8e, 0x47, 0xaa, 0xeb, 0xbc, 0xda, 0xf1, 0x98, 0xd1,
	0xcf, 0x75, 0xba, 0x0e, 0xe6, 0x11, 0x73, 0xac, 0x00, 0xbf, 0x52, 0x00, 0x8f, 0xe6, 0x21, 0x1b,
	0xd9, 0xeb, 0x34, 0x05, 0x45, 0x1c, 0x8e, 0x37, 0x24, 0xcc, 0x3f, 0x08, 0x46, 0xb7, 0xf6, 0x1a,
	0x2e, 0xa7, 0xf3, 0x5c, 0xd8, 0x03, 0x5b, 0x7b, 0x31, 0xe5, 0x7f, 0x10, 0x8c, 0x52, 0xf9, 0xb8,
	0xc1, 0x80, 0x67, 0xf2, 0x1e, 0xa0, 0x55, 0x6b, 0x74, 0x06, 0x0e, 0x78, 0x3c, 0x35, 0x81, 0x05,
	0x21, 0x2a, 0x46, 0x2b, 0x7e, 0xb8, 0xe4, 0x44, 0xcd, 0x9e, 0x9e, 0x40, 0x4b, 0xf8, 0x8e, 0x42,
	0x66, 0x67, 0xea, 0xc3, 0xcf, 0x63, 0xdc, 0x98, 0x52, 0xec, 0xbf, 0xfd, 0x88, 0x30, 0xf2, 0xde,
	0x82, 0xca, 0x82, 0xb5, 0x11, 0x5e, 0x72, 0x2c, 0xd7, 0x6f, 0xeb, 0x09, 0x8c, 0xf6, 0x5b, 0xad,
	0x08, 0x61, 0xe1, 0x54, 0xc7, 0x4a, 0xc9, 0xd6, 0x29, 0xc9, 0x5b, 0xe7, 0x1f, 0xa6, 0xe4, 0xb6,
	0x36, 0xc2, 0x2b, 0x3d, 0xd7, 0x3d, 0x39, 0x79, 0x97, 0x65, 0x32, 0x91, 0xe1, 0x79, 0x8e, 0x46,
	0x9d, 0x6a, 0xde, 0x05, 0xbf, 0xc1, 0x5c, 0xef, 0xe5, 0x71, 0x56, 0xa9, 0x15, 0xc8, 0xf2, 0xf0,
	0xc9, 0x09, 0x84, 0xf7, 0x82, 0x3a, 0x5b, 0xad, 0x44, 0xbe, 0xae, 0xb1, 0x8a, 0x55, 0x9b, 0x1c,
	0x22, 0xfe, 0xd1, 0xb6, 0x30, 0xe2, 0xb6, 0x7d, 0xc0, 0xaa, 0x96, 0x2c, 0x4c, 0x15, 0x96, 0x96,
	0x6d, 0x37, 0xf8, 0xea, 0x33, 0xb2, 0x5e, 0xb7, 0x6c, 0xfb, 0x46, 0x6a, 0x03, 0x54, 0xa5, 0x0d,
	0x90, 0xa2, 0x3f, 0xe5, 0x7c, 0xfa, 0x53, 0xe6, 0xf4, 0x87, 0x9b, 0x7f, 0x14, 0xac, 0x79, 0x56,
	0x13, 0x3b, 0x3b, 0x48, 0xdb, 0x19, 0x82, 0x3b, 0xd4, 0xb6, 0x22, 0x8f, 0xb1, 0x86, 0x5a, 0x1a,
	0xcf, 0x68, 0x9f, 0x03, 0x02, 0xbf, 0x9f, 0x25, 0x0c, 0x27, 0xa8, 0xbf, 0x80, 0x60, 0xcc, 0xb1,
	0xe7, 0x66, 0x96, 0x66, 0x17, 0x66, 0x2e, 0xcf, 0xce, 0x4e, 0x71, 0x4d, 0x86, 0x52, 0x67, 0xcc,
	0x91, 0x36, 0xf3, 0x4b, 0xd7, 0x16, 0xe7, 0xe6, 0xa7, 0xd9, 0xd5, 0x9f, 0x43, 0x77, 0xf8, 0x1c,
	0x4c, 0xa5, 0x29, 0xfc, 0x72, 0xf6, 0xdc, 0x4b, 0x22, 0xe9, 0x69, 0xd7, 0x85, 0x7c, 0x60, 0x24,
	0xb3, 0x47, 0x24, 0xe8, 0x4f, 0x62, 0xb9, 0x9e, 0x05, 0x15, 0xce, 0x36, 0x30, 0xe8, 0xe1, 0x3e,
	0x02, 0xbf, 0x60, 0x1a, 0xf8, 0x2f, 0xa4, 0x0d, 0x59, 0xce, 0xa7, 0xd8, 0x15, 0xf9, 0xc0, 0x8a,
	0x80, 0x9c, 0xaa, 0x94, 0x03, 0xe1, 0xb5, 0x82, 0x8a, 0x0f, 0x87, 0x72, 0xcd, 0x9b, 0xfe, 0x89,
	0x91, 0x71, 0xe3, 0x22, 0x28, 0xb3, 0xa4, 0x04, 0xa5, 0xbe, 0x1c, 0x10, 0x6b, 0x00, 0x7f, 0x2e,
	0x75, 0xec, 0xde, 0xe6, 0x3b, 0xde, 0xc9, 0x5d, 0x3f, 0x7f, 0x98, 0xc2, 0xe4, 0xb6, 0xd3, 0xdc,
	0x5e, 0x09, 0xfd, 0xee, 0xc9, 0x61, 0xf2, 0x50, 0xb2, 0xfb, 0x63, 0xa0, 0x42, 0x20, 0x46, 0x76,
	0xbe, 0x18, 0xc0, 0x3f, 0x66, 0x64, 0x2d, 0x17, 0x59, 0x3b, 0x27, 0xa8, 0xe3, 0xfe, 0x44, 0x6a,
	0x0b, 0x10, 0x09, 0xe2, 0xd4, 0x69, 0xb8, 0x3f, 0x59, 0x50, 0xef, 0x3e, 0x02, 0x24, 0xa7, 0xad,
	0x3c, 0x9e, 0xe7, 0x34, 0xa8, 0xb9, 0x7f, 0x3b, 0xc5, 0x59, 0xb2, 0x48, 0xff, 0x8d, 0xc0, 0xea,
	0x9e, 0xf6, 0xad, 0xcb, 0x66, 0x52, 0x8e, 0x67, 0xf2, 0x55, 0x66, 0x42, 0x8d, 0x67, 0x42, 0xb8,
	0x9c, 0x98, 0x01, 0xa4, 0x3c, 0xe1, 0xd1, 0x67, 0x34, 0x23, 0xdb, 0xa8, 0xf6, 0x9d, 0x93, 0x64,
	0xba, 0x7a, 0x3d, 0x28, 0x33, 0xb3, 0xd5, 0xbe, 0x52, 0x26, 0x6b, 0x03, 0xbf, 0x9e, 0xda, 0xda,
	0x11, 0xc2, 0x1b, 0x98, 0x1c, 0xc2, 0xf0, 0x24, 0x76, 0xcb, 0x35, 0x00, 0x22, 0x3e, 0x3a, 0x12,
	0x0a, 0xb1, 0x54, 0xe4, 0x0b, 0x87, 0x6e, 0x03, 0x61, 0x53, 0x6a, 0x0b, 0xbf, 0x98, 0xe2, 0x17,
	0xb0, 0xdf, 0x6e, 0xbb, 0x68, 0xd1, 0xef, 0x76, 0x4f, 0x68, 0xe3, 0x3f, 0x01, 0xaa, 0x72, 0x48,
	0x5b, 0x36, 0x1a, 0x82, 0x7f, 0x85, 0x5f, 0x48, 0x19, 0xd0, 0x18, 0xe4, 0xda, 0x1c, 0x3c, 0x86,
	0x07, 0xf8, 0x57, 0x0a, 0xaa, 0x28, 0xc4, 0x00, 0x5f, 0x0f, 0x85, 0xf1, 0xef, 0x4d, 0x8e, 0x6d,
	0x23, 0xef, 0x34, 0xcf, 0xe0, 0x35, 0x96, 0x8f, 0x2f, 0x35, 0x83, 0x0d, 0xa7, 0xed, 0x59, 0xb8,
	0x17, 0x9e, 0x6e, 0xec, 0xff, 0x6a, 0xee, 0x86, 0xdf, 0x70, 0xfd, 0xdd, 0xeb, 0x5a, 0x7c, 0xb1,
	0x0e, 0x0d, 0xf9, 0x24, 0xa8, 0x46, 0xa8, 0xe9, 0x7b, 0x76, 0xc4, 0xef, 0x25, 0x51, 0x84, 0xdf,
	0x4e, 0xdd, 0x4c, 0x3c, 0x78, 0xca, 0xf1, 0xbc, 0xd8, 0x97, 0x7b, 0x58, 0x9a, 0x9f, 0xbb, 0xe3,
	0x10, 0x58, 0xa6, 0xf4, 0xe1, 0x25, 0x79, 0x76, 0xe5, 0x43, 0xdc, 0x63, 0x15, 0xa1, 0xda, 0x84,
	0xaf, 0xa6, 0xd0, 0xaf, 0x3b, 0xf2, 0x46, 0xab, 0x7f, 0xc5, 0xdb, 0x39, 0x89, 0xe1, 0x99, 0xb9,
	0x78, 0x20, 0x02, 0x8f, 0x3c, 0x3e, 0x3a, 0xac, 0x30, 0xf6, 0xd0, 0xcd, 0xbf, 0x41, 0x09, 0xbe,
	0x3e, 0xc5, 0x8d, 0x7a, 0x31, 0x08, 0xb6, 0xad, 0x6d, 0xfc, 0xfc, 0xa5, 0xff, 0x71, 0x70, 0xaf,
	0x65, 0xdb, 0x0d, 0xe6, 0x41, 0x15, 0xb0, 0x98, 0xd7, 0x06, 0x12, 0x69, 0x43, 0xf9, 0x7e, 0x98,
	0xb4, 0x6c, 0x9b, 0xfa, 0xb5, 0xf3, 0xa0, 0xd8, 0x38, 0xad, 0x28, 0x9f, 0x54, 0x79, 0xbf, 0x49,
	0x1d, 0xc5, 0x03, 0x8b, 0x00, 0x4d, 0x41, 0xe3, 0xa6, 0x4f, 0x56, 0x80, 0xff, 0xb6, 0x00, 0xee,
	0x90, 0xd1, 0xb4, 0xe5, 0xfa, 0x4d, 0x0d, 0x9a, 0xfc, 0xab, 0x44, 0x10, 0x9f, 0x99, 0x99, 0x5e,
	0xb8, 0x3c, 0xb7, 0xb2, 0x38, 0x3b, 0xb5, 0xcf, 0x5a, 0x29, 0xed, 0x8c, 0x6b, 0x60, 0xdc, 0xb1,
	0xaf, 0x5e, 0x5b, 0x5c, 0x9c, 0xba, 0x3c, 0x35, 0x35, 0x35, 0x35, 0x97, 0xcf, 0x26, 0xd1, 0x30,
	0x54, 0xb5, 0x21, 0xfc, 0x4b, 0x4e, 0x5a, 0x95, 0x89, 0x10, 0x41, 0xc5, 0x44, 0x81, 0xeb, 0xa0,
	0xa1, 0xa9, 0x7a, 0x1f, 0x03, 0x13, 0xcc, 0x73, 0xa2, 0x21, 0x7b, 0x2c, 0xd6, 0xcc, 0x71, 0xc5,
	0xe1, 0x43, 0x6a, 0xd6, 0x61, 0x97, 0x15, 0xd7, 0xf9, 0x8e, 0xab, 0xee, 0x2b, 0x0f, 0x82, 0x51,
	0xc6, 0xa0, 0x36, 0xa2, 0xc0, 0xea, 0xf2, 0xac, 0x69, 0x40, 0xe2, 0x59, 0x09, 0x2f, 0x1e, 0xb5,
	0x25, 0xcf, 0xd0, 0x6e, 0xd4, 0x5e, 0xb5, 0x61, 0x8f, 0x11, 0x07, 0x31, 0x79, 0xd6, 0xe9, 0x02,
	0x0b, 0x5e, 0xd2, 0xa3, 0x21, 0xa2, 0xdb, 0x45, 0x78, 0x6b, 0xf2, 0x52, 0xe6, 0x9c, 0x73, 0xdf,
	0xa0, 0xe3, 0x3c, 0xe7, 0xef, 0x28, 0xe4, 0x4d, 0x7d, 0x51, 0xe4, 0x04, 0xd4, 0x06, 0x43, 0x71,
	0x1f, 0x18, 0x7e, 0x4a, 0x25, 0x35, 0xcc, 0x32, 0xb6, 0x68, 0xe9, 0x48, 0x6b, 0x2b, 0x14, 0xe3,
	0xa2, 0xef, 0x36, 0xc2, 0x0b, 0xae, 0xbe, 0x68, 0xf3, 0x43, 0x28, 0xc6, 0x03, 0x75, 0xa9, 0x93,
	0x5c, 0xd7, 0xab, 0x4b, 0x43, 0x4a, 0x64, 0xf9, 0x2a, 0x17, 0x15, 0xb2, 0x43, 0x46, 0x3a, 0xe2,
	0x1d, 0x27, 0xc8, 0x20, 0x8b, 0x97, 0xa6, 0x67, 0xae, 0x5d, 0x9e, 0x5b, 0xe1, 0x34, 0xaa, 0x6c,
	0xa6, 0x6a, 0x45, 0xbb, 0xe9, 0xe9, 0xc5, 0xab, 0xf3, 0xf3, 0x97, 0xae, 0x5d, 0x99, 0xe2, 0x97,
	0x5d, 0xaa, 0x16, 0xfe, 0x71, 0x76, 0xa1, 0xa8, 0xb5, 0x47, 0xc7, 0x42, 0x29, 0x56, 0xfb, 0xe2,
	0x80, 0x56, 0xfb, 0x98, 0x5c, 0x95, 0x64, 0x72, 0xf5, 0x00, 0x00, 0x5b, 0x56, 0x73, 0x9b, 0xc8,
	0x62, 0x9e, 0x2d, 0xec, 0x4e, 0x49, 0x8d, 0xf1, 0x30, 0x18, 0x8b, 0x90, 0xdb, 0x6a, 0xf0, 0x08,
	0x39, 0xce, 0x80, 0x8c, 0x92, 0xba, 0x65, 0x56, 0x05, 0x5f, 0xa4, 0x29, 0xa7, 0xe4, 0x89, 0x6e,
	0x58, 0x3b, 0x1a, 0xa6, 0x09, 0x7f, 0x3a, 0xb3, 0xdc, 0x2c, 0x52, 0x5c, 0x47, 0x86, 0xfc, 0x3f,
	0x1d, 0xc9, 0x74, 0xbe, 0xe9, 0x07, 0xe4, 0x22, 0x89, 0x86, 0x17, 0x3d, 0x3c, 0xd1, 0xf4, 0xc3,
	0x10, 0x45, 0x81, 0xef, 0xd9, 0x44, 0x28, 0x14, 0x51, 0x04, 0x6a, 0xad, 0x71, 0x0f, 0xa8, 0x52,
	0x0f, 0xde, 0xa0, 0xcb, 0xd7, 0xa3, 0x42, 0x8a, 0xeb, 0x5d, 0x6a, 0x45, 0x24, 0x1f, 0x1c, 0x8f,
	0xc6, 0xb8, 0xf3, 0xcb, 0x80, 0x54, 0xad, 0xd2, 0x1a, 0xd2, 0x80, 0xfb, 0x6b, 0x5b, 0xae, 0x2b,
	0xf2, 0x93, 0x32, 0x17, 0xee, 0x45, 0x52, 0x43, 0x4e, 0x38, 0xcf, 0x5d, 0xca, 0x8d, 0xd1, 0x3c,
	0x61, 0xe9, 0x05, 0x50, 0x8b, 0x13, 0x95, 0xd6, 0x79, 0x16, 0x55, 0x61, 0x4e, 0x48, 0xa8, 0x02,
	0xc8, 0xa7, 0x0a, 0xa3, 0x79, 0xca, 0xd7, 0x31, 0xe9, 0xdc, 0xbe, 0xac, 0x9e, 0x04, 0x16, 0x4c,
	0xa4, 0x85, 0x1c, 0x92, 0x19, 0x33, 0xea, 0xda, 0x68, 0x5a, 0x21, 0x23, 0xcb, 0x65, 0x13, 0x24,
	0x04, 0x97, 0x48, 0x58, 0x17, 0x72, 0x06, 0xd7, 0x46, 0x36, 0xa6, 0xa4, 0xfc, 0xb3, 0xf9, 0x56,
	0x4d, 0xf6, 0x55, 0x4a, 0x4b, 0xfb, 0x04, 0xa8, 0x86, 0x28, 0x70, 0xad, 0x66, 0x9f, 0x1c, 0x63,
	0xe2, 0x6b, 0xfa, 0x1a, 0xa1, 0x71, 0x34, 0x9a, 0x8e, 0xd6, 0x57, 0xb8, 0xee, 0x48, 0xe9, 0x9b,
	0x1f, 0x00, 0xd3, 0xc2, 0x8e, 0xa7, 0xc1, 0x09, 0xe1, 0x32, 0xa8, 0x11, 0x7a, 0xd7, 0x26, 0xcc,
	0x4d, 0x3a, 0x87, 0x08, 0x1f, 0x6a, 0x91, 0x7f, 0x37, 0xe3, 0x96, 0x71, 0xb6, 0xcc, 0xd2, 0xfe,
	0xd9, 0x32, 0xe1, 0xcb, 0x4c, 0x0d, 0x2d, 0x4d, 0xc0, 0x77, 0x77, 0x8e, 0x29, 0xf3, 0xc0, 0x1e,
	0x0d, 0xbf, 0x8a, 0xc7, 0x8e, 0x90, 0x15, 0x36, 0x3b, 0x47, 0x1f, 0x92, 0xba, 0x5b, 0x14, 0x85,
	0xbb, 0x45, 0xfe, 0xad, 0xfb, 0x9e, 0xd4, 0x7e, 0x66, 0x52, 0xb7, 0x3e, 0xd2, 0x25, 0x89, 0xff,
	0xc5, 0x7d, 0xc5, 0xff, 0x6f, 0xb0, 0x80, 0xa0, 0x18, 0x90, 0x9e, 0xa7, 0x53, 0x54, 0x58, 0xbe,
	0x72, 0x79, 0xea, 0xd2, 0xa5, 0x85, 0xa5, 0x83, 0x44, 0x85, 0xa4, 0x1d, 0x13, 0x15, 0x16, 0x96,
	0xe7, 0xaf, 0x5e, 0x59, 0xba, 0x72, 0xe9, 0x40, 0x51, 0x41, 0x6a, 0x08, 0x77, 0xe9, 0x55, 0xd0,
	0xf2, 0x5d, 0x1b, 0x85, 0x82, 0x61, 0x5c, 0xa1, 0xa5, 0xa3, 0xcf, 0xe6, 0x5e, 0x50, 0x67, 0x1d,
	0x27, 0x11, 0xaf, 0x35, 0x56, 0xb1, 0x6a, 0xc3, 0x5f, 0x62, 0x8b, 0x29, 0x46, 0xa6, 0xde, 0x72,
	0x08, 0x85, 0x6c, 0x6c, 0x0d, 0x8b, 0xf9, 0x63, 0x60, 0x8c, 0x0f, 0x4e, 0x8e, 0x4c, 0x36, 0xa1,
	0x3e, 0xcb, 0xe5, 0x40, 0x5b, 0x50, 0xbc, 0x8c, 0xb6, 0xe2, 0xff, 0x23, 0xf8, 0xf7, 0x98, 0x00,
	0xd5, 0x41, 0x6e, 0xc0, 0xe5, 0xf5, 0x4d, 0x14, 0x76, 0xa3, 0x1b, 0xad, 0x0d, 0xf6, 0x7e, 0x9c,
	0x8e, 0x48, 0xa5, 0x84, 0x9d, 0xcf, 0x89, 0x6a, 0x21, 0x9c, 0xf4, 0xcf, 0x52, 0x26, 0x93, 0xc2,
	0x60, 0x3b, 0x51, 0xd7, 0x89, 0xa2, 0x8d, 0x5e, 0xbb, 0x8d, 0x22, 0x3d, 0xee, 0x92, 0x0f, 0x00,
	0x10, 0xc5, 0xdd, 0xf1, 0x93, 0x27, 0xd5, 0xc0, 0xef, 0xb0, 0x6c, 0x9a, 0x74, 0x78, 0xb2, 0x38,
	0x64, 0xd7, 0xad, 0x7a, 0x2d, 0x0d, 0xde, 0x8c, 0x92, 0xe2, 0xbf, 0x78, 0xa0, 0xe2, 0xbf, 0x6f,
	0xf4, 0x9b, 0x31, 0x0d, 0x6a, 0xc8, 0xc3, 0x0e, 0x76, 0x50, 0xc4, 0x6d, 0xdb, 0x09, 0x1f, 0xc8,
	0x25, 0xcd, 0x65, 0xf2, 0x7d, 0xcf, 0x8c, 0xdb, 0xc1, 0xf7, 0x33, 0xce, 0x87, 0x4e, 0xaa, 0x8d,
	0xf0, 0x7c, 0x10, 0xb0, 0x0c, 0x94, 0xae, 0x0e, 0xc7, 0xb3, 0x8b, 0xe0, 0x6c, 0x10, 0xa2, 0x9d,
	0x86, 0x9c, 0x21, 0x9a, 0xe1, 0x75, 0x82, 0xd4, 0xcf, 0x27, 0x59, 0xa2, 0xd3, 0x09, 0xa9, 0x4b,
	0x83, 0x24, 0xa4, 0x2e, 0x0f, 0x90, 0x90, 0xba, 0x92, 0x49, 0x48, 0xad, 0xc4, 0x42, 0x56, 0xd5,
	0x58, 0x48, 0xce, 0xbd, 0xca, 0xd8, 0xf0, 0xbd, 0x96, 0x73, 0x74, 0x54, 0xc0, 0x1f, 0x16, 0xd2,
	0x3d, 0xdf, 0xa4, 0x2a, 0x3a, 0x2d, 0x11, 0x7e, 0x0a, 0xea, 0x8a, 0x83, 0xa0, 0xae, 0x34, 0x00,
	0xea, 0xca, 0xfb, 0xa3, 0xae, 0x92, 0x93, 0x9b, 0xdb, 0xef, 0x85, 0x4d, 0x81, 0x54, 0x5e, 0x4a,
	0xa1, 0x74, 0xd1, 0xf6, 0x74, 0xa1, 0x74, 0x93, 0xea, 0xa6, 0xe2, 0x8e, 0x35, 0xf5, 0xca, 0x6d,
	0xbd, 0x49, 0xb7, 0x3d, 0x0f, 0x87, 0x0e, 0x8a, 0xd6, 0x1c, 0x1d, 0x31, 0x7e, 0x0a, 0x06, 0x8b,
	0x29, 0x0c, 0xe6, 0xbd, 0xc5, 0xe1, 0x29, 0xc7, 0x73, 0x09, 0xa1, 0x60, 0xcd, 0xf1, 0xb6, 0xf5,
	0x90, 0x1d, 0x03, 0x94, 0x02, 0x0b, 0x8b, 0x77, 0xfb, 0xe8, 0xff, 0xb0, 0x47, 0xfd, 0x9e, 0xc5,
	0x78, 0xcc, 0xec, 0xb3, 0x89, 0x6e, 0x0d, 0x79, 0xea, 0xa9, 0x4d, 0xf2, 0x3c, 0xb2, 0x42, 0x14,
	0xe1, 0xa5, 0xe6, 0xd1, 0x97, 0x33, 0x48, 0xae, 0x0c, 0xfe, 0xe8, 0x0f, 0xe7, 0xf8, 0x75, 0x6c,
	0x96, 0x5c, 0xbd, 0x84, 0x3a, 0x95, 0xf5, 0xd0, 0xef, 0xfa, 0xe4, 0x12, 0x3b, 0xfa, 0x54, 0x32,
	0x1d, 0xdf, 0xda, 0xd3, 0xd3, 0x31, 0x56, 0xf6, 0x98, 0x89, 0x9a, 0xc8, 0xc3, 0xd7, 0xd1, 0xcd,
	0x50, 0x87, 0xf7, 0xd8, 0x24, 0x11, 0x6f, 0x5a, 0x28, 0x8c, 0x43, 0x8f, 0x45, 0x11, 0xde, 0xa4,
	0x6c, 0xb3, 0x18, 0x75, 0xa3, 0x17, 0x90, 0x85, 0x39, 0xfa, 0x64, 0x98, 0x98, 0x94, 0xea, 0xf6,
	0x79, 0x1d, 0x42, 0x00, 0xdc, 0x53, 0xf6, 0x92, 0x6e, 0xfe, 0x67, 0xdf, 0xf3, 0xc1, 0x1c, 0x09,
	0xf3, 0x87, 0xd6, 0x74, 0x91, 0xc0, 0x77, 0x32, 0x1e, 0x5e, 0x0c, 0x72, 0x32, 0xec, 0x0d, 0x7c,
	0x7b, 0x21, 0xa1, 0x40, 0x1d, 0xc7, 0x46, 0xfa, 0x0e, 0xd0, 0xa0, 0x4f, 0x2f, 0xc0, 0x77, 0x17,
	0x92, 0xad, 0x49, 0xd3, 0xd9, 0x07, 0x81, 0x16, 0x3f, 0xfc, 0xa7, 0x41, 0x85, 0xf9, 0xbd, 0x73,
	0xd6, 0x3b, 0xa5, 0xa5, 0x9b, 0x0f, 0x02, 0xea, 0x24, 0x6f, 0xf2, 0x56, 0xf0, 0x33, 0xcc, 0xb9,
	0x8a, 0xc1, 0x41, 0x03, 0xb8, 0xd9, 0x52, 0x47, 0xba, 0x52, 0x24, 0x4e, 0x83, 0xbb, 0x02, 0xe4,
	0xd9, 0x8e, 0xd7, 0xe6, 0x06, 0xc3, 0xa8, 0x41, 0x93, 0x9b, 0x71, 0x7a, 0x76, 0x8e, 0x7f, 0xe4,
	0xa3, 0xd2, 0xab, 0x70, 0x9f, 0xe4, 0x0b, 0x37, 0xc0, 0x98, 0x80, 0x16, 0xeb, 0x08, 0x88, 0x87,
	0xaf, 0x31, 0xfb, 0x01, 0x39, 0x04, 0x81, 0xd5, 0xdc, 0x66, 0x6e, 0xdf, 0x2d, 0x42, 0x3d, 0x3c,
	0x3d, 0x02, 0xc7, 0x58, 0x2b, 0xf4, 0xbb, 0x0a, 0x67, 0x5a, 0x36, 0x47, 0x49, 0x5d, 0x2e, 0xc3,
	0x53, 0x4a, 0x5d, 0xd7, 0xe2, 0x23, 0x81, 0x2d, 0x49, 0x78, 0xe9, 0xb5, 0xd7, 0xad, 0xe6, 0x36,
	0xfc, 0x20, 0xd3, 0x4e, 0xcb, 0xb0, 0xaf, 0xf1, 0x6f, 0x43, 0xe6, 0x22, 0x14, 0xb0, 0x4a, 0x83,
	0x81, 0xd5, 0xd3, 0x62, 0xf3, 0x56, 0x46, 0x2e, 0xaa, 0x23, 0xef, 0x8b, 0x4a, 0x78, 0x8b, 0xf2,
	0x5c, 0x79, 0x50, 0x45, 0xc3, 0x05, 0x0b, 0xfe, 0x0a, 0x53, 0xcc, 0xcb, 0x43, 0x6f, 0xe0, 0x50,
	0x4f, 0x7e, 0xd9, 0x83, 0x98, 0x3d, 0x9a, 0xea, 0xab, 0x44, 0x4d, 0x66, 0xf4, 0xff, 0xfd, 0x77,
	0xd4, 0xef, 0x32, 0x09, 0x9c, 0x9f, 0x36, 0x61, 0x35, 0xe7, 0x8f, 0x82, 0x6b, 0x8a, 0x17, 0x94,
	0xe9, 0x63, 0x2a, 0xe3, 0x67, 0xfc, 0xfa, 0xf8, 0x62, 0xc7, 0xc2, 0x3c, 0xcb, 0xef, 0x19, 0x50,
	0x6c, 0x37, 0xb6, 0x78, 0xe6, 0xab, 0x91, 0xf6, 0x82, 0xf1, 0x04, 0x38, 0xb3, 0x8d, 0xf6, 0x1a,
	0x2d, 0xc7, 0x6b, 0xa3, 0x30, 0x08, 0x1d, 0xfe, 0x9c, 0x72, 0xd1, 0x9c, 0xd8, 0x46, 0x7b, 0x2b,
	0x49, 0x2d, 0xfc, 0x9f, 0xec, 0x68, 0xa7, 0x26, 0x73, 0x33, 0x74, 0xe7, 0x7b, 0xb8, 0x33, 0xc4,
	0x27, 0x34, 0x77, 0x43, 0x07, 0xa3, 0x06, 0x4d, 0xd4, 0x13, 0x27, 0xf7, 0x1e, 0xa3, 0x95, 0xf3,
	0xac, 0x2e, 0xbe, 0x24, 0xca, 0x07, 0xbc, 0xcf, 0x93, 0x98, 0x5a, 0x2b, 0x92, 0xa9, 0x95, 0x2c,
	0xe1, 0x56, 0x0f, 0x63, 0xdf, 0x4b, 0x8c, 0xb0, 0x35, 0x56, 0xb1, 0x6a, 0xc3, 0x7f, 0xc9, 0x4e,
	0x5f, 0x32, 0x6b, 0x9b, 0x62, 0x93, 0xdc, 0x7f, 0x47, 0x9f, 0xf3, 0x3d, 0xd4, 0x45, 0x43, 0x7a,
	0x81, 0xb7, 0x42, 0x8a, 0xab, 0xf6, 0xe1, 0xdc, 0x0a, 0xef, 0x05, 0xf5, 0xd6, 0xae, 0x2d, 0x05,
	0x1e, 0x95, 0xcd, 0x5a, 0x6b, 0xd7, 0x66, 0x61, 0x47, 0x21, 0xbd, 0x8f, 0x62, 0xf0, 0x69, 0x40,
	0x12, 0x99, 0x80, 0xae, 0xa8, 0x43, 0x99, 0x9d, 0xe6, 0x8f, 0x27, 0xf0, 0xc7, 0x79, 0x92, 0x31,
	0x5d, 0x64, 0x85, 0xf3, 0xae, 0xbb, 0x14, 0x5a, 0x2d, 0x0d, 0x1a, 0x7b, 0x42, 0x10, 0x1f, 0xcc,
	0xf4, 0xcf, 0x58, 0x60, 0x7d, 0x8e, 0x87, 0x7d, 0x1f, 0xab, 0xb3, 0x30, 0xb6, 0x9a, 0x9d, 0x78,
	0x27, 0xc6, 0x65, 0xf8, 0x21, 0x46, 0x96, 0x12, 0xb0, 0x44, 0x0a, 0x12, 0xac, 0x43, 0x2b, 0xc3,
	0x7d, 0xcd, 0x8b, 0x07, 0xf8, 0x9a, 0xf7, 0x89, 0x3c, 0xfd, 0x64, 0x41, 0x5d, 0x92, 0x38, 0xe5,
	0xc7, 0x69, 0xda, 0xc8, 0xf0, 0x4f, 0x52, 0x14, 0x46, 0x73, 0x22, 0x90, 0x41, 0x9f, 0xf1, 0xca,
	0xf7, 0x8e, 0xee, 0xf3, 0x1c, 0xde, 0xfd, 0x00, 0xbc, 0xad, 0x17, 0x61, 0xb6, 0x09, 0xb9, 0x45,
	0xaf, 0x4e, 0x6a, 0x16, 0x49, 0x05, 0x7b, 0xc5, 0x7d, 0xc7, 0xdf, 0x46, 0xdc, 0x96, 0xc7, 0x4b,
	0xf0, 0x97, 0x73, 0x17, 0x44, 0x5f, 0x30, 0x4e, 0x5f, 0x5f, 0x36, 0x0e, 0x4d, 0x49, 0x86, 0x26,
	0xe3, 0x98, 0xfc, 0x11, 0xf6, 0x52, 0x42, 0x0a, 0xba, 0x0d, 0xb2, 0xcd, 0x7b, 0x6e, 0xec, 0x71,
	0x17, 0x1d, 0xdf, 0x92, 0xa4, 0x7d, 0xc0, 0xf7, 0x68, 0xe4, 0x72, 0x02, 0x9f, 0x13, 0x35, 0xad,
	0xd0, 0xd6, 0x79, 0xb1, 0xf6, 0xdb, 0xd1, 0xf0, 0x97, 0x52, 0x9b, 0x94, 0xa6, 0x3d, 0xe8, 0x58,
	0xba, 0x12, 0x95, 0x0c, 0x8a, 0x91, 0xfc, 0xfc, 0x24, 0xbf, 0xd7, 0x0f, 0x38, 0x3d, 0x39, 0x4a,
	0xf4, 0xdc, 0x57, 0x17, 0x41, 0xcd, 0x21, 0x17, 0x69, 0xd7, 0xf1, 0xf2, 0x63, 0x38, 0xaa, 0x4e,
	0x44, 0x01, 0x86, 0xdf, 0x61, 0x6f, 0x9d, 0x64, 0xa6, 0xb3, 0x84, 0x5a, 0x56, 0xcf, 0x55, 0xd2,
	0x54, 0x1c, 0x1f, 0xe6, 0x7f, 0x02, 0x8c, 0x2b, 0xb9, 0x34, 0xf8, 0x8c, 0xf7, 0xc9, 0xa0, 0x31,
	0x26, 0x67, 0xd0, 0x10, 0xe9, 0x8e, 0x32, 0x93, 0xd2, 0x94, 0x66, 0xa1, 0xef, 0x1a, 0x1d, 0x32,
	0x9d, 0xc2, 0xcf, 0xf5, 0x01, 0x53, 0x53, 0x4a, 0x85, 0xbe, 0x60, 0xe6, 0x5f, 0x60, 0xdf, 0x2d,
	0xd2, 0x17, 0xf9, 0x14, 0x68, 0x98, 0xcf, 0xc4, 0x82, 0x8f, 0x87, 0xec, 0x01, 0x7c, 0x3f, 0x00,
	0x9e, 0xdf, 0xd8, 0x45, 0x5b, 0x41, 0xe2, 0x0c, 0x58, 0xf7, 0xfc, 0x17, 0x59, 0x85, 0x71, 0x49,
	0x72, 0xf3, 0x4c, 0xbd, 0x98, 0xb1, 0xe0, 0x73, 0x20, 0x39, 0x84, 0xab, 0x4b, 0xd4, 0xe9, 0x53,
	0x92, 0xc7, 0x2b, 0xaa, 0x39, 0x68, 0x16, 0x8c, 0x85, 0x28, 0x70, 0xf7, 0x1a, 0x5d, 0x2b, 0xdc,
	0xee, 0x05, 0x3c, 0x27, 0xce, 0x9d, 0xf2, 0x3b, 0x92, 0xee, 0xde, 0x75, 0xfa, 0xcd, 0x1c, 0x0d,
	0x93, 0x82, 0x62, 0x47, 0xaa, 0x0d, 0x66, 0x47, 0x32, 0x20, 0x18, 0x8f, 0xb0, 0x1f, 0x34, 0xda,
	0xc8, 0x6f, 0xb8, 0xce, 0x0e, 0xe2, 0x8e, 0x23, 0xa3, 0xa4, 0xf2, 0x39, 0xe4, 0xaf, 0x39, 0x3b,
	0xf4, 0xd1, 0xb8, 0x2e, 0xb2, 0x1d, 0x8b, 0x67, 0x99, 0x3c, 0x97, 0x0e, 0xbc, 0xb4, 0x1d, 0xcb,
	0x64, 0x2d, 0x54, 0x9f, 0xa6, 0xd1, 0xc1, 0x7c, 0x9a, 0xe0, 0x0f, 0x8b, 0x2a, 0x7b, 0x4d, 0xd6,
	0xf5, 0x64, 0x97, 0x73, 0x50, 0x61, 0x22, 0xe5, 0xce, 0x2d, 0x2f, 0x6a, 0x75, 0xff, 0x45, 0xad,
	0xdd, 0xce, 0xa2, 0xd6, 0x6f, 0x77, 0x51, 0xc1, 0x3e, 0x8b, 0x3a, 0x7a, 0xb8, 0x45, 0x1d, 0x1b,
	0xd0, 0x51, 0xed, 0x11, 0x30, 0x1e, 0x71, 0x5e, 0x81, 0x05, 0x72, 0x8f, 0x53, 0x2c, 0x8d, 0x89,
	0xca, 0x25, 0x0b, 0xd3, 0x14, 0xb8, 0x8a, 0x6c, 0xcc, 0x5d, 0x7e, 0x34, 0x8a, 0x26, 0x7d, 0x49,
	0xcc, 0xa0, 0x1e, 0x2a, 0xaf, 0xa4, 0x64, 0xbf, 0x96, 0xb5, 0x83, 0xb8, 0x84, 0xa1, 0xe3, 0xba,
	0x49, 0x6c, 0xe7, 0xfd, 0x5e, 0xfd, 0x20, 0xfb, 0x8a, 0xbe, 0x67, 0xd8, 0xda, 0xef, 0x3d, 0x43,
	0xf2, 0x11, 0x7e, 0x3e, 0xc5, 0x50, 0xb6, 0xfc, 0x70, 0xd7, 0x0a, 0xf5, 0x05, 0x47, 0x1c, 0x96,
	0x53, 0x13, 0xc7, 0xe2, 0x5e, 0x50, 0x0f, 0x2d, 0xcf, 0xf6, 0xbb, 0xc9, 0xeb, 0xf9, 0x35, 0x56,
	0xb1, 0x6a, 0xc3, 0xb7, 0x17, 0x55, 0xe9, 0x54, 0x05, 0x3a, 0x3a, 0xee, 0x90, 0x8e, 0x83, 0x5c,
	0x29, 0x21, 0x18, 0xdf, 0x75, 0x70, 0xa7, 0xd1, 0xdd, 0x6b, 0x44, 0x4d, 0x3f, 0x14, 0x0e, 0x7c,
	0xa3, 0xa4, 0xf2, 0xfa, 0xde, 0x06, 0xa9, 0x32, 0x9e, 0x01, 0x75, 0xaa, 0xa1, 0xa4, 0xc8, 0xaa,
	0xf6, 0x45, 0x56, 0x8d, 0x34, 0x5a, 0x4f, 0x10, 0x56, 0x13, 0xac, 0xad, 0x8a, 0xb0, 0x3a, 0x4d,
	0x2a, 0x1f, 0x23, 0x8c, 0xf0, 0x59, 0xd8, 0x67, 0x7d, 0x83, 0xbe, 0x7d, 0x57, 0xb0, 0x4f, 0x7b,
	0xce, 0x1c, 0xc3, 0xd1, 0x9c, 0x63, 0xb8, 0xa7, 0x6e, 0xf1, 0x36, 0xc2, 0xf3, 0x34, 0x37, 0x86,
	0x0e, 0x8e, 0x4a, 0xcd, 0xfb, 0x5e, 0x4c, 0xe7, 0x7d, 0xff, 0x19, 0xaa, 0x41, 0x4c, 0x0d, 0xad,
	0x4b, 0x49, 0xf0, 0x92, 0x7a, 0x1c, 0x58, 0xe7, 0xfa, 0xd4, 0x03, 0x79, 0x56, 0xc4, 0x7f, 0x93,
	0xd2, 0x4b, 0x90, 0x31, 0xc3, 0x66, 0xc7, 0xd9, 0x41, 0xf6, 0xb0, 0xf5, 0x12, 0x77, 0x82, 0x72,
	0xd7, 0x8a, 0xb6, 0x85, 0x43, 0x2a, 0x2b, 0xa8, 0xb9, 0x36, 0xf8, 0xd9, 0x8b, 0x73, 0x6d, 0xe4,
	0x86, 0xde, 0xc3, 0x5f, 0xcc, 0x99, 0x03, 0x57, 0x70, 0xe8, 0x9b, 0xc3, 0xb4, 0xb8, 0x7f, 0x8a,
	0xa9, 0x94, 0x76, 0x72, 0x78, 0x26, 0x11, 0x33, 0x93, 0x8b, 0x08, 0x7e, 0x78, 0x44, 0x65, 0x00,
	0xdb, 0x2c, 0x3b, 0xae, 0xe5, 0xba, 0xe4, 0x80, 0xce, 0xd3, 0x04, 0xc4, 0xc3, 0xc2, 0xae, 0x01,
	0x4a, 0x6d, 0x11, 0x14, 0x55, 0x33, 0xe9, 0xff, 0x47, 0xd5, 0x39, 0x1a, 0x3c, 0x7d, 0x71, 0x95,
	0xea, 0x61, 0xe9, 0xff, 0x4a, 0x56, 0xba, 0xda, 0x21, 0xb3, 0xd2, 0xb5, 0xa9, 0xa1, 0x59, 0xc6,
	0x8e, 0xa6, 0x33, 0x3c, 0x11, 0x47, 0x4b, 0x30, 0xc9, 0xfb, 0x8b, 0x85, 0xcc, 0xc1, 0x5a, 0xf4,
	0xbb, 0x5d, 0xdf, 0xd3, 0x34, 0xde, 0xa1, 0xfc, 0xaa, 0xfa, 0x6b, 0x6a, 0x64, 0x65, 0x28, 0xdf,
	0xda, 0x1f, 0x2a, 0x64, 0x48, 0xdd, 0x52, 0x47, 0x97, 0x57, 0xc1, 0x24, 0xa8, 0xaa, 0x36, 0x29,
	0x51, 0x24, 0x54, 0x98, 0xd3, 0x73, 0x17, 0x79, 0x6d, 0x2c, 0x5c, 0x45, 0xc6, 0x58, 0xe5, 0x1a,
	0xad, 0x83, 0x0d, 0x95, 0x17, 0x8a, 0x93, 0x25, 0xb1, 0x34, 0x1a, 0x1a, 0xc8, 0x61, 0x33, 0x73,
	0x7a, 0xd8, 0x00, 0x37, 0x3d, 0x1a, 0xe4, 0x6f, 0x85, 0xdb, 0x1a, 0x06, 0xf9, 0xd6, 0x88, 0xaa,
	0x01, 0xd5, 0x99, 0xf3, 0xa9, 0x6f, 0xac, 0x16, 0xba, 0xd5, 0x74, 0x7b, 0x36, 0x6a, 0x04, 0x34,
	0x18, 0x54, 0xc4, 0x6a, 0xf1, 0x5a, 0x16, 0x21, 0x7a, 0x70, 0x5e, 0x21, 0x85, 0x52, 0x56, 0x52,
	0x59, 0x89, 0x66, 0xe2, 0x5f, 0x1f, 0x70, 0xa9, 0xf3, 0x1e, 0xd7, 0xb9, 0x7e, 0x86, 0xed, 0xc1,
	0x5a, 0x9e, 0x73, 0x7d, 0x3d, 0xb9, 0x36, 0x54, 0x07, 0x53, 0x90, 0x72, 0x30, 0xfd, 0x44, 0x21,
	0x67, 0xe1, 0x44, 0x8a, 0x80, 0x63, 0x67, 0xee, 0x12, 0x62, 0x56, 0x92, 0x63, 0xd5, 0x5e, 0x2d,
	0xa8, 0xea, 0x38, 0x02, 0x24, 0x67, 0x61, 0x17, 0xf6, 0x68, 0x1e, 0x7a, 0x1d, 0x91, 0x4d, 0x51,
	0xc7, 0x9a, 0xbe, 0x72, 0x95, 0x3f, 0x37, 0xc2, 0x4b, 0xc6, 0x39, 0x50, 0x8e, 0x9c, 0x97, 0x51,
	0x43, 0x38, 0x60, 0x91, 0x82, 0xfa, 0xa2, 0x59, 0x39, 0xf5, 0xec, 0xda, 0xcf, 0x66, 0x8e, 0xda,
	0x72, 0xd7, 0x7f, 0x9b, 0xf3, 0x16, 0xb4, 0x47, 0x08, 0xe9, 0x90, 0x4d, 0x88, 0x44, 0xa4, 0x78,
	0x7c, 0xbf, 0xe1, 0x75, 0x1a, 0xcb, 0xf7, 0xb5, 0x65, 0xa6, 0x2d, 0xe9, 0xa5, 0x8c, 0x25, 0x1d,
	0xbe, 0xb7, 0x00, 0x1e, 0xdb, 0x0f, 0x56, 0x8d, 0xf6, 0xde, 0xfb, 0x01, 0x88, 0x41, 0x15, 0x21,
	0x89, 0x75, 0x01, 0x6b, 0xc4, 0xfd, 0xbb, 0x33, 0x80, 0xdc, 0x34, 0xd7, 0x86, 0xbc, 0x5c, 0x51,
	0x66, 0xb3, 0xac, 0x58, 0x5a, 0xd9, 0xb9, 0x3c, 0x3e, 0x72, 0x27, 0xc3, 0x82, 0xad, 0x20, 0x9a,
	0x4d, 0x60, 0xc8, 0xe3, 0x46, 0x19, 0x2c, 0xf3, 0x3c, 0x79, 0x78, 0x88, 0xea, 0xf4, 0xaf, 0x67,
	0x69, 0xc7, 0x73, 0x56, 0x17, 0xbd, 0xc9, 0x69, 0x77, 0xa8, 0x40, 0x15, 0x9d, 0x9c, 0xe8, 0x2a,
	0xb1, 0x22, 0xe5, 0x03, 0x6d, 0x57, 0x5f, 0xc8, 0xde, 0x7d, 0xc7, 0x6e, 0xb8, 0x3a, 0xed, 0xb9,
	0xf5, 0xe2, 0x5d, 0x07, 0xa4, 0x5d, 0xf7, 0xca, 0x48, 0x66, 0xbb, 0xc7, 0x8a, 0x5d, 0x13, 0x45,
	0x3d, 0x17, 0x0f, 0x8d, 0x7b, 0x78, 0x14, 0x14, 0xb7, 0x7c, 0xbc, 0x8f, 0xc5, 0x82, 0x7c, 0x1e,
	0x98, 0xd3, 0x57, 0x54, 0x65, 0x95, 0xc1, 0x63, 0x3a, 0xe9, 0x8b, 0x26, 0xe2, 0xc1, 0x07, 0x5a,
	0x90, 0x22, 0xf6, 0xf8, 0x1b, 0xaf, 0x3c, 0x7f, 0xdf, 0xd7, 0x53, 0x76, 0xb9, 0x18, 0x57, 0xba,
	0x8f, 0xcc, 0x25, 0x49, 0x39, 0x35, 0x98, 0x4e, 0xfb, 0x50, 0x86, 0xde, 0x94, 0x53, 0x42, 0x1b,
	0xe1, 0xeb, 0x56, 0xb4, 0x3d, 0x5c, 0xea, 0xf6, 0x21, 0x16, 0x30, 0xa7, 0x0c, 0xca, 0x75, 0xa8,
	0xb6, 0x83, 0x8f, 0xd5, 0x5b, 0x31, 0x4d, 0x69, 0xe0, 0x6b, 0x59, 0xd1, 0x44, 0x9f, 0x0e, 0x8c,
	0xa6, 0x59, 0xbc, 0x3c, 0x3d, 0x3d, 0xbd, 0x32, 0x3f, 0x7b, 0x99, 0x86, 0x63, 0xf1, 0x34, 0x8b,
	0x49, 0x1d, 0x4b, 0xb3, 0x78, 0x75, 0x66, 0xf1, 0xea, 0xd5, 0x2b, 0x97, 0xae, 0x5e, 0xbb, 0xc2,
	0x53, 0xda, 0xf5, 0x4f, 0xb3, 0x98, 0x34, 0x85, 0x5f, 0x2b, 0x64, 0xee, 0x48, 0x01, 0xfb, 0x0b,
	0x0e, 0xda, 0x3d, 0x39, 0x23, 0xb1, 0xf1, 0x7a, 0x50, 0x77, 0xbc, 0x66, 0x88, 0xe8, 0xf3, 0xca,
	0xb9, 0x86, 0xc6, 0xe4, 0x3b, 0xfc, 0x15, 0x96, 0x8a, 0x48, 0x9e, 0xc6, 0x0d, 0xd7, 0xd6, 0x7f,
	0xf1, 0x1e, 0x2a, 0x44, 0x3f, 0xde, 0xc8, 0x65, 0x69, 0x23, 0xbf, 0xa3, 0x90, 0xb9, 0x69, 0x6e,
	0xd0, 0x03, 0x79, 0x7c, 0xa8, 0x86, 0xff, 0x25, 0xab, 0x05, 0x20, 0x5f, 0xb5, 0x49, 0x7b, 0x6f,
	0x04, 0x67, 0x68, 0xc0, 0xdb, 0xf4, 0xd2, 0xdc, 0xec, 0xec, 0xd5, 0x85, 0x39, 0xbe, 0x6d, 0xf3,
	0x41, 0x4a, 0x37, 0x35, 0x16, 0xf8, 0xaf, 0x97, 0x2f, 0xcf, 0x5e, 0x5a, 0x58, 0x5c, 0x59, 0x8a,
	0x37, 0x74, 0x2a, 0x70, 0x8e, 0x81, 0x2b, 0xf5, 0x91, 0xfc, 0x00, 0xbe, 0xa7, 0x90, 0xa1, 0x51,
	0xa4, 0xa1, 0xbe, 0x97, 0xec, 0x07, 0x45, 0x75, 0x56, 0x5e, 0x61, 0x42, 0xad, 0x36, 0x5c, 0xef,
	0x1b, 0xe0, 0xf8, 0xe1, 0x9c, 0x85, 0xf6, 0x5d, 0x57, 0xdb, 0xc5, 0x7c, 0x44, 0xc9, 0xf3, 0xcf,
	0x0a, 0x19, 0x1d, 0x32, 0x01, 0xef, 0x05, 0x1f, 0xa3, 0x21, 0x66, 0x01, 0x18, 0xc8, 0x7a, 0x14,
	0x3b, 0xd5, 0x08, 0x76, 0x92, 0x9c, 0x7c, 0x96, 0x38, 0x88, 0xbd, 0x46, 0xcc, 0x4b, 0x12, 0x45,
	0xa8, 0xca, 0x97, 0x7d, 0xbe, 0x06, 0x01, 0xfe, 0xf3, 0xec, 0x35, 0xc6, 0x5c, 0xdf, 0x44, 0x26,
	0xf2, 0xe8, 0x58, 0x7d, 0x50, 0x06, 0xa4, 0x59, 0xff, 0x34, 0xcb, 0xe5, 0x9f, 0xb8, 0xc3, 0x5e,
	0x2e, 0xa0, 0xdf, 0xcc, 0xb2, 0xf1, 0xda, 0xd2, 0x0d, 0x1d, 0x6d, 0xaf, 0x67, 0xb5, 0xf9, 0xfb,
	0x70, 0xf7, 0x95, 0x03, 0xb8, 0xfb, 0x6a, 0x5f, 0xee, 0xbe, 0x96, 0xcf, 0xdd, 0xd7, 0xf3, 0xb9,
	0x7b, 0x90, 0xc7, 0xdd, 0x8f, 0x4a, 0xf8, 0xf4, 0x33, 0xe7, 0x93, 0xe6, 0x3f, 0x78, 0xce, 0x69,
	0x0d, 0x89, 0xcd, 0xfb, 0x48, 0xd6, 0x80, 0x11, 0xfb, 0xad, 0x1d, 0xbb, 0x40, 0x96, 0x17, 0x1d,
	0xf8, 0xcb, 0x59, 0x8d, 0xde, 0x29, 0x72, 0xac, 0xfb, 0x72, 0xf6, 0xa0, 0x6e, 0xd0, 0xe4, 0x08,
	0x34, 0x92, 0x44, 0xcb, 0x41, 0x1d, 0x14, 0xb4, 0x29, 0x50, 0x65, 0xd9, 0xa3, 0x45, 0x86, 0xe5,
	0x7b, 0xd2, 0xce, 0x0f, 0x22, 0xcb, 0xb4, 0x68, 0x97, 0x76, 0x3c, 0x26, 0xc0, 0x07, 0xae, 0x83,
	0x4d, 0xcb, 0xd3, 0x81, 0x54, 0xc2, 0xea, 0xa6, 0xd9, 0xf4, 0x0d, 0x6c, 0xe1, 0x48, 0x8b, 0x1e,
	0xea, 0x10, 0x44, 0x37, 0x27, 0x0b, 0x10, 0xb5, 0x27, 0x85, 0xdb, 0xdc, 0x68, 0x4d, 0xff, 0xa7,
	0x39, 0xbe, 0xd8, 0xbb, 0x93, 0xcc, 0xcb, 0x48, 0x3c, 0x32, 0xf9, 0x8b, 0x29, 0xcf, 0xae, 0x36,
	0x92, 0x52, 0xa2, 0x1e, 0x7d, 0x22, 0x6a, 0x06, 0xd6, 0xe2, 0x21, 0x32, 0xb0, 0xe6, 0xe2, 0x57,
	0xd7, 0xfd, 0x70, 0x01, 0xd4, 0x50, 0xd7, 0xc7, 0x4e, 0x33, 0x0e, 0x68, 0x8f, 0xcb, 0x22, 0x25,
	0xd4, 0xfc, 0xf2, 0xf4, 0xf4, 0xf2, 0xa5, 0xcb, 0x57, 0xd4, 0x94, 0x50, 0x49, 0xad, 0xf1, 0x28,
	0x18, 0x27, 0x35, 0x97, 0x67, 0x96, 0x2e, 0xaf, 0x4c, 0x2f, 0xf2, 0x97, 0x68, 0xca, 0xa6, 0x5a,
	0x09, 0x3b, 0x19, 0xb5, 0x29, 0x4f, 0x79, 0x20, 0x98, 0x36, 0x6d, 0x56, 0x9d, 0xbf, 0x3f, 0x92,
	0x39, 0xad, 0xdc, 0xa0, 0x83, 0xbc, 0x63, 0xe6, 0x05, 0xf6, 0xd5, 0x3d, 0xa9, 0x97, 0x4f, 0xb9,
	0xef, 0xe5, 0x53, 0xc9, 0xbf, 0x7c, 0xaa, 0xf9, 0x97, 0x4f, 0x4d, 0x7e, 0xb6, 0xe1, 0xef, 0x66,
	0xee, 0xed, 0x17, 0xd1, 0xd6, 0xba, 0x16, 0xeb, 0xc8, 0x59, 0x50, 0xec, 0x85, 0x22, 0x48, 0x9f,
	0xfc, 0x9b, 0x4b, 0xd7, 0xbf, 0x96, 0xa5, 0x9c, 0x1c, 0x82, 0xf5, 0x10, 0xed, 0x38, 0x68, 0x57,
	0x8b, 0x91, 0x51, 0xb8, 0x98, 0x15, 0x55, 0x17, 0xb3, 0x7c, 0xa2, 0x70, 0x3b, 0xc9, 0x25, 0xde,
	0x97, 0xba, 0x3f, 0x69, 0x3c, 0xa7, 0x24, 0xf8, 0x2c, 0x58, 0xe1, 0xb1, 0x46, 0x75, 0x5e, 0x48,
	0x03, 0x63, 0x6a, 0x4c, 0xf7, 0x3d, 0x28, 0x1c, 0x29, 0x33, 0x00, 0x4f, 0x41, 0x35, 0xe4, 0x28,
	0x9a, 0x1f, 0xa4, 0x36, 0x94, 0xe3, 0x45, 0xd8, 0x8a, 0x7d, 0x58, 0x4e, 0x96, 0x54, 0x1b, 0x4f,
	0x82, 0x9a, 0xc5, 0x7d, 0x5b, 0xf2, 0xfd, 0xd2, 0xe2, 0xcf, 0xa4, 0xa9, 0xed, 0x44, 0x2c, 0x23,
	0x51, 0xae, 0x16, 0x26, 0xfe, 0x4c, 0xb8, 0x0f, 0x05, 0xd1, 0x5d, 0x2b, 0xdc, 0x96, 0xed, 0xd4,
	0x43, 0x74, 0x08, 0xeb, 0xd1, 0x01, 0x84, 0x43, 0x18, 0x2b, 0x19, 0x6f, 0x50, 0x54, 0xbf, 0xfd,
	0xb5, 0x07, 0x62, 0x97, 0x28, 0xb7, 0x57, 0xd7, 0x69, 0x87, 0xda, 0x02, 0x80, 0xfa, 0xda, 0x4f,
	0x7e, 0x2b, 0x75, 0x44, 0x08, 0xdc, 0x1a, 0x5f, 0x11, 0x3a, 0xaa, 0xd0, 0xf2, 0x00, 0x18, 0x25,
	0x10, 0x35, 0x38, 0x25, 0xe7, 0xa4, 0x9f, 0xf9, 0x1c, 0xdc, 0x5a, 0xb5, 0xe1, 0x67, 0x53, 0xdc,
	0x30, 0xf9, 0x12, 0x87, 0x2d, 0x6a, 0x7c, 0x20, 0xe1, 0x90, 0x51, 0x92, 0xe7, 0x41, 0x8d, 0x40,
	0x4c, 0x65, 0x29, 0x9e, 0x8a, 0xba, 0x6b, 0xdd, 0xa2, 0x0e, 0x73, 0x51, 0x16, 0x60, 0xfd, 0x5a,
	0xc2, 0xc4, 0xeb, 0xa6, 0x48, 0xd9, 0xf2, 0xcf, 0xa5, 0x38, 0x23, 0xad, 0xcf, 0x47, 0x1c, 0x31,
	0x2e, 0xaa, 0xcf, 0xdb, 0x2e, 0xf0, 0x9d, 0x29, 0xdd, 0xcc, 0x89, 0xf0, 0x25, 0x30, 0x54, 0xaf,
	0xb3, 0xa1, 0x3c, 0x69, 0x91, 0xf6, 0x91, 0xda, 0x51, 0xa9, 0x58, 0x88, 0x9a, 0x88, 0x50, 0x42,
	0x7d, 0xd2, 0x5d, 0xb2, 0x12, 0x45, 0xf9, 0xfd, 0x8e, 0x9e, 0xca, 0xd7, 0x8b, 0x71, 0xdf, 0xda,
	0x43, 0x3d, 0x3d, 0xee, 0xd4, 0x64, 0xd0, 0x97, 0xb0, 0x20, 0x9e, 0x04, 0x86, 0xb7, 0xe2, 0x08,
	0xfe, 0xfa, 0x48, 0xfa, 0x48, 0xf8, 0xa1, 0x8d, 0x42, 0xcd, 0x6a, 0xca, 0xbe, 0x8e, 0x8f, 0x2d,
	0x3f, 0x6c, 0x0a, 0xdf, 0x3c, 0x56, 0x30, 0xde, 0x08, 0xce, 0x50, 0x10, 0xe6, 0xae, 0xcc, 0xad,
	0xac, 0x5c, 0xbd, 0xcc, 0x9e, 0x39, 0xee, 0xab, 0x3e, 0x4e, 0x35, 0x35, 0x16, 0xf8, 0xaf, 0xaf,
	0x2c, 0x5c, 0x99, 0x5a, 0xba, 0x3a, 0xb3, 0x72, 0xed, 0xca, 0x64, 0xe5, 0x20, 0xf5, 0x71, 0xea,
	0x07, 0xaa, 0x52, 0xb5, 0x9a, 0x52, 0xaa, 0x7e, 0x32, 0xa5, 0xc3, 0xe3, 0x08, 0x4b, 0xae, 0xda,
	0x63, 0xf6, 0x13, 0xbd, 0x13, 0x94, 0x29, 0x00, 0x14, 0x49, 0x45, 0x93, 0x15, 0xc8, 0xcd, 0x62,
	0xa8, 0x50, 0x6a, 0xc9, 0xf6, 0x72, 0xdb, 0xe6, 0x9c, 0xa7, 0x40, 0x25, 0x44, 0x56, 0xe4, 0x7b,
	0x99, 0x7c, 0xfb, 0x8c, 0x25, 0x34, 0xe9, 0x47, 0x93, 0x37, 0x82, 0xff, 0xa4, 0x90, 0x3e, 0xf9,
	0xa4, 0x51, 0x4c, 0xec, 0x75, 0xbd, 0x17, 0x73, 0xb8, 0x8b, 0x25, 0x63, 0xbc, 0x09, 0x4f, 0x80,
	0x9b, 0x4d, 0xeb, 0x78, 0x42, 0xf4, 0x52, 0x0f, 0x45, 0x5a, 0xd3, 0x12, 0x1c, 0xca, 0x8b, 0x53,
	0xf1, 0x78, 0xe7, 0xa2, 0x63, 0xec, 0xf1, 0x4e, 0xf3, 0x15, 0x58, 0x74, 0xc9, 0xc7, 0xcc, 0x91,
	0xf6, 0xbc, 0xc8, 0x07, 0x9b, 0x86, 0x5e, 0x5b, 0x1e, 0x82, 0xa3, 0x6b, 0x69, 0x93, 0x64, 0x02,
	0xe5, 0x54, 0x32, 0x81, 0x57, 0x47, 0x68, 0xa2, 0x9c, 0x18, 0xf6, 0xc8, 0xda, 0x41, 0xd4, 0xe1,
	0xfd, 0x84, 0x62, 0x9d, 0x1e, 0x03, 0x67, 0x58, 0x64, 0x12, 0xf6, 0x1b, 0x7c, 0x32, 0x65, 0xee,
	0x9d, 0x4a, 0xaa, 0x37, 0xfd, 0xeb, 0x74, 0x4e, 0x02, 0x25, 0x95, 0x03, 0x50, 0xd2, 0x3f, 0x04,
	0xea, 0x36, 0xc2, 0xd3, 0xe0, 0xa7, 0x59, 0x6e, 0x23, 0x05, 0x59, 0xcf, 0x39, 0xad, 0x63, 0x8e,
	0xbc, 0x89, 0xf6, 0x8b, 0xbc, 0x21, 0x1f, 0xe1, 0x1f, 0xa4, 0x8e, 0x13, 0xa9, 0x54, 0x8c, 0x1b,
	0x27, 0x61, 0xdb, 0x78, 0x5c, 0x0a, 0x4a, 0x1c, 0x6c, 0x8e, 0x95, 0xfd, 0xe6, 0xf8, 0x17, 0x25,
	0xf5, 0x2e, 0xd0, 0x95, 0x30, 0xf7, 0x68, 0x16, 0x36, 0xf5, 0x75, 0xe3, 0x1f, 0x07, 0x67, 0xa9,
	0x47, 0xa3, 0x63, 0xcf, 0xcc, 0x2d, 0xcf, 0x2d, 0xcf, 0x5f, 0x9a, 0x9d, 0xca, 0xdf, 0xb1, 0x94,
	0xf8, 0x9c, 0x21, 0x6d, 0x57, 0x93, 0xa6, 0xc6, 0x33, 0xf1, 0xf3, 0x86, 0xd5, 0x54, 0x7c, 0x6c,
	0x4a, 0xdb, 0x2c, 0xde, 0x34, 0x24, 0x32, 0x82, 0xe3, 0x31, 0x19, 0xa1, 0xc6, 0x65, 0x04, 0xc7,
	0xa3, 0xc6, 0x16, 0x59, 0x7c, 0xa8, 0x2b, 0xe2, 0x83, 0xaa, 0x27, 0x03, 0xfb, 0xea, 0xc9, 0x46,
	0xfb, 0xea, 0xc9, 0xc6, 0xf2, 0xf5, 0x64, 0xe3, 0xf9, 0x7a, 0xb2, 0x09, 0xd9, 0x48, 0x93, 0x70,
	0xeb, 0x67, 0x14, 0xff, 0x83, 0xc7, 0xc0, 0x84, 0x23, 0x5e, 0x87, 0x6d, 0xf8, 0x9e, 0xbb, 0x37,
	0x79, 0x96, 0x79, 0x52, 0xc7, 0xb5, 0x37, 0x3c, 0x77, 0x2f, 0x56, 0x54, 0xdc, 0x21, 0x39, 0x30,
	0xdf, 0x07, 0x00, 0xf6, 0x03, 0x41, 0x40, 0x0c, 0x36, 0x27, 0xec, 0x07, 0x8c, 0x78, 0xfc, 0x35,
	0x70, 0x07, 0x5f, 0x96, 0xc5, 0x99, 0x2b, 0xd3, 0xcb, 0xcb, 0x8b, 0x53, 0xd3, 0x97, 0x26, 0xcf,
	0xf5, 0x5d, 0xd9, 0xb3, 0x6c, 0x5d, 0x92, 0xb6, 0x69, 0xcd, 0x1e, 0xdb, 0x7a, 0x7a, 0x0c, 0x48,
	0x6a, 0xbe, 0xe6, 0x04, 0x35, 0x25, 0x45, 0x90, 0xf9, 0xb5, 0xa2, 0x2a, 0xc8, 0x70, 0x08, 0x5c,
	0x7f, 0xcb, 0x72, 0x75, 0xc3, 0x90, 0xb2, 0xe3, 0x95, 0x32, 0x76, 0xbc, 0x94, 0x33, 0x7a, 0x79,
	0x20, 0x67, 0xf4, 0x7d, 0xdd, 0xdb, 0xf3, 0x1d, 0xfb, 0x12, 0x40, 0xc2, 0x64, 0x83, 0xf3, 0x3e,
	0x4d, 0x02, 0x48, 0x7c, 0x74, 0xeb, 0xf2, 0xd1, 0xdd, 0xcf, 0x99, 0x5d, 0x3a, 0x62, 0xa3, 0x87,
	0x3f, 0x62, 0x63, 0xfd, 0x8f, 0xd8, 0xb8, 0x2a, 0xa1, 0x7f, 0x35, 0x4d, 0x90, 0xe9, 0x7a, 0x1d,
	0x03, 0x77, 0xfd, 0x24, 0x38, 0x2b, 0xa2, 0x11, 0x5a, 0x5c, 0x25, 0xc0, 0x09, 0xf3, 0x19, 0x5e,
	0x2f, 0x34, 0x05, 0x29, 0xd2, 0x25, 0x4e, 0x55, 0x45, 0xd2, 0x27, 0xff, 0x8f, 0x94, 0x95, 0x26,
	0x42, 0x9e, 0x1d, 0xbf, 0x18, 0xae, 0x23, 0xb1, 0x5d, 0x3a, 0xed, 0x7d, 0x1e, 0x95, 0x4c, 0x72,
	0xde, 0xa7, 0x98, 0x34, 0x35, 0x2c, 0x51, 0xba, 0xf8, 0xcb, 0xea, 0xc5, 0x1f, 0x87, 0x1a, 0x57,
	0x0e, 0x0a, 0x35, 0x86, 0xff, 0x2d, 0x67, 0xc2, 0x31, 0x0b, 0x7d, 0x02, 0x3a, 0xa0, 0x0c, 0x5b,
	0x2a, 0xcf, 0x58, 0xc4, 0x6f, 0x95, 0xa5, 0xf8, 0xad, 0x78, 0x53, 0x54, 0xf2, 0x83, 0x4d, 0xab,
	0x72, 0xb0, 0x29, 0xfc, 0xf8, 0x48, 0x7a, 0x97, 0x4a, 0xd3, 0x5d, 0x71, 0x5c, 0xf4, 0xa3, 0x30,
	0xe5, 0x67, 0x40, 0xa9, 0xe5, 0xb8, 0x82, 0x79, 0xe8, 0x37, 0x02, 0x99, 0x8d, 0x49, 0x1b, 0x26,
	0x38, 0xaa, 0xe6, 0xe3, 0xa8, 0xa6, 0xe0, 0xe8, 0xeb, 0x29, 0xed, 0xa0, 0x82, 0x23, 0x6d, 0x59,
	0x3c, 0x87, 0x8e, 0x26, 0xf8, 0xab, 0x45, 0x55, 0x16, 0x25, 0xf3, 0x48, 0x39, 0x39, 0x9f, 0xb6,
	0x58, 0xe7, 0x07, 0xc1, 0x28, 0x4d, 0x69, 0xd4, 0xb0, 0x89, 0x7c, 0x22, 0x9e, 0x2a, 0xa1, 0x55,
	0x4c, 0x62, 0x11, 0x4c, 0x5a, 0xf5, 0x00, 0x26, 0x2d, 0x47, 0xc6, 0xa8, 0xe5, 0xc8, 0x18, 0xa9,
	0xb0, 0x67, 0x15, 0xa7, 0xe7, 0x41, 0x8d, 0x3a, 0x46, 0x8b, 0x4b, 0xa5, 0x68, 0x56, 0x69, 0x39,
	0x7e, 0x53, 0x75, 0x94, 0x22, 0x83, 0x30, 0xb4, 0xe7, 0x41, 0xad, 0xe3, 0xd8, 0xa8, 0xb1, 0xe3,
	0x58, 0xf4, 0xca, 0xa8, 0x99, 0x55, 0x52, 0x7e, 0xc1, 0xb1, 0x06, 0x4b, 0x4b, 0xf0, 0xbe, 0x52,
	0x4a, 0x44, 0x43, 0x1e, 0x0b, 0x44, 0xfd, 0xff, 0x7d, 0x81, 0x62, 0x4a, 0x5e, 0x3f, 0x30, 0x69,
	0x84, 0xb2, 0x96, 0x20, 0xb5, 0x96, 0xe9, 0x6c, 0x18, 0xa3, 0x83, 0x66, 0xc3, 0x90, 0x2e, 0x99,
	0xb1, 0xfe, 0xd2, 0xe5, 0xf8, 0x80, 0x79, 0x32, 0x32, 0x9b, 0x61, 0x22, 0x67, 0x33, 0xbc, 0xbd,
	0xa4, 0xaa, 0xdd, 0xd9, 0x66, 0x38, 0xc9, 0xec, 0x24, 0xc9, 0x6e, 0x29, 0xef, 0xb3, 0x5b, 0x2a,
	0x07, 0xed, 0x96, 0x6a, 0xdf, 0xdd, 0x52, 0x3b, 0xfc, 0x6e, 0xa9, 0xe7, 0xec, 0x16, 0x69, 0xb1,
	0x80, 0xba, 0x58, 0xca, 0xe6, 0x18, 0x3d, 0x60, 0x73, 0x8c, 0xdd, 0x4e, 0xaa, 0x14, 0xad, 0x5b,
	0xe0, 0xff, 0x8e, 0xa8, 0xea, 0x26, 0xba, 0x05, 0x7a, 0x2e, 0x76, 0xfe, 0x8a, 0x28, 0xac, 0xda,
	0xc6, 0xb3, 0x60, 0xb4, 0x4b, 0x90, 0xd1, 0x10, 0xa4, 0xa1, 0xa8, 0x64, 0xc2, 0x62, 0x16, 0x64,
	0xc7, 0x6b, 0xbb, 0x88, 0x11, 0x08, 0xd0, 0x4d, 0x50, 0x97, 0x41, 0x3f, 0xc8, 0x41, 0xff, 0x87,
	0x0b, 0xe0, 0xe1, 0x34, 0xfa, 0x4f, 0x91, 0xbb, 0xdc, 0x77, 0x53, 0xe1, 0x9c, 0x0c, 0xbc, 0x10,
	0x21, 0x2f, 0xea, 0xf8, 0xf8, 0x79, 0x1f, 0x3b, 0x2d, 0x87, 0xb9, 0xe5, 0x1e, 0x1f, 0x8c, 0x39,
	0x4b, 0x57, 0x3a, 0xe8, 0xc2, 0x4d, 0x27, 0x66, 0xf9, 0x67, 0x05, 0x35, 0x9f, 0x00, 0x99, 0xd7,
	0x0b, 0x3e, 0x3e, 0xf1, 0x50, 0x63, 0x42, 0x57, 0x98, 0xdb, 0x34, 0xf3, 0x68, 0x19, 0x33, 0x45,
	0x11, 0xfe, 0xef, 0x0c, 0xaf, 0x78, 0x7c, 0x09, 0x22, 0xee, 0x04, 0x65, 0xcb, 0x45, 0xa1, 0x38,
	0xad, 0xac, 0xa0, 0x70, 0x2d, 0x65, 0x95, 0x6b, 0xe9, 0x9f, 0x01, 0x8c, 0x3b, 0x1b, 0x55, 0x13,
	0x67, 0x23, 0x02, 0x91, 0xd5, 0xec, 0xa0, 0x06, 0x76, 0xba, 0x42, 0x10, 0xaf, 0xd3, 0x9a, 0x4d,
	0xa7, 0x8b, 0xe0, 0x37, 0x0a, 0xe0, 0xd1, 0xec, 0xbc, 0xd7, 0x43, 0x44, 0x53, 0xbd, 0xfa, 0xbd,
	0x61, 0x07, 0xd1, 0x4d, 0x82, 0x6a, 0xd4, 0x6b, 0x36, 0x51, 0x24, 0x8c, 0x4a, 0xa2, 0xb8, 0xdf,
	0xfc, 0xef, 0x04, 0x65, 0x14, 0x86, 0x7e, 0xc8, 0x67, 0xcf, 0x0a, 0xf0, 0xcf, 0x32, 0x87, 0x9d,
	0x4c, 0x65, 0xa3, 0xe3, 0x04, 0x81, 0xe3, 0xb5, 0x87, 0x3c, 0x0f, 0x19, 0xda, 0x52, 0x1f, 0x68,
	0xcb, 0x12, 0xb4, 0xc6, 0x02, 0x38, 0x1b, 0x71, 0xd0, 0x1a, 0x62, 0x4f, 0x56, 0x52, 0x8e, 0xaa,
	0x02, 0xf6, 0x1b, 0xf4, 0xbb, 0x79, 0x26, 0x52, 0xca, 0x11, 0x7c, 0x2d, 0x65, 0x09, 0x8c, 0x50,
	0x22, 0x70, 0x6c, 0xee, 0x05, 0x5a, 0x5e, 0x71, 0x3b, 0xb4, 0x78, 0xf3, 0x18, 0xa8, 0x60, 0x3a,
	0x76, 0x1f, 0xbd, 0x37, 0xfb, 0x08, 0x3f, 0x3d, 0x92, 0x56, 0x8b, 0xd1, 0xc8, 0x5d, 0x96, 0x06,
	0x69, 0x48, 0x8b, 0xf4, 0x30, 0x18, 0x43, 0xb6, 0x83, 0x53, 0x2f, 0xf3, 0x8e, 0xca, 0x59, 0xe3,
	0x62, 0x8b, 0x70, 0x59, 0xb6, 0x08, 0x0f, 0x6a, 0xc2, 0x60, 0x04, 0xbe, 0x9a, 0x17, 0x03, 0x5c,
	0x3b, 0xd0, 0x90, 0x75, 0x27, 0x28, 0xb3, 0xbc, 0x50, 0x5c, 0x25, 0x46, 0x0b, 0xf0, 0x2f, 0x46,
	0xd2, 0xc2, 0xdf, 0xb1, 0x05, 0xb8, 0x4e, 0x82, 0x6a, 0xdb, 0x72, 0x5d, 0x14, 0xee, 0x89, 0xb3,
	0xc9, 0x8b, 0xe4, 0x0b, 0x7d, 0xd0, 0x1a, 0x0b, 0x3c, 0x89, 0xa2, 0x72, 0x0e, 0x2a, 0xea, 0x39,
	0x98, 0x05, 0xd5, 0x90, 0x01, 0x3c, 0x59, 0xa5, 0x1b, 0xfd, 0xfe, 0x3e, 0xa1, 0xa1, 0x6c, 0x5a,
	0xa6, 0x68, 0x7d, 0x00, 0x09, 0x23, 0x5c, 0x8b, 0x87, 0x6e, 0x61, 0xa1, 0xf7, 0xae, 0xb3, 0x47,
	0x8c, 0x48, 0x15, 0x57, 0x7c, 0xcf, 0x82, 0x7a, 0xb4, 0xeb, 0xe0, 0x66, 0xa7, 0x11, 0x74, 0x79,
	0xe2, 0xab, 0x0b, 0xd2, 0xd0, 0x1c, 0x99, 0x1b, 0xb4, 0xc9, 0xfa, 0x75, 0xb3, 0xc6, 0x1a, 0xaf,
	0x77, 0xc9, 0x1e, 0x7d, 0x20, 0x17, 0xf7, 0xa7, 0x77, 0xa7, 0x5e, 0x8a, 0xf3, 0x0a, 0xde, 0x46,
	0xe8, 0x6d, 0x75, 0xf0, 0x3d, 0x5a, 0x93, 0xf7, 0xe8, 0x9f, 0x14, 0xd2, 0x52, 0x2f, 0xd6, 0x45,
	0x7e, 0x06, 0xbd, 0xf0, 0xa7, 0x41, 0xc5, 0x6a, 0xc6, 0xef, 0xaa, 0xcb, 0x0b, 0xbc, 0x91, 0x48,
	0x5d, 0xf3, 0xb4, 0x85, 0xc9, 0x5b, 0xf6, 0x49, 0xc9, 0xac, 0xda, 0x23, 0x2a, 0xaa, 0x3d, 0x02,
	0xfe, 0x61, 0x9a, 0xb5, 0xc1, 0x56, 0x48, 0x30, 0x7b, 0xf4, 0x99, 0xf2, 0x70, 0xf2, 0xe2, 0x60,
	0xe1, 0xe4, 0xa5, 0x83, 0x1d, 0xaa, 0xfb, 0xf2, 0x67, 0xe4, 0xc4, 0x50, 0xb8, 0x1b, 0xd4, 0xa5,
	0x5f, 0xbc, 0x98, 0x46, 0xab, 0xd6, 0x49, 0x0d, 0xfc, 0x78, 0xca, 0x93, 0x92, 0xbd, 0x32, 0x19,
	0xa7, 0x02, 0x8e, 0x86, 0x98, 0x5d, 0x51, 0x7a, 0x80, 0xb2, 0xb4, 0xef, 0x03, 0x94, 0xef, 0x1b,
	0x51, 0x43, 0x2c, 0x19, 0x8c, 0xdc, 0xab, 0x46, 0x47, 0xba, 0xe2, 0xbe, 0xb2, 0x95, 0x92, 0x2b,
	0x88, 0x97, 0x8c, 0x67, 0xc1, 0x04, 0x41, 0xfc, 0xcc, 0xf4, 0xb5, 0xb9, 0x85, 0xe5, 0xab, 0xf3,
	0xd4, 0x67, 0xa8, 0xdf, 0x12, 0xa5, 0x5a, 0x1a, 0x3f, 0xc9, 0x7e, 0x3b, 0x3f, 0x3b, 0x33, 0xb5,
	0x3c, 0x7d, 0x65, 0x96, 0x7a, 0x0c, 0xed, 0xef, 0x32, 0x9a, 0x6a, 0x9f, 0x71, 0xe5, 0x67, 0xc8,
	0x38, 0x06, 0xa3, 0xc5, 0x7d, 0xa0, 0xde, 0xf3, 0xb8, 0x6f, 0xb1, 0xd0, 0x37, 0xc4, 0x15, 0xe4,
	0x9e, 0xe0, 0x8e, 0xbc, 0xe2, 0x9e, 0xe0, 0x45, 0xf6, 0x3b, 0xf1, 0xad, 0x22, 0x7e, 0x27, 0xbe,
	0x3e, 0x4b, 0x36, 0xa8, 0xf0, 0x16, 0x16, 0xd7, 0x45, 0x7f, 0xd7, 0x62, 0xb9, 0x31, 0x91, 0xf9,
	0x94, 0x0b, 0x33, 0x86, 0xe6, 0x74, 0x44, 0xa9, 0xbc, 0x37, 0x75, 0xb4, 0x7a, 0x5e, 0xe0, 0x78,
	0xf3, 0xae, 0x7b, 0xec, 0xd2, 0x28, 0xfc, 0x42, 0x8a, 0x7b, 0x64, 0x0f, 0x02, 0xc9, 0x31, 0x26,
	0xc3, 0xda, 0x34, 0xe9, 0x54, 0x29, 0x4f, 0xc5, 0x96, 0xbd, 0xb4, 0x6f, 0x96, 0x0c, 0x8d, 0xb0,
	0xeb, 0xc1, 0xbf, 0xad, 0x8a, 0x2c, 0x59, 0xb8, 0xa3, 0x1b, 0xa1, 0xad, 0x09, 0x7a, 0xe6, 0xd9,
	0xc6, 0x9c, 0x33, 0xb9, 0x67, 0xdb, 0x37, 0xd2, 0x1b, 0x8c, 0x8e, 0xcf, 0xfc, 0x15, 0x87, 0xac,
	0xde, 0xeb, 0xa7, 0xd8, 0xb9, 0xcd, 0xac, 0xc3, 0xf0, 0x6b, 0x99, 0xa9, 0xb8, 0xbe, 0x75, 0xe2,
	0x76, 0x24, 0x61, 0x16, 0x2a, 0x0d, 0x68, 0x16, 0x82, 0xbf, 0x96, 0xf2, 0x6f, 0x66, 0xd3, 0xd0,
	0xa4, 0x62, 0x1b, 0x94, 0x03, 0x89, 0x35, 0xdc, 0xa5, 0x03, 0x6d, 0x95, 0xaf, 0x30, 0x27, 0xb4,
	0xc0, 0xda, 0xeb, 0x22, 0x0f, 0xf3, 0x27, 0x48, 0x68, 0x64, 0xab, 0x9e, 0xe7, 0xd7, 0xf2, 0x37,
	0xcf, 0x43, 0x60, 0xb4, 0x19, 0x22, 0x1b, 0x79, 0xd8, 0xb1, 0x5c, 0x21, 0x6e, 0xcb, 0x55, 0x86,
	0x01, 0x4a, 0x8e, 0xd7, 0xf2, 0x45, 0x18, 0x20, 0xf9, 0x1f, 0xee, 0xd0, 0x5b, 0x36, 0x06, 0xb5,
	0x8d, 0xf0, 0x82, 0xe5, 0x6d, 0x2f, 0x5a, 0xa1, 0xad, 0x27, 0xe9, 0xc9, 0xdd, 0xa0, 0xe2, 0xf5,
	0xba, 0x5b, 0xf1, 0x6b, 0x81, 0xbc, 0x04, 0xb1, 0x8a, 0x22, 0xfa, 0x94, 0x23, 0xfd, 0x7f, 0xc5,
	0x0f, 0xbb, 0x7a, 0x7c, 0xa0, 0x19, 0x87, 0x57, 0x94, 0x33, 0x02, 0xec, 0xd2, 0x6b, 0x34, 0x67,
	0x54, 0x13, 0x35, 0x91, 0x13, 0xe0, 0xa1, 0x0d, 0xcc, 0xb2, 0xd9, 0xca, 0x03, 0xeb, 0xdb, 0x0f,
	0xf0, 0x95, 0x11, 0x75, 0x11, 0x23, 0xe4, 0xd9, 0x5a, 0xb1, 0x99, 0xbf, 0xe1, 0xfa, 0x28, 0xe1,
	0x5e, 0x07, 0xee, 0xe0, 0x5e, 0x97, 0xc8, 0x6e, 0x90, 0x3d, 0x26, 0x58, 0xd4, 0xba, 0x79, 0x26,
	0xfe, 0x40, 0x26, 0xbe, 0x6a, 0x1b, 0x6f, 0x00, 0x46, 0x4a, 0x4b, 0x22, 0x98, 0xf2, 0xba, 0x79,
	0x56, 0x55, 0x87, 0xac, 0xda, 0xc6, 0x82, 0xba, 0xc3, 0xab, 0x79, 0x52, 0x10, 0x9f, 0xf7, 0x62,
	0xd2, 0x4e, 0x39, 0x03, 0xf0, 0x3f, 0x32, 0x2d, 0x52, 0x8c, 0xab, 0x1d, 0xcb, 0x75, 0x08, 0x7d,
	0x37, 0x65, 0xc8, 0x86, 0x98, 0x2a, 0x36, 0xf6, 0x18, 0xac, 0x99, 0xf4, 0x7f, 0x09, 0x8b, 0x65,
	0x19, 0x8b, 0x53, 0xfc, 0xac, 0x32, 0x4e, 0x31, 0x11, 0xa5, 0xe3, 0xfd, 0x2a, 0x81, 0xcb, 0x8f,
	0xf2, 0xef, 0x31, 0x97, 0xc8, 0xa0, 0xe3, 0x7b, 0x88, 0xbf, 0xbf, 0xb5, 0x48, 0xb8, 0x34, 0x0d,
	0xfe, 0xba, 0x32, 0x89, 0x4c, 0x3d, 0x0d, 0xb1, 0x4e, 0x86, 0x23, 0xe3, 0xf4, 0x7b, 0x42, 0xec,
	0x2a, 0xa8, 0xd1, 0xe6, 0x4d, 0xdf, 0xe5, 0x17, 0x58, 0x22, 0xbc, 0xc5, 0x3f, 0x5e, 0xe7, 0x2d,
	0xcc, 0xb8, 0x2d, 0xfc, 0x28, 0xa3, 0xfa, 0x6c, 0x3a, 0x54, 0x5d, 0xf9, 0x5c, 0xe8, 0xf7, 0x02,
	0x6d, 0x53, 0x6a, 0x12, 0x96, 0x36, 0x77, 0x4a, 0xf1, 0x38, 0x26, 0x6d, 0x24, 0x3d, 0x84, 0xcc,
	0x5d, 0xbf, 0xf8, 0x43, 0xc8, 0xff, 0x87, 0x09, 0x8b, 0x1c, 0x42, 0xdf, 0x6b, 0x39, 0x61, 0xf7,
	0xa4, 0x30, 0x6e, 0xc5, 0x18, 0x9f, 0x1f, 0xf8, 0xd1, 0x36, 0x65, 0x69, 0x2a, 0x87, 0x58, 0x9a,
	0x8f, 0xb1, 0xe0, 0x1d, 0x3e, 0x71, 0xfa, 0x92, 0x95, 0xc6, 0xb5, 0x39, 0x44, 0x50, 0x71, 0x5f,
	0xcf, 0x70, 0xf8, 0xea, 0x88, 0xb4, 0x36, 0xfc, 0x05, 0xa0, 0x13, 0x58, 0x9b, 0x0b, 0xa0, 0x66,
	0xf7, 0x42, 0x0b, 0x27, 0x49, 0x34, 0xe3, 0xb2, 0x31, 0x9b, 0x0a, 0x59, 0x78, 0x30, 0x8b, 0xfb,
	0x25, 0x06, 0xb8, 0x1a, 0xbc, 0x60, 0x3c, 0x02, 0xc6, 0x9b, 0xbe, 0xe7, 0xa1, 0xa6, 0x4c, 0x30,
	0x8b, 0xe6, 0x58, 0x52, 0x29, 0x3f, 0x48, 0x55, 0x4d, 0xd9, 0x22, 0x76, 0x1c, 0x1b, 0xf9, 0xdc,
	0x95, 0x86, 0x15, 0xe0, 0x3f, 0x60, 0xce, 0x55, 0x0a, 0xb2, 0x4e, 0xe8, 0xb0, 0xc1, 0x3f, 0x62,
	0x02, 0x14, 0x83, 0x05, 0xd9, 0x4e, 0xd2, 0xe0, 0x3a, 0x22, 0x9c, 0xc3, 0x30, 0x83, 0x5f, 0x7a,
	0x38, 0x96, 0xfb, 0x59, 0x21, 0x06, 0xbd, 0x3c, 0x08, 0x9d, 0x90, 0x54, 0x6d, 0x95, 0x03, 0xb3,
	0xdc, 0xb1, 0x67, 0x8d, 0xd9, 0x34, 0xdb, 0x88, 0x52, 0x6a, 0x5d, 0x2f, 0x9e, 0xbf, 0x9b, 0xe9,
	0xeb, 0xe2, 0xbe, 0x4f, 0x6a, 0x29, 0xff, 0x98, 0xb9, 0x5a, 0xaa, 0x70, 0xac, 0x5b, 0x21, 0x76,
	0x9a, 0x4e, 0x60, 0x79, 0x7a, 0x12, 0x82, 0x1f, 0x82, 0x8e, 0x9f, 0x05, 0x45, 0xc7, 0x8e, 0xb8,
	0x81, 0x96, 0xfc, 0x4b, 0xcd, 0x53, 0x94, 0x96, 0x47, 0xfc, 0x7d, 0x33, 0x51, 0x94, 0xdc, 0x7d,
	0x2b, 0xf9, 0x79, 0x97, 0x64, 0x7f, 0x58, 0xf8, 0x1b, 0x9c, 0xe3, 0xa7, 0x33, 0x75, 0xd8, 0x1b,
	0xeb, 0xfe, 0x49, 0x5d, 0x57, 0xf1, 0x73, 0x80, 0xa5, 0x03, 0x9e, 0x03, 0x84, 0xbf, 0x5f, 0x90,
	0x36, 0xe1, 0xdb, 0x7c, 0xc7, 0xd3, 0x08, 0xf2, 0xd0, 0x4e, 0xd9, 0x93, 0x4a, 0xe2, 0x92, 0xd1,
	0xe9, 0x3b, 0x12, 0x6d, 0x82, 0x85, 0xad, 0x37, 0x6f, 0xdc, 0x78, 0x3e, 0xce, 0x65, 0xa2, 0xb0,
	0x10, 0x2e, 0xb2, 0x76, 0xd0, 0x69, 0x63, 0x21, 0x94, 0xa3, 0x2a, 0x42, 0x32, 0x8f, 0xff, 0x9e,
	0x82, 0x1f, 0x95, 0xaf, 0x4b, 0xce, 0xa5, 0xeb, 0x02, 0x43, 0x57, 0xb0, 0xd7, 0x24, 0xa8, 0xb5,
	0x1b, 0x56, 0x23, 0xce, 0xca, 0x35, 0x66, 0x56, 0xda, 0xf3, 0x34, 0x81, 0xf8, 0x6d, 0xf2, 0x31,
	0x87, 0xba, 0x23, 0x3f, 0x2b, 0x9f, 0x15, 0xc2, 0xb9, 0xd3, 0xfb, 0x19, 0x6d, 0xf5, 0xda, 0xc7,
	0xcc, 0x52, 0x3c, 0x01, 0xca, 0x36, 0x19, 0x96, 0x2b, 0x22, 0x72, 0xb6, 0x3f, 0xfb, 0x0e, 0x3f,
	0x22, 0x13, 0x25, 0xea, 0x7b, 0xe2, 0xb4, 0x3d, 0xcb, 0x75, 0xbc, 0xb6, 0x1e, 0xd1, 0xfe, 0x50,
	0x50, 0x0b, 0xc7, 0xd7, 0x92, 0xe4, 0xf8, 0xfa, 0x43, 0x05, 0xa5, 0xec, 0x0e, 0x34, 0x2d, 0xac,
	0xc5, 0xb0, 0x74, 0x28, 0xe0, 0xee, 0x06, 0x95, 0x90, 0x8e, 0x2b, 0x4e, 0x27, 0x2b, 0x91, 0xeb,
	0xa1, 0xe9, 0x77, 0xe3, 0x0c, 0xa1, 0x75, 0x53, 0x14, 0xfb, 0x78, 0x73, 0x3f, 0x01, 0xce, 0xb0,
	0xbd, 0xee, 0x39, 0xd8, 0xb1, 0xb0, 0xb3, 0x23, 0x1e, 0xf6, 0x9c, 0xa0, 0xfb, 0x3b, 0xae, 0x85,
	0xff, 0x81, 0xb9, 0xa3, 0xb0, 0x99, 0x33, 0x65, 0x7e, 0x4c, 0x31, 0xf4, 0x25, 0x91, 0xcc, 0x27,
	0xc1, 0x82, 0x6e, 0x95, 0x06, 0xa1, 0x5b, 0x6f, 0x00, 0x80, 0xdc, 0x0b, 0x0d, 0x46, 0xb4, 0xf3,
	0xd3, 0xa4, 0x92, 0x06, 0xd7, 0xc9, 0x77, 0xf8, 0x77, 0xc4, 0x7a, 0x62, 0x5f, 0x3c, 0x0b, 0x4a,
	0x5f, 0x0d, 0xd4, 0x30, 0x97, 0x47, 0xe2, 0x28, 0xfa, 0x8c, 0xee, 0x8d, 0x3d, 0x4c, 0x38, 0xe2,
	0xd8, 0x44, 0x02, 0xbe, 0x27, 0x01, 0xa0, 0x8d, 0x28, 0x71, 0xd1, 0x05, 0xc1, 0xa1, 0x08, 0x59,
	0x9f, 0x68, 0x21, 0x29, 0x1c, 0x8b, 0x49, 0x64, 0xe9, 0x37, 0x49, 0x94, 0xe7, 0x76, 0x3e, 0x17,
	0xb3, 0xc2, 0x64, 0x3a, 0x5c, 0x0f, 0x1d, 0xfa, 0x2d, 0xc7, 0x45, 0x9a, 0x9e, 0x83, 0x7c, 0x44,
	0x0a, 0x76, 0xec, 0x87, 0x55, 0xba, 0x61, 0x42, 0x3f, 0xc8, 0xdf, 0x30, 0xb4, 0xd9, 0x62, 0xe8,
	0x07, 0x26, 0x6d, 0x04, 0xff, 0x74, 0x44, 0x85, 0xd9, 0xf5, 0x2d, 0x5b, 0x2f, 0xcc, 0x8f, 0x73,
	0xf5, 0x71, 0xee, 0x22, 0x48, 0xc1, 0x04, 0xe4, 0xf0, 0x5a, 0x41, 0x2c, 0x79, 0x91, 0xc3, 0xcb,
	0x8a, 0x6a, 0x2e, 0xee, 0xf2, 0x80, 0xb9, 0xb8, 0x05, 0x16, 0x2a, 0x03, 0x60, 0xa1, 0xcf, 0xc5,
	0x72, 0x51, 0xbe, 0x58, 0xf2, 0x41, 0x67, 0x0d, 0x8c, 0x47, 0xc1, 0x04, 0xfd, 0x87, 0xd9, 0x9f,
	0x1b, 0x98, 0xc5, 0x51, 0x15, 0xcc, 0x31, 0x5a, 0xbb, 0x41, 0x2a, 0x37, 0x23, 0xf8, 0x5d, 0x46,
	0xe0, 0x23, 0x6c, 0x71, 0xcd, 0xad, 0x08, 0x00, 0xa2, 0x79, 0xe7, 0x86, 0xa8, 0xc4, 0xa2, 0xc9,
	0xe4, 0x4a, 0x52, 0x32, 0xb9, 0x67, 0xa8, 0xb9, 0xd7, 0xf3, 0x90, 0x9b, 0x31, 0xf1, 0x88, 0xf7,
	0x43, 0xc9, 0x47, 0x53, 0xb4, 0x22, 0x17, 0x3d, 0x7e, 0x59, 0xcd, 0x26, 0x5f, 0xc3, 0x2f, 0x33,
	0x87, 0x0e, 0xf8, 0xa5, 0xd4, 0xbc, 0xae, 0xa3, 0xb6, 0xd5, 0x26, 0x84, 0xe9, 0xd4, 0xcf, 0x0b,
	0xfe, 0xe6, 0x08, 0x55, 0x2f, 0x4a, 0xa0, 0x53, 0x9b, 0xc5, 0x7a, 0x6f, 0xcb, 0x75, 0x9a, 0x2b,
	0xec, 0x01, 0xbb, 0x48, 0x87, 0xcd, 0x25, 0x86, 0xab, 0x38, 0x10, 0xbe, 0xfb, 0xe8, 0x6a, 0x53,
	0x71, 0x7c, 0xe5, 0x4c, 0x1c, 0x5f, 0x2a, 0xa0, 0xb0, 0x72, 0xf8, 0x80, 0xc2, 0x6a, 0xbf, 0x80,
	0x42, 0x25, 0x71, 0xed, 0x37, 0x99, 0x46, 0x29, 0x8d, 0xb7, 0xd3, 0xbf, 0x91, 0xf3, 0x5f, 0xf0,
	0x82, 0x1f, 0x64, 0x37, 0x11, 0x9b, 0x0f, 0xa1, 0x81, 0xf3, 0xd1, 0x9e, 0xd7, 0x7c, 0x2e, 0xb4,
	0x82, 0xce, 0x10, 0x45, 0x2b, 0xec, 0x6f, 0x23, 0x2f, 0x7e, 0x1a, 0x97, 0x14, 0x8c, 0x31, 0x50,
	0xb8, 0xc5, 0xef, 0x9a, 0xc2, 0x2d, 0xf8, 0x2d, 0x96, 0xb7, 0x5a, 0xd8, 0xab, 0x1b, 0x96, 0x2d,
	0xd2, 0x12, 0x6d, 0xfa, 0x27, 0x9c, 0x33, 0xec, 0x2a, 0xa8, 0xf2, 0x12, 0xbf, 0x68, 0xee, 0xeb,
	0xf7, 0xb3, 0x55, 0x8c, 0xba, 0xa6, 0x68, 0x0c, 0x3f, 0x5f, 0xe0, 0x27, 0x8e, 0x4f, 0x89, 0x2c,
	0x4c, 0x5b, 0xb8, 0x46, 0xac, 0xfb, 0x91, 0xa3, 0xc7, 0xbf, 0xfa, 0x52, 0x02, 0xde, 0xfe, 0xb9,
	0x01, 0x44, 0x33, 0xe3, 0x02, 0xa8, 0x05, 0x7c, 0x78, 0x21, 0xca, 0x88, 0x32, 0xfc, 0x73, 0x76,
	0x4b, 0x26, 0x40, 0x53, 0x1d, 0xaa, 0x4e, 0x0f, 0x86, 0xc3, 0x64, 0x78, 0x39, 0xcc, 0x53, 0x26,
	0xc9, 0x0b, 0xcc, 0x15, 0xe9, 0x05, 0x66, 0x02, 0x4d, 0xd4, 0xf1, 0x43, 0xcc, 0xa0, 0x61, 0xfe,
	0xc9, 0x75, 0x5a, 0xc3, 0xb7, 0x45, 0x4d, 0xcc, 0x95, 0x67, 0x78, 0xd8, 0x7f, 0x75, 0xe3, 0xd6,
	0x34, 0x8d, 0x81, 0xe7, 0x74, 0x2d, 0xc2, 0x7e, 0xd6, 0x79, 0x1a, 0x03, 0x5e, 0x36, 0xde, 0x00,
	0xca, 0xb8, 0xd3, 0xeb, 0x6e, 0x71, 0xa7, 0xbf, 0x7e, 0x2b, 0xc2, 0x1a, 0xc1, 0x5f, 0x60, 0x3c,
	0x77, 0x8c, 0xf3, 0x10, 0x75, 0xfd, 0xf8, 0xc5, 0xd6, 0x95, 0xd0, 0xef, 0x6a, 0xc1, 0xfb, 0xa1,
	0xf7, 0x09, 0xfc, 0x1d, 0xe6, 0xa7, 0x11, 0xc3, 0x15, 0xc9, 0x09, 0x57, 0x37, 0x09, 0xe8, 0x27,
	0x79, 0x2c, 0x63, 0x1c, 0x97, 0x06, 0xc1, 0xf1, 0x47, 0x99, 0x37, 0x2b, 0x63, 0x55, 0xc5, 0x43,
	0x83, 0x84, 0x4e, 0xea, 0x7c, 0xb9, 0xea, 0x30, 0xb9, 0x9e, 0x0e, 0x4d, 0xcf, 0xaf, 0xc6, 0xbe,
	0x2a, 0x95, 0xd4, 0x23, 0x8b, 0xbc, 0x69, 0x9f, 0x60, 0xf4, 0xb3, 0xa0, 0x18, 0x60, 0xc1, 0xef,
	0x91, 0x7f, 0xfb, 0x5c, 0x74, 0xdf, 0x66, 0x17, 0x9d, 0x84, 0xa1, 0xe1, 0xa3, 0x86, 0xc3, 0x56,
	0x4a, 0x60, 0x7b, 0x1c, 0x9c, 0x09, 0x70, 0xd4, 0xc0, 0x3e, 0xb6, 0xdc, 0x86, 0xfc, 0x1a, 0xe2,
	0x78, 0x80, 0xa3, 0x4d, 0x52, 0xbb, 0x26, 0xb2, 0xb5, 0x4b, 0x19, 0xc3, 0xe9, 0xff, 0xa4, 0xb7,
	0x97, 0x92, 0x99, 0xbe, 0x84, 0x23, 0xf8, 0x02, 0xb5, 0x3b, 0x4a, 0x53, 0x22, 0xd7, 0xf6, 0xd1,
	0x67, 0x03, 0x3f, 0xc5, 0xec, 0x6b, 0x4c, 0x88, 0xa0, 0x9b, 0xc9, 0xf6, 0xf4, 0xf8, 0xac, 0xdc,
	0x0f, 0x00, 0x91, 0x11, 0x1a, 0xec, 0xc2, 0x64, 0x8f, 0xc6, 0xd5, 0x49, 0xcd, 0x26, 0xbd, 0x34,
	0xfb, 0x49, 0x6f, 0xf9, 0x4f, 0x47, 0x7e, 0x90, 0xb1, 0xab, 0x19, 0x30, 0xdf, 0x64, 0x45, 0x1d,
	0x4d, 0xcf, 0x9f, 0xdd, 0x06, 0xb0, 0xf0, 0xfb, 0x05, 0x70, 0x87, 0x02, 0x96, 0x1e, 0xd4, 0x5d,
	0x05, 0x35, 0x97, 0x3f, 0x26, 0xc0, 0x09, 0xc9, 0x85, 0xac, 0x1c, 0x23, 0x9e, 0x1b, 0x30, 0xe3,
	0xb6, 0x87, 0xc3, 0x69, 0x1f, 0xfd, 0x0a, 0xf5, 0x4b, 0x47, 0x4d, 0x27, 0x12, 0x7a, 0x15, 0x51,
	0x84, 0xaf, 0x32, 0x7e, 0x4b, 0x9d, 0xac, 0xae, 0x05, 0xd0, 0x3c, 0x65, 0xf8, 0xaf, 0xd3, 0xfb,
	0xfa, 0x45, 0xb4, 0xa5, 0x67, 0x71, 0xe6, 0x32, 0x90, 0xa6, 0x9c, 0xf0, 0xf9, 0x48, 0x47, 0x5d,
	0x1f, 0xf8, 0x31, 0x66, 0x31, 0xe4, 0x53, 0x08, 0x11, 0xfb, 0xe7, 0xb8, 0xce, 0xe7, 0x23, 0x60,
	0x9c, 0xeb, 0xa8, 0x1b, 0x09, 0xcb, 0x3b, 0x66, 0x8e, 0xf1, 0x4a, 0xda, 0x08, 0x7e, 0x47, 0x01,
	0x31, 0xb2, 0x76, 0xd0, 0x82, 0xd3, 0x26, 0xe0, 0xad, 0x5b, 0xa1, 0x9e, 0x9c, 0xab, 0x14, 0x44,
	0xae, 0x3f, 0x29, 0xd2, 0x9b, 0x00, 0x31, 0x1d, 0x36, 0xfd, 0x10, 0x58, 0xa1, 0xc0, 0x65, 0xad,
	0x25, 0x86, 0xbd, 0x08, 0xce, 0xf2, 0x89, 0x11, 0xca, 0x4b, 0x9a, 0x08, 0xf7, 0xf4, 0x09, 0x36,
	0x3d, 0x6c, 0xb9, 0xa4, 0x21, 0xbd, 0x3e, 0xb6, 0xf6, 0x30, 0x8a, 0xf8, 0x7b, 0x20, 0xac, 0x00,
	0x3f, 0xcd, 0x54, 0xa6, 0xd2, 0xa4, 0x4e, 0x7a, 0x46, 0x31, 0x9c, 0x65, 0x19, 0xce, 0xbf, 0xc5,
	0x76, 0x78, 0x44, 0x18, 0x1a, 0xfe, 0x54, 0x20, 0xe1, 0x22, 0x75, 0xbc, 0x57, 0x35, 0xb2, 0xaf,
	0x02, 0x6e, 0xc4, 0xb1, 0xe1, 0x2d, 0x46, 0xf8, 0xc4, 0xe0, 0xa4, 0x3e, 0xd2, 0x37, 0x72, 0x71,
	0x9f, 0x91, 0xbf, 0xc8, 0x2c, 0x9e, 0x6c, 0x68, 0xc2, 0xc8, 0xa1, 0x66, 0x2f, 0x44, 0x2f, 0x58,
	0x6e, 0x0f, 0x2d, 0x87, 0xa1, 0xaf, 0x13, 0x8c, 0x7d, 0x10, 0x60, 0x4c, 0x81, 0x0a, 0x8d, 0x42,
	0x13, 0x26, 0xc0, 0xf3, 0x52, 0xb4, 0x84, 0x0a, 0x90, 0xc9, 0x1b, 0xc2, 0x77, 0xb1, 0x4b, 0x6c,
	0xd7, 0x72, 0x5d, 0x84, 0x09, 0xd6, 0xde, 0x82, 0xf6, 0x36, 0x50, 0x33, 0x44, 0x78, 0xc3, 0xd2,
	0x91, 0x7f, 0xe2, 0x31, 0x50, 0x09, 0xd1, 0x8e, 0xbf, 0x2d, 0xf4, 0x76, 0xe9, 0xb0, 0x31, 0xf6,
	0x11, 0x06, 0xf4, 0xcc, 0x72, 0x28, 0x22, 0xe4, 0xd9, 0x6b, 0x4e, 0xec, 0x9b, 0xa5, 0x25, 0x91,
	0xf6, 0x96, 0x6f, 0xef, 0x71, 0x82, 0x42, 0xff, 0x87, 0x6f, 0x04, 0x67, 0x5f, 0x40, 0x4d, 0xec,
	0x87, 0x8d, 0x17, 0x2d, 0xd7, 0x5d, 0xb7, 0x02, 0x14, 0x1a, 0x17, 0x41, 0xd9, 0xb6, 0xb0, 0x15,
	0x4d, 0x16, 0x52, 0xab, 0x1d, 0x37, 0x31, 0x59, 0x03, 0x38, 0x0d, 0x46, 0xf9, 0xaf, 0xe9, 0xf6,
	0x7e, 0x44, 0xfd, 0x61, 0x32, 0x49, 0x66, 0x75, 0x65, 0xbf, 0x59, 0x02, 0x77, 0xf2, 0xdf, 0x2c,
	0xb2, 0xfc, 0x39, 0x84, 0x5d, 0xea, 0x45, 0x84, 0xd5, 0x96, 0x7f, 0x9c, 0xb0, 0xda, 0x4a, 0x33,
	0xd1, 0x0b, 0x04, 0x80, 0xf7, 0xc2, 0x5f, 0x0a, 0x4c, 0x7e, 0x5b, 0x16, 0x6d, 0x36, 0xc1, 0x7d,
	0xbc, 0x8d, 0xc9, 0x4d, 0x8b, 0x34, 0xe8, 0x78, 0x4f, 0xb8, 0x31, 0x5f, 0x56, 0x47, 0x7c, 0x40,
	0x8a, 0xa4, 0xcf, 0x69, 0x2e, 0x7a, 0x7d, 0x24, 0x9e, 0xb3, 0xeb, 0x7b, 0x6d, 0x75, 0xe8, 0xa2,
	0x68, 0xb4, 0x06, 0x26, 0x79, 0xa3, 0x44, 0xb0, 0x58, 0xf4, 0x77, 0x50, 0x88, 0x6c, 0xe3, 0x92,
	0x3a, 0xac, 0x14, 0xcb, 0x93, 0x6e, 0x2a, 0x7a, 0xfb, 0x49, 0x60, 0x08, 0x94, 0x25, 0xbc, 0x95,
	0xf1, 0x3a, 0xb5, 0x9f, 0x24, 0x11, 0x80, 0xd4, 0x48, 0xf4, 0xb0, 0x02, 0xee, 0xe2, 0x3d, 0xac,
	0x59, 0x5e, 0x7b, 0xdd, 0x6a, 0x6e, 0x6f, 0xe0, 0xd0, 0xf1, 0xda, 0xc6, 0x53, 0x6a, 0x27, 0x89,
	0x62, 0x57, 0x6d, 0x27, 0xfa, 0x79, 0x33, 0xb8, 0x27, 0xd5, 0x8f, 0x78, 0xe8, 0xd6, 0x78, 0x46,
	0xed, 0xe9, 0x7c, 0xa6, 0x27, 0xd1, 0x32, 0x3b, 0x2b, 0xe9, 0x58, 0xf6, 0x9f, 0x95, 0xd4, 0x48,
	0xf4, 0xb0, 0x00, 0xce, 0x89, 0x1e, 0xac, 0x1d, 0x64, 0xf3, 0x8d, 0x62, 0xbc, 0x5e, 0xed, 0x22,
	0x91, 0x79, 0xe4, 0x56, 0xd9, 0x3e, 0xc4, 0x3a, 0x5b, 0x5e, 0x1b, 0xf5, 0xef, 0x43, 0x6e, 0x25,
	0xfa, 0xf8, 0x09, 0x70, 0x07, 0xef, 0x23, 0x09, 0x62, 0x31, 0x9e, 0x54, 0x7b, 0x38, 0x97, 0xf2,
	0xfa, 0xa7, 0x6a, 0x43, 0xfe, 0xfb, 0x67, 0xc1, 0x19, 0xfe, 0xfb, 0x78, 0x71, 0x9f, 0x50, 0x7f,
	0x9d, 0x98, 0x39, 0xd3, 0x2b, 0x9b, 0x1c, 0x27, 0xfa, 0xec, 0x6f, 0xbc, 0x1c, 0x7d, 0x8f, 0x93,
	0xd2, 0x4c, 0xf4, 0xf2, 0x02, 0xb8, 0x9f, 0xf7, 0x12, 0xbb, 0x99, 0x2b, 0x4f, 0xdb, 0x18, 0x57,
	0xd4, 0xee, 0x12, 0x67, 0xad, 0xfc, 0xf6, 0x59, 0xec, 0x2a, 0x91, 0x17, 0x7d, 0xb1, 0xab, 0x44,
	0x44, 0x64, 0x8e, 0xb1, 0xfc, 0x35, 0x7e, 0x36, 0xa4, 0xff, 0x31, 0xce, 0x6d, 0xce, 0x7b, 0x5d,
	0x38, 0xff, 0x83, 0x3f, 0x78, 0xa0, 0xf0, 0x8d, 0xef, 0x3d, 0x50, 0xf8, 0xd6, 0xf7, 0x1e, 0x28,
	0xfc, 0xd7, 0xef, 0x3d, 0x50, 0xf8, 0xe9, 0x2a, 0xff, 0xdd, 0x56, 0x85, 0xfe, 0x99, 0xf9, 0x7f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x62, 0xc9, 0x9a, 0x31, 0x5b, 0x14, 0x01, 0x00,
}

func (this *TLAccountAcceptAuthorization) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&mtproto.TLAccountAcceptAuthorization{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "BotId: "+fmt.Sprintf("%#v", this.BotId)+",\n")
	s = append(s, "Scope: "+fmt.Sprintf("%#v", this.Scope)+",\n")
	s = append(s, "PublicKey: "+fmt.Sprintf("%#v", this.PublicKey)+",\n")
	if this.ValueHashes != nil {
		s = append(s, "ValueHashes: "+fmt.Sprintf("%#v", this.ValueHashes)+",\n")
	}
	if this.Credentials != nil {
		s = append(s, "Credentials: "+fmt.Sprintf("%#v", this.Credentials)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountCancelPasswordEmail) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountCancelPasswordEmail{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountChangePhone) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLAccountChangePhone{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "PhoneNumber: "+fmt.Sprintf("%#v", this.PhoneNumber)+",\n")
	s = append(s, "PhoneCodeHash: "+fmt.Sprintf("%#v", this.PhoneCodeHash)+",\n")
	s = append(s, "PhoneCode: "+fmt.Sprintf("%#v", this.PhoneCode)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountCheckUsername) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountCheckUsername{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Username: "+fmt.Sprintf("%#v", this.Username)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountConfirmPasswordEmail) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountConfirmPasswordEmail{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Code: "+fmt.Sprintf("%#v", this.Code)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountConfirmPhone) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLAccountConfirmPhone{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "PhoneCodeHash: "+fmt.Sprintf("%#v", this.PhoneCodeHash)+",\n")
	s = append(s, "PhoneCode: "+fmt.Sprintf("%#v", this.PhoneCode)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountCreateTheme) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&mtproto.TLAccountCreateTheme{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Slug: "+fmt.Sprintf("%#v", this.Slug)+",\n")
	s = append(s, "Title: "+fmt.Sprintf("%#v", this.Title)+",\n")
	if this.Document != nil {
		s = append(s, "Document: "+fmt.Sprintf("%#v", this.Document)+",\n")
	}
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	if this.Settings != nil {
		s = append(s, "Settings: "+fmt.Sprintf("%#v", this.Settings)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountDeleteAccount) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountDeleteAccount{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Reason: "+fmt.Sprintf("%#v", this.Reason)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountDeleteSecureValue) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountDeleteSecureValue{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Types != nil {
		s = append(s, "Types: "+fmt.Sprintf("%#v", this.Types)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountFinishTakeoutSession) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLAccountFinishTakeoutSession{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Success: "+fmt.Sprintf("%#v", this.Success)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetAccountTTL) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountGetAccountTTL{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetAllSecureValues) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountGetAllSecureValues{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetAuthorizationForm) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLAccountGetAuthorizationForm{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "BotId: "+fmt.Sprintf("%#v", this.BotId)+",\n")
	s = append(s, "Scope: "+fmt.Sprintf("%#v", this.Scope)+",\n")
	s = append(s, "PublicKey: "+fmt.Sprintf("%#v", this.PublicKey)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetAuthorizations) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountGetAuthorizations{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetAutoDownloadSettings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountGetAutoDownloadSettings{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetContactSignUpNotification) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountGetContactSignUpNotification{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetContentSettings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountGetContentSettings{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetGlobalPrivacySettings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountGetGlobalPrivacySettings{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetMultiWallPapers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountGetMultiWallPapers{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Wallpapers != nil {
		s = append(s, "Wallpapers: "+fmt.Sprintf("%#v", this.Wallpapers)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetNotifyExceptions) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLAccountGetNotifyExceptions{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "CompareSound: "+fmt.Sprintf("%#v", this.CompareSound)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetNotifySettings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountGetNotifySettings{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetPassword) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountGetPassword{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetPasswordSettings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLAccountGetPasswordSettings{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "CurrentPasswordHash: "+fmt.Sprintf("%#v", this.CurrentPasswordHash)+",\n")
	if this.Password != nil {
		s = append(s, "Password: "+fmt.Sprintf("%#v", this.Password)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetPrivacy) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountGetPrivacy{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Key != nil {
		s = append(s, "Key: "+fmt.Sprintf("%#v", this.Key)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetSecureValue) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountGetSecureValue{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Types != nil {
		s = append(s, "Types: "+fmt.Sprintf("%#v", this.Types)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetTheme) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLAccountGetTheme{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Format: "+fmt.Sprintf("%#v", this.Format)+",\n")
	if this.Theme != nil {
		s = append(s, "Theme: "+fmt.Sprintf("%#v", this.Theme)+",\n")
	}
	s = append(s, "DocumentId: "+fmt.Sprintf("%#v", this.DocumentId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetThemes) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLAccountGetThemes{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Format: "+fmt.Sprintf("%#v", this.Format)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetTmpPassword) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLAccountGetTmpPassword{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "PasswordHash: "+fmt.Sprintf("%#v", this.PasswordHash)+",\n")
	s = append(s, "Period: "+fmt.Sprintf("%#v", this.Period)+",\n")
	if this.Password != nil {
		s = append(s, "Password: "+fmt.Sprintf("%#v", this.Password)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetWallPaper) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountGetWallPaper{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Wallpaper != nil {
		s = append(s, "Wallpaper: "+fmt.Sprintf("%#v", this.Wallpaper)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetWallPapers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountGetWallPapers{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountGetWebAuthorizations) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountGetWebAuthorizations{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountInitTakeoutSession) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 14)
	s = append(s, "&mtproto.TLAccountInitTakeoutSession{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Contacts: "+fmt.Sprintf("%#v", this.Contacts)+",\n")
	s = append(s, "MessageUsers: "+fmt.Sprintf("%#v", this.MessageUsers)+",\n")
	s = append(s, "MessageChats: "+fmt.Sprintf("%#v", this.MessageChats)+",\n")
	s = append(s, "MessageMegagroups: "+fmt.Sprintf("%#v", this.MessageMegagroups)+",\n")
	s = append(s, "MessageChannels: "+fmt.Sprintf("%#v", this.MessageChannels)+",\n")
	s = append(s, "Files: "+fmt.Sprintf("%#v", this.Files)+",\n")
	s = append(s, "FileMaxSize: "+fmt.Sprintf("%#v", this.FileMaxSize)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountInstallTheme) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLAccountInstallTheme{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Format: "+fmt.Sprintf("%#v", this.Format)+",\n")
	if this.Theme != nil {
		s = append(s, "Theme: "+fmt.Sprintf("%#v", this.Theme)+",\n")
	}
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Dark: "+fmt.Sprintf("%#v", this.Dark)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountInstallWallPaper) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLAccountInstallWallPaper{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Wallpaper != nil {
		s = append(s, "Wallpaper: "+fmt.Sprintf("%#v", this.Wallpaper)+",\n")
	}
	if this.Settings != nil {
		s = append(s, "Settings: "+fmt.Sprintf("%#v", this.Settings)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountRegisterDevice) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 17)
	s = append(s, "&mtproto.TLAccountRegisterDevice{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "TokenType: "+fmt.Sprintf("%#v", this.TokenType)+",\n")
	s = append(s, "Token: "+fmt.Sprintf("%#v", this.Token)+",\n")
	s = append(s, "DeviceModel: "+fmt.Sprintf("%#v", this.DeviceModel)+",\n")
	s = append(s, "SystemVersion: "+fmt.Sprintf("%#v", this.SystemVersion)+",\n")
	s = append(s, "AppVersion: "+fmt.Sprintf("%#v", this.AppVersion)+",\n")
	if this.AppSandbox != nil {
		s = append(s, "AppSandbox: "+fmt.Sprintf("%#v", this.AppSandbox)+",\n")
	}
	s = append(s, "LangCode: "+fmt.Sprintf("%#v", this.LangCode)+",\n")
	s = append(s, "Secret: "+fmt.Sprintf("%#v", this.Secret)+",\n")
	s = append(s, "OtherUids: "+fmt.Sprintf("%#v", this.OtherUids)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "NoMuted: "+fmt.Sprintf("%#v", this.NoMuted)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountReportPeer) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLAccountReportPeer{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.Reason != nil {
		s = append(s, "Reason: "+fmt.Sprintf("%#v", this.Reason)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountResendPasswordEmail) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountResendPasswordEmail{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountResetAuthorization) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountResetAuthorization{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountResetNotifySettings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountResetNotifySettings{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountResetWallPapers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountResetWallPapers{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountResetWebAuthorization) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountResetWebAuthorization{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountResetWebAuthorizations) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAccountResetWebAuthorizations{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountSaveAutoDownloadSettings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLAccountSaveAutoDownloadSettings{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Low: "+fmt.Sprintf("%#v", this.Low)+",\n")
	s = append(s, "High: "+fmt.Sprintf("%#v", this.High)+",\n")
	if this.Settings != nil {
		s = append(s, "Settings: "+fmt.Sprintf("%#v", this.Settings)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountSaveSecureValue) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLAccountSaveSecureValue{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Value != nil {
		s = append(s, "Value: "+fmt.Sprintf("%#v", this.Value)+",\n")
	}
	s = append(s, "SecureSecretId: "+fmt.Sprintf("%#v", this.SecureSecretId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountSaveTheme) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLAccountSaveTheme{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Theme != nil {
		s = append(s, "Theme: "+fmt.Sprintf("%#v", this.Theme)+",\n")
	}
	if this.Unsave != nil {
		s = append(s, "Unsave: "+fmt.Sprintf("%#v", this.Unsave)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountSaveWallPaper) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLAccountSaveWallPaper{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Wallpaper != nil {
		s = append(s, "Wallpaper: "+fmt.Sprintf("%#v", this.Wallpaper)+",\n")
	}
	if this.Unsave != nil {
		s = append(s, "Unsave: "+fmt.Sprintf("%#v", this.Unsave)+",\n")
	}
	if this.Settings != nil {
		s = append(s, "Settings: "+fmt.Sprintf("%#v", this.Settings)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountSendChangePhoneCode) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&mtproto.TLAccountSendChangePhoneCode{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "AllowFlashcall: "+fmt.Sprintf("%#v", this.AllowFlashcall)+",\n")
	s = append(s, "PhoneNumber: "+fmt.Sprintf("%#v", this.PhoneNumber)+",\n")
	if this.CurrentNumber != nil {
		s = append(s, "CurrentNumber: "+fmt.Sprintf("%#v", this.CurrentNumber)+",\n")
	}
	if this.Settings != nil {
		s = append(s, "Settings: "+fmt.Sprintf("%#v", this.Settings)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountSendConfirmPhoneCode) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&mtproto.TLAccountSendConfirmPhoneCode{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "AllowFlashcall: "+fmt.Sprintf("%#v", this.AllowFlashcall)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.CurrentNumber != nil {
		s = append(s, "CurrentNumber: "+fmt.Sprintf("%#v", this.CurrentNumber)+",\n")
	}
	if this.Settings != nil {
		s = append(s, "Settings: "+fmt.Sprintf("%#v", this.Settings)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountSendVerifyEmailCode) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountSendVerifyEmailCode{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Email: "+fmt.Sprintf("%#v", this.Email)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountSendVerifyPhoneCode) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&mtproto.TLAccountSendVerifyPhoneCode{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "AllowFlashcall: "+fmt.Sprintf("%#v", this.AllowFlashcall)+",\n")
	s = append(s, "PhoneNumber: "+fmt.Sprintf("%#v", this.PhoneNumber)+",\n")
	if this.CurrentNumber != nil {
		s = append(s, "CurrentNumber: "+fmt.Sprintf("%#v", this.CurrentNumber)+",\n")
	}
	if this.Settings != nil {
		s = append(s, "Settings: "+fmt.Sprintf("%#v", this.Settings)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountSetAccountTTL) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountSetAccountTTL{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Ttl != nil {
		s = append(s, "Ttl: "+fmt.Sprintf("%#v", this.Ttl)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountSetContactSignUpNotification) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountSetContactSignUpNotification{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Silent != nil {
		s = append(s, "Silent: "+fmt.Sprintf("%#v", this.Silent)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountSetContentSettings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLAccountSetContentSettings{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "SensitiveEnabled: "+fmt.Sprintf("%#v", this.SensitiveEnabled)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountSetGlobalPrivacySettings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountSetGlobalPrivacySettings{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Settings != nil {
		s = append(s, "Settings: "+fmt.Sprintf("%#v", this.Settings)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountSetPrivacy) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLAccountSetPrivacy{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Key != nil {
		s = append(s, "Key: "+fmt.Sprintf("%#v", this.Key)+",\n")
	}
	if this.Rules != nil {
		s = append(s, "Rules: "+fmt.Sprintf("%#v", this.Rules)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountUnregisterDevice) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLAccountUnregisterDevice{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "TokenType: "+fmt.Sprintf("%#v", this.TokenType)+",\n")
	s = append(s, "Token: "+fmt.Sprintf("%#v", this.Token)+",\n")
	s = append(s, "OtherUids: "+fmt.Sprintf("%#v", this.OtherUids)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountUpdateDeviceLocked) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountUpdateDeviceLocked{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Period: "+fmt.Sprintf("%#v", this.Period)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountUpdateNotifySettings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLAccountUpdateNotifySettings{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.Settings != nil {
		s = append(s, "Settings: "+fmt.Sprintf("%#v", this.Settings)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountUpdatePasswordSettings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLAccountUpdatePasswordSettings{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "CurrentPasswordHash: "+fmt.Sprintf("%#v", this.CurrentPasswordHash)+",\n")
	if this.NewSettings != nil {
		s = append(s, "NewSettings: "+fmt.Sprintf("%#v", this.NewSettings)+",\n")
	}
	if this.Password != nil {
		s = append(s, "Password: "+fmt.Sprintf("%#v", this.Password)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountUpdateProfile) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLAccountUpdateProfile{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "FirstName: "+fmt.Sprintf("%#v", this.FirstName)+",\n")
	s = append(s, "LastName: "+fmt.Sprintf("%#v", this.LastName)+",\n")
	s = append(s, "About: "+fmt.Sprintf("%#v", this.About)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountUpdateStatus) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountUpdateStatus{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Offline != nil {
		s = append(s, "Offline: "+fmt.Sprintf("%#v", this.Offline)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountUpdateTheme) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 13)
	s = append(s, "&mtproto.TLAccountUpdateTheme{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	if this.Theme != nil {
		s = append(s, "Theme: "+fmt.Sprintf("%#v", this.Theme)+",\n")
	}
	s = append(s, "Slug: "+fmt.Sprintf("%#v", this.Slug)+",\n")
	s = append(s, "Title: "+fmt.Sprintf("%#v", this.Title)+",\n")
	if this.Document != nil {
		s = append(s, "Document: "+fmt.Sprintf("%#v", this.Document)+",\n")
	}
	s = append(s, "Format: "+fmt.Sprintf("%#v", this.Format)+",\n")
	if this.Settings != nil {
		s = append(s, "Settings: "+fmt.Sprintf("%#v", this.Settings)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountUpdateUsername) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAccountUpdateUsername{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Username: "+fmt.Sprintf("%#v", this.Username)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountUploadTheme) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&mtproto.TLAccountUploadTheme{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	if this.File != nil {
		s = append(s, "File: "+fmt.Sprintf("%#v", this.File)+",\n")
	}
	if this.Thumb != nil {
		s = append(s, "Thumb: "+fmt.Sprintf("%#v", this.Thumb)+",\n")
	}
	s = append(s, "FileName: "+fmt.Sprintf("%#v", this.FileName)+",\n")
	s = append(s, "MimeType: "+fmt.Sprintf("%#v", this.MimeType)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountUploadWallPaper) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLAccountUploadWallPaper{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.File != nil {
		s = append(s, "File: "+fmt.Sprintf("%#v", this.File)+",\n")
	}
	s = append(s, "MimeType: "+fmt.Sprintf("%#v", this.MimeType)+",\n")
	if this.Settings != nil {
		s = append(s, "Settings: "+fmt.Sprintf("%#v", this.Settings)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountVerifyEmail) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLAccountVerifyEmail{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Email: "+fmt.Sprintf("%#v", this.Email)+",\n")
	s = append(s, "Code: "+fmt.Sprintf("%#v", this.Code)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAccountVerifyPhone) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLAccountVerifyPhone{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "PhoneNumber: "+fmt.Sprintf("%#v", this.PhoneNumber)+",\n")
	s = append(s, "PhoneCodeHash: "+fmt.Sprintf("%#v", this.PhoneCodeHash)+",\n")
	s = append(s, "PhoneCode: "+fmt.Sprintf("%#v", this.PhoneCode)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthAcceptLoginToken) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAuthAcceptLoginToken{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Token: "+fmt.Sprintf("%#v", this.Token)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthBindTempAuthKey) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLAuthBindTempAuthKey{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "PermAuthKeyId: "+fmt.Sprintf("%#v", this.PermAuthKeyId)+",\n")
	s = append(s, "Nonce: "+fmt.Sprintf("%#v", this.Nonce)+",\n")
	s = append(s, "ExpiresAt: "+fmt.Sprintf("%#v", this.ExpiresAt)+",\n")
	s = append(s, "EncryptedMessage: "+fmt.Sprintf("%#v", this.EncryptedMessage)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthCancelCode) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLAuthCancelCode{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "PhoneNumber: "+fmt.Sprintf("%#v", this.PhoneNumber)+",\n")
	s = append(s, "PhoneCodeHash: "+fmt.Sprintf("%#v", this.PhoneCodeHash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthCheckPassword) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLAuthCheckPassword{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "PasswordHash: "+fmt.Sprintf("%#v", this.PasswordHash)+",\n")
	if this.Password != nil {
		s = append(s, "Password: "+fmt.Sprintf("%#v", this.Password)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthCheckPhone) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAuthCheckPhone{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "PhoneNumber: "+fmt.Sprintf("%#v", this.PhoneNumber)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthDropTempAuthKeys) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAuthDropTempAuthKeys{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "ExceptAuthKeys: "+fmt.Sprintf("%#v", this.ExceptAuthKeys)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthExportAuthorization) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAuthExportAuthorization{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "DcId: "+fmt.Sprintf("%#v", this.DcId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthExportLoginToken) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLAuthExportLoginToken{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "ApiId: "+fmt.Sprintf("%#v", this.ApiId)+",\n")
	s = append(s, "ApiHash: "+fmt.Sprintf("%#v", this.ApiHash)+",\n")
	s = append(s, "ExceptIds: "+fmt.Sprintf("%#v", this.ExceptIds)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthImportAuthorization) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLAuthImportAuthorization{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	s = append(s, "Bytes: "+fmt.Sprintf("%#v", this.Bytes)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthImportBotAuthorization) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLAuthImportBotAuthorization{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "ApiId: "+fmt.Sprintf("%#v", this.ApiId)+",\n")
	s = append(s, "ApiHash: "+fmt.Sprintf("%#v", this.ApiHash)+",\n")
	s = append(s, "BotAuthToken: "+fmt.Sprintf("%#v", this.BotAuthToken)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthImportLoginToken) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAuthImportLoginToken{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Token: "+fmt.Sprintf("%#v", this.Token)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthLogOut) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAuthLogOut{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthRecoverPassword) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLAuthRecoverPassword{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Code: "+fmt.Sprintf("%#v", this.Code)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthRequestPasswordRecovery) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAuthRequestPasswordRecovery{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthResendCode) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLAuthResendCode{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "PhoneNumber: "+fmt.Sprintf("%#v", this.PhoneNumber)+",\n")
	s = append(s, "PhoneCodeHash: "+fmt.Sprintf("%#v", this.PhoneCodeHash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthResetAuthorizations) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLAuthResetAuthorizations{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthSendCode) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 14)
	s = append(s, "&mtproto.TLAuthSendCode{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "AllowFlashcall: "+fmt.Sprintf("%#v", this.AllowFlashcall)+",\n")
	s = append(s, "PhoneNumber: "+fmt.Sprintf("%#v", this.PhoneNumber)+",\n")
	if this.CurrentNumber != nil {
		s = append(s, "CurrentNumber: "+fmt.Sprintf("%#v", this.CurrentNumber)+",\n")
	}
	s = append(s, "ApiId: "+fmt.Sprintf("%#v", this.ApiId)+",\n")
	s = append(s, "ApiHash: "+fmt.Sprintf("%#v", this.ApiHash)+",\n")
	s = append(s, "LangCode: "+fmt.Sprintf("%#v", this.LangCode)+",\n")
	if this.Settings != nil {
		s = append(s, "Settings: "+fmt.Sprintf("%#v", this.Settings)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthSendInvites) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLAuthSendInvites{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "PhoneNumbers: "+fmt.Sprintf("%#v", this.PhoneNumbers)+",\n")
	s = append(s, "Message: "+fmt.Sprintf("%#v", this.Message)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthSignIn) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLAuthSignIn{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "PhoneNumber: "+fmt.Sprintf("%#v", this.PhoneNumber)+",\n")
	s = append(s, "PhoneCodeHash: "+fmt.Sprintf("%#v", this.PhoneCodeHash)+",\n")
	s = append(s, "PhoneCode: "+fmt.Sprintf("%#v", this.PhoneCode)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLAuthSignUp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&mtproto.TLAuthSignUp{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "PhoneNumber: "+fmt.Sprintf("%#v", this.PhoneNumber)+",\n")
	s = append(s, "PhoneCodeHash: "+fmt.Sprintf("%#v", this.PhoneCodeHash)+",\n")
	s = append(s, "PhoneCode: "+fmt.Sprintf("%#v", this.PhoneCode)+",\n")
	s = append(s, "FirstName: "+fmt.Sprintf("%#v", this.FirstName)+",\n")
	s = append(s, "LastName: "+fmt.Sprintf("%#v", this.LastName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLBotsAnswerWebhookJSONQuery) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLBotsAnswerWebhookJSONQuery{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "QueryId: "+fmt.Sprintf("%#v", this.QueryId)+",\n")
	if this.Data != nil {
		s = append(s, "Data: "+fmt.Sprintf("%#v", this.Data)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLBotsSendCustomRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLBotsSendCustomRequest{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "CustomMethod: "+fmt.Sprintf("%#v", this.CustomMethod)+",\n")
	if this.Params != nil {
		s = append(s, "Params: "+fmt.Sprintf("%#v", this.Params)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLBotsSetBotCommands) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLBotsSetBotCommands{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Commands != nil {
		s = append(s, "Commands: "+fmt.Sprintf("%#v", this.Commands)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsCheckUsername) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLChannelsCheckUsername{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "Username: "+fmt.Sprintf("%#v", this.Username)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsCreateChannel) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 13)
	s = append(s, "&mtproto.TLChannelsCreateChannel{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Broadcast: "+fmt.Sprintf("%#v", this.Broadcast)+",\n")
	s = append(s, "Megagroup: "+fmt.Sprintf("%#v", this.Megagroup)+",\n")
	s = append(s, "Title: "+fmt.Sprintf("%#v", this.Title)+",\n")
	s = append(s, "About: "+fmt.Sprintf("%#v", this.About)+",\n")
	if this.GeoPoint != nil {
		s = append(s, "GeoPoint: "+fmt.Sprintf("%#v", this.GeoPoint)+",\n")
	}
	s = append(s, "Address: "+fmt.Sprintf("%#v", this.Address)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsDeleteChannel) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLChannelsDeleteChannel{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsDeleteHistory) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLChannelsDeleteHistory{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "MaxId: "+fmt.Sprintf("%#v", this.MaxId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsDeleteMessages) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLChannelsDeleteMessages{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsDeleteUserHistory) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLChannelsDeleteUserHistory{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsEditAbout) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLChannelsEditAbout{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "About: "+fmt.Sprintf("%#v", this.About)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsEditAdmin) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 12)
	s = append(s, "&mtproto.TLChannelsEditAdmin{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	if this.AdminRights20B8821471 != nil {
		s = append(s, "AdminRights20B8821471: "+fmt.Sprintf("%#v", this.AdminRights20B8821471)+",\n")
	}
	if this.Role != nil {
		s = append(s, "Role: "+fmt.Sprintf("%#v", this.Role)+",\n")
	}
	if this.AdminRights70F893BA93 != nil {
		s = append(s, "AdminRights70F893BA93: "+fmt.Sprintf("%#v", this.AdminRights70F893BA93)+",\n")
	}
	s = append(s, "Rank: "+fmt.Sprintf("%#v", this.Rank)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsEditBanned) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLChannelsEditBanned{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	if this.BannedRightsBFD915CD71 != nil {
		s = append(s, "BannedRightsBFD915CD71: "+fmt.Sprintf("%#v", this.BannedRightsBFD915CD71)+",\n")
	}
	if this.BannedRights7279691293 != nil {
		s = append(s, "BannedRights7279691293: "+fmt.Sprintf("%#v", this.BannedRights7279691293)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsEditCreator) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLChannelsEditCreator{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	if this.Password != nil {
		s = append(s, "Password: "+fmt.Sprintf("%#v", this.Password)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsEditLocation) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLChannelsEditLocation{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.GeoPoint != nil {
		s = append(s, "GeoPoint: "+fmt.Sprintf("%#v", this.GeoPoint)+",\n")
	}
	s = append(s, "Address: "+fmt.Sprintf("%#v", this.Address)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsEditPhoto) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLChannelsEditPhoto{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.Photo != nil {
		s = append(s, "Photo: "+fmt.Sprintf("%#v", this.Photo)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsEditTitle) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLChannelsEditTitle{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "Title: "+fmt.Sprintf("%#v", this.Title)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsExportInvite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLChannelsExportInvite{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsExportMessageLink) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 12)
	s = append(s, "&mtproto.TLChannelsExportMessageLink{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.GroupedCEB7716385 != nil {
		s = append(s, "GroupedCEB7716385: "+fmt.Sprintf("%#v", this.GroupedCEB7716385)+",\n")
	}
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "GroupedE63FADEB119: "+fmt.Sprintf("%#v", this.GroupedE63FADEB119)+",\n")
	s = append(s, "Thread: "+fmt.Sprintf("%#v", this.Thread)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsGetAdminLog) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 14)
	s = append(s, "&mtproto.TLChannelsGetAdminLog{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "Q: "+fmt.Sprintf("%#v", this.Q)+",\n")
	if this.EventsFilter != nil {
		s = append(s, "EventsFilter: "+fmt.Sprintf("%#v", this.EventsFilter)+",\n")
	}
	if this.Admins != nil {
		s = append(s, "Admins: "+fmt.Sprintf("%#v", this.Admins)+",\n")
	}
	s = append(s, "MaxId: "+fmt.Sprintf("%#v", this.MaxId)+",\n")
	s = append(s, "MinId: "+fmt.Sprintf("%#v", this.MinId)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsGetAdminedPublicChannels) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLChannelsGetAdminedPublicChannels{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "ByLocation: "+fmt.Sprintf("%#v", this.ByLocation)+",\n")
	s = append(s, "CheckLimit: "+fmt.Sprintf("%#v", this.CheckLimit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsGetBroadcastsForDiscussion) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLChannelsGetBroadcastsForDiscussion{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsGetChannels) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLChannelsGetChannels{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsGetDialogs) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLChannelsGetDialogs{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsGetFullChannel) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLChannelsGetFullChannel{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsGetGroupsForDiscussion) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLChannelsGetGroupsForDiscussion{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsGetImportantHistory) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 13)
	s = append(s, "&mtproto.TLChannelsGetImportantHistory{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "OffsetId: "+fmt.Sprintf("%#v", this.OffsetId)+",\n")
	s = append(s, "OffsetDate: "+fmt.Sprintf("%#v", this.OffsetDate)+",\n")
	s = append(s, "AddOffset: "+fmt.Sprintf("%#v", this.AddOffset)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	s = append(s, "MaxId: "+fmt.Sprintf("%#v", this.MaxId)+",\n")
	s = append(s, "MinId: "+fmt.Sprintf("%#v", this.MinId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsGetInactiveChannels) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLChannelsGetInactiveChannels{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsGetLeftChannels) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLChannelsGetLeftChannels{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsGetMessages) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLChannelsGetMessages{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "Id93D7B34771: "+fmt.Sprintf("%#v", this.Id93D7B34771)+",\n")
	if this.IdAD8C9A2385 != nil {
		s = append(s, "IdAD8C9A2385: "+fmt.Sprintf("%#v", this.IdAD8C9A2385)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsGetParticipant) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLChannelsGetParticipant{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsGetParticipants) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&mtproto.TLChannelsGetParticipants{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.Filter != nil {
		s = append(s, "Filter: "+fmt.Sprintf("%#v", this.Filter)+",\n")
	}
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsInviteToChannel) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLChannelsInviteToChannel{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.Users != nil {
		s = append(s, "Users: "+fmt.Sprintf("%#v", this.Users)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsJoinChannel) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLChannelsJoinChannel{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsKickFromChannel) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLChannelsKickFromChannel{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	if this.Kicked != nil {
		s = append(s, "Kicked: "+fmt.Sprintf("%#v", this.Kicked)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsLeaveChannel) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLChannelsLeaveChannel{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsReadHistory) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLChannelsReadHistory{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "MaxId: "+fmt.Sprintf("%#v", this.MaxId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsReadMessageContents) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLChannelsReadMessageContents{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsReportSpam) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLChannelsReportSpam{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsSetDiscussionGroup) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLChannelsSetDiscussionGroup{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Broadcast != nil {
		s = append(s, "Broadcast: "+fmt.Sprintf("%#v", this.Broadcast)+",\n")
	}
	if this.Group != nil {
		s = append(s, "Group: "+fmt.Sprintf("%#v", this.Group)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsSetStickers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLChannelsSetStickers{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.Stickerset != nil {
		s = append(s, "Stickerset: "+fmt.Sprintf("%#v", this.Stickerset)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsToggleComments) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLChannelsToggleComments{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.Enabled != nil {
		s = append(s, "Enabled: "+fmt.Sprintf("%#v", this.Enabled)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsToggleInvites) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLChannelsToggleInvites{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.Enabled != nil {
		s = append(s, "Enabled: "+fmt.Sprintf("%#v", this.Enabled)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsTogglePreHistoryHidden) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLChannelsTogglePreHistoryHidden{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.Enabled != nil {
		s = append(s, "Enabled: "+fmt.Sprintf("%#v", this.Enabled)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsToggleSignatures) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLChannelsToggleSignatures{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.Enabled != nil {
		s = append(s, "Enabled: "+fmt.Sprintf("%#v", this.Enabled)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsToggleSlowMode) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLChannelsToggleSlowMode{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "Seconds: "+fmt.Sprintf("%#v", this.Seconds)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsUpdatePinnedMessage) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLChannelsUpdatePinnedMessage{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Silent: "+fmt.Sprintf("%#v", this.Silent)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLChannelsUpdateUsername) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLChannelsUpdateUsername{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "Username: "+fmt.Sprintf("%#v", this.Username)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsAcceptContact) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLContactsAcceptContact{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsAddContact) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 12)
	s = append(s, "&mtproto.TLContactsAddContact{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "AddPhonePrivacyException: "+fmt.Sprintf("%#v", this.AddPhonePrivacyException)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	s = append(s, "FirstName: "+fmt.Sprintf("%#v", this.FirstName)+",\n")
	s = append(s, "LastName: "+fmt.Sprintf("%#v", this.LastName)+",\n")
	s = append(s, "Phone: "+fmt.Sprintf("%#v", this.Phone)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsBlock) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLContactsBlock{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Id332B49FC71 != nil {
		s = append(s, "Id332B49FC71: "+fmt.Sprintf("%#v", this.Id332B49FC71)+",\n")
	}
	if this.Id68CC1411119 != nil {
		s = append(s, "Id68CC1411119: "+fmt.Sprintf("%#v", this.Id68CC1411119)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsBlockFromReplies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&mtproto.TLContactsBlockFromReplies{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "DeleteMessage: "+fmt.Sprintf("%#v", this.DeleteMessage)+",\n")
	s = append(s, "DeleteHistory: "+fmt.Sprintf("%#v", this.DeleteHistory)+",\n")
	s = append(s, "ReportSpam: "+fmt.Sprintf("%#v", this.ReportSpam)+",\n")
	s = append(s, "MsgId: "+fmt.Sprintf("%#v", this.MsgId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsDeleteByPhones) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLContactsDeleteByPhones{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Phones: "+fmt.Sprintf("%#v", this.Phones)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsDeleteContact) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLContactsDeleteContact{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsDeleteContacts) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLContactsDeleteContacts{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsExportCard) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLContactsExportCard{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsGetBlocked) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLContactsGetBlocked{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsGetContactIDs) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLContactsGetContactIDs{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsGetContacts) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLContactsGetContacts{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "HashC023849F71: "+fmt.Sprintf("%#v", this.HashC023849F71)+",\n")
	s = append(s, "Hash22C6AA0851: "+fmt.Sprintf("%#v", this.Hash22C6AA0851)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsGetLocated) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLContactsGetLocated{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.GeoPoint != nil {
		s = append(s, "GeoPoint: "+fmt.Sprintf("%#v", this.GeoPoint)+",\n")
	}
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Background: "+fmt.Sprintf("%#v", this.Background)+",\n")
	s = append(s, "SelfExpires: "+fmt.Sprintf("%#v", this.SelfExpires)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsGetSaved) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLContactsGetSaved{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsGetStatuses) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLContactsGetStatuses{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsGetTopPeers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 16)
	s = append(s, "&mtproto.TLContactsGetTopPeers{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Correspondents: "+fmt.Sprintf("%#v", this.Correspondents)+",\n")
	s = append(s, "BotsPm: "+fmt.Sprintf("%#v", this.BotsPm)+",\n")
	s = append(s, "BotsInline: "+fmt.Sprintf("%#v", this.BotsInline)+",\n")
	s = append(s, "PhoneCalls: "+fmt.Sprintf("%#v", this.PhoneCalls)+",\n")
	s = append(s, "Groups: "+fmt.Sprintf("%#v", this.Groups)+",\n")
	s = append(s, "Channels: "+fmt.Sprintf("%#v", this.Channels)+",\n")
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsImportCard) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLContactsImportCard{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "ExportCard: "+fmt.Sprintf("%#v", this.ExportCard)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsImportContacts) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLContactsImportContacts{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Contacts != nil {
		s = append(s, "Contacts: "+fmt.Sprintf("%#v", this.Contacts)+",\n")
	}
	if this.Replace != nil {
		s = append(s, "Replace: "+fmt.Sprintf("%#v", this.Replace)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsResetSaved) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLContactsResetSaved{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsResetTopPeerRating) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLContactsResetTopPeerRating{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Category != nil {
		s = append(s, "Category: "+fmt.Sprintf("%#v", this.Category)+",\n")
	}
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsResolveUsername) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLContactsResolveUsername{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Username: "+fmt.Sprintf("%#v", this.Username)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsSearch) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLContactsSearch{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Q: "+fmt.Sprintf("%#v", this.Q)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsToggleTopPeers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLContactsToggleTopPeers{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Enabled != nil {
		s = append(s, "Enabled: "+fmt.Sprintf("%#v", this.Enabled)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLContactsUnblock) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLContactsUnblock{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.IdE54100BD71 != nil {
		s = append(s, "IdE54100BD71: "+fmt.Sprintf("%#v", this.IdE54100BD71)+",\n")
	}
	if this.IdBEA65D50119 != nil {
		s = append(s, "IdBEA65D50119: "+fmt.Sprintf("%#v", this.IdBEA65D50119)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLFoldersDeleteFolder) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLFoldersDeleteFolder{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "FolderId: "+fmt.Sprintf("%#v", this.FolderId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLFoldersEditPeerFolders) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLFoldersEditPeerFolders{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.FolderPeers != nil {
		s = append(s, "FolderPeers: "+fmt.Sprintf("%#v", this.FolderPeers)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpAcceptTermsOfService) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLHelpAcceptTermsOfService{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpDismissSuggestion) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLHelpDismissSuggestion{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Suggestion: "+fmt.Sprintf("%#v", this.Suggestion)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpEditUserInfo) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLHelpEditUserInfo{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	s = append(s, "Message: "+fmt.Sprintf("%#v", this.Message)+",\n")
	if this.Entities != nil {
		s = append(s, "Entities: "+fmt.Sprintf("%#v", this.Entities)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetAppChangelog) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&mtproto.TLHelpGetAppChangelog{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "PrevAppVersion: "+fmt.Sprintf("%#v", this.PrevAppVersion)+",\n")
	s = append(s, "DeviceModel: "+fmt.Sprintf("%#v", this.DeviceModel)+",\n")
	s = append(s, "SystemVersion: "+fmt.Sprintf("%#v", this.SystemVersion)+",\n")
	s = append(s, "AppVersion: "+fmt.Sprintf("%#v", this.AppVersion)+",\n")
	s = append(s, "LangCode: "+fmt.Sprintf("%#v", this.LangCode)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetAppConfig) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLHelpGetAppConfig{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetAppUpdate) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&mtproto.TLHelpGetAppUpdate{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "DeviceModel: "+fmt.Sprintf("%#v", this.DeviceModel)+",\n")
	s = append(s, "SystemVersion: "+fmt.Sprintf("%#v", this.SystemVersion)+",\n")
	s = append(s, "AppVersion: "+fmt.Sprintf("%#v", this.AppVersion)+",\n")
	s = append(s, "LangCode: "+fmt.Sprintf("%#v", this.LangCode)+",\n")
	s = append(s, "Source: "+fmt.Sprintf("%#v", this.Source)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetCdnConfig) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLHelpGetCdnConfig{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetConfig) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLHelpGetConfig{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetCountriesList) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLHelpGetCountriesList{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "LangCode: "+fmt.Sprintf("%#v", this.LangCode)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetDeepLinkInfo) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLHelpGetDeepLinkInfo{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Path: "+fmt.Sprintf("%#v", this.Path)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetInviteText) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLHelpGetInviteText{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "LangCode: "+fmt.Sprintf("%#v", this.LangCode)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetNearestDc) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLHelpGetNearestDc{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetPassportConfig) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLHelpGetPassportConfig{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetPromoData) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLHelpGetPromoData{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetProxyData) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLHelpGetProxyData{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetRecentMeUrls) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLHelpGetRecentMeUrls{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Referer: "+fmt.Sprintf("%#v", this.Referer)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetSupport) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLHelpGetSupport{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetSupportName) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLHelpGetSupportName{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetTermsOfService) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLHelpGetTermsOfService{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "LangCode: "+fmt.Sprintf("%#v", this.LangCode)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetTermsOfServiceUpdate) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLHelpGetTermsOfServiceUpdate{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpGetUserInfo) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLHelpGetUserInfo{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpHidePromoData) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLHelpHidePromoData{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpSaveAppLog) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLHelpSaveAppLog{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Events != nil {
		s = append(s, "Events: "+fmt.Sprintf("%#v", this.Events)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpSetBotUpdatesStatus) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLHelpSetBotUpdatesStatus{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "PendingUpdatesCount: "+fmt.Sprintf("%#v", this.PendingUpdatesCount)+",\n")
	s = append(s, "Message: "+fmt.Sprintf("%#v", this.Message)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLHelpTest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLHelpTest{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLLangpackGetDifference) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLLangpackGetDifference{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "FromVersion: "+fmt.Sprintf("%#v", this.FromVersion)+",\n")
	s = append(s, "LangCode: "+fmt.Sprintf("%#v", this.LangCode)+",\n")
	s = append(s, "LangPack: "+fmt.Sprintf("%#v", this.LangPack)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLLangpackGetLangPack) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLLangpackGetLangPack{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "LangCode: "+fmt.Sprintf("%#v", this.LangCode)+",\n")
	s = append(s, "LangPack: "+fmt.Sprintf("%#v", this.LangPack)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLLangpackGetLanguage) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLLangpackGetLanguage{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "LangPack: "+fmt.Sprintf("%#v", this.LangPack)+",\n")
	s = append(s, "LangCode: "+fmt.Sprintf("%#v", this.LangCode)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLLangpackGetLanguages) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLLangpackGetLanguages{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "LangPack: "+fmt.Sprintf("%#v", this.LangPack)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLLangpackGetStrings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLLangpackGetStrings{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "LangCode: "+fmt.Sprintf("%#v", this.LangCode)+",\n")
	s = append(s, "Keys: "+fmt.Sprintf("%#v", this.Keys)+",\n")
	s = append(s, "LangPack: "+fmt.Sprintf("%#v", this.LangPack)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesAcceptEncryption) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesAcceptEncryption{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "GB: "+fmt.Sprintf("%#v", this.GB)+",\n")
	s = append(s, "KeyFingerprint: "+fmt.Sprintf("%#v", this.KeyFingerprint)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesAcceptUrlAuth) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&mtproto.TLMessagesAcceptUrlAuth{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "WriteAllowed: "+fmt.Sprintf("%#v", this.WriteAllowed)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "MsgId: "+fmt.Sprintf("%#v", this.MsgId)+",\n")
	s = append(s, "ButtonId: "+fmt.Sprintf("%#v", this.ButtonId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesAddChatUser) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesAddChatUser{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "ChatId: "+fmt.Sprintf("%#v", this.ChatId)+",\n")
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	s = append(s, "FwdLimit: "+fmt.Sprintf("%#v", this.FwdLimit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesCheckChatInvite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesCheckChatInvite{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesClearAllDrafts) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesClearAllDrafts{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesClearRecentStickers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesClearRecentStickers{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Attached: "+fmt.Sprintf("%#v", this.Attached)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesCreateChat) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesCreateChat{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Users != nil {
		s = append(s, "Users: "+fmt.Sprintf("%#v", this.Users)+",\n")
	}
	s = append(s, "Title: "+fmt.Sprintf("%#v", this.Title)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesDeleteChatUser) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesDeleteChatUser{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "ChatId: "+fmt.Sprintf("%#v", this.ChatId)+",\n")
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesDeleteHistory) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&mtproto.TLMessagesDeleteHistory{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "MaxId: "+fmt.Sprintf("%#v", this.MaxId)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "JustClear: "+fmt.Sprintf("%#v", this.JustClear)+",\n")
	s = append(s, "Revoke: "+fmt.Sprintf("%#v", this.Revoke)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesDeleteMessages) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesDeleteMessages{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Revoke: "+fmt.Sprintf("%#v", this.Revoke)+",\n")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesDeleteScheduledMessages) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesDeleteScheduledMessages{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesDiscardEncryption) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesDiscardEncryption{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "ChatId: "+fmt.Sprintf("%#v", this.ChatId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesEditChatAbout) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesEditChatAbout{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "About: "+fmt.Sprintf("%#v", this.About)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesEditChatAdmin) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesEditChatAdmin{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "ChatId: "+fmt.Sprintf("%#v", this.ChatId)+",\n")
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	if this.IsAdmin != nil {
		s = append(s, "IsAdmin: "+fmt.Sprintf("%#v", this.IsAdmin)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesEditChatDefaultBannedRights) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesEditChatDefaultBannedRights{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.BannedRights != nil {
		s = append(s, "BannedRights: "+fmt.Sprintf("%#v", this.BannedRights)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesEditChatPhoto) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesEditChatPhoto{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "ChatId: "+fmt.Sprintf("%#v", this.ChatId)+",\n")
	if this.Photo != nil {
		s = append(s, "Photo: "+fmt.Sprintf("%#v", this.Photo)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesEditChatTitle) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesEditChatTitle{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "ChatId: "+fmt.Sprintf("%#v", this.ChatId)+",\n")
	s = append(s, "Title: "+fmt.Sprintf("%#v", this.Title)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesEditInlineBotMessage) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 15)
	s = append(s, "&mtproto.TLMessagesEditInlineBotMessage{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "NoWebpage: "+fmt.Sprintf("%#v", this.NoWebpage)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	s = append(s, "Message: "+fmt.Sprintf("%#v", this.Message)+",\n")
	if this.ReplyMarkup != nil {
		s = append(s, "ReplyMarkup: "+fmt.Sprintf("%#v", this.ReplyMarkup)+",\n")
	}
	if this.Entities != nil {
		s = append(s, "Entities: "+fmt.Sprintf("%#v", this.Entities)+",\n")
	}
	s = append(s, "StopGeoLive: "+fmt.Sprintf("%#v", this.StopGeoLive)+",\n")
	if this.Media != nil {
		s = append(s, "Media: "+fmt.Sprintf("%#v", this.Media)+",\n")
	}
	if this.GeoPoint != nil {
		s = append(s, "GeoPoint: "+fmt.Sprintf("%#v", this.GeoPoint)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesEditMessage) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 17)
	s = append(s, "&mtproto.TLMessagesEditMessage{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "NoWebpage: "+fmt.Sprintf("%#v", this.NoWebpage)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	s = append(s, "Message: "+fmt.Sprintf("%#v", this.Message)+",\n")
	if this.ReplyMarkup != nil {
		s = append(s, "ReplyMarkup: "+fmt.Sprintf("%#v", this.ReplyMarkup)+",\n")
	}
	if this.Entities != nil {
		s = append(s, "Entities: "+fmt.Sprintf("%#v", this.Entities)+",\n")
	}
	s = append(s, "StopGeoLive: "+fmt.Sprintf("%#v", this.StopGeoLive)+",\n")
	if this.Media != nil {
		s = append(s, "Media: "+fmt.Sprintf("%#v", this.Media)+",\n")
	}
	if this.GeoPoint != nil {
		s = append(s, "GeoPoint: "+fmt.Sprintf("%#v", this.GeoPoint)+",\n")
	}
	s = append(s, "ScheduleDate: "+fmt.Sprintf("%#v", this.ScheduleDate)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesExportChatInvite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesExportChatInvite{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "ChatId: "+fmt.Sprintf("%#v", this.ChatId)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesFaveSticker) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesFaveSticker{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.Unfave != nil {
		s = append(s, "Unfave: "+fmt.Sprintf("%#v", this.Unfave)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesForwardMessage) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesForwardMessage{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	s = append(s, "RandomId: "+fmt.Sprintf("%#v", this.RandomId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesForwardMessages) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 15)
	s = append(s, "&mtproto.TLMessagesForwardMessages{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Silent: "+fmt.Sprintf("%#v", this.Silent)+",\n")
	s = append(s, "Background: "+fmt.Sprintf("%#v", this.Background)+",\n")
	s = append(s, "WithMyScore: "+fmt.Sprintf("%#v", this.WithMyScore)+",\n")
	if this.FromPeer != nil {
		s = append(s, "FromPeer: "+fmt.Sprintf("%#v", this.FromPeer)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	s = append(s, "RandomId: "+fmt.Sprintf("%#v", this.RandomId)+",\n")
	if this.ToPeer != nil {
		s = append(s, "ToPeer: "+fmt.Sprintf("%#v", this.ToPeer)+",\n")
	}
	s = append(s, "ScheduleDate: "+fmt.Sprintf("%#v", this.ScheduleDate)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetAllChats) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesGetAllChats{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "ExceptIds: "+fmt.Sprintf("%#v", this.ExceptIds)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetAllDrafts) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesGetAllDrafts{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetAllStickers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesGetAllStickers{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetArchivedStickers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLMessagesGetArchivedStickers{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Masks: "+fmt.Sprintf("%#v", this.Masks)+",\n")
	s = append(s, "OffsetId: "+fmt.Sprintf("%#v", this.OffsetId)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetAttachedStickers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesGetAttachedStickers{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Media != nil {
		s = append(s, "Media: "+fmt.Sprintf("%#v", this.Media)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetBotCallbackAnswer) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 12)
	s = append(s, "&mtproto.TLMessagesGetBotCallbackAnswer{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Game: "+fmt.Sprintf("%#v", this.Game)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "MsgId: "+fmt.Sprintf("%#v", this.MsgId)+",\n")
	s = append(s, "Data: "+fmt.Sprintf("%#v", this.Data)+",\n")
	if this.Password != nil {
		s = append(s, "Password: "+fmt.Sprintf("%#v", this.Password)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetChats) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesGetChats{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetCommonChats) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesGetCommonChats{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	s = append(s, "MaxId: "+fmt.Sprintf("%#v", this.MaxId)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetDhConfig) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesGetDhConfig{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Version: "+fmt.Sprintf("%#v", this.Version)+",\n")
	s = append(s, "RandomLength: "+fmt.Sprintf("%#v", this.RandomLength)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetDialogFilters) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesGetDialogFilters{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetDialogUnreadMarks) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesGetDialogUnreadMarks{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetDialogs) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 14)
	s = append(s, "&mtproto.TLMessagesGetDialogs{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "ExcludePinned: "+fmt.Sprintf("%#v", this.ExcludePinned)+",\n")
	s = append(s, "OffsetDate: "+fmt.Sprintf("%#v", this.OffsetDate)+",\n")
	s = append(s, "OffsetId: "+fmt.Sprintf("%#v", this.OffsetId)+",\n")
	if this.OffsetPeer != nil {
		s = append(s, "OffsetPeer: "+fmt.Sprintf("%#v", this.OffsetPeer)+",\n")
	}
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	s = append(s, "FolderId: "+fmt.Sprintf("%#v", this.FolderId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetDiscussionMessage) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesGetDiscussionMessage{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "MsgId: "+fmt.Sprintf("%#v", this.MsgId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetDocumentByHash) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesGetDocumentByHash{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Sha256: "+fmt.Sprintf("%#v", this.Sha256)+",\n")
	s = append(s, "Size_: "+fmt.Sprintf("%#v", this.Size_)+",\n")
	s = append(s, "MimeType: "+fmt.Sprintf("%#v", this.MimeType)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetEmojiKeywords) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesGetEmojiKeywords{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "LangCode: "+fmt.Sprintf("%#v", this.LangCode)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetEmojiKeywordsDifference) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesGetEmojiKeywordsDifference{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "LangCode: "+fmt.Sprintf("%#v", this.LangCode)+",\n")
	s = append(s, "FromVersion: "+fmt.Sprintf("%#v", this.FromVersion)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetEmojiKeywordsLanguages) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesGetEmojiKeywordsLanguages{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "LangCodes: "+fmt.Sprintf("%#v", this.LangCodes)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetEmojiURL) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesGetEmojiURL{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "LangCode: "+fmt.Sprintf("%#v", this.LangCode)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetFavedStickers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesGetFavedStickers{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetFeaturedStickers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesGetFeaturedStickers{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetFullChat) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesGetFullChat{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "ChatId: "+fmt.Sprintf("%#v", this.ChatId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetGameHighScores) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesGetGameHighScores{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetHistory) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 14)
	s = append(s, "&mtproto.TLMessagesGetHistory{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "OffsetId: "+fmt.Sprintf("%#v", this.OffsetId)+",\n")
	s = append(s, "OffsetDate: "+fmt.Sprintf("%#v", this.OffsetDate)+",\n")
	s = append(s, "AddOffset: "+fmt.Sprintf("%#v", this.AddOffset)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	s = append(s, "MaxId: "+fmt.Sprintf("%#v", this.MaxId)+",\n")
	s = append(s, "MinId: "+fmt.Sprintf("%#v", this.MinId)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetInlineBotResults) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 12)
	s = append(s, "&mtproto.TLMessagesGetInlineBotResults{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	if this.Bot != nil {
		s = append(s, "Bot: "+fmt.Sprintf("%#v", this.Bot)+",\n")
	}
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.GeoPoint != nil {
		s = append(s, "GeoPoint: "+fmt.Sprintf("%#v", this.GeoPoint)+",\n")
	}
	s = append(s, "Query: "+fmt.Sprintf("%#v", this.Query)+",\n")
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetInlineGameHighScores) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesGetInlineGameHighScores{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetMaskStickers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesGetMaskStickers{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetMessageEditData) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesGetMessageEditData{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetMessages) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesGetMessages{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Id4222FA7471: "+fmt.Sprintf("%#v", this.Id4222FA7471)+",\n")
	if this.Id63C6650685 != nil {
		s = append(s, "Id63C6650685: "+fmt.Sprintf("%#v", this.Id63C6650685)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetMessagesViews) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesGetMessagesViews{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.Increment != nil {
		s = append(s, "Increment: "+fmt.Sprintf("%#v", this.Increment)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetOldFeaturedStickers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesGetOldFeaturedStickers{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetOnlines) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesGetOnlines{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetPeerDialogs) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesGetPeerDialogs{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peers2D9776B971 != nil {
		s = append(s, "Peers2D9776B971: "+fmt.Sprintf("%#v", this.Peers2D9776B971)+",\n")
	}
	if this.PeersE470BCFD85 != nil {
		s = append(s, "PeersE470BCFD85: "+fmt.Sprintf("%#v", this.PeersE470BCFD85)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetPeerSettings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesGetPeerSettings{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetPinnedDialogs) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesGetPinnedDialogs{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "FolderId: "+fmt.Sprintf("%#v", this.FolderId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetPollResults) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesGetPollResults{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "MsgId: "+fmt.Sprintf("%#v", this.MsgId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetPollVotes) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 12)
	s = append(s, "&mtproto.TLMessagesGetPollVotes{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	s = append(s, "Option: "+fmt.Sprintf("%#v", this.Option)+",\n")
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetRecentLocations) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesGetRecentLocations{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetRecentStickers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesGetRecentStickers{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Attached: "+fmt.Sprintf("%#v", this.Attached)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetReplies) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 15)
	s = append(s, "&mtproto.TLMessagesGetReplies{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "MsgId: "+fmt.Sprintf("%#v", this.MsgId)+",\n")
	s = append(s, "OffsetId: "+fmt.Sprintf("%#v", this.OffsetId)+",\n")
	s = append(s, "OffsetDate: "+fmt.Sprintf("%#v", this.OffsetDate)+",\n")
	s = append(s, "AddOffset: "+fmt.Sprintf("%#v", this.AddOffset)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	s = append(s, "MaxId: "+fmt.Sprintf("%#v", this.MaxId)+",\n")
	s = append(s, "MinId: "+fmt.Sprintf("%#v", this.MinId)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetSavedGifs) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesGetSavedGifs{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetScheduledHistory) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesGetScheduledHistory{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetScheduledMessages) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesGetScheduledMessages{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetSearchCounters) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesGetSearchCounters{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.Filters != nil {
		s = append(s, "Filters: "+fmt.Sprintf("%#v", this.Filters)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetSplitRanges) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesGetSplitRanges{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetStatsURL) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLMessagesGetStatsURL{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Dark: "+fmt.Sprintf("%#v", this.Dark)+",\n")
	s = append(s, "Params: "+fmt.Sprintf("%#v", this.Params)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetStickerSet) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesGetStickerSet{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Stickerset != nil {
		s = append(s, "Stickerset: "+fmt.Sprintf("%#v", this.Stickerset)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetStickers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesGetStickers{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Emoticon: "+fmt.Sprintf("%#v", this.Emoticon)+",\n")
	s = append(s, "HashAE22E04551: "+fmt.Sprintf("%#v", this.HashAE22E04551)+",\n")
	s = append(s, "Hash43D4F2C85: "+fmt.Sprintf("%#v", this.Hash43D4F2C85)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetSuggestedDialogFilters) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLMessagesGetSuggestedDialogFilters{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetUnreadMentions) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 12)
	s = append(s, "&mtproto.TLMessagesGetUnreadMentions{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "OffsetId: "+fmt.Sprintf("%#v", this.OffsetId)+",\n")
	s = append(s, "AddOffset: "+fmt.Sprintf("%#v", this.AddOffset)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	s = append(s, "MaxId: "+fmt.Sprintf("%#v", this.MaxId)+",\n")
	s = append(s, "MinId: "+fmt.Sprintf("%#v", this.MinId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetWebPage) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesGetWebPage{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Url: "+fmt.Sprintf("%#v", this.Url)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesGetWebPagePreview) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesGetWebPagePreview{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Message: "+fmt.Sprintf("%#v", this.Message)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	if this.Entities != nil {
		s = append(s, "Entities: "+fmt.Sprintf("%#v", this.Entities)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesHidePeerSettingsBar) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesHidePeerSettingsBar{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesHideReportSpam) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesHideReportSpam{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesImportChatInvite) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesImportChatInvite{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesInstallStickerSet) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesInstallStickerSet{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Stickerset != nil {
		s = append(s, "Stickerset: "+fmt.Sprintf("%#v", this.Stickerset)+",\n")
	}
	if this.Archived != nil {
		s = append(s, "Archived: "+fmt.Sprintf("%#v", this.Archived)+",\n")
	}
	if this.Disabled != nil {
		s = append(s, "Disabled: "+fmt.Sprintf("%#v", this.Disabled)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesMarkDialogUnread) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesMarkDialogUnread{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Unread: "+fmt.Sprintf("%#v", this.Unread)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesMigrateChat) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesMigrateChat{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "ChatId: "+fmt.Sprintf("%#v", this.ChatId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesReadDiscussion) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesReadDiscussion{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "MsgId: "+fmt.Sprintf("%#v", this.MsgId)+",\n")
	s = append(s, "ReadMaxId: "+fmt.Sprintf("%#v", this.ReadMaxId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesReadEncryptedHistory) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesReadEncryptedHistory{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "MaxDate: "+fmt.Sprintf("%#v", this.MaxDate)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesReadFeaturedStickers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesReadFeaturedStickers{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesReadHistory) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesReadHistory{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "MaxId: "+fmt.Sprintf("%#v", this.MaxId)+",\n")
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesReadMentions) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesReadMentions{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesReadMessageContents) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesReadMessageContents{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesReceivedMessages) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesReceivedMessages{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "MaxId: "+fmt.Sprintf("%#v", this.MaxId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesReceivedQueue) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesReceivedQueue{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "MaxQts: "+fmt.Sprintf("%#v", this.MaxQts)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesReorderPinnedDialogs) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&mtproto.TLMessagesReorderPinnedDialogs{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Force: "+fmt.Sprintf("%#v", this.Force)+",\n")
	if this.Order959FF64471 != nil {
		s = append(s, "Order959FF64471: "+fmt.Sprintf("%#v", this.Order959FF64471)+",\n")
	}
	if this.Order5B51D63F85 != nil {
		s = append(s, "Order5B51D63F85: "+fmt.Sprintf("%#v", this.Order5B51D63F85)+",\n")
	}
	s = append(s, "FolderId: "+fmt.Sprintf("%#v", this.FolderId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesReorderStickerSets) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesReorderStickerSets{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Masks: "+fmt.Sprintf("%#v", this.Masks)+",\n")
	s = append(s, "Order: "+fmt.Sprintf("%#v", this.Order)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesReport) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesReport{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.Reason != nil {
		s = append(s, "Reason: "+fmt.Sprintf("%#v", this.Reason)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesReportEncryptedSpam) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesReportEncryptedSpam{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesReportSpam) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesReportSpam{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesRequestEncryption) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesRequestEncryption{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	s = append(s, "RandomId: "+fmt.Sprintf("%#v", this.RandomId)+",\n")
	s = append(s, "GA: "+fmt.Sprintf("%#v", this.GA)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesRequestUrlAuth) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesRequestUrlAuth{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "MsgId: "+fmt.Sprintf("%#v", this.MsgId)+",\n")
	s = append(s, "ButtonId: "+fmt.Sprintf("%#v", this.ButtonId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSaveDraft) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 12)
	s = append(s, "&mtproto.TLMessagesSaveDraft{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "NoWebpage: "+fmt.Sprintf("%#v", this.NoWebpage)+",\n")
	s = append(s, "ReplyToMsgId: "+fmt.Sprintf("%#v", this.ReplyToMsgId)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Message: "+fmt.Sprintf("%#v", this.Message)+",\n")
	if this.Entities != nil {
		s = append(s, "Entities: "+fmt.Sprintf("%#v", this.Entities)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSaveGif) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesSaveGif{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.Unsave != nil {
		s = append(s, "Unsave: "+fmt.Sprintf("%#v", this.Unsave)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSaveRecentSticker) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLMessagesSaveRecentSticker{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Attached: "+fmt.Sprintf("%#v", this.Attached)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.Unsave != nil {
		s = append(s, "Unsave: "+fmt.Sprintf("%#v", this.Unsave)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSearch) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 23)
	s = append(s, "&mtproto.TLMessagesSearch{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Q: "+fmt.Sprintf("%#v", this.Q)+",\n")
	if this.FromId39E9EA071 != nil {
		s = append(s, "FromId39E9EA071: "+fmt.Sprintf("%#v", this.FromId39E9EA071)+",\n")
	}
	if this.Filter != nil {
		s = append(s, "Filter: "+fmt.Sprintf("%#v", this.Filter)+",\n")
	}
	s = append(s, "MinDate: "+fmt.Sprintf("%#v", this.MinDate)+",\n")
	s = append(s, "MaxDate: "+fmt.Sprintf("%#v", this.MaxDate)+",\n")
	s = append(s, "OffsetId: "+fmt.Sprintf("%#v", this.OffsetId)+",\n")
	s = append(s, "AddOffset: "+fmt.Sprintf("%#v", this.AddOffset)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	s = append(s, "MaxId: "+fmt.Sprintf("%#v", this.MaxId)+",\n")
	s = append(s, "MinId: "+fmt.Sprintf("%#v", this.MinId)+",\n")
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	s = append(s, "ImportantOnly: "+fmt.Sprintf("%#v", this.ImportantOnly)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	s = append(s, "TopMsgId: "+fmt.Sprintf("%#v", this.TopMsgId)+",\n")
	if this.FromIdC352EEC120 != nil {
		s = append(s, "FromIdC352EEC120: "+fmt.Sprintf("%#v", this.FromIdC352EEC120)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSearchGifs) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesSearchGifs{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Q: "+fmt.Sprintf("%#v", this.Q)+",\n")
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSearchGlobal) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 17)
	s = append(s, "&mtproto.TLMessagesSearchGlobal{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Q: "+fmt.Sprintf("%#v", this.Q)+",\n")
	s = append(s, "OffsetDate: "+fmt.Sprintf("%#v", this.OffsetDate)+",\n")
	if this.OffsetPeer != nil {
		s = append(s, "OffsetPeer: "+fmt.Sprintf("%#v", this.OffsetPeer)+",\n")
	}
	s = append(s, "OffsetId: "+fmt.Sprintf("%#v", this.OffsetId)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	s = append(s, "OffsetRate: "+fmt.Sprintf("%#v", this.OffsetRate)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "FolderId: "+fmt.Sprintf("%#v", this.FolderId)+",\n")
	if this.Filter != nil {
		s = append(s, "Filter: "+fmt.Sprintf("%#v", this.Filter)+",\n")
	}
	s = append(s, "MinDate: "+fmt.Sprintf("%#v", this.MinDate)+",\n")
	s = append(s, "MaxDate: "+fmt.Sprintf("%#v", this.MaxDate)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSearchStickerSets) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLMessagesSearchStickerSets{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "ExcludeFeatured: "+fmt.Sprintf("%#v", this.ExcludeFeatured)+",\n")
	s = append(s, "Q: "+fmt.Sprintf("%#v", this.Q)+",\n")
	s = append(s, "Hash: "+fmt.Sprintf("%#v", this.Hash)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSendBroadcast) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLMessagesSendBroadcast{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Contacts != nil {
		s = append(s, "Contacts: "+fmt.Sprintf("%#v", this.Contacts)+",\n")
	}
	s = append(s, "RandomId: "+fmt.Sprintf("%#v", this.RandomId)+",\n")
	s = append(s, "Message: "+fmt.Sprintf("%#v", this.Message)+",\n")
	if this.Media != nil {
		s = append(s, "Media: "+fmt.Sprintf("%#v", this.Media)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSendEncrypted) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&mtproto.TLMessagesSendEncrypted{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "RandomId: "+fmt.Sprintf("%#v", this.RandomId)+",\n")
	s = append(s, "Data: "+fmt.Sprintf("%#v", this.Data)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Silent: "+fmt.Sprintf("%#v", this.Silent)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSendEncryptedFile) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 12)
	s = append(s, "&mtproto.TLMessagesSendEncryptedFile{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "RandomId: "+fmt.Sprintf("%#v", this.RandomId)+",\n")
	s = append(s, "Data: "+fmt.Sprintf("%#v", this.Data)+",\n")
	if this.File != nil {
		s = append(s, "File: "+fmt.Sprintf("%#v", this.File)+",\n")
	}
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Silent: "+fmt.Sprintf("%#v", this.Silent)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSendEncryptedService) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesSendEncryptedService{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "RandomId: "+fmt.Sprintf("%#v", this.RandomId)+",\n")
	s = append(s, "Data: "+fmt.Sprintf("%#v", this.Data)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSendInlineBotResult) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 17)
	s = append(s, "&mtproto.TLMessagesSendInlineBotResult{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Silent: "+fmt.Sprintf("%#v", this.Silent)+",\n")
	s = append(s, "Background: "+fmt.Sprintf("%#v", this.Background)+",\n")
	s = append(s, "ClearDraft: "+fmt.Sprintf("%#v", this.ClearDraft)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "ReplyToMsgId: "+fmt.Sprintf("%#v", this.ReplyToMsgId)+",\n")
	s = append(s, "RandomId: "+fmt.Sprintf("%#v", this.RandomId)+",\n")
	s = append(s, "QueryId: "+fmt.Sprintf("%#v", this.QueryId)+",\n")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	s = append(s, "HideVia: "+fmt.Sprintf("%#v", this.HideVia)+",\n")
	s = append(s, "ScheduleDate: "+fmt.Sprintf("%#v", this.ScheduleDate)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSendMedia) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 18)
	s = append(s, "&mtproto.TLMessagesSendMedia{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Silent: "+fmt.Sprintf("%#v", this.Silent)+",\n")
	s = append(s, "Background: "+fmt.Sprintf("%#v", this.Background)+",\n")
	s = append(s, "ClearDraft: "+fmt.Sprintf("%#v", this.ClearDraft)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "ReplyToMsgId: "+fmt.Sprintf("%#v", this.ReplyToMsgId)+",\n")
	if this.Media != nil {
		s = append(s, "Media: "+fmt.Sprintf("%#v", this.Media)+",\n")
	}
	s = append(s, "RandomId: "+fmt.Sprintf("%#v", this.RandomId)+",\n")
	if this.ReplyMarkup != nil {
		s = append(s, "ReplyMarkup: "+fmt.Sprintf("%#v", this.ReplyMarkup)+",\n")
	}
	s = append(s, "Message: "+fmt.Sprintf("%#v", this.Message)+",\n")
	if this.Entities != nil {
		s = append(s, "Entities: "+fmt.Sprintf("%#v", this.Entities)+",\n")
	}
	s = append(s, "ScheduleDate: "+fmt.Sprintf("%#v", this.ScheduleDate)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSendMessage) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 18)
	s = append(s, "&mtproto.TLMessagesSendMessage{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "NoWebpage: "+fmt.Sprintf("%#v", this.NoWebpage)+",\n")
	s = append(s, "Silent: "+fmt.Sprintf("%#v", this.Silent)+",\n")
	s = append(s, "Background: "+fmt.Sprintf("%#v", this.Background)+",\n")
	s = append(s, "ClearDraft: "+fmt.Sprintf("%#v", this.ClearDraft)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "ReplyToMsgId: "+fmt.Sprintf("%#v", this.ReplyToMsgId)+",\n")
	s = append(s, "Message: "+fmt.Sprintf("%#v", this.Message)+",\n")
	s = append(s, "RandomId: "+fmt.Sprintf("%#v", this.RandomId)+",\n")
	if this.ReplyMarkup != nil {
		s = append(s, "ReplyMarkup: "+fmt.Sprintf("%#v", this.ReplyMarkup)+",\n")
	}
	if this.Entities != nil {
		s = append(s, "Entities: "+fmt.Sprintf("%#v", this.Entities)+",\n")
	}
	s = append(s, "ScheduleDate: "+fmt.Sprintf("%#v", this.ScheduleDate)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSendMultiMedia) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 14)
	s = append(s, "&mtproto.TLMessagesSendMultiMedia{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Silent: "+fmt.Sprintf("%#v", this.Silent)+",\n")
	s = append(s, "Background: "+fmt.Sprintf("%#v", this.Background)+",\n")
	s = append(s, "ClearDraft: "+fmt.Sprintf("%#v", this.ClearDraft)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "ReplyToMsgId: "+fmt.Sprintf("%#v", this.ReplyToMsgId)+",\n")
	if this.MultiMedia != nil {
		s = append(s, "MultiMedia: "+fmt.Sprintf("%#v", this.MultiMedia)+",\n")
	}
	s = append(s, "ScheduleDate: "+fmt.Sprintf("%#v", this.ScheduleDate)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSendScheduledMessages) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesSendScheduledMessages{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSendScreenshotNotification) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesSendScreenshotNotification{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "ReplyToMsgId: "+fmt.Sprintf("%#v", this.ReplyToMsgId)+",\n")
	s = append(s, "RandomId: "+fmt.Sprintf("%#v", this.RandomId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSendVote) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesSendVote{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "MsgId: "+fmt.Sprintf("%#v", this.MsgId)+",\n")
	s = append(s, "Options: "+fmt.Sprintf("%#v", this.Options)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSetBotCallbackAnswer) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 12)
	s = append(s, "&mtproto.TLMessagesSetBotCallbackAnswer{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Alert: "+fmt.Sprintf("%#v", this.Alert)+",\n")
	s = append(s, "QueryId: "+fmt.Sprintf("%#v", this.QueryId)+",\n")
	s = append(s, "Message: "+fmt.Sprintf("%#v", this.Message)+",\n")
	s = append(s, "Url: "+fmt.Sprintf("%#v", this.Url)+",\n")
	s = append(s, "CacheTime: "+fmt.Sprintf("%#v", this.CacheTime)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSetBotPrecheckoutResults) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLMessagesSetBotPrecheckoutResults{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Success: "+fmt.Sprintf("%#v", this.Success)+",\n")
	s = append(s, "QueryId: "+fmt.Sprintf("%#v", this.QueryId)+",\n")
	s = append(s, "Error: "+fmt.Sprintf("%#v", this.Error)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSetBotShippingResults) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLMessagesSetBotShippingResults{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "QueryId: "+fmt.Sprintf("%#v", this.QueryId)+",\n")
	s = append(s, "Error: "+fmt.Sprintf("%#v", this.Error)+",\n")
	if this.ShippingOptions != nil {
		s = append(s, "ShippingOptions: "+fmt.Sprintf("%#v", this.ShippingOptions)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSetEncryptedTyping) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesSetEncryptedTyping{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.Typing != nil {
		s = append(s, "Typing: "+fmt.Sprintf("%#v", this.Typing)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSetGameScore) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 13)
	s = append(s, "&mtproto.TLMessagesSetGameScore{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "EditMessage: "+fmt.Sprintf("%#v", this.EditMessage)+",\n")
	s = append(s, "Force: "+fmt.Sprintf("%#v", this.Force)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	s = append(s, "Score: "+fmt.Sprintf("%#v", this.Score)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSetInlineBotResults) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 14)
	s = append(s, "&mtproto.TLMessagesSetInlineBotResults{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Gallery: "+fmt.Sprintf("%#v", this.Gallery)+",\n")
	s = append(s, "Private: "+fmt.Sprintf("%#v", this.Private)+",\n")
	s = append(s, "QueryId: "+fmt.Sprintf("%#v", this.QueryId)+",\n")
	if this.Results != nil {
		s = append(s, "Results: "+fmt.Sprintf("%#v", this.Results)+",\n")
	}
	s = append(s, "CacheTime: "+fmt.Sprintf("%#v", this.CacheTime)+",\n")
	s = append(s, "NextOffset: "+fmt.Sprintf("%#v", this.NextOffset)+",\n")
	if this.SwitchPm != nil {
		s = append(s, "SwitchPm: "+fmt.Sprintf("%#v", this.SwitchPm)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSetInlineGameScore) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 12)
	s = append(s, "&mtproto.TLMessagesSetInlineGameScore{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "EditMessage: "+fmt.Sprintf("%#v", this.EditMessage)+",\n")
	s = append(s, "Force: "+fmt.Sprintf("%#v", this.Force)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	s = append(s, "Score: "+fmt.Sprintf("%#v", this.Score)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesSetTyping) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLMessagesSetTyping{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.Action != nil {
		s = append(s, "Action: "+fmt.Sprintf("%#v", this.Action)+",\n")
	}
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "TopMsgId: "+fmt.Sprintf("%#v", this.TopMsgId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesStartBot) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLMessagesStartBot{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Bot != nil {
		s = append(s, "Bot: "+fmt.Sprintf("%#v", this.Bot)+",\n")
	}
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "RandomId: "+fmt.Sprintf("%#v", this.RandomId)+",\n")
	s = append(s, "StartParam: "+fmt.Sprintf("%#v", this.StartParam)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesToggleChatAdmins) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesToggleChatAdmins{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "ChatId: "+fmt.Sprintf("%#v", this.ChatId)+",\n")
	if this.Enabled != nil {
		s = append(s, "Enabled: "+fmt.Sprintf("%#v", this.Enabled)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesToggleDialogPin) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLMessagesToggleDialogPin{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Pinned: "+fmt.Sprintf("%#v", this.Pinned)+",\n")
	if this.Peer3289BE6A71 != nil {
		s = append(s, "Peer3289BE6A71: "+fmt.Sprintf("%#v", this.Peer3289BE6A71)+",\n")
	}
	if this.PeerA731E25785 != nil {
		s = append(s, "PeerA731E25785: "+fmt.Sprintf("%#v", this.PeerA731E25785)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesToggleStickerSets) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&mtproto.TLMessagesToggleStickerSets{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Uninstall: "+fmt.Sprintf("%#v", this.Uninstall)+",\n")
	s = append(s, "Archive: "+fmt.Sprintf("%#v", this.Archive)+",\n")
	s = append(s, "Unarchive: "+fmt.Sprintf("%#v", this.Unarchive)+",\n")
	if this.Stickersets != nil {
		s = append(s, "Stickersets: "+fmt.Sprintf("%#v", this.Stickersets)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesUninstallStickerSet) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesUninstallStickerSet{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Stickerset != nil {
		s = append(s, "Stickerset: "+fmt.Sprintf("%#v", this.Stickerset)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesUnpinAllMessages) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesUnpinAllMessages{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesUpdateDialogFilter) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLMessagesUpdateDialogFilter{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.Filter != nil {
		s = append(s, "Filter: "+fmt.Sprintf("%#v", this.Filter)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesUpdateDialogFiltersOrder) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLMessagesUpdateDialogFiltersOrder{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Order: "+fmt.Sprintf("%#v", this.Order)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesUpdatePinnedMessage) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLMessagesUpdatePinnedMessage{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Silent: "+fmt.Sprintf("%#v", this.Silent)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesUploadEncryptedFile) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesUploadEncryptedFile{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.File != nil {
		s = append(s, "File: "+fmt.Sprintf("%#v", this.File)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLMessagesUploadMedia) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLMessagesUploadMedia{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.Media != nil {
		s = append(s, "Media: "+fmt.Sprintf("%#v", this.Media)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPaymentsClearSavedInfo) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLPaymentsClearSavedInfo{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Credentials: "+fmt.Sprintf("%#v", this.Credentials)+",\n")
	s = append(s, "Info: "+fmt.Sprintf("%#v", this.Info)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPaymentsGetBankCardData) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLPaymentsGetBankCardData{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Number: "+fmt.Sprintf("%#v", this.Number)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPaymentsGetPaymentForm) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLPaymentsGetPaymentForm{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "MsgId: "+fmt.Sprintf("%#v", this.MsgId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPaymentsGetPaymentReceipt) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLPaymentsGetPaymentReceipt{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "MsgId: "+fmt.Sprintf("%#v", this.MsgId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPaymentsGetSavedInfo) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLPaymentsGetSavedInfo{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPaymentsSendPaymentForm) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&mtproto.TLPaymentsSendPaymentForm{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "MsgId: "+fmt.Sprintf("%#v", this.MsgId)+",\n")
	s = append(s, "RequestedInfoId: "+fmt.Sprintf("%#v", this.RequestedInfoId)+",\n")
	s = append(s, "ShippingOptionId: "+fmt.Sprintf("%#v", this.ShippingOptionId)+",\n")
	if this.Credentials != nil {
		s = append(s, "Credentials: "+fmt.Sprintf("%#v", this.Credentials)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPaymentsValidateRequestedInfo) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLPaymentsValidateRequestedInfo{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Save: "+fmt.Sprintf("%#v", this.Save)+",\n")
	s = append(s, "MsgId: "+fmt.Sprintf("%#v", this.MsgId)+",\n")
	if this.Info != nil {
		s = append(s, "Info: "+fmt.Sprintf("%#v", this.Info)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhoneAcceptCall) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLPhoneAcceptCall{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "GB: "+fmt.Sprintf("%#v", this.GB)+",\n")
	if this.Protocol != nil {
		s = append(s, "Protocol: "+fmt.Sprintf("%#v", this.Protocol)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhoneCheckGroupCall) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLPhoneCheckGroupCall{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Call != nil {
		s = append(s, "Call: "+fmt.Sprintf("%#v", this.Call)+",\n")
	}
	s = append(s, "Source: "+fmt.Sprintf("%#v", this.Source)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhoneConfirmCall) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLPhoneConfirmCall{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "GA: "+fmt.Sprintf("%#v", this.GA)+",\n")
	s = append(s, "KeyFingerprint: "+fmt.Sprintf("%#v", this.KeyFingerprint)+",\n")
	if this.Protocol != nil {
		s = append(s, "Protocol: "+fmt.Sprintf("%#v", this.Protocol)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhoneCreateGroupCall) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLPhoneCreateGroupCall{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "RandomId: "+fmt.Sprintf("%#v", this.RandomId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhoneDiscardCall) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 12)
	s = append(s, "&mtproto.TLPhoneDiscardCall{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Duration: "+fmt.Sprintf("%#v", this.Duration)+",\n")
	if this.Reason != nil {
		s = append(s, "Reason: "+fmt.Sprintf("%#v", this.Reason)+",\n")
	}
	s = append(s, "ConnectionId: "+fmt.Sprintf("%#v", this.ConnectionId)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Video: "+fmt.Sprintf("%#v", this.Video)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhoneDiscardGroupCall) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLPhoneDiscardGroupCall{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Call != nil {
		s = append(s, "Call: "+fmt.Sprintf("%#v", this.Call)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhoneEditGroupCallMember) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLPhoneEditGroupCallMember{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Muted: "+fmt.Sprintf("%#v", this.Muted)+",\n")
	if this.Call != nil {
		s = append(s, "Call: "+fmt.Sprintf("%#v", this.Call)+",\n")
	}
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhoneGetCallConfig) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLPhoneGetCallConfig{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhoneGetGroupCall) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLPhoneGetGroupCall{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Call != nil {
		s = append(s, "Call: "+fmt.Sprintf("%#v", this.Call)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhoneGetGroupParticipants) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&mtproto.TLPhoneGetGroupParticipants{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Call != nil {
		s = append(s, "Call: "+fmt.Sprintf("%#v", this.Call)+",\n")
	}
	s = append(s, "Ids: "+fmt.Sprintf("%#v", this.Ids)+",\n")
	s = append(s, "Sources: "+fmt.Sprintf("%#v", this.Sources)+",\n")
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhoneInviteToGroupCall) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLPhoneInviteToGroupCall{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Call != nil {
		s = append(s, "Call: "+fmt.Sprintf("%#v", this.Call)+",\n")
	}
	if this.Users != nil {
		s = append(s, "Users: "+fmt.Sprintf("%#v", this.Users)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhoneJoinGroupCall) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLPhoneJoinGroupCall{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Muted: "+fmt.Sprintf("%#v", this.Muted)+",\n")
	if this.Call != nil {
		s = append(s, "Call: "+fmt.Sprintf("%#v", this.Call)+",\n")
	}
	if this.Params != nil {
		s = append(s, "Params: "+fmt.Sprintf("%#v", this.Params)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhoneLeaveGroupCall) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLPhoneLeaveGroupCall{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Call != nil {
		s = append(s, "Call: "+fmt.Sprintf("%#v", this.Call)+",\n")
	}
	s = append(s, "Source: "+fmt.Sprintf("%#v", this.Source)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhoneReceivedCall) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLPhoneReceivedCall{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhoneRequestCall) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 12)
	s = append(s, "&mtproto.TLPhoneRequestCall{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	s = append(s, "RandomId: "+fmt.Sprintf("%#v", this.RandomId)+",\n")
	s = append(s, "GAHash: "+fmt.Sprintf("%#v", this.GAHash)+",\n")
	if this.Protocol != nil {
		s = append(s, "Protocol: "+fmt.Sprintf("%#v", this.Protocol)+",\n")
	}
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Video: "+fmt.Sprintf("%#v", this.Video)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhoneSaveCallDebug) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLPhoneSaveCallDebug{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	if this.Debug != nil {
		s = append(s, "Debug: "+fmt.Sprintf("%#v", this.Debug)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhoneSendSignalingData) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLPhoneSendSignalingData{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Data: "+fmt.Sprintf("%#v", this.Data)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhoneSetCallRating) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&mtproto.TLPhoneSetCallRating{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Peer != nil {
		s = append(s, "Peer: "+fmt.Sprintf("%#v", this.Peer)+",\n")
	}
	s = append(s, "Rating: "+fmt.Sprintf("%#v", this.Rating)+",\n")
	s = append(s, "Comment: "+fmt.Sprintf("%#v", this.Comment)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "UserInitiative: "+fmt.Sprintf("%#v", this.UserInitiative)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhoneToggleGroupCallSettings) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLPhoneToggleGroupCallSettings{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	if this.Call != nil {
		s = append(s, "Call: "+fmt.Sprintf("%#v", this.Call)+",\n")
	}
	if this.JoinMuted != nil {
		s = append(s, "JoinMuted: "+fmt.Sprintf("%#v", this.JoinMuted)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhotosDeletePhotos) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLPhotosDeletePhotos{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhotosGetUserPhotos) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLPhotosGetUserPhotos{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	s = append(s, "MaxId: "+fmt.Sprintf("%#v", this.MaxId)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhotosUpdateProfilePhoto) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLPhotosUpdateProfilePhoto{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.Crop != nil {
		s = append(s, "Crop: "+fmt.Sprintf("%#v", this.Crop)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPhotosUploadProfilePhoto) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 13)
	s = append(s, "&mtproto.TLPhotosUploadProfilePhoto{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.File != nil {
		s = append(s, "File: "+fmt.Sprintf("%#v", this.File)+",\n")
	}
	s = append(s, "Caption: "+fmt.Sprintf("%#v", this.Caption)+",\n")
	if this.GeoPoint != nil {
		s = append(s, "GeoPoint: "+fmt.Sprintf("%#v", this.GeoPoint)+",\n")
	}
	if this.Crop != nil {
		s = append(s, "Crop: "+fmt.Sprintf("%#v", this.Crop)+",\n")
	}
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	if this.Video != nil {
		s = append(s, "Video: "+fmt.Sprintf("%#v", this.Video)+",\n")
	}
	s = append(s, "VideoStartTs: "+fmt.Sprintf("%#v", this.VideoStartTs)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLStatsGetBroadcastStats) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLStatsGetBroadcastStats{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Dark: "+fmt.Sprintf("%#v", this.Dark)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "TzOffset: "+fmt.Sprintf("%#v", this.TzOffset)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLStatsGetMegagroupStats) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLStatsGetMegagroupStats{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Dark: "+fmt.Sprintf("%#v", this.Dark)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLStatsGetMessagePublicForwards) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 12)
	s = append(s, "&mtproto.TLStatsGetMessagePublicForwards{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "MsgId: "+fmt.Sprintf("%#v", this.MsgId)+",\n")
	s = append(s, "OffsetRate: "+fmt.Sprintf("%#v", this.OffsetRate)+",\n")
	if this.OffsetPeer != nil {
		s = append(s, "OffsetPeer: "+fmt.Sprintf("%#v", this.OffsetPeer)+",\n")
	}
	s = append(s, "OffsetId: "+fmt.Sprintf("%#v", this.OffsetId)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLStatsGetMessageStats) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLStatsGetMessageStats{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Dark: "+fmt.Sprintf("%#v", this.Dark)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	s = append(s, "MsgId: "+fmt.Sprintf("%#v", this.MsgId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLStatsLoadAsyncGraph) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLStatsLoadAsyncGraph{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Token: "+fmt.Sprintf("%#v", this.Token)+",\n")
	s = append(s, "X: "+fmt.Sprintf("%#v", this.X)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLStickersAddStickerToSet) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLStickersAddStickerToSet{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Stickerset != nil {
		s = append(s, "Stickerset: "+fmt.Sprintf("%#v", this.Stickerset)+",\n")
	}
	if this.Sticker != nil {
		s = append(s, "Sticker: "+fmt.Sprintf("%#v", this.Sticker)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLStickersChangeStickerPosition) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLStickersChangeStickerPosition{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Sticker != nil {
		s = append(s, "Sticker: "+fmt.Sprintf("%#v", this.Sticker)+",\n")
	}
	s = append(s, "Position: "+fmt.Sprintf("%#v", this.Position)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLStickersCreateStickerSet) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 14)
	s = append(s, "&mtproto.TLStickersCreateStickerSet{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Masks: "+fmt.Sprintf("%#v", this.Masks)+",\n")
	if this.UserId != nil {
		s = append(s, "UserId: "+fmt.Sprintf("%#v", this.UserId)+",\n")
	}
	s = append(s, "Title: "+fmt.Sprintf("%#v", this.Title)+",\n")
	s = append(s, "ShortName: "+fmt.Sprintf("%#v", this.ShortName)+",\n")
	if this.Stickers != nil {
		s = append(s, "Stickers: "+fmt.Sprintf("%#v", this.Stickers)+",\n")
	}
	s = append(s, "Animated: "+fmt.Sprintf("%#v", this.Animated)+",\n")
	if this.Thumb != nil {
		s = append(s, "Thumb: "+fmt.Sprintf("%#v", this.Thumb)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLStickersRemoveStickerFromSet) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLStickersRemoveStickerFromSet{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Sticker != nil {
		s = append(s, "Sticker: "+fmt.Sprintf("%#v", this.Sticker)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLStickersSetStickerSetThumb) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLStickersSetStickerSetThumb{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Stickerset != nil {
		s = append(s, "Stickerset: "+fmt.Sprintf("%#v", this.Stickerset)+",\n")
	}
	if this.Thumb != nil {
		s = append(s, "Thumb: "+fmt.Sprintf("%#v", this.Thumb)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUpdatesGetChannelDifference) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 12)
	s = append(s, "&mtproto.TLUpdatesGetChannelDifference{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Force: "+fmt.Sprintf("%#v", this.Force)+",\n")
	if this.Channel != nil {
		s = append(s, "Channel: "+fmt.Sprintf("%#v", this.Channel)+",\n")
	}
	if this.Filter != nil {
		s = append(s, "Filter: "+fmt.Sprintf("%#v", this.Filter)+",\n")
	}
	s = append(s, "Pts: "+fmt.Sprintf("%#v", this.Pts)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUpdatesGetDifference) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&mtproto.TLUpdatesGetDifference{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Pts: "+fmt.Sprintf("%#v", this.Pts)+",\n")
	s = append(s, "PtsTotalLimit: "+fmt.Sprintf("%#v", this.PtsTotalLimit)+",\n")
	s = append(s, "Date: "+fmt.Sprintf("%#v", this.Date)+",\n")
	s = append(s, "Qts: "+fmt.Sprintf("%#v", this.Qts)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUpdatesGetState) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&mtproto.TLUpdatesGetState{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUploadGetCdnFile) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLUploadGetCdnFile{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "FileToken: "+fmt.Sprintf("%#v", this.FileToken)+",\n")
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUploadGetCdnFileHashes) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLUploadGetCdnFileHashes{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "FileToken: "+fmt.Sprintf("%#v", this.FileToken)+",\n")
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUploadGetFile) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&mtproto.TLUploadGetFile{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Location != nil {
		s = append(s, "Location: "+fmt.Sprintf("%#v", this.Location)+",\n")
	}
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	s = append(s, "Flags: "+fmt.Sprintf("%#v", this.Flags)+",\n")
	s = append(s, "Precise: "+fmt.Sprintf("%#v", this.Precise)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUploadGetFileHashes) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLUploadGetFileHashes{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Location != nil {
		s = append(s, "Location: "+fmt.Sprintf("%#v", this.Location)+",\n")
	}
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUploadGetWebFile) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLUploadGetWebFile{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Location != nil {
		s = append(s, "Location: "+fmt.Sprintf("%#v", this.Location)+",\n")
	}
	s = append(s, "Offset: "+fmt.Sprintf("%#v", this.Offset)+",\n")
	s = append(s, "Limit: "+fmt.Sprintf("%#v", this.Limit)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUploadReuploadCdnFile) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLUploadReuploadCdnFile{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "FileToken: "+fmt.Sprintf("%#v", this.FileToken)+",\n")
	s = append(s, "RequestToken: "+fmt.Sprintf("%#v", this.RequestToken)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUploadSaveBigFilePart) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 10)
	s = append(s, "&mtproto.TLUploadSaveBigFilePart{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "FileId: "+fmt.Sprintf("%#v", this.FileId)+",\n")
	s = append(s, "FilePart: "+fmt.Sprintf("%#v", this.FilePart)+",\n")
	s = append(s, "FileTotalParts: "+fmt.Sprintf("%#v", this.FileTotalParts)+",\n")
	s = append(s, "Bytes: "+fmt.Sprintf("%#v", this.Bytes)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUploadSaveFilePart) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&mtproto.TLUploadSaveFilePart{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "FileId: "+fmt.Sprintf("%#v", this.FileId)+",\n")
	s = append(s, "FilePart: "+fmt.Sprintf("%#v", this.FilePart)+",\n")
	s = append(s, "Bytes: "+fmt.Sprintf("%#v", this.Bytes)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUsersGetFullUser) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLUsersGetFullUser{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUsersGetUsers) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLUsersGetUsers{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLUsersSetSecureValueErrors) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLUsersSetSecureValueErrors{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Id != nil {
		s = append(s, "Id: "+fmt.Sprintf("%#v", this.Id)+",\n")
	}
	if this.Errors != nil {
		s = append(s, "Errors: "+fmt.Sprintf("%#v", this.Errors)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLWalletGetKeySecretSalt) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLWalletGetKeySecretSalt{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	if this.Revoke != nil {
		s = append(s, "Revoke: "+fmt.Sprintf("%#v", this.Revoke)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLWalletSendLiteRequest) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLWalletSendLiteRequest{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Body: "+fmt.Sprintf("%#v", this.Body)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_WallPaper) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_WallPaper{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_User) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_User{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_ContactStatus) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_ContactStatus{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *VectorInt) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.VectorInt{")
	s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_ReceivedNotifyMessage) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_ReceivedNotifyMessage{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *VectorLong) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.VectorLong{")
	s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_StickerSetCovered) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_StickerSetCovered{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_CdnFileHash) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_CdnFileHash{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_LangPackString) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_LangPackString{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_LangPackLanguage) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_LangPackLanguage{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_SecureValue) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_SecureValue{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_SavedContact) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_SavedContact{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_MessageRange) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_MessageRange{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_DialogPeer) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_DialogPeer{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_FileHash) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_FileHash{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_EmojiLanguage) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_EmojiLanguage{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *VectorMessages_SearchCounter) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.VectorMessages_SearchCounter{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_DialogFilter) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_DialogFilter{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *Vector_DialogFilterSuggested) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&mtproto.Vector_DialogFilterSuggested{")
	if this.Datas != nil {
		s = append(s, "Datas: "+fmt.Sprintf("%#v", this.Datas)+",\n")
	}
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringSchemaTlSyncService(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *TLAccountAcceptAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountAcceptAuthorization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountAcceptAuthorization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Credentials != nil {
		{
			size, err := m.Credentials.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if len(m.ValueHashes) > 0 {
		for iNdEx := len(m.ValueHashes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ValueHashes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.PublicKey) > 0 {
		i -= len(m.PublicKey)
		copy(dAtA[i:], m.PublicKey)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PublicKey)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Scope) > 0 {
		i -= len(m.Scope)
		copy(dAtA[i:], m.Scope)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Scope)))
		i--
		dAtA[i] = 0x22
	}
	if m.BotId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.BotId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountCancelPasswordEmail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountCancelPasswordEmail) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountCancelPasswordEmail) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountChangePhone) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountChangePhone) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountChangePhone) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.PhoneCode) > 0 {
		i -= len(m.PhoneCode)
		copy(dAtA[i:], m.PhoneCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCode)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.PhoneCodeHash) > 0 {
		i -= len(m.PhoneCodeHash)
		copy(dAtA[i:], m.PhoneCodeHash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCodeHash)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PhoneNumber) > 0 {
		i -= len(m.PhoneNumber)
		copy(dAtA[i:], m.PhoneNumber)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneNumber)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountCheckUsername) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountCheckUsername) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountCheckUsername) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Username) > 0 {
		i -= len(m.Username)
		copy(dAtA[i:], m.Username)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Username)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountConfirmPasswordEmail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountConfirmPasswordEmail) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountConfirmPasswordEmail) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Code) > 0 {
		i -= len(m.Code)
		copy(dAtA[i:], m.Code)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Code)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountConfirmPhone) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountConfirmPhone) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountConfirmPhone) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.PhoneCode) > 0 {
		i -= len(m.PhoneCode)
		copy(dAtA[i:], m.PhoneCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCode)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PhoneCodeHash) > 0 {
		i -= len(m.PhoneCodeHash)
		copy(dAtA[i:], m.PhoneCodeHash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCodeHash)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountCreateTheme) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountCreateTheme) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountCreateTheme) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Settings != nil {
		{
			size, err := m.Settings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x30
	}
	if m.Document != nil {
		{
			size, err := m.Document.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Slug) > 0 {
		i -= len(m.Slug)
		copy(dAtA[i:], m.Slug)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Slug)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountDeleteAccount) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountDeleteAccount) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountDeleteAccount) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Reason) > 0 {
		i -= len(m.Reason)
		copy(dAtA[i:], m.Reason)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Reason)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountDeleteSecureValue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountDeleteSecureValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountDeleteSecureValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Types) > 0 {
		for iNdEx := len(m.Types) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Types[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountFinishTakeoutSession) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountFinishTakeoutSession) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountFinishTakeoutSession) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Success {
		i--
		if m.Success {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetAccountTTL) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetAccountTTL) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetAccountTTL) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetAllSecureValues) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetAllSecureValues) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetAllSecureValues) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetAuthorizationForm) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetAuthorizationForm) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetAuthorizationForm) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.PublicKey) > 0 {
		i -= len(m.PublicKey)
		copy(dAtA[i:], m.PublicKey)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PublicKey)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Scope) > 0 {
		i -= len(m.Scope)
		copy(dAtA[i:], m.Scope)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Scope)))
		i--
		dAtA[i] = 0x22
	}
	if m.BotId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.BotId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetAuthorizations) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetAuthorizations) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetAuthorizations) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetAutoDownloadSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetAutoDownloadSettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetAutoDownloadSettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetContactSignUpNotification) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetContactSignUpNotification) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetContactSignUpNotification) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetContentSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetContentSettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetContentSettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetGlobalPrivacySettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetGlobalPrivacySettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetGlobalPrivacySettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetMultiWallPapers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetMultiWallPapers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetMultiWallPapers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Wallpapers) > 0 {
		for iNdEx := len(m.Wallpapers) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Wallpapers[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetNotifyExceptions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetNotifyExceptions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetNotifyExceptions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.CompareSound {
		i--
		if m.CompareSound {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetNotifySettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetNotifySettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetNotifySettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetPassword) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetPassword) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetPassword) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetPasswordSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetPasswordSettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetPasswordSettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Password != nil {
		{
			size, err := m.Password.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.CurrentPasswordHash) > 0 {
		i -= len(m.CurrentPasswordHash)
		copy(dAtA[i:], m.CurrentPasswordHash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.CurrentPasswordHash)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetPrivacy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetPrivacy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetPrivacy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Key != nil {
		{
			size, err := m.Key.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetSecureValue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetSecureValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetSecureValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Types) > 0 {
		for iNdEx := len(m.Types) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Types[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetTheme) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetTheme) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetTheme) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.DocumentId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.DocumentId))
		i--
		dAtA[i] = 0x28
	}
	if m.Theme != nil {
		{
			size, err := m.Theme.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.Format) > 0 {
		i -= len(m.Format)
		copy(dAtA[i:], m.Format)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Format)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetThemes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetThemes) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetThemes) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Format) > 0 {
		i -= len(m.Format)
		copy(dAtA[i:], m.Format)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Format)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetTmpPassword) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetTmpPassword) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetTmpPassword) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Password != nil {
		{
			size, err := m.Password.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Period != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Period))
		i--
		dAtA[i] = 0x20
	}
	if len(m.PasswordHash) > 0 {
		i -= len(m.PasswordHash)
		copy(dAtA[i:], m.PasswordHash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PasswordHash)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetWallPaper) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetWallPaper) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetWallPaper) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Wallpaper != nil {
		{
			size, err := m.Wallpaper.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetWallPapers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetWallPapers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetWallPapers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountGetWebAuthorizations) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountGetWebAuthorizations) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountGetWebAuthorizations) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountInitTakeoutSession) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountInitTakeoutSession) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountInitTakeoutSession) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FileMaxSize != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FileMaxSize))
		i--
		dAtA[i] = 0x50
	}
	if m.Files {
		i--
		if m.Files {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x48
	}
	if m.MessageChannels {
		i--
		if m.MessageChannels {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if m.MessageMegagroups {
		i--
		if m.MessageMegagroups {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if m.MessageChats {
		i--
		if m.MessageChats {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.MessageUsers {
		i--
		if m.MessageUsers {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.Contacts {
		i--
		if m.Contacts {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountInstallTheme) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountInstallTheme) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountInstallTheme) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Dark {
		i--
		if m.Dark {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x28
	}
	if m.Theme != nil {
		{
			size, err := m.Theme.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.Format) > 0 {
		i -= len(m.Format)
		copy(dAtA[i:], m.Format)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Format)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountInstallWallPaper) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountInstallWallPaper) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountInstallWallPaper) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Settings != nil {
		{
			size, err := m.Settings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Wallpaper != nil {
		{
			size, err := m.Wallpaper.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountRegisterDevice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountRegisterDevice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountRegisterDevice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.NoMuted {
		i--
		if m.NoMuted {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x68
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x60
	}
	if len(m.OtherUids) > 0 {
		dAtA15 := make([]byte, len(m.OtherUids)*10)
		var j14 int
		for _, num1 := range m.OtherUids {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA15[j14] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j14++
			}
			dAtA15[j14] = uint8(num)
			j14++
		}
		i -= j14
		copy(dAtA[i:], dAtA15[:j14])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j14))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.Secret) > 0 {
		i -= len(m.Secret)
		copy(dAtA[i:], m.Secret)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Secret)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.LangCode) > 0 {
		i -= len(m.LangCode)
		copy(dAtA[i:], m.LangCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i--
		dAtA[i] = 0x4a
	}
	if m.AppSandbox != nil {
		{
			size, err := m.AppSandbox.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if len(m.AppVersion) > 0 {
		i -= len(m.AppVersion)
		copy(dAtA[i:], m.AppVersion)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.AppVersion)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.SystemVersion) > 0 {
		i -= len(m.SystemVersion)
		copy(dAtA[i:], m.SystemVersion)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.SystemVersion)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.DeviceModel) > 0 {
		i -= len(m.DeviceModel)
		copy(dAtA[i:], m.DeviceModel)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.DeviceModel)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Token) > 0 {
		i -= len(m.Token)
		copy(dAtA[i:], m.Token)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Token)))
		i--
		dAtA[i] = 0x22
	}
	if m.TokenType != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.TokenType))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountReportPeer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountReportPeer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountReportPeer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Reason != nil {
		{
			size, err := m.Reason.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountResendPasswordEmail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountResendPasswordEmail) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountResendPasswordEmail) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountResetAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountResetAuthorization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountResetAuthorization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountResetNotifySettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountResetNotifySettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountResetNotifySettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountResetWallPapers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountResetWallPapers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountResetWallPapers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountResetWebAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountResetWebAuthorization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountResetWebAuthorization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountResetWebAuthorizations) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountResetWebAuthorizations) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountResetWebAuthorizations) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountSaveAutoDownloadSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSaveAutoDownloadSettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountSaveAutoDownloadSettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Settings != nil {
		{
			size, err := m.Settings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.High {
		i--
		if m.High {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.Low {
		i--
		if m.Low {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountSaveSecureValue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSaveSecureValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountSaveSecureValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SecureSecretId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.SecureSecretId))
		i--
		dAtA[i] = 0x20
	}
	if m.Value != nil {
		{
			size, err := m.Value.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountSaveTheme) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSaveTheme) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountSaveTheme) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Unsave != nil {
		{
			size, err := m.Unsave.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Theme != nil {
		{
			size, err := m.Theme.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountSaveWallPaper) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSaveWallPaper) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountSaveWallPaper) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Settings != nil {
		{
			size, err := m.Settings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Unsave != nil {
		{
			size, err := m.Unsave.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Wallpaper != nil {
		{
			size, err := m.Wallpaper.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountSendChangePhoneCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSendChangePhoneCode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountSendChangePhoneCode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Settings != nil {
		{
			size, err := m.Settings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.CurrentNumber != nil {
		{
			size, err := m.CurrentNumber.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if len(m.PhoneNumber) > 0 {
		i -= len(m.PhoneNumber)
		copy(dAtA[i:], m.PhoneNumber)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneNumber)))
		i--
		dAtA[i] = 0x2a
	}
	if m.AllowFlashcall {
		i--
		if m.AllowFlashcall {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountSendConfirmPhoneCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSendConfirmPhoneCode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountSendConfirmPhoneCode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Settings != nil {
		{
			size, err := m.Settings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.CurrentNumber != nil {
		{
			size, err := m.CurrentNumber.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if len(m.Hash) > 0 {
		i -= len(m.Hash)
		copy(dAtA[i:], m.Hash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Hash)))
		i--
		dAtA[i] = 0x2a
	}
	if m.AllowFlashcall {
		i--
		if m.AllowFlashcall {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountSendVerifyEmailCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSendVerifyEmailCode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountSendVerifyEmailCode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Email) > 0 {
		i -= len(m.Email)
		copy(dAtA[i:], m.Email)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Email)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountSendVerifyPhoneCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSendVerifyPhoneCode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountSendVerifyPhoneCode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Settings != nil {
		{
			size, err := m.Settings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.CurrentNumber != nil {
		{
			size, err := m.CurrentNumber.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if len(m.PhoneNumber) > 0 {
		i -= len(m.PhoneNumber)
		copy(dAtA[i:], m.PhoneNumber)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneNumber)))
		i--
		dAtA[i] = 0x2a
	}
	if m.AllowFlashcall {
		i--
		if m.AllowFlashcall {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountSetAccountTTL) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSetAccountTTL) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountSetAccountTTL) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Ttl != nil {
		{
			size, err := m.Ttl.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountSetContactSignUpNotification) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSetContactSignUpNotification) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountSetContactSignUpNotification) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Silent != nil {
		{
			size, err := m.Silent.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountSetContentSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSetContentSettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountSetContentSettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SensitiveEnabled {
		i--
		if m.SensitiveEnabled {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountSetGlobalPrivacySettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSetGlobalPrivacySettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountSetGlobalPrivacySettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Settings != nil {
		{
			size, err := m.Settings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountSetPrivacy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountSetPrivacy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountSetPrivacy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Rules) > 0 {
		for iNdEx := len(m.Rules) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Rules[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if m.Key != nil {
		{
			size, err := m.Key.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountUnregisterDevice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUnregisterDevice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountUnregisterDevice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.OtherUids) > 0 {
		dAtA37 := make([]byte, len(m.OtherUids)*10)
		var j36 int
		for _, num1 := range m.OtherUids {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA37[j36] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j36++
			}
			dAtA37[j36] = uint8(num)
			j36++
		}
		i -= j36
		copy(dAtA[i:], dAtA37[:j36])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j36))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Token) > 0 {
		i -= len(m.Token)
		copy(dAtA[i:], m.Token)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Token)))
		i--
		dAtA[i] = 0x22
	}
	if m.TokenType != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.TokenType))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountUpdateDeviceLocked) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUpdateDeviceLocked) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountUpdateDeviceLocked) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Period != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Period))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountUpdateNotifySettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUpdateNotifySettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountUpdateNotifySettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Settings != nil {
		{
			size, err := m.Settings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountUpdatePasswordSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUpdatePasswordSettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountUpdatePasswordSettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Password != nil {
		{
			size, err := m.Password.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.NewSettings != nil {
		{
			size, err := m.NewSettings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.CurrentPasswordHash) > 0 {
		i -= len(m.CurrentPasswordHash)
		copy(dAtA[i:], m.CurrentPasswordHash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.CurrentPasswordHash)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountUpdateProfile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUpdateProfile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountUpdateProfile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.About) > 0 {
		i -= len(m.About)
		copy(dAtA[i:], m.About)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.About)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.LastName) > 0 {
		i -= len(m.LastName)
		copy(dAtA[i:], m.LastName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LastName)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.FirstName) > 0 {
		i -= len(m.FirstName)
		copy(dAtA[i:], m.FirstName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.FirstName)))
		i--
		dAtA[i] = 0x22
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountUpdateStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUpdateStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountUpdateStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Offline != nil {
		{
			size, err := m.Offline.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountUpdateTheme) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUpdateTheme) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountUpdateTheme) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Settings != nil {
		{
			size, err := m.Settings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if len(m.Format) > 0 {
		i -= len(m.Format)
		copy(dAtA[i:], m.Format)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Format)))
		i--
		dAtA[i] = 0x42
	}
	if m.Document != nil {
		{
			size, err := m.Document.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Slug) > 0 {
		i -= len(m.Slug)
		copy(dAtA[i:], m.Slug)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Slug)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Theme != nil {
		{
			size, err := m.Theme.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountUpdateUsername) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUpdateUsername) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountUpdateUsername) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Username) > 0 {
		i -= len(m.Username)
		copy(dAtA[i:], m.Username)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Username)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountUploadTheme) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUploadTheme) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountUploadTheme) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.MimeType) > 0 {
		i -= len(m.MimeType)
		copy(dAtA[i:], m.MimeType)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.MimeType)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.FileName) > 0 {
		i -= len(m.FileName)
		copy(dAtA[i:], m.FileName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.FileName)))
		i--
		dAtA[i] = 0x32
	}
	if m.Thumb != nil {
		{
			size, err := m.Thumb.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.File != nil {
		{
			size, err := m.File.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountUploadWallPaper) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountUploadWallPaper) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountUploadWallPaper) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Settings != nil {
		{
			size, err := m.Settings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.MimeType) > 0 {
		i -= len(m.MimeType)
		copy(dAtA[i:], m.MimeType)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.MimeType)))
		i--
		dAtA[i] = 0x22
	}
	if m.File != nil {
		{
			size, err := m.File.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountVerifyEmail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountVerifyEmail) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountVerifyEmail) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Code) > 0 {
		i -= len(m.Code)
		copy(dAtA[i:], m.Code)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Code)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Email) > 0 {
		i -= len(m.Email)
		copy(dAtA[i:], m.Email)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Email)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAccountVerifyPhone) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAccountVerifyPhone) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAccountVerifyPhone) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.PhoneCode) > 0 {
		i -= len(m.PhoneCode)
		copy(dAtA[i:], m.PhoneCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCode)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.PhoneCodeHash) > 0 {
		i -= len(m.PhoneCodeHash)
		copy(dAtA[i:], m.PhoneCodeHash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCodeHash)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PhoneNumber) > 0 {
		i -= len(m.PhoneNumber)
		copy(dAtA[i:], m.PhoneNumber)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneNumber)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthAcceptLoginToken) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthAcceptLoginToken) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthAcceptLoginToken) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Token) > 0 {
		i -= len(m.Token)
		copy(dAtA[i:], m.Token)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Token)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthBindTempAuthKey) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthBindTempAuthKey) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthBindTempAuthKey) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.EncryptedMessage) > 0 {
		i -= len(m.EncryptedMessage)
		copy(dAtA[i:], m.EncryptedMessage)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.EncryptedMessage)))
		i--
		dAtA[i] = 0x32
	}
	if m.ExpiresAt != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ExpiresAt))
		i--
		dAtA[i] = 0x28
	}
	if m.Nonce != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Nonce))
		i--
		dAtA[i] = 0x20
	}
	if m.PermAuthKeyId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.PermAuthKeyId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthCancelCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthCancelCode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthCancelCode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.PhoneCodeHash) > 0 {
		i -= len(m.PhoneCodeHash)
		copy(dAtA[i:], m.PhoneCodeHash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCodeHash)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PhoneNumber) > 0 {
		i -= len(m.PhoneNumber)
		copy(dAtA[i:], m.PhoneNumber)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneNumber)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthCheckPassword) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthCheckPassword) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthCheckPassword) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Password != nil {
		{
			size, err := m.Password.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.PasswordHash) > 0 {
		i -= len(m.PasswordHash)
		copy(dAtA[i:], m.PasswordHash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PasswordHash)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthCheckPhone) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthCheckPhone) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthCheckPhone) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.PhoneNumber) > 0 {
		i -= len(m.PhoneNumber)
		copy(dAtA[i:], m.PhoneNumber)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneNumber)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthDropTempAuthKeys) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthDropTempAuthKeys) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthDropTempAuthKeys) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ExceptAuthKeys) > 0 {
		dAtA52 := make([]byte, len(m.ExceptAuthKeys)*10)
		var j51 int
		for _, num1 := range m.ExceptAuthKeys {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA52[j51] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j51++
			}
			dAtA52[j51] = uint8(num)
			j51++
		}
		i -= j51
		copy(dAtA[i:], dAtA52[:j51])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j51))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthExportAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthExportAuthorization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthExportAuthorization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.DcId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.DcId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthExportLoginToken) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthExportLoginToken) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthExportLoginToken) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ExceptIds) > 0 {
		dAtA54 := make([]byte, len(m.ExceptIds)*10)
		var j53 int
		for _, num1 := range m.ExceptIds {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA54[j53] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j53++
			}
			dAtA54[j53] = uint8(num)
			j53++
		}
		i -= j53
		copy(dAtA[i:], dAtA54[:j53])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j53))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ApiHash) > 0 {
		i -= len(m.ApiHash)
		copy(dAtA[i:], m.ApiHash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ApiHash)))
		i--
		dAtA[i] = 0x22
	}
	if m.ApiId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ApiId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthImportAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthImportAuthorization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthImportAuthorization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Bytes) > 0 {
		i -= len(m.Bytes)
		copy(dAtA[i:], m.Bytes)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Bytes)))
		i--
		dAtA[i] = 0x22
	}
	if m.Id != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthImportBotAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthImportBotAuthorization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthImportBotAuthorization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.BotAuthToken) > 0 {
		i -= len(m.BotAuthToken)
		copy(dAtA[i:], m.BotAuthToken)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.BotAuthToken)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.ApiHash) > 0 {
		i -= len(m.ApiHash)
		copy(dAtA[i:], m.ApiHash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ApiHash)))
		i--
		dAtA[i] = 0x2a
	}
	if m.ApiId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ApiId))
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthImportLoginToken) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthImportLoginToken) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthImportLoginToken) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Token) > 0 {
		i -= len(m.Token)
		copy(dAtA[i:], m.Token)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Token)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthLogOut) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthLogOut) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthLogOut) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthRecoverPassword) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthRecoverPassword) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthRecoverPassword) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Code) > 0 {
		i -= len(m.Code)
		copy(dAtA[i:], m.Code)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Code)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthRequestPasswordRecovery) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthRequestPasswordRecovery) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthRequestPasswordRecovery) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthResendCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthResendCode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthResendCode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.PhoneCodeHash) > 0 {
		i -= len(m.PhoneCodeHash)
		copy(dAtA[i:], m.PhoneCodeHash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCodeHash)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PhoneNumber) > 0 {
		i -= len(m.PhoneNumber)
		copy(dAtA[i:], m.PhoneNumber)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneNumber)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthResetAuthorizations) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthResetAuthorizations) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthResetAuthorizations) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthSendCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthSendCode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthSendCode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Settings != nil {
		{
			size, err := m.Settings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	if len(m.LangCode) > 0 {
		i -= len(m.LangCode)
		copy(dAtA[i:], m.LangCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.ApiHash) > 0 {
		i -= len(m.ApiHash)
		copy(dAtA[i:], m.ApiHash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ApiHash)))
		i--
		dAtA[i] = 0x42
	}
	if m.ApiId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ApiId))
		i--
		dAtA[i] = 0x38
	}
	if m.CurrentNumber != nil {
		{
			size, err := m.CurrentNumber.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if len(m.PhoneNumber) > 0 {
		i -= len(m.PhoneNumber)
		copy(dAtA[i:], m.PhoneNumber)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneNumber)))
		i--
		dAtA[i] = 0x2a
	}
	if m.AllowFlashcall {
		i--
		if m.AllowFlashcall {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthSendInvites) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthSendInvites) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthSendInvites) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PhoneNumbers) > 0 {
		for iNdEx := len(m.PhoneNumbers) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.PhoneNumbers[iNdEx])
			copy(dAtA[i:], m.PhoneNumbers[iNdEx])
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneNumbers[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthSignIn) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthSignIn) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthSignIn) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.PhoneCode) > 0 {
		i -= len(m.PhoneCode)
		copy(dAtA[i:], m.PhoneCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCode)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.PhoneCodeHash) > 0 {
		i -= len(m.PhoneCodeHash)
		copy(dAtA[i:], m.PhoneCodeHash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCodeHash)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PhoneNumber) > 0 {
		i -= len(m.PhoneNumber)
		copy(dAtA[i:], m.PhoneNumber)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneNumber)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLAuthSignUp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLAuthSignUp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLAuthSignUp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LastName) > 0 {
		i -= len(m.LastName)
		copy(dAtA[i:], m.LastName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LastName)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.FirstName) > 0 {
		i -= len(m.FirstName)
		copy(dAtA[i:], m.FirstName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.FirstName)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.PhoneCode) > 0 {
		i -= len(m.PhoneCode)
		copy(dAtA[i:], m.PhoneCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCode)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.PhoneCodeHash) > 0 {
		i -= len(m.PhoneCodeHash)
		copy(dAtA[i:], m.PhoneCodeHash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneCodeHash)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PhoneNumber) > 0 {
		i -= len(m.PhoneNumber)
		copy(dAtA[i:], m.PhoneNumber)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PhoneNumber)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLBotsAnswerWebhookJSONQuery) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBotsAnswerWebhookJSONQuery) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLBotsAnswerWebhookJSONQuery) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Data != nil {
		{
			size, err := m.Data.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.QueryId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.QueryId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLBotsSendCustomRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBotsSendCustomRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLBotsSendCustomRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Params != nil {
		{
			size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.CustomMethod) > 0 {
		i -= len(m.CustomMethod)
		copy(dAtA[i:], m.CustomMethod)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.CustomMethod)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLBotsSetBotCommands) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLBotsSetBotCommands) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLBotsSetBotCommands) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Commands) > 0 {
		for iNdEx := len(m.Commands) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Commands[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsCheckUsername) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsCheckUsername) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsCheckUsername) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Username) > 0 {
		i -= len(m.Username)
		copy(dAtA[i:], m.Username)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Username)))
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsCreateChannel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsCreateChannel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsCreateChannel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x4a
	}
	if m.GeoPoint != nil {
		{
			size, err := m.GeoPoint.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if len(m.About) > 0 {
		i -= len(m.About)
		copy(dAtA[i:], m.About)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.About)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x32
	}
	if m.Megagroup {
		i--
		if m.Megagroup {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.Broadcast {
		i--
		if m.Broadcast {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsDeleteChannel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsDeleteChannel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsDeleteChannel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsDeleteHistory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsDeleteHistory) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsDeleteHistory) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MaxId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
		i--
		dAtA[i] = 0x20
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsDeleteMessages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsDeleteMessages) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsDeleteMessages) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		dAtA64 := make([]byte, len(m.Id)*10)
		var j63 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA64[j63] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j63++
			}
			dAtA64[j63] = uint8(num)
			j63++
		}
		i -= j63
		copy(dAtA[i:], dAtA64[:j63])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j63))
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsDeleteUserHistory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsDeleteUserHistory) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsDeleteUserHistory) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsEditAbout) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsEditAbout) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsEditAbout) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.About) > 0 {
		i -= len(m.About)
		copy(dAtA[i:], m.About)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.About)))
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsEditAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsEditAdmin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsEditAdmin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Rank) > 0 {
		i -= len(m.Rank)
		copy(dAtA[i:], m.Rank)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Rank)))
		i--
		dAtA[i] = 0x42
	}
	if m.AdminRights70F893BA93 != nil {
		{
			size, err := m.AdminRights70F893BA93.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.Role != nil {
		{
			size, err := m.Role.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.AdminRights20B8821471 != nil {
		{
			size, err := m.AdminRights20B8821471.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsEditBanned) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsEditBanned) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsEditBanned) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.BannedRights7279691293 != nil {
		{
			size, err := m.BannedRights7279691293.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.BannedRightsBFD915CD71 != nil {
		{
			size, err := m.BannedRightsBFD915CD71.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsEditCreator) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsEditCreator) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsEditCreator) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Password != nil {
		{
			size, err := m.Password.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsEditLocation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsEditLocation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsEditLocation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x2a
	}
	if m.GeoPoint != nil {
		{
			size, err := m.GeoPoint.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsEditPhoto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsEditPhoto) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsEditPhoto) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Photo != nil {
		{
			size, err := m.Photo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsEditTitle) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsEditTitle) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsEditTitle) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsExportInvite) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsExportInvite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsExportInvite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsExportMessageLink) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsExportMessageLink) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsExportMessageLink) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Thread {
		i--
		if m.Thread {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if m.GroupedE63FADEB119 {
		i--
		if m.GroupedE63FADEB119 {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x30
	}
	if m.GroupedCEB7716385 != nil {
		{
			size, err := m.GroupedCEB7716385.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Id != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x20
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsGetAdminLog) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetAdminLog) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsGetAdminLog) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x50
	}
	if m.MinId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MinId))
		i--
		dAtA[i] = 0x48
	}
	if m.MaxId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
		i--
		dAtA[i] = 0x40
	}
	if len(m.Admins) > 0 {
		for iNdEx := len(m.Admins) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Admins[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if m.EventsFilter != nil {
		{
			size, err := m.EventsFilter.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if len(m.Q) > 0 {
		i -= len(m.Q)
		copy(dAtA[i:], m.Q)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Q)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsGetAdminedPublicChannels) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetAdminedPublicChannels) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsGetAdminedPublicChannels) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CheckLimit {
		i--
		if m.CheckLimit {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.ByLocation {
		i--
		if m.ByLocation {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsGetBroadcastsForDiscussion) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetBroadcastsForDiscussion) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsGetBroadcastsForDiscussion) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsGetChannels) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetChannels) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsGetChannels) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		for iNdEx := len(m.Id) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Id[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsGetDialogs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetDialogs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsGetDialogs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x20
	}
	if m.Offset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsGetFullChannel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetFullChannel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsGetFullChannel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsGetGroupsForDiscussion) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetGroupsForDiscussion) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsGetGroupsForDiscussion) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsGetImportantHistory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetImportantHistory) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsGetImportantHistory) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MinId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MinId))
		i--
		dAtA[i] = 0x48
	}
	if m.MaxId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
		i--
		dAtA[i] = 0x40
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x38
	}
	if m.AddOffset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.AddOffset))
		i--
		dAtA[i] = 0x30
	}
	if m.OffsetDate != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetDate))
		i--
		dAtA[i] = 0x28
	}
	if m.OffsetId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
		i--
		dAtA[i] = 0x20
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsGetInactiveChannels) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetInactiveChannels) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsGetInactiveChannels) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsGetLeftChannels) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetLeftChannels) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsGetLeftChannels) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Offset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsGetMessages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetMessages) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsGetMessages) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.IdAD8C9A2385) > 0 {
		for iNdEx := len(m.IdAD8C9A2385) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.IdAD8C9A2385[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.Id93D7B34771) > 0 {
		dAtA94 := make([]byte, len(m.Id93D7B34771)*10)
		var j93 int
		for _, num1 := range m.Id93D7B34771 {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA94[j93] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j93++
			}
			dAtA94[j93] = uint8(num)
			j93++
		}
		i -= j93
		copy(dAtA[i:], dAtA94[:j93])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j93))
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsGetParticipant) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetParticipant) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsGetParticipant) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsGetParticipants) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsGetParticipants) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsGetParticipants) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x38
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x30
	}
	if m.Offset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x28
	}
	if m.Filter != nil {
		{
			size, err := m.Filter.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsInviteToChannel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsInviteToChannel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsInviteToChannel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Users) > 0 {
		for iNdEx := len(m.Users) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Users[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsJoinChannel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsJoinChannel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsJoinChannel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsKickFromChannel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsKickFromChannel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsKickFromChannel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Kicked != nil {
		{
			size, err := m.Kicked.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsLeaveChannel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsLeaveChannel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsLeaveChannel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsReadHistory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsReadHistory) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsReadHistory) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MaxId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
		i--
		dAtA[i] = 0x20
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsReadMessageContents) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsReadMessageContents) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsReadMessageContents) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		dAtA108 := make([]byte, len(m.Id)*10)
		var j107 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA108[j107] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j107++
			}
			dAtA108[j107] = uint8(num)
			j107++
		}
		i -= j107
		copy(dAtA[i:], dAtA108[:j107])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j107))
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsReportSpam) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsReportSpam) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsReportSpam) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		dAtA111 := make([]byte, len(m.Id)*10)
		var j110 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA111[j110] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j110++
			}
			dAtA111[j110] = uint8(num)
			j110++
		}
		i -= j110
		copy(dAtA[i:], dAtA111[:j110])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j110))
		i--
		dAtA[i] = 0x2a
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsSetDiscussionGroup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsSetDiscussionGroup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsSetDiscussionGroup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Group != nil {
		{
			size, err := m.Group.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Broadcast != nil {
		{
			size, err := m.Broadcast.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsSetStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsSetStickers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsSetStickers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Stickerset != nil {
		{
			size, err := m.Stickerset.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsToggleComments) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsToggleComments) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsToggleComments) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Enabled != nil {
		{
			size, err := m.Enabled.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsToggleInvites) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsToggleInvites) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsToggleInvites) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Enabled != nil {
		{
			size, err := m.Enabled.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsTogglePreHistoryHidden) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsTogglePreHistoryHidden) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsTogglePreHistoryHidden) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Enabled != nil {
		{
			size, err := m.Enabled.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsToggleSignatures) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsToggleSignatures) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsToggleSignatures) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Enabled != nil {
		{
			size, err := m.Enabled.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsToggleSlowMode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsToggleSlowMode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsToggleSlowMode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Seconds != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Seconds))
		i--
		dAtA[i] = 0x20
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsUpdatePinnedMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsUpdatePinnedMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsUpdatePinnedMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x30
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Silent {
		i--
		if m.Silent {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLChannelsUpdateUsername) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLChannelsUpdateUsername) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLChannelsUpdateUsername) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Username) > 0 {
		i -= len(m.Username)
		copy(dAtA[i:], m.Username)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Username)))
		i--
		dAtA[i] = 0x22
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsAcceptContact) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsAcceptContact) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsAcceptContact) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != nil {
		{
			size, err := m.Id.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsAddContact) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsAddContact) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsAddContact) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Phone) > 0 {
		i -= len(m.Phone)
		copy(dAtA[i:], m.Phone)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Phone)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.LastName) > 0 {
		i -= len(m.LastName)
		copy(dAtA[i:], m.LastName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LastName)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.FirstName) > 0 {
		i -= len(m.FirstName)
		copy(dAtA[i:], m.FirstName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.FirstName)))
		i--
		dAtA[i] = 0x32
	}
	if m.Id != nil {
		{
			size, err := m.Id.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.AddPhonePrivacyException {
		i--
		if m.AddPhonePrivacyException {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsBlock) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsBlock) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsBlock) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id68CC1411119 != nil {
		{
			size, err := m.Id68CC1411119.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Id332B49FC71 != nil {
		{
			size, err := m.Id332B49FC71.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsBlockFromReplies) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsBlockFromReplies) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsBlockFromReplies) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x38
	}
	if m.ReportSpam {
		i--
		if m.ReportSpam {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.DeleteHistory {
		i--
		if m.DeleteHistory {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.DeleteMessage {
		i--
		if m.DeleteMessage {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsDeleteByPhones) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsDeleteByPhones) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsDeleteByPhones) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Phones) > 0 {
		for iNdEx := len(m.Phones) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Phones[iNdEx])
			copy(dAtA[i:], m.Phones[iNdEx])
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Phones[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsDeleteContact) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsDeleteContact) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsDeleteContact) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != nil {
		{
			size, err := m.Id.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsDeleteContacts) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsDeleteContacts) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsDeleteContacts) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		for iNdEx := len(m.Id) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Id[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsExportCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsExportCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsExportCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsGetBlocked) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsGetBlocked) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsGetBlocked) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x20
	}
	if m.Offset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsGetContactIDs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsGetContactIDs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsGetContactIDs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsGetContacts) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsGetContacts) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsGetContacts) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Hash22C6AA0851) > 0 {
		i -= len(m.Hash22C6AA0851)
		copy(dAtA[i:], m.Hash22C6AA0851)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Hash22C6AA0851)))
		i--
		dAtA[i] = 0x22
	}
	if m.HashC023849F71 != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.HashC023849F71))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsGetLocated) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsGetLocated) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsGetLocated) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SelfExpires != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.SelfExpires))
		i--
		dAtA[i] = 0x30
	}
	if m.Background {
		i--
		if m.Background {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x20
	}
	if m.GeoPoint != nil {
		{
			size, err := m.GeoPoint.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsGetSaved) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsGetSaved) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsGetSaved) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsGetStatuses) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsGetStatuses) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsGetStatuses) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsGetTopPeers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsGetTopPeers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsGetTopPeers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x60
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x58
	}
	if m.Offset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x50
	}
	if m.Channels {
		i--
		if m.Channels {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x48
	}
	if m.Groups {
		i--
		if m.Groups {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if m.PhoneCalls {
		i--
		if m.PhoneCalls {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if m.BotsInline {
		i--
		if m.BotsInline {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.BotsPm {
		i--
		if m.BotsPm {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.Correspondents {
		i--
		if m.Correspondents {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsImportCard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsImportCard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsImportCard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ExportCard) > 0 {
		dAtA136 := make([]byte, len(m.ExportCard)*10)
		var j135 int
		for _, num1 := range m.ExportCard {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA136[j135] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j135++
			}
			dAtA136[j135] = uint8(num)
			j135++
		}
		i -= j135
		copy(dAtA[i:], dAtA136[:j135])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j135))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsImportContacts) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsImportContacts) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsImportContacts) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Replace != nil {
		{
			size, err := m.Replace.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.Contacts) > 0 {
		for iNdEx := len(m.Contacts) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Contacts[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsResetSaved) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsResetSaved) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsResetSaved) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsResetTopPeerRating) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsResetTopPeerRating) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsResetTopPeerRating) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Category != nil {
		{
			size, err := m.Category.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsResolveUsername) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsResolveUsername) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsResolveUsername) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Username) > 0 {
		i -= len(m.Username)
		copy(dAtA[i:], m.Username)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Username)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsSearch) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsSearch) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsSearch) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Q) > 0 {
		i -= len(m.Q)
		copy(dAtA[i:], m.Q)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Q)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsToggleTopPeers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsToggleTopPeers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsToggleTopPeers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Enabled != nil {
		{
			size, err := m.Enabled.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLContactsUnblock) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContactsUnblock) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContactsUnblock) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IdBEA65D50119 != nil {
		{
			size, err := m.IdBEA65D50119.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.IdE54100BD71 != nil {
		{
			size, err := m.IdE54100BD71.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLFoldersDeleteFolder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLFoldersDeleteFolder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLFoldersDeleteFolder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FolderId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FolderId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLFoldersEditPeerFolders) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLFoldersEditPeerFolders) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLFoldersEditPeerFolders) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.FolderPeers) > 0 {
		for iNdEx := len(m.FolderPeers) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.FolderPeers[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpAcceptTermsOfService) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpAcceptTermsOfService) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpAcceptTermsOfService) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != nil {
		{
			size, err := m.Id.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpDismissSuggestion) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpDismissSuggestion) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpDismissSuggestion) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Suggestion) > 0 {
		i -= len(m.Suggestion)
		copy(dAtA[i:], m.Suggestion)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Suggestion)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpEditUserInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpEditUserInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpEditUserInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Entities) > 0 {
		for iNdEx := len(m.Entities) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Entities[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x22
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetAppChangelog) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetAppChangelog) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetAppChangelog) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LangCode) > 0 {
		i -= len(m.LangCode)
		copy(dAtA[i:], m.LangCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.AppVersion) > 0 {
		i -= len(m.AppVersion)
		copy(dAtA[i:], m.AppVersion)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.AppVersion)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.SystemVersion) > 0 {
		i -= len(m.SystemVersion)
		copy(dAtA[i:], m.SystemVersion)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.SystemVersion)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.DeviceModel) > 0 {
		i -= len(m.DeviceModel)
		copy(dAtA[i:], m.DeviceModel)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.DeviceModel)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PrevAppVersion) > 0 {
		i -= len(m.PrevAppVersion)
		copy(dAtA[i:], m.PrevAppVersion)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.PrevAppVersion)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetAppConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetAppConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetAppConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetAppUpdate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetAppUpdate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetAppUpdate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Source) > 0 {
		i -= len(m.Source)
		copy(dAtA[i:], m.Source)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Source)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.LangCode) > 0 {
		i -= len(m.LangCode)
		copy(dAtA[i:], m.LangCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.AppVersion) > 0 {
		i -= len(m.AppVersion)
		copy(dAtA[i:], m.AppVersion)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.AppVersion)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.SystemVersion) > 0 {
		i -= len(m.SystemVersion)
		copy(dAtA[i:], m.SystemVersion)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.SystemVersion)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.DeviceModel) > 0 {
		i -= len(m.DeviceModel)
		copy(dAtA[i:], m.DeviceModel)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.DeviceModel)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetCdnConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetCdnConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetCdnConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetCountriesList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetCountriesList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetCountriesList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x20
	}
	if len(m.LangCode) > 0 {
		i -= len(m.LangCode)
		copy(dAtA[i:], m.LangCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetDeepLinkInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetDeepLinkInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetDeepLinkInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Path) > 0 {
		i -= len(m.Path)
		copy(dAtA[i:], m.Path)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Path)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetInviteText) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetInviteText) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetInviteText) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LangCode) > 0 {
		i -= len(m.LangCode)
		copy(dAtA[i:], m.LangCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetNearestDc) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetNearestDc) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetNearestDc) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetPassportConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetPassportConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetPassportConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetPromoData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetPromoData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetPromoData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetProxyData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetProxyData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetProxyData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetRecentMeUrls) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetRecentMeUrls) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetRecentMeUrls) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Referer) > 0 {
		i -= len(m.Referer)
		copy(dAtA[i:], m.Referer)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Referer)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetSupport) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetSupport) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetSupport) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetSupportName) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetSupportName) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetSupportName) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetTermsOfService) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetTermsOfService) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetTermsOfService) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LangCode) > 0 {
		i -= len(m.LangCode)
		copy(dAtA[i:], m.LangCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetTermsOfServiceUpdate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetTermsOfServiceUpdate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetTermsOfServiceUpdate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpGetUserInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpGetUserInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpGetUserInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpHidePromoData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpHidePromoData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpHidePromoData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpSaveAppLog) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpSaveAppLog) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpSaveAppLog) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Events) > 0 {
		for iNdEx := len(m.Events) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Events[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpSetBotUpdatesStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpSetBotUpdatesStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpSetBotUpdatesStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x22
	}
	if m.PendingUpdatesCount != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.PendingUpdatesCount))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLHelpTest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLHelpTest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLHelpTest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLLangpackGetDifference) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLLangpackGetDifference) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLLangpackGetDifference) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LangPack) > 0 {
		i -= len(m.LangPack)
		copy(dAtA[i:], m.LangPack)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangPack)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.LangCode) > 0 {
		i -= len(m.LangCode)
		copy(dAtA[i:], m.LangCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i--
		dAtA[i] = 0x22
	}
	if m.FromVersion != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FromVersion))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLLangpackGetLangPack) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLLangpackGetLangPack) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLLangpackGetLangPack) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LangPack) > 0 {
		i -= len(m.LangPack)
		copy(dAtA[i:], m.LangPack)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangPack)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.LangCode) > 0 {
		i -= len(m.LangCode)
		copy(dAtA[i:], m.LangCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLLangpackGetLanguage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLLangpackGetLanguage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLLangpackGetLanguage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LangCode) > 0 {
		i -= len(m.LangCode)
		copy(dAtA[i:], m.LangCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.LangPack) > 0 {
		i -= len(m.LangPack)
		copy(dAtA[i:], m.LangPack)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangPack)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLLangpackGetLanguages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLLangpackGetLanguages) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLLangpackGetLanguages) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LangPack) > 0 {
		i -= len(m.LangPack)
		copy(dAtA[i:], m.LangPack)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangPack)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLLangpackGetStrings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLLangpackGetStrings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLLangpackGetStrings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LangPack) > 0 {
		i -= len(m.LangPack)
		copy(dAtA[i:], m.LangPack)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangPack)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Keys) > 0 {
		for iNdEx := len(m.Keys) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Keys[iNdEx])
			copy(dAtA[i:], m.Keys[iNdEx])
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Keys[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.LangCode) > 0 {
		i -= len(m.LangCode)
		copy(dAtA[i:], m.LangCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesAcceptEncryption) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesAcceptEncryption) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesAcceptEncryption) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.KeyFingerprint != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.KeyFingerprint))
		i--
		dAtA[i] = 0x28
	}
	if len(m.GB) > 0 {
		i -= len(m.GB)
		copy(dAtA[i:], m.GB)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.GB)))
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesAcceptUrlAuth) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesAcceptUrlAuth) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesAcceptUrlAuth) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ButtonId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ButtonId))
		i--
		dAtA[i] = 0x38
	}
	if m.MsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x30
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.WriteAllowed {
		i--
		if m.WriteAllowed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesAddChatUser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesAddChatUser) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesAddChatUser) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FwdLimit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FwdLimit))
		i--
		dAtA[i] = 0x28
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.ChatId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ChatId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesCheckChatInvite) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesCheckChatInvite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesCheckChatInvite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Hash) > 0 {
		i -= len(m.Hash)
		copy(dAtA[i:], m.Hash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Hash)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesClearAllDrafts) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesClearAllDrafts) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesClearAllDrafts) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesClearRecentStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesClearRecentStickers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesClearRecentStickers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Attached {
		i--
		if m.Attached {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesCreateChat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesCreateChat) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesCreateChat) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Users) > 0 {
		for iNdEx := len(m.Users) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Users[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesDeleteChatUser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesDeleteChatUser) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesDeleteChatUser) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.ChatId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ChatId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesDeleteHistory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesDeleteHistory) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesDeleteHistory) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Revoke {
		i--
		if m.Revoke {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if m.JustClear {
		i--
		if m.JustClear {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x28
	}
	if m.MaxId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesDeleteMessages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesDeleteMessages) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesDeleteMessages) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		dAtA153 := make([]byte, len(m.Id)*10)
		var j152 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA153[j152] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j152++
			}
			dAtA153[j152] = uint8(num)
			j152++
		}
		i -= j152
		copy(dAtA[i:], dAtA153[:j152])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j152))
		i--
		dAtA[i] = 0x2a
	}
	if m.Revoke {
		i--
		if m.Revoke {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesDeleteScheduledMessages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesDeleteScheduledMessages) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesDeleteScheduledMessages) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		dAtA155 := make([]byte, len(m.Id)*10)
		var j154 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA155[j154] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j154++
			}
			dAtA155[j154] = uint8(num)
			j154++
		}
		i -= j154
		copy(dAtA[i:], dAtA155[:j154])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j154))
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesDiscardEncryption) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesDiscardEncryption) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesDiscardEncryption) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChatId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ChatId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesEditChatAbout) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesEditChatAbout) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesEditChatAbout) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.About) > 0 {
		i -= len(m.About)
		copy(dAtA[i:], m.About)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.About)))
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesEditChatAdmin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesEditChatAdmin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesEditChatAdmin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.IsAdmin != nil {
		{
			size, err := m.IsAdmin.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.ChatId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ChatId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesEditChatDefaultBannedRights) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesEditChatDefaultBannedRights) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesEditChatDefaultBannedRights) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.BannedRights != nil {
		{
			size, err := m.BannedRights.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesEditChatPhoto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesEditChatPhoto) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesEditChatPhoto) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Photo != nil {
		{
			size, err := m.Photo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.ChatId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ChatId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesEditChatTitle) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesEditChatTitle) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesEditChatTitle) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x22
	}
	if m.ChatId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ChatId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesEditInlineBotMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesEditInlineBotMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesEditInlineBotMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.GeoPoint != nil {
		{
			size, err := m.GeoPoint.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	if m.Media != nil {
		{
			size, err := m.Media.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	if m.StopGeoLive {
		i--
		if m.StopGeoLive {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x48
	}
	if len(m.Entities) > 0 {
		for iNdEx := len(m.Entities) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Entities[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x42
		}
	}
	if m.ReplyMarkup != nil {
		{
			size, err := m.ReplyMarkup.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x32
	}
	if m.Id != nil {
		{
			size, err := m.Id.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.NoWebpage {
		i--
		if m.NoWebpage {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesEditMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesEditMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesEditMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ScheduleDate != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ScheduleDate))
		i--
		dAtA[i] = 0x68
	}
	if m.GeoPoint != nil {
		{
			size, err := m.GeoPoint.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	if m.Media != nil {
		{
			size, err := m.Media.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	if m.StopGeoLive {
		i--
		if m.StopGeoLive {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x50
	}
	if len(m.Entities) > 0 {
		for iNdEx := len(m.Entities) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Entities[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x4a
		}
	}
	if m.ReplyMarkup != nil {
		{
			size, err := m.ReplyMarkup.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Id != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x30
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.NoWebpage {
		i--
		if m.NoWebpage {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesExportChatInvite) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesExportChatInvite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesExportChatInvite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.ChatId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ChatId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesFaveSticker) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesFaveSticker) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesFaveSticker) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Unfave != nil {
		{
			size, err := m.Unfave.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Id != nil {
		{
			size, err := m.Id.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesForwardMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesForwardMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesForwardMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RandomId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
		i--
		dAtA[i] = 0x28
	}
	if m.Id != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesForwardMessages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesForwardMessages) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesForwardMessages) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ScheduleDate != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ScheduleDate))
		i--
		dAtA[i] = 0x58
	}
	if m.ToPeer != nil {
		{
			size, err := m.ToPeer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	if len(m.RandomId) > 0 {
		dAtA177 := make([]byte, len(m.RandomId)*10)
		var j176 int
		for _, num1 := range m.RandomId {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA177[j176] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j176++
			}
			dAtA177[j176] = uint8(num)
			j176++
		}
		i -= j176
		copy(dAtA[i:], dAtA177[:j176])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j176))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.Id) > 0 {
		dAtA179 := make([]byte, len(m.Id)*10)
		var j178 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA179[j178] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j178++
			}
			dAtA179[j178] = uint8(num)
			j178++
		}
		i -= j178
		copy(dAtA[i:], dAtA179[:j178])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j178))
		i--
		dAtA[i] = 0x42
	}
	if m.FromPeer != nil {
		{
			size, err := m.FromPeer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.WithMyScore {
		i--
		if m.WithMyScore {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.Background {
		i--
		if m.Background {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.Silent {
		i--
		if m.Silent {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetAllChats) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetAllChats) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetAllChats) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ExceptIds) > 0 {
		dAtA182 := make([]byte, len(m.ExceptIds)*10)
		var j181 int
		for _, num1 := range m.ExceptIds {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA182[j181] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j181++
			}
			dAtA182[j181] = uint8(num)
			j181++
		}
		i -= j181
		copy(dAtA[i:], dAtA182[:j181])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j181))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetAllDrafts) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetAllDrafts) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetAllDrafts) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetAllStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetAllStickers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetAllStickers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetArchivedStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetArchivedStickers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetArchivedStickers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x30
	}
	if m.OffsetId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
		i--
		dAtA[i] = 0x28
	}
	if m.Masks {
		i--
		if m.Masks {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetAttachedStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetAttachedStickers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetAttachedStickers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Media != nil {
		{
			size, err := m.Media.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetBotCallbackAnswer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetBotCallbackAnswer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetBotCallbackAnswer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Password != nil {
		{
			size, err := m.Password.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if len(m.Data) > 0 {
		i -= len(m.Data)
		copy(dAtA[i:], m.Data)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Data)))
		i--
		dAtA[i] = 0x3a
	}
	if m.MsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x30
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Game {
		i--
		if m.Game {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetChats) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetChats) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetChats) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		dAtA187 := make([]byte, len(m.Id)*10)
		var j186 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA187[j186] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j186++
			}
			dAtA187[j186] = uint8(num)
			j186++
		}
		i -= j186
		copy(dAtA[i:], dAtA187[:j186])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j186))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetCommonChats) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetCommonChats) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetCommonChats) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x28
	}
	if m.MaxId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
		i--
		dAtA[i] = 0x20
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetDhConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetDhConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetDhConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RandomLength != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomLength))
		i--
		dAtA[i] = 0x20
	}
	if m.Version != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Version))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetDialogFilters) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetDialogFilters) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetDialogFilters) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetDialogUnreadMarks) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetDialogUnreadMarks) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetDialogUnreadMarks) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetDialogs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetDialogs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetDialogs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FolderId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FolderId))
		i--
		dAtA[i] = 0x50
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x48
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x40
	}
	if m.OffsetPeer != nil {
		{
			size, err := m.OffsetPeer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.OffsetId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
		i--
		dAtA[i] = 0x30
	}
	if m.OffsetDate != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetDate))
		i--
		dAtA[i] = 0x28
	}
	if m.ExcludePinned {
		i--
		if m.ExcludePinned {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetDiscussionMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetDiscussionMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetDiscussionMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetDocumentByHash) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetDocumentByHash) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetDocumentByHash) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.MimeType) > 0 {
		i -= len(m.MimeType)
		copy(dAtA[i:], m.MimeType)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.MimeType)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Size_ != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Size_))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Sha256) > 0 {
		i -= len(m.Sha256)
		copy(dAtA[i:], m.Sha256)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Sha256)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetEmojiKeywords) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetEmojiKeywords) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetEmojiKeywords) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LangCode) > 0 {
		i -= len(m.LangCode)
		copy(dAtA[i:], m.LangCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetEmojiKeywordsDifference) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetEmojiKeywordsDifference) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetEmojiKeywordsDifference) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FromVersion != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FromVersion))
		i--
		dAtA[i] = 0x20
	}
	if len(m.LangCode) > 0 {
		i -= len(m.LangCode)
		copy(dAtA[i:], m.LangCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetEmojiKeywordsLanguages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetEmojiKeywordsLanguages) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetEmojiKeywordsLanguages) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LangCodes) > 0 {
		for iNdEx := len(m.LangCodes) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.LangCodes[iNdEx])
			copy(dAtA[i:], m.LangCodes[iNdEx])
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCodes[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetEmojiURL) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetEmojiURL) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetEmojiURL) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LangCode) > 0 {
		i -= len(m.LangCode)
		copy(dAtA[i:], m.LangCode)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.LangCode)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetFavedStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetFavedStickers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetFavedStickers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetFeaturedStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetFeaturedStickers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetFeaturedStickers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetFullChat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetFullChat) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetFullChat) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChatId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ChatId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetGameHighScores) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetGameHighScores) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetGameHighScores) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Id != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetHistory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetHistory) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetHistory) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x50
	}
	if m.MinId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MinId))
		i--
		dAtA[i] = 0x48
	}
	if m.MaxId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
		i--
		dAtA[i] = 0x40
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x38
	}
	if m.AddOffset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.AddOffset))
		i--
		dAtA[i] = 0x30
	}
	if m.OffsetDate != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetDate))
		i--
		dAtA[i] = 0x28
	}
	if m.OffsetId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetInlineBotResults) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetInlineBotResults) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetInlineBotResults) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Offset) > 0 {
		i -= len(m.Offset)
		copy(dAtA[i:], m.Offset)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Offset)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Query) > 0 {
		i -= len(m.Query)
		copy(dAtA[i:], m.Query)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Query)))
		i--
		dAtA[i] = 0x3a
	}
	if m.GeoPoint != nil {
		{
			size, err := m.GeoPoint.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Bot != nil {
		{
			size, err := m.Bot.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetInlineGameHighScores) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetInlineGameHighScores) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetInlineGameHighScores) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Id != nil {
		{
			size, err := m.Id.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetMaskStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetMaskStickers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetMaskStickers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetMessageEditData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetMessageEditData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetMessageEditData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetMessages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetMessages) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetMessages) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id63C6650685) > 0 {
		for iNdEx := len(m.Id63C6650685) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Id63C6650685[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.Id4222FA7471) > 0 {
		dAtA201 := make([]byte, len(m.Id4222FA7471)*10)
		var j200 int
		for _, num1 := range m.Id4222FA7471 {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA201[j200] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j200++
			}
			dAtA201[j200] = uint8(num)
			j200++
		}
		i -= j200
		copy(dAtA[i:], dAtA201[:j200])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j200))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetMessagesViews) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetMessagesViews) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetMessagesViews) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Increment != nil {
		{
			size, err := m.Increment.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Id) > 0 {
		dAtA204 := make([]byte, len(m.Id)*10)
		var j203 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA204[j203] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j203++
			}
			dAtA204[j203] = uint8(num)
			j203++
		}
		i -= j203
		copy(dAtA[i:], dAtA204[:j203])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j203))
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetOldFeaturedStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetOldFeaturedStickers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetOldFeaturedStickers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x28
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x20
	}
	if m.Offset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetOnlines) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetOnlines) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetOnlines) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetPeerDialogs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetPeerDialogs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetPeerDialogs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.PeersE470BCFD85) > 0 {
		for iNdEx := len(m.PeersE470BCFD85) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.PeersE470BCFD85[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.Peers2D9776B971) > 0 {
		for iNdEx := len(m.Peers2D9776B971) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Peers2D9776B971[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetPeerSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetPeerSettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetPeerSettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetPinnedDialogs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetPinnedDialogs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetPinnedDialogs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FolderId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FolderId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetPollResults) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetPollResults) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetPollResults) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetPollVotes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetPollVotes) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetPollVotes) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x40
	}
	if len(m.Offset) > 0 {
		i -= len(m.Offset)
		copy(dAtA[i:], m.Offset)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Offset)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Option) > 0 {
		i -= len(m.Option)
		copy(dAtA[i:], m.Option)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Option)))
		i--
		dAtA[i] = 0x32
	}
	if m.Id != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x28
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetRecentLocations) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetRecentLocations) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetRecentLocations) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x28
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetRecentStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetRecentStickers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetRecentStickers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x28
	}
	if m.Attached {
		i--
		if m.Attached {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetReplies) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetReplies) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetReplies) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x58
	}
	if m.MinId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MinId))
		i--
		dAtA[i] = 0x50
	}
	if m.MaxId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
		i--
		dAtA[i] = 0x48
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x40
	}
	if m.AddOffset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.AddOffset))
		i--
		dAtA[i] = 0x38
	}
	if m.OffsetDate != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetDate))
		i--
		dAtA[i] = 0x30
	}
	if m.OffsetId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
		i--
		dAtA[i] = 0x28
	}
	if m.MsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetSavedGifs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetSavedGifs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetSavedGifs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetScheduledHistory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetScheduledHistory) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetScheduledHistory) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetScheduledMessages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetScheduledMessages) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetScheduledMessages) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		dAtA214 := make([]byte, len(m.Id)*10)
		var j213 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA214[j213] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j213++
			}
			dAtA214[j213] = uint8(num)
			j213++
		}
		i -= j213
		copy(dAtA[i:], dAtA214[:j213])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j213))
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetSearchCounters) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetSearchCounters) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetSearchCounters) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Filters) > 0 {
		for iNdEx := len(m.Filters) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Filters[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetSplitRanges) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetSplitRanges) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetSplitRanges) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetStatsURL) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetStatsURL) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetStatsURL) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Params) > 0 {
		i -= len(m.Params)
		copy(dAtA[i:], m.Params)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Params)))
		i--
		dAtA[i] = 0x32
	}
	if m.Dark {
		i--
		if m.Dark {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetStickerSet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetStickerSet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetStickerSet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Stickerset != nil {
		{
			size, err := m.Stickerset.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetStickers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetStickers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash43D4F2C85 != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash43D4F2C85))
		i--
		dAtA[i] = 0x28
	}
	if len(m.HashAE22E04551) > 0 {
		i -= len(m.HashAE22E04551)
		copy(dAtA[i:], m.HashAE22E04551)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.HashAE22E04551)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Emoticon) > 0 {
		i -= len(m.Emoticon)
		copy(dAtA[i:], m.Emoticon)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Emoticon)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetSuggestedDialogFilters) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetSuggestedDialogFilters) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetSuggestedDialogFilters) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetUnreadMentions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetUnreadMentions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetUnreadMentions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MinId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MinId))
		i--
		dAtA[i] = 0x40
	}
	if m.MaxId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
		i--
		dAtA[i] = 0x38
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x30
	}
	if m.AddOffset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.AddOffset))
		i--
		dAtA[i] = 0x28
	}
	if m.OffsetId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetWebPage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetWebPage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetWebPage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesGetWebPagePreview) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesGetWebPagePreview) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesGetWebPagePreview) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Entities) > 0 {
		for iNdEx := len(m.Entities) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Entities[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesHidePeerSettingsBar) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesHidePeerSettingsBar) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesHidePeerSettingsBar) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesHideReportSpam) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesHideReportSpam) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesHideReportSpam) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesImportChatInvite) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesImportChatInvite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesImportChatInvite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Hash) > 0 {
		i -= len(m.Hash)
		copy(dAtA[i:], m.Hash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Hash)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesInstallStickerSet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesInstallStickerSet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesInstallStickerSet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Disabled != nil {
		{
			size, err := m.Disabled.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Archived != nil {
		{
			size, err := m.Archived.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Stickerset != nil {
		{
			size, err := m.Stickerset.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesMarkDialogUnread) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesMarkDialogUnread) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesMarkDialogUnread) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Unread {
		i--
		if m.Unread {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesMigrateChat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesMigrateChat) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesMigrateChat) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChatId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ChatId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesReadDiscussion) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReadDiscussion) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesReadDiscussion) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ReadMaxId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ReadMaxId))
		i--
		dAtA[i] = 0x28
	}
	if m.MsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesReadEncryptedHistory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReadEncryptedHistory) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesReadEncryptedHistory) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MaxDate != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxDate))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesReadFeaturedStickers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReadFeaturedStickers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesReadFeaturedStickers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		dAtA229 := make([]byte, len(m.Id)*10)
		var j228 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA229[j228] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j228++
			}
			dAtA229[j228] = uint8(num)
			j228++
		}
		i -= j228
		copy(dAtA[i:], dAtA229[:j228])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j228))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesReadHistory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReadHistory) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesReadHistory) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Offset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x28
	}
	if m.MaxId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesReadMentions) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReadMentions) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesReadMentions) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesReadMessageContents) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReadMessageContents) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesReadMessageContents) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		dAtA233 := make([]byte, len(m.Id)*10)
		var j232 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA233[j232] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j232++
			}
			dAtA233[j232] = uint8(num)
			j232++
		}
		i -= j232
		copy(dAtA[i:], dAtA233[:j232])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j232))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesReceivedMessages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReceivedMessages) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesReceivedMessages) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MaxId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesReceivedQueue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReceivedQueue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesReceivedQueue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MaxQts != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxQts))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesReorderPinnedDialogs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReorderPinnedDialogs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesReorderPinnedDialogs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FolderId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FolderId))
		i--
		dAtA[i] = 0x38
	}
	if len(m.Order5B51D63F85) > 0 {
		for iNdEx := len(m.Order5B51D63F85) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Order5B51D63F85[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.Order959FF64471) > 0 {
		for iNdEx := len(m.Order959FF64471) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Order959FF64471[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if m.Force {
		i--
		if m.Force {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesReorderStickerSets) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReorderStickerSets) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesReorderStickerSets) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Order) > 0 {
		dAtA235 := make([]byte, len(m.Order)*10)
		var j234 int
		for _, num1 := range m.Order {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA235[j234] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j234++
			}
			dAtA235[j234] = uint8(num)
			j234++
		}
		i -= j234
		copy(dAtA[i:], dAtA235[:j234])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j234))
		i--
		dAtA[i] = 0x2a
	}
	if m.Masks {
		i--
		if m.Masks {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesReport) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReport) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesReport) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Reason != nil {
		{
			size, err := m.Reason.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Id) > 0 {
		dAtA238 := make([]byte, len(m.Id)*10)
		var j237 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA238[j237] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j237++
			}
			dAtA238[j237] = uint8(num)
			j237++
		}
		i -= j237
		copy(dAtA[i:], dAtA238[:j237])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j237))
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesReportEncryptedSpam) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReportEncryptedSpam) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesReportEncryptedSpam) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesReportSpam) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesReportSpam) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesReportSpam) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesRequestEncryption) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesRequestEncryption) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesRequestEncryption) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.GA) > 0 {
		i -= len(m.GA)
		copy(dAtA[i:], m.GA)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.GA)))
		i--
		dAtA[i] = 0x2a
	}
	if m.RandomId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
		i--
		dAtA[i] = 0x20
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesRequestUrlAuth) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesRequestUrlAuth) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesRequestUrlAuth) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ButtonId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ButtonId))
		i--
		dAtA[i] = 0x28
	}
	if m.MsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSaveDraft) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSaveDraft) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSaveDraft) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Entities) > 0 {
		for iNdEx := len(m.Entities) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Entities[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x42
		}
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.ReplyToMsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ReplyToMsgId))
		i--
		dAtA[i] = 0x28
	}
	if m.NoWebpage {
		i--
		if m.NoWebpage {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSaveGif) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSaveGif) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSaveGif) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Unsave != nil {
		{
			size, err := m.Unsave.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Id != nil {
		{
			size, err := m.Id.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSaveRecentSticker) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSaveRecentSticker) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSaveRecentSticker) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Unsave != nil {
		{
			size, err := m.Unsave.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Id != nil {
		{
			size, err := m.Id.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Attached {
		i--
		if m.Attached {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSearch) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSearch) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSearch) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FromIdC352EEC120 != nil {
		{
			size, err := m.FromIdC352EEC120.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x9a
	}
	if m.TopMsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.TopMsgId))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x90
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x88
	}
	if m.ImportantOnly {
		i--
		if m.ImportantOnly {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x80
	}
	if m.Offset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x78
	}
	if m.MinId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MinId))
		i--
		dAtA[i] = 0x70
	}
	if m.MaxId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
		i--
		dAtA[i] = 0x68
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x60
	}
	if m.AddOffset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.AddOffset))
		i--
		dAtA[i] = 0x58
	}
	if m.OffsetId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
		i--
		dAtA[i] = 0x50
	}
	if m.MaxDate != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxDate))
		i--
		dAtA[i] = 0x48
	}
	if m.MinDate != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MinDate))
		i--
		dAtA[i] = 0x40
	}
	if m.Filter != nil {
		{
			size, err := m.Filter.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.FromId39E9EA071 != nil {
		{
			size, err := m.FromId39E9EA071.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if len(m.Q) > 0 {
		i -= len(m.Q)
		copy(dAtA[i:], m.Q)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Q)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSearchGifs) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSearchGifs) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSearchGifs) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Offset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Q) > 0 {
		i -= len(m.Q)
		copy(dAtA[i:], m.Q)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Q)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSearchGlobal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSearchGlobal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSearchGlobal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MaxDate != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxDate))
		i--
		dAtA[i] = 0x68
	}
	if m.MinDate != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MinDate))
		i--
		dAtA[i] = 0x60
	}
	if m.Filter != nil {
		{
			size, err := m.Filter.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	if m.FolderId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FolderId))
		i--
		dAtA[i] = 0x50
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x48
	}
	if m.OffsetRate != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetRate))
		i--
		dAtA[i] = 0x40
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x38
	}
	if m.OffsetId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
		i--
		dAtA[i] = 0x30
	}
	if m.OffsetPeer != nil {
		{
			size, err := m.OffsetPeer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.OffsetDate != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetDate))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Q) > 0 {
		i -= len(m.Q)
		copy(dAtA[i:], m.Q)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Q)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSearchStickerSets) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSearchStickerSets) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSearchStickerSets) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Hash != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Hash))
		i--
		dAtA[i] = 0x30
	}
	if len(m.Q) > 0 {
		i -= len(m.Q)
		copy(dAtA[i:], m.Q)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Q)))
		i--
		dAtA[i] = 0x2a
	}
	if m.ExcludeFeatured {
		i--
		if m.ExcludeFeatured {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSendBroadcast) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendBroadcast) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSendBroadcast) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Media != nil {
		{
			size, err := m.Media.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.RandomId) > 0 {
		dAtA257 := make([]byte, len(m.RandomId)*10)
		var j256 int
		for _, num1 := range m.RandomId {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA257[j256] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j256++
			}
			dAtA257[j256] = uint8(num)
			j256++
		}
		i -= j256
		copy(dAtA[i:], dAtA257[:j256])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j256))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Contacts) > 0 {
		for iNdEx := len(m.Contacts) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Contacts[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSendEncrypted) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendEncrypted) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSendEncrypted) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Silent {
		i--
		if m.Silent {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x30
	}
	if len(m.Data) > 0 {
		i -= len(m.Data)
		copy(dAtA[i:], m.Data)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Data)))
		i--
		dAtA[i] = 0x2a
	}
	if m.RandomId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSendEncryptedFile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendEncryptedFile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSendEncryptedFile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Silent {
		i--
		if m.Silent {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x38
	}
	if m.File != nil {
		{
			size, err := m.File.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if len(m.Data) > 0 {
		i -= len(m.Data)
		copy(dAtA[i:], m.Data)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Data)))
		i--
		dAtA[i] = 0x2a
	}
	if m.RandomId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSendEncryptedService) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendEncryptedService) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSendEncryptedService) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Data) > 0 {
		i -= len(m.Data)
		copy(dAtA[i:], m.Data)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Data)))
		i--
		dAtA[i] = 0x2a
	}
	if m.RandomId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSendInlineBotResult) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendInlineBotResult) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSendInlineBotResult) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ScheduleDate != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ScheduleDate))
		i--
		dAtA[i] = 0x68
	}
	if m.HideVia {
		i--
		if m.HideVia {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x60
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x5a
	}
	if m.QueryId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.QueryId))
		i--
		dAtA[i] = 0x50
	}
	if m.RandomId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
		i--
		dAtA[i] = 0x48
	}
	if m.ReplyToMsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ReplyToMsgId))
		i--
		dAtA[i] = 0x40
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.ClearDraft {
		i--
		if m.ClearDraft {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.Background {
		i--
		if m.Background {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.Silent {
		i--
		if m.Silent {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSendMedia) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendMedia) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSendMedia) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ScheduleDate != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ScheduleDate))
		i--
		dAtA[i] = 0x70
	}
	if len(m.Entities) > 0 {
		for iNdEx := len(m.Entities) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Entities[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x6a
		}
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x62
	}
	if m.ReplyMarkup != nil {
		{
			size, err := m.ReplyMarkup.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	if m.RandomId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
		i--
		dAtA[i] = 0x50
	}
	if m.Media != nil {
		{
			size, err := m.Media.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.ReplyToMsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ReplyToMsgId))
		i--
		dAtA[i] = 0x40
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.ClearDraft {
		i--
		if m.ClearDraft {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.Background {
		i--
		if m.Background {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.Silent {
		i--
		if m.Silent {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSendMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSendMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ScheduleDate != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ScheduleDate))
		i--
		dAtA[i] = 0x70
	}
	if len(m.Entities) > 0 {
		for iNdEx := len(m.Entities) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Entities[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x6a
		}
	}
	if m.ReplyMarkup != nil {
		{
			size, err := m.ReplyMarkup.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	if m.RandomId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
		i--
		dAtA[i] = 0x58
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x52
	}
	if m.ReplyToMsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ReplyToMsgId))
		i--
		dAtA[i] = 0x48
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.ClearDraft {
		i--
		if m.ClearDraft {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if m.Background {
		i--
		if m.Background {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.Silent {
		i--
		if m.Silent {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.NoWebpage {
		i--
		if m.NoWebpage {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSendMultiMedia) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendMultiMedia) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSendMultiMedia) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ScheduleDate != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ScheduleDate))
		i--
		dAtA[i] = 0x50
	}
	if len(m.MultiMedia) > 0 {
		for iNdEx := len(m.MultiMedia) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.MultiMedia[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x4a
		}
	}
	if m.ReplyToMsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ReplyToMsgId))
		i--
		dAtA[i] = 0x40
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.ClearDraft {
		i--
		if m.ClearDraft {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.Background {
		i--
		if m.Background {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.Silent {
		i--
		if m.Silent {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSendScheduledMessages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendScheduledMessages) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSendScheduledMessages) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		dAtA270 := make([]byte, len(m.Id)*10)
		var j269 int
		for _, num1 := range m.Id {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA270[j269] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j269++
			}
			dAtA270[j269] = uint8(num)
			j269++
		}
		i -= j269
		copy(dAtA[i:], dAtA270[:j269])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j269))
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSendScreenshotNotification) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendScreenshotNotification) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSendScreenshotNotification) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RandomId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
		i--
		dAtA[i] = 0x28
	}
	if m.ReplyToMsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ReplyToMsgId))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSendVote) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSendVote) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSendVote) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Options) > 0 {
		for iNdEx := len(m.Options) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Options[iNdEx])
			copy(dAtA[i:], m.Options[iNdEx])
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Options[iNdEx])))
			i--
			dAtA[i] = 0x2a
		}
	}
	if m.MsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSetBotCallbackAnswer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSetBotCallbackAnswer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSetBotCallbackAnswer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CacheTime != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.CacheTime))
		i--
		dAtA[i] = 0x40
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x32
	}
	if m.QueryId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.QueryId))
		i--
		dAtA[i] = 0x28
	}
	if m.Alert {
		i--
		if m.Alert {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSetBotPrecheckoutResults) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSetBotPrecheckoutResults) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSetBotPrecheckoutResults) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Error) > 0 {
		i -= len(m.Error)
		copy(dAtA[i:], m.Error)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Error)))
		i--
		dAtA[i] = 0x32
	}
	if m.QueryId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.QueryId))
		i--
		dAtA[i] = 0x28
	}
	if m.Success {
		i--
		if m.Success {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSetBotShippingResults) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSetBotShippingResults) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSetBotShippingResults) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ShippingOptions) > 0 {
		for iNdEx := len(m.ShippingOptions) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ShippingOptions[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.Error) > 0 {
		i -= len(m.Error)
		copy(dAtA[i:], m.Error)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Error)))
		i--
		dAtA[i] = 0x2a
	}
	if m.QueryId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.QueryId))
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSetEncryptedTyping) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSetEncryptedTyping) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSetEncryptedTyping) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Typing != nil {
		{
			size, err := m.Typing.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSetGameScore) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSetGameScore) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSetGameScore) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Score != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Score))
		i--
		dAtA[i] = 0x48
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.Id != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x38
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Force {
		i--
		if m.Force {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.EditMessage {
		i--
		if m.EditMessage {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSetInlineBotResults) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSetInlineBotResults) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSetInlineBotResults) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SwitchPm != nil {
		{
			size, err := m.SwitchPm.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	if len(m.NextOffset) > 0 {
		i -= len(m.NextOffset)
		copy(dAtA[i:], m.NextOffset)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.NextOffset)))
		i--
		dAtA[i] = 0x4a
	}
	if m.CacheTime != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.CacheTime))
		i--
		dAtA[i] = 0x40
	}
	if len(m.Results) > 0 {
		for iNdEx := len(m.Results) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Results[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if m.QueryId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.QueryId))
		i--
		dAtA[i] = 0x30
	}
	if m.Private {
		i--
		if m.Private {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.Gallery {
		i--
		if m.Gallery {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSetInlineGameScore) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSetInlineGameScore) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSetInlineGameScore) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Score != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Score))
		i--
		dAtA[i] = 0x40
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.Id != nil {
		{
			size, err := m.Id.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Force {
		i--
		if m.Force {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.EditMessage {
		i--
		if m.EditMessage {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesSetTyping) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesSetTyping) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesSetTyping) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TopMsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.TopMsgId))
		i--
		dAtA[i] = 0x30
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x28
	}
	if m.Action != nil {
		{
			size, err := m.Action.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesStartBot) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesStartBot) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesStartBot) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.StartParam) > 0 {
		i -= len(m.StartParam)
		copy(dAtA[i:], m.StartParam)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.StartParam)))
		i--
		dAtA[i] = 0x32
	}
	if m.RandomId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
		i--
		dAtA[i] = 0x28
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Bot != nil {
		{
			size, err := m.Bot.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesToggleChatAdmins) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesToggleChatAdmins) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesToggleChatAdmins) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Enabled != nil {
		{
			size, err := m.Enabled.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.ChatId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ChatId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesToggleDialogPin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesToggleDialogPin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesToggleDialogPin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PeerA731E25785 != nil {
		{
			size, err := m.PeerA731E25785.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Peer3289BE6A71 != nil {
		{
			size, err := m.Peer3289BE6A71.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Pinned {
		i--
		if m.Pinned {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesToggleStickerSets) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesToggleStickerSets) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesToggleStickerSets) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Stickersets) > 0 {
		for iNdEx := len(m.Stickersets) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Stickersets[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if m.Unarchive {
		i--
		if m.Unarchive {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.Archive {
		i--
		if m.Archive {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.Uninstall {
		i--
		if m.Uninstall {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesUninstallStickerSet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesUninstallStickerSet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesUninstallStickerSet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Stickerset != nil {
		{
			size, err := m.Stickerset.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesUnpinAllMessages) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesUnpinAllMessages) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesUnpinAllMessages) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesUpdateDialogFilter) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesUpdateDialogFilter) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesUpdateDialogFilter) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Filter != nil {
		{
			size, err := m.Filter.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Id != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesUpdateDialogFiltersOrder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesUpdateDialogFiltersOrder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesUpdateDialogFiltersOrder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Order) > 0 {
		dAtA292 := make([]byte, len(m.Order)*10)
		var j291 int
		for _, num1 := range m.Order {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA292[j291] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j291++
			}
			dAtA292[j291] = uint8(num)
			j291++
		}
		i -= j291
		copy(dAtA[i:], dAtA292[:j291])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j291))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesUpdatePinnedMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesUpdatePinnedMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesUpdatePinnedMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x30
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Silent {
		i--
		if m.Silent {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesUploadEncryptedFile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesUploadEncryptedFile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesUploadEncryptedFile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.File != nil {
		{
			size, err := m.File.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLMessagesUploadMedia) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLMessagesUploadMedia) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLMessagesUploadMedia) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Media != nil {
		{
			size, err := m.Media.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPaymentsClearSavedInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPaymentsClearSavedInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPaymentsClearSavedInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Info {
		i--
		if m.Info {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.Credentials {
		i--
		if m.Credentials {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPaymentsGetBankCardData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPaymentsGetBankCardData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPaymentsGetBankCardData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Number) > 0 {
		i -= len(m.Number)
		copy(dAtA[i:], m.Number)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Number)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPaymentsGetPaymentForm) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPaymentsGetPaymentForm) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPaymentsGetPaymentForm) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPaymentsGetPaymentReceipt) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPaymentsGetPaymentReceipt) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPaymentsGetPaymentReceipt) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPaymentsGetSavedInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPaymentsGetSavedInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPaymentsGetSavedInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPaymentsSendPaymentForm) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPaymentsSendPaymentForm) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPaymentsSendPaymentForm) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Credentials != nil {
		{
			size, err := m.Credentials.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if len(m.ShippingOptionId) > 0 {
		i -= len(m.ShippingOptionId)
		copy(dAtA[i:], m.ShippingOptionId)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ShippingOptionId)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.RequestedInfoId) > 0 {
		i -= len(m.RequestedInfoId)
		copy(dAtA[i:], m.RequestedInfoId)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.RequestedInfoId)))
		i--
		dAtA[i] = 0x2a
	}
	if m.MsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPaymentsValidateRequestedInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPaymentsValidateRequestedInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPaymentsValidateRequestedInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Info != nil {
		{
			size, err := m.Info.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.MsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x28
	}
	if m.Save {
		i--
		if m.Save {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneAcceptCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneAcceptCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneAcceptCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Protocol != nil {
		{
			size, err := m.Protocol.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.GB) > 0 {
		i -= len(m.GB)
		copy(dAtA[i:], m.GB)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.GB)))
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneCheckGroupCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneCheckGroupCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneCheckGroupCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Source != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Source))
		i--
		dAtA[i] = 0x20
	}
	if m.Call != nil {
		{
			size, err := m.Call.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneConfirmCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneConfirmCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneConfirmCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Protocol != nil {
		{
			size, err := m.Protocol.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.KeyFingerprint != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.KeyFingerprint))
		i--
		dAtA[i] = 0x28
	}
	if len(m.GA) > 0 {
		i -= len(m.GA)
		copy(dAtA[i:], m.GA)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.GA)))
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneCreateGroupCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneCreateGroupCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneCreateGroupCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RandomId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneDiscardCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneDiscardCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneDiscardCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Video {
		i--
		if m.Video {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x38
	}
	if m.ConnectionId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.ConnectionId))
		i--
		dAtA[i] = 0x30
	}
	if m.Reason != nil {
		{
			size, err := m.Reason.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Duration != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Duration))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneDiscardGroupCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneDiscardGroupCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneDiscardGroupCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Call != nil {
		{
			size, err := m.Call.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneEditGroupCallMember) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneEditGroupCallMember) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneEditGroupCallMember) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Call != nil {
		{
			size, err := m.Call.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Muted {
		i--
		if m.Muted {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneGetCallConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneGetCallConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneGetCallConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneGetGroupCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneGetGroupCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneGetGroupCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Call != nil {
		{
			size, err := m.Call.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneGetGroupParticipants) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneGetGroupParticipants) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneGetGroupParticipants) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x38
	}
	if len(m.Offset) > 0 {
		i -= len(m.Offset)
		copy(dAtA[i:], m.Offset)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Offset)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Sources) > 0 {
		dAtA313 := make([]byte, len(m.Sources)*10)
		var j312 int
		for _, num1 := range m.Sources {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA313[j312] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j312++
			}
			dAtA313[j312] = uint8(num)
			j312++
		}
		i -= j312
		copy(dAtA[i:], dAtA313[:j312])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j312))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Ids) > 0 {
		dAtA315 := make([]byte, len(m.Ids)*10)
		var j314 int
		for _, num1 := range m.Ids {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA315[j314] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j314++
			}
			dAtA315[j314] = uint8(num)
			j314++
		}
		i -= j314
		copy(dAtA[i:], dAtA315[:j314])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j314))
		i--
		dAtA[i] = 0x22
	}
	if m.Call != nil {
		{
			size, err := m.Call.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneInviteToGroupCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneInviteToGroupCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneInviteToGroupCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Users) > 0 {
		for iNdEx := len(m.Users) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Users[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if m.Call != nil {
		{
			size, err := m.Call.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneJoinGroupCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneJoinGroupCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneJoinGroupCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Params != nil {
		{
			size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Call != nil {
		{
			size, err := m.Call.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Muted {
		i--
		if m.Muted {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneLeaveGroupCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneLeaveGroupCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneLeaveGroupCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Source != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Source))
		i--
		dAtA[i] = 0x20
	}
	if m.Call != nil {
		{
			size, err := m.Call.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneReceivedCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneReceivedCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneReceivedCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneRequestCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneRequestCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneRequestCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Video {
		i--
		if m.Video {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x38
	}
	if m.Protocol != nil {
		{
			size, err := m.Protocol.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if len(m.GAHash) > 0 {
		i -= len(m.GAHash)
		copy(dAtA[i:], m.GAHash)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.GAHash)))
		i--
		dAtA[i] = 0x2a
	}
	if m.RandomId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.RandomId))
		i--
		dAtA[i] = 0x20
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneSaveCallDebug) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneSaveCallDebug) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneSaveCallDebug) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Debug != nil {
		{
			size, err := m.Debug.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneSendSignalingData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneSendSignalingData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneSendSignalingData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Data) > 0 {
		i -= len(m.Data)
		copy(dAtA[i:], m.Data)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Data)))
		i--
		dAtA[i] = 0x22
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneSetCallRating) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneSetCallRating) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneSetCallRating) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserInitiative {
		i--
		if m.UserInitiative {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x30
	}
	if len(m.Comment) > 0 {
		i -= len(m.Comment)
		copy(dAtA[i:], m.Comment)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Comment)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Rating != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Rating))
		i--
		dAtA[i] = 0x20
	}
	if m.Peer != nil {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhoneToggleGroupCallSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhoneToggleGroupCallSettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhoneToggleGroupCallSettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.JoinMuted != nil {
		{
			size, err := m.JoinMuted.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Call != nil {
		{
			size, err := m.Call.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhotosDeletePhotos) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhotosDeletePhotos) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhotosDeletePhotos) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		for iNdEx := len(m.Id) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Id[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhotosGetUserPhotos) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhotosGetUserPhotos) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhotosGetUserPhotos) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x30
	}
	if m.MaxId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MaxId))
		i--
		dAtA[i] = 0x28
	}
	if m.Offset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x20
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhotosUpdateProfilePhoto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhotosUpdateProfilePhoto) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhotosUpdateProfilePhoto) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Crop != nil {
		{
			size, err := m.Crop.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Id != nil {
		{
			size, err := m.Id.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPhotosUploadProfilePhoto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPhotosUploadProfilePhoto) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPhotosUploadProfilePhoto) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.VideoStartTs != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.VideoStartTs))))
		i--
		dAtA[i] = 0x49
	}
	if m.Video != nil {
		{
			size, err := m.Video.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x38
	}
	if m.Crop != nil {
		{
			size, err := m.Crop.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.GeoPoint != nil {
		{
			size, err := m.GeoPoint.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Caption) > 0 {
		i -= len(m.Caption)
		copy(dAtA[i:], m.Caption)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Caption)))
		i--
		dAtA[i] = 0x22
	}
	if m.File != nil {
		{
			size, err := m.File.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLStatsGetBroadcastStats) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStatsGetBroadcastStats) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLStatsGetBroadcastStats) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TzOffset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.TzOffset))
		i--
		dAtA[i] = 0x30
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Dark {
		i--
		if m.Dark {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLStatsGetMegagroupStats) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStatsGetMegagroupStats) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLStatsGetMegagroupStats) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Dark {
		i--
		if m.Dark {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLStatsGetMessagePublicForwards) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStatsGetMessagePublicForwards) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLStatsGetMessagePublicForwards) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x40
	}
	if m.OffsetId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetId))
		i--
		dAtA[i] = 0x38
	}
	if m.OffsetPeer != nil {
		{
			size, err := m.OffsetPeer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.OffsetRate != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.OffsetRate))
		i--
		dAtA[i] = 0x28
	}
	if m.MsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x20
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLStatsGetMessageStats) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStatsGetMessageStats) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLStatsGetMessageStats) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MsgId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.MsgId))
		i--
		dAtA[i] = 0x30
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Dark {
		i--
		if m.Dark {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLStatsLoadAsyncGraph) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStatsLoadAsyncGraph) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLStatsLoadAsyncGraph) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.X != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.X))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Token) > 0 {
		i -= len(m.Token)
		copy(dAtA[i:], m.Token)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Token)))
		i--
		dAtA[i] = 0x22
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLStickersAddStickerToSet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStickersAddStickerToSet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLStickersAddStickerToSet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Sticker != nil {
		{
			size, err := m.Sticker.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Stickerset != nil {
		{
			size, err := m.Stickerset.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLStickersChangeStickerPosition) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStickersChangeStickerPosition) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLStickersChangeStickerPosition) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Position != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Position))
		i--
		dAtA[i] = 0x20
	}
	if m.Sticker != nil {
		{
			size, err := m.Sticker.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLStickersCreateStickerSet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStickersCreateStickerSet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLStickersCreateStickerSet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Thumb != nil {
		{
			size, err := m.Thumb.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	if m.Animated {
		i--
		if m.Animated {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x48
	}
	if len(m.Stickers) > 0 {
		for iNdEx := len(m.Stickers) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Stickers[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x42
		}
	}
	if len(m.ShortName) > 0 {
		i -= len(m.ShortName)
		copy(dAtA[i:], m.ShortName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ShortName)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x32
	}
	if m.UserId != nil {
		{
			size, err := m.UserId.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Masks {
		i--
		if m.Masks {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLStickersRemoveStickerFromSet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStickersRemoveStickerFromSet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLStickersRemoveStickerFromSet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Sticker != nil {
		{
			size, err := m.Sticker.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLStickersSetStickerSetThumb) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLStickersSetStickerSetThumb) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLStickersSetStickerSetThumb) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Thumb != nil {
		{
			size, err := m.Thumb.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Stickerset != nil {
		{
			size, err := m.Stickerset.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLUpdatesGetChannelDifference) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUpdatesGetChannelDifference) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLUpdatesGetChannelDifference) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x40
	}
	if m.Pts != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Pts))
		i--
		dAtA[i] = 0x38
	}
	if m.Filter != nil {
		{
			size, err := m.Filter.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Channel != nil {
		{
			size, err := m.Channel.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Force {
		i--
		if m.Force {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLUpdatesGetDifference) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUpdatesGetDifference) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLUpdatesGetDifference) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Qts != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Qts))
		i--
		dAtA[i] = 0x38
	}
	if m.Date != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Date))
		i--
		dAtA[i] = 0x30
	}
	if m.PtsTotalLimit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.PtsTotalLimit))
		i--
		dAtA[i] = 0x28
	}
	if m.Pts != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Pts))
		i--
		dAtA[i] = 0x20
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLUpdatesGetState) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUpdatesGetState) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLUpdatesGetState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLUploadGetCdnFile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUploadGetCdnFile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLUploadGetCdnFile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x28
	}
	if m.Offset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x20
	}
	if len(m.FileToken) > 0 {
		i -= len(m.FileToken)
		copy(dAtA[i:], m.FileToken)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.FileToken)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLUploadGetCdnFileHashes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUploadGetCdnFileHashes) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLUploadGetCdnFileHashes) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Offset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x20
	}
	if len(m.FileToken) > 0 {
		i -= len(m.FileToken)
		copy(dAtA[i:], m.FileToken)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.FileToken)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLUploadGetFile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUploadGetFile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLUploadGetFile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Precise {
		i--
		if m.Precise {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if m.Flags != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Flags))
		i--
		dAtA[i] = 0x30
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x28
	}
	if m.Offset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x20
	}
	if m.Location != nil {
		{
			size, err := m.Location.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLUploadGetFileHashes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUploadGetFileHashes) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLUploadGetFileHashes) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Offset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x20
	}
	if m.Location != nil {
		{
			size, err := m.Location.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLUploadGetWebFile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUploadGetWebFile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLUploadGetWebFile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x28
	}
	if m.Offset != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x20
	}
	if m.Location != nil {
		{
			size, err := m.Location.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLUploadReuploadCdnFile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUploadReuploadCdnFile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLUploadReuploadCdnFile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.RequestToken) > 0 {
		i -= len(m.RequestToken)
		copy(dAtA[i:], m.RequestToken)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.RequestToken)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.FileToken) > 0 {
		i -= len(m.FileToken)
		copy(dAtA[i:], m.FileToken)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.FileToken)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLUploadSaveBigFilePart) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUploadSaveBigFilePart) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLUploadSaveBigFilePart) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Bytes) > 0 {
		i -= len(m.Bytes)
		copy(dAtA[i:], m.Bytes)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Bytes)))
		i--
		dAtA[i] = 0x32
	}
	if m.FileTotalParts != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FileTotalParts))
		i--
		dAtA[i] = 0x28
	}
	if m.FilePart != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FilePart))
		i--
		dAtA[i] = 0x20
	}
	if m.FileId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FileId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLUploadSaveFilePart) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUploadSaveFilePart) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLUploadSaveFilePart) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Bytes) > 0 {
		i -= len(m.Bytes)
		copy(dAtA[i:], m.Bytes)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Bytes)))
		i--
		dAtA[i] = 0x2a
	}
	if m.FilePart != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FilePart))
		i--
		dAtA[i] = 0x20
	}
	if m.FileId != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.FileId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLUsersGetFullUser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUsersGetFullUser) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLUsersGetFullUser) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != nil {
		{
			size, err := m.Id.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLUsersGetUsers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUsersGetUsers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLUsersGetUsers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		for iNdEx := len(m.Id) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Id[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLUsersSetSecureValueErrors) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLUsersSetSecureValueErrors) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLUsersSetSecureValueErrors) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Errors) > 0 {
		for iNdEx := len(m.Errors) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Errors[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if m.Id != nil {
		{
			size, err := m.Id.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLWalletGetKeySecretSalt) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLWalletGetKeySecretSalt) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLWalletGetKeySecretSalt) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Revoke != nil {
		{
			size, err := m.Revoke.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLWalletSendLiteRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLWalletSendLiteRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLWalletSendLiteRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Body) > 0 {
		i -= len(m.Body)
		copy(dAtA[i:], m.Body)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.Body)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *Vector_WallPaper) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_WallPaper) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_WallPaper) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Vector_User) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_User) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_User) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Vector_ContactStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_ContactStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_ContactStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *VectorInt) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VectorInt) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VectorInt) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		dAtA359 := make([]byte, len(m.Datas)*10)
		var j358 int
		for _, num1 := range m.Datas {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA359[j358] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j358++
			}
			dAtA359[j358] = uint8(num)
			j358++
		}
		i -= j358
		copy(dAtA[i:], dAtA359[:j358])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j358))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Vector_ReceivedNotifyMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_ReceivedNotifyMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_ReceivedNotifyMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *VectorLong) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VectorLong) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VectorLong) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		dAtA361 := make([]byte, len(m.Datas)*10)
		var j360 int
		for _, num1 := range m.Datas {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA361[j360] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j360++
			}
			dAtA361[j360] = uint8(num)
			j360++
		}
		i -= j360
		copy(dAtA[i:], dAtA361[:j360])
		i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(j360))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Vector_StickerSetCovered) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_StickerSetCovered) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_StickerSetCovered) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Vector_CdnFileHash) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_CdnFileHash) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_CdnFileHash) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Vector_LangPackString) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_LangPackString) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_LangPackString) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Vector_LangPackLanguage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_LangPackLanguage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_LangPackLanguage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Vector_SecureValue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_SecureValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_SecureValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Vector_SavedContact) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_SavedContact) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_SavedContact) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Vector_MessageRange) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_MessageRange) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_MessageRange) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Vector_DialogPeer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_DialogPeer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_DialogPeer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Vector_FileHash) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_FileHash) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_FileHash) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Vector_EmojiLanguage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_EmojiLanguage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_EmojiLanguage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *VectorMessages_SearchCounter) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VectorMessages_SearchCounter) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VectorMessages_SearchCounter) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Vector_DialogFilter) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_DialogFilter) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_DialogFilter) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Vector_DialogFilterSuggested) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Vector_DialogFilterSuggested) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Vector_DialogFilterSuggested) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Datas) > 0 {
		for iNdEx := len(m.Datas) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Datas[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSchemaTlSyncService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintSchemaTlSyncService(dAtA []byte, offset int, v uint64) int {
	offset -= sovSchemaTlSyncService(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *TLAccountAcceptAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.BotId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.BotId))
	}
	l = len(m.Scope)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PublicKey)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.ValueHashes) > 0 {
		for _, e := range m.ValueHashes {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.Credentials != nil {
		l = m.Credentials.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountCancelPasswordEmail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountChangePhone) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCodeHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountCheckUsername) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountConfirmPasswordEmail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Code)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountConfirmPhone) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCodeHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountCreateTheme) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Slug)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Document != nil {
		l = m.Document.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountDeleteAccount) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Reason)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountDeleteSecureValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Types) > 0 {
		for _, e := range m.Types {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountFinishTakeoutSession) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Success {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetAccountTTL) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetAllSecureValues) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetAuthorizationForm) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.BotId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.BotId))
	}
	l = len(m.Scope)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PublicKey)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetAuthorizations) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetAutoDownloadSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetContactSignUpNotification) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetContentSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetGlobalPrivacySettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetMultiWallPapers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Wallpapers) > 0 {
		for _, e := range m.Wallpapers {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetNotifyExceptions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.CompareSound {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetNotifySettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetPassword) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetPasswordSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.CurrentPasswordHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Password != nil {
		l = m.Password.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetPrivacy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Key != nil {
		l = m.Key.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetSecureValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Types) > 0 {
		for _, e := range m.Types {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetTheme) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Format)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Theme != nil {
		l = m.Theme.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.DocumentId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.DocumentId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetThemes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Format)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetTmpPassword) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PasswordHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Period != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Period))
	}
	if m.Password != nil {
		l = m.Password.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetWallPaper) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Wallpaper != nil {
		l = m.Wallpaper.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetWallPapers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountGetWebAuthorizations) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountInitTakeoutSession) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Contacts {
		n += 2
	}
	if m.MessageUsers {
		n += 2
	}
	if m.MessageChats {
		n += 2
	}
	if m.MessageMegagroups {
		n += 2
	}
	if m.MessageChannels {
		n += 2
	}
	if m.Files {
		n += 2
	}
	if m.FileMaxSize != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FileMaxSize))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountInstallTheme) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Format)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Theme != nil {
		l = m.Theme.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Dark {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountInstallWallPaper) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Wallpaper != nil {
		l = m.Wallpaper.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountRegisterDevice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.TokenType != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.TokenType))
	}
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.DeviceModel)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.SystemVersion)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.AppVersion)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.AppSandbox != nil {
		l = m.AppSandbox.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Secret)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.OtherUids) > 0 {
		l = 0
		for _, e := range m.OtherUids {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.NoMuted {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountReportPeer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Reason != nil {
		l = m.Reason.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountResendPasswordEmail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountResetAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountResetNotifySettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountResetWallPapers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountResetWebAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountResetWebAuthorizations) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSaveAutoDownloadSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Low {
		n += 2
	}
	if m.High {
		n += 2
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSaveSecureValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Value != nil {
		l = m.Value.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.SecureSecretId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.SecureSecretId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSaveTheme) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Theme != nil {
		l = m.Theme.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Unsave != nil {
		l = m.Unsave.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSaveWallPaper) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Wallpaper != nil {
		l = m.Wallpaper.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Unsave != nil {
		l = m.Unsave.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSendChangePhoneCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.AllowFlashcall {
		n += 2
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.CurrentNumber != nil {
		l = m.CurrentNumber.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSendConfirmPhoneCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.AllowFlashcall {
		n += 2
	}
	l = len(m.Hash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.CurrentNumber != nil {
		l = m.CurrentNumber.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSendVerifyEmailCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSendVerifyPhoneCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.AllowFlashcall {
		n += 2
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.CurrentNumber != nil {
		l = m.CurrentNumber.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSetAccountTTL) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Ttl != nil {
		l = m.Ttl.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSetContactSignUpNotification) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Silent != nil {
		l = m.Silent.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSetContentSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.SensitiveEnabled {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSetGlobalPrivacySettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountSetPrivacy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Key != nil {
		l = m.Key.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Rules) > 0 {
		for _, e := range m.Rules {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUnregisterDevice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.TokenType != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.TokenType))
	}
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.OtherUids) > 0 {
		l = 0
		for _, e := range m.OtherUids {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUpdateDeviceLocked) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Period != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Period))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUpdateNotifySettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUpdatePasswordSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.CurrentPasswordHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.NewSettings != nil {
		l = m.NewSettings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Password != nil {
		l = m.Password.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUpdateProfile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	l = len(m.FirstName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LastName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.About)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUpdateStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offline != nil {
		l = m.Offline.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUpdateTheme) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Theme != nil {
		l = m.Theme.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Slug)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Document != nil {
		l = m.Document.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Format)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUpdateUsername) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUploadTheme) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.File != nil {
		l = m.File.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Thumb != nil {
		l = m.Thumb.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.FileName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.MimeType)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountUploadWallPaper) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.File != nil {
		l = m.File.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.MimeType)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountVerifyEmail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Code)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAccountVerifyPhone) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCodeHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthAcceptLoginToken) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthBindTempAuthKey) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.PermAuthKeyId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.PermAuthKeyId))
	}
	if m.Nonce != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Nonce))
	}
	if m.ExpiresAt != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ExpiresAt))
	}
	l = len(m.EncryptedMessage)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthCancelCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCodeHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthCheckPassword) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PasswordHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Password != nil {
		l = m.Password.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthCheckPhone) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthDropTempAuthKeys) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.ExceptAuthKeys) > 0 {
		l = 0
		for _, e := range m.ExceptAuthKeys {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthExportAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.DcId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.DcId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthExportLoginToken) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ApiId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ApiId))
	}
	l = len(m.ApiHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.ExceptIds) > 0 {
		l = 0
		for _, e := range m.ExceptIds {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthImportAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	l = len(m.Bytes)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthImportBotAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.ApiId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ApiId))
	}
	l = len(m.ApiHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.BotAuthToken)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthImportLoginToken) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthLogOut) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthRecoverPassword) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Code)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthRequestPasswordRecovery) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthResendCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCodeHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthResetAuthorizations) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthSendCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.AllowFlashcall {
		n += 2
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.CurrentNumber != nil {
		l = m.CurrentNumber.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ApiId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ApiId))
	}
	l = len(m.ApiHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthSendInvites) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.PhoneNumbers) > 0 {
		for _, s := range m.PhoneNumbers {
			l = len(s)
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthSignIn) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCodeHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLAuthSignUp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCodeHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PhoneCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.FirstName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LastName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBotsAnswerWebhookJSONQuery) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.QueryId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.QueryId))
	}
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBotsSendCustomRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.CustomMethod)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Params != nil {
		l = m.Params.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLBotsSetBotCommands) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Commands) > 0 {
		for _, e := range m.Commands {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsCheckUsername) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsCreateChannel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Broadcast {
		n += 2
	}
	if m.Megagroup {
		n += 2
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.About)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.GeoPoint != nil {
		l = m.GeoPoint.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsDeleteChannel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsDeleteHistory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsDeleteMessages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsDeleteUserHistory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsEditAbout) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.About)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsEditAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.AdminRights20B8821471 != nil {
		l = m.AdminRights20B8821471.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Role != nil {
		l = m.Role.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.AdminRights70F893BA93 != nil {
		l = m.AdminRights70F893BA93.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Rank)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsEditBanned) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.BannedRightsBFD915CD71 != nil {
		l = m.BannedRightsBFD915CD71.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.BannedRights7279691293 != nil {
		l = m.BannedRights7279691293.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsEditCreator) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Password != nil {
		l = m.Password.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsEditLocation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.GeoPoint != nil {
		l = m.GeoPoint.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsEditPhoto) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Photo != nil {
		l = m.Photo.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsEditTitle) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsExportInvite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsExportMessageLink) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	if m.GroupedCEB7716385 != nil {
		l = m.GroupedCEB7716385.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.GroupedE63FADEB119 {
		n += 2
	}
	if m.Thread {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetAdminLog) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Q)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.EventsFilter != nil {
		l = m.EventsFilter.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Admins) > 0 {
		for _, e := range m.Admins {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.MinId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MinId))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetAdminedPublicChannels) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.ByLocation {
		n += 2
	}
	if m.CheckLimit {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetBroadcastsForDiscussion) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetChannels) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		for _, e := range m.Id {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetDialogs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetFullChannel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetGroupsForDiscussion) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetImportantHistory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.OffsetDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetDate))
	}
	if m.AddOffset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.AddOffset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.MinId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MinId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetInactiveChannels) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetLeftChannels) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetMessages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id93D7B34771) > 0 {
		l = 0
		for _, e := range m.Id93D7B34771 {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if len(m.IdAD8C9A2385) > 0 {
		for _, e := range m.IdAD8C9A2385 {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetParticipant) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsGetParticipants) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Filter != nil {
		l = m.Filter.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsInviteToChannel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Users) > 0 {
		for _, e := range m.Users {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsJoinChannel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsKickFromChannel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Kicked != nil {
		l = m.Kicked.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsLeaveChannel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsReadHistory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsReadMessageContents) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsReportSpam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsSetDiscussionGroup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Broadcast != nil {
		l = m.Broadcast.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Group != nil {
		l = m.Group.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsSetStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Stickerset != nil {
		l = m.Stickerset.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsToggleComments) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Enabled != nil {
		l = m.Enabled.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsToggleInvites) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Enabled != nil {
		l = m.Enabled.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsTogglePreHistoryHidden) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Enabled != nil {
		l = m.Enabled.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsToggleSignatures) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Enabled != nil {
		l = m.Enabled.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsToggleSlowMode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Seconds != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Seconds))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsUpdatePinnedMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Silent {
		n += 2
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLChannelsUpdateUsername) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsAcceptContact) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsAddContact) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.AddPhonePrivacyException {
		n += 2
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.FirstName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LastName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Phone)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsBlock) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id332B49FC71 != nil {
		l = m.Id332B49FC71.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id68CC1411119 != nil {
		l = m.Id68CC1411119.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsBlockFromReplies) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.DeleteMessage {
		n += 2
	}
	if m.DeleteHistory {
		n += 2
	}
	if m.ReportSpam {
		n += 2
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsDeleteByPhones) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Phones) > 0 {
		for _, s := range m.Phones {
			l = len(s)
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsDeleteContact) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsDeleteContacts) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		for _, e := range m.Id {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsExportCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsGetBlocked) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsGetContactIDs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsGetContacts) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.HashC023849F71 != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.HashC023849F71))
	}
	l = len(m.Hash22C6AA0851)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsGetLocated) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.GeoPoint != nil {
		l = m.GeoPoint.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Background {
		n += 2
	}
	if m.SelfExpires != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.SelfExpires))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsGetSaved) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsGetStatuses) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsGetTopPeers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Correspondents {
		n += 2
	}
	if m.BotsPm {
		n += 2
	}
	if m.BotsInline {
		n += 2
	}
	if m.PhoneCalls {
		n += 2
	}
	if m.Groups {
		n += 2
	}
	if m.Channels {
		n += 2
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsImportCard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.ExportCard) > 0 {
		l = 0
		for _, e := range m.ExportCard {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsImportContacts) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Contacts) > 0 {
		for _, e := range m.Contacts {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.Replace != nil {
		l = m.Replace.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsResetSaved) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsResetTopPeerRating) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Category != nil {
		l = m.Category.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsResolveUsername) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsSearch) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Q)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsToggleTopPeers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Enabled != nil {
		l = m.Enabled.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLContactsUnblock) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.IdE54100BD71 != nil {
		l = m.IdE54100BD71.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.IdBEA65D50119 != nil {
		l = m.IdBEA65D50119.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLFoldersDeleteFolder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.FolderId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FolderId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLFoldersEditPeerFolders) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.FolderPeers) > 0 {
		for _, e := range m.FolderPeers {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpAcceptTermsOfService) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpDismissSuggestion) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Suggestion)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpEditUserInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Entities) > 0 {
		for _, e := range m.Entities {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetAppChangelog) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.PrevAppVersion)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.DeviceModel)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.SystemVersion)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.AppVersion)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetAppConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetAppUpdate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.DeviceModel)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.SystemVersion)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.AppVersion)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Source)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetCdnConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetCountriesList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetDeepLinkInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Path)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetInviteText) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetNearestDc) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetPassportConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetPromoData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetProxyData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetRecentMeUrls) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Referer)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetSupport) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetSupportName) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetTermsOfService) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetTermsOfServiceUpdate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpGetUserInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpHidePromoData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpSaveAppLog) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Events) > 0 {
		for _, e := range m.Events {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpSetBotUpdatesStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.PendingUpdatesCount != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.PendingUpdatesCount))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLHelpTest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLLangpackGetDifference) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.FromVersion != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FromVersion))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangPack)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLLangpackGetLangPack) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangPack)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLLangpackGetLanguage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangPack)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLLangpackGetLanguages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangPack)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLLangpackGetStrings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Keys) > 0 {
		for _, s := range m.Keys {
			l = len(s)
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	l = len(m.LangPack)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesAcceptEncryption) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.GB)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.KeyFingerprint != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.KeyFingerprint))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesAcceptUrlAuth) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.WriteAllowed {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.ButtonId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ButtonId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesAddChatUser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ChatId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ChatId))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.FwdLimit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FwdLimit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesCheckChatInvite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Hash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesClearAllDrafts) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesClearRecentStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Attached {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesCreateChat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Users) > 0 {
		for _, e := range m.Users {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesDeleteChatUser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ChatId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ChatId))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesDeleteHistory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.JustClear {
		n += 2
	}
	if m.Revoke {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesDeleteMessages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Revoke {
		n += 2
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesDeleteScheduledMessages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesDiscardEncryption) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ChatId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ChatId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesEditChatAbout) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.About)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesEditChatAdmin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ChatId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ChatId))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.IsAdmin != nil {
		l = m.IsAdmin.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesEditChatDefaultBannedRights) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.BannedRights != nil {
		l = m.BannedRights.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesEditChatPhoto) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ChatId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ChatId))
	}
	if m.Photo != nil {
		l = m.Photo.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesEditChatTitle) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ChatId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ChatId))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesEditInlineBotMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.NoWebpage {
		n += 2
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ReplyMarkup != nil {
		l = m.ReplyMarkup.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Entities) > 0 {
		for _, e := range m.Entities {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.StopGeoLive {
		n += 2
	}
	if m.Media != nil {
		l = m.Media.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.GeoPoint != nil {
		l = m.GeoPoint.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesEditMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.NoWebpage {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ReplyMarkup != nil {
		l = m.ReplyMarkup.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Entities) > 0 {
		for _, e := range m.Entities {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.StopGeoLive {
		n += 2
	}
	if m.Media != nil {
		l = m.Media.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.GeoPoint != nil {
		l = m.GeoPoint.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ScheduleDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ScheduleDate))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesExportChatInvite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ChatId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ChatId))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesFaveSticker) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Unfave != nil {
		l = m.Unfave.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesForwardMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesForwardMessages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Silent {
		n += 2
	}
	if m.Background {
		n += 2
	}
	if m.WithMyScore {
		n += 2
	}
	if m.FromPeer != nil {
		l = m.FromPeer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if len(m.RandomId) > 0 {
		l = 0
		for _, e := range m.RandomId {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.ToPeer != nil {
		l = m.ToPeer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ScheduleDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ScheduleDate))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetAllChats) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.ExceptIds) > 0 {
		l = 0
		for _, e := range m.ExceptIds {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetAllDrafts) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetAllStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetArchivedStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Masks {
		n += 2
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetAttachedStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Media != nil {
		l = m.Media.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetBotCallbackAnswer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Game {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Password != nil {
		l = m.Password.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetChats) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetCommonChats) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetDhConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Version != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Version))
	}
	if m.RandomLength != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomLength))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetDialogFilters) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetDialogUnreadMarks) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetDialogs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.ExcludePinned {
		n += 2
	}
	if m.OffsetDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetDate))
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.OffsetPeer != nil {
		l = m.OffsetPeer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.FolderId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FolderId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetDiscussionMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetDocumentByHash) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Sha256)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Size_ != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Size_))
	}
	l = len(m.MimeType)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetEmojiKeywords) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetEmojiKeywordsDifference) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.FromVersion != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FromVersion))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetEmojiKeywordsLanguages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.LangCodes) > 0 {
		for _, s := range m.LangCodes {
			l = len(s)
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetEmojiURL) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.LangCode)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetFavedStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetFeaturedStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetFullChat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ChatId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ChatId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetGameHighScores) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetHistory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.OffsetDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetDate))
	}
	if m.AddOffset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.AddOffset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.MinId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MinId))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetInlineBotResults) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Bot != nil {
		l = m.Bot.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.GeoPoint != nil {
		l = m.GeoPoint.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Query)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Offset)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetInlineGameHighScores) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetMaskStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetMessageEditData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetMessages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id4222FA7471) > 0 {
		l = 0
		for _, e := range m.Id4222FA7471 {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if len(m.Id63C6650685) > 0 {
		for _, e := range m.Id63C6650685 {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetMessagesViews) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.Increment != nil {
		l = m.Increment.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetOldFeaturedStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetOnlines) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetPeerDialogs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Peers2D9776B971) > 0 {
		for _, e := range m.Peers2D9776B971 {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if len(m.PeersE470BCFD85) > 0 {
		for _, e := range m.PeersE470BCFD85 {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetPeerSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetPinnedDialogs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.FolderId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FolderId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetPollResults) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetPollVotes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	l = len(m.Option)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Offset)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetRecentLocations) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetRecentStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Attached {
		n += 2
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetReplies) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.OffsetDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetDate))
	}
	if m.AddOffset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.AddOffset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.MinId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MinId))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetSavedGifs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetScheduledHistory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetScheduledMessages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetSearchCounters) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Filters) > 0 {
		for _, e := range m.Filters {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetSplitRanges) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetStatsURL) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Dark {
		n += 2
	}
	l = len(m.Params)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetStickerSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Stickerset != nil {
		l = m.Stickerset.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Emoticon)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.HashAE22E04551)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Hash43D4F2C85 != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash43D4F2C85))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetSuggestedDialogFilters) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetUnreadMentions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.AddOffset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.AddOffset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.MinId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MinId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetWebPage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesGetWebPagePreview) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if len(m.Entities) > 0 {
		for _, e := range m.Entities {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesHidePeerSettingsBar) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesHideReportSpam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesImportChatInvite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Hash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesInstallStickerSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Stickerset != nil {
		l = m.Stickerset.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Archived != nil {
		l = m.Archived.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Disabled != nil {
		l = m.Disabled.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesMarkDialogUnread) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Unread {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesMigrateChat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ChatId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ChatId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReadDiscussion) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.ReadMaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ReadMaxId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReadEncryptedHistory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MaxDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxDate))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReadFeaturedStickers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReadHistory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReadMentions) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReadMessageContents) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReceivedMessages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReceivedQueue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MaxQts != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxQts))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReorderPinnedDialogs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Force {
		n += 2
	}
	if len(m.Order959FF64471) > 0 {
		for _, e := range m.Order959FF64471 {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if len(m.Order5B51D63F85) > 0 {
		for _, e := range m.Order5B51D63F85 {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.FolderId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FolderId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReorderStickerSets) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Masks {
		n += 2
	}
	if len(m.Order) > 0 {
		l = 0
		for _, e := range m.Order {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReport) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.Reason != nil {
		l = m.Reason.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReportEncryptedSpam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesReportSpam) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesRequestEncryption) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	l = len(m.GA)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesRequestUrlAuth) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.ButtonId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ButtonId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSaveDraft) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.NoWebpage {
		n += 2
	}
	if m.ReplyToMsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ReplyToMsgId))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Entities) > 0 {
		for _, e := range m.Entities {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSaveGif) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Unsave != nil {
		l = m.Unsave.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSaveRecentSticker) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Attached {
		n += 2
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Unsave != nil {
		l = m.Unsave.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSearch) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Q)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.FromId39E9EA071 != nil {
		l = m.FromId39E9EA071.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Filter != nil {
		l = m.Filter.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MinDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MinDate))
	}
	if m.MaxDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxDate))
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.AddOffset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.AddOffset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.MinId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MinId))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.ImportantOnly {
		n += 3
	}
	if m.Hash != 0 {
		n += 2 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.TopMsgId != 0 {
		n += 2 + sovSchemaTlSyncService(uint64(m.TopMsgId))
	}
	if m.FromIdC352EEC120 != nil {
		l = m.FromIdC352EEC120.Size()
		n += 2 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSearchGifs) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Q)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSearchGlobal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Q)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.OffsetDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetDate))
	}
	if m.OffsetPeer != nil {
		l = m.OffsetPeer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.OffsetRate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetRate))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.FolderId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FolderId))
	}
	if m.Filter != nil {
		l = m.Filter.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MinDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MinDate))
	}
	if m.MaxDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxDate))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSearchStickerSets) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.ExcludeFeatured {
		n += 2
	}
	l = len(m.Q)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Hash != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Hash))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendBroadcast) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Contacts) > 0 {
		for _, e := range m.Contacts {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if len(m.RandomId) > 0 {
		l = 0
		for _, e := range m.RandomId {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Media != nil {
		l = m.Media.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendEncrypted) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Silent {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendEncryptedFile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.File != nil {
		l = m.File.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Silent {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendEncryptedService) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendInlineBotResult) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Silent {
		n += 2
	}
	if m.Background {
		n += 2
	}
	if m.ClearDraft {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ReplyToMsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ReplyToMsgId))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	if m.QueryId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.QueryId))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.HideVia {
		n += 2
	}
	if m.ScheduleDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ScheduleDate))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendMedia) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Silent {
		n += 2
	}
	if m.Background {
		n += 2
	}
	if m.ClearDraft {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ReplyToMsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ReplyToMsgId))
	}
	if m.Media != nil {
		l = m.Media.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	if m.ReplyMarkup != nil {
		l = m.ReplyMarkup.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Entities) > 0 {
		for _, e := range m.Entities {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.ScheduleDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ScheduleDate))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.NoWebpage {
		n += 2
	}
	if m.Silent {
		n += 2
	}
	if m.Background {
		n += 2
	}
	if m.ClearDraft {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ReplyToMsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ReplyToMsgId))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	if m.ReplyMarkup != nil {
		l = m.ReplyMarkup.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Entities) > 0 {
		for _, e := range m.Entities {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.ScheduleDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ScheduleDate))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendMultiMedia) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Silent {
		n += 2
	}
	if m.Background {
		n += 2
	}
	if m.ClearDraft {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ReplyToMsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ReplyToMsgId))
	}
	if len(m.MultiMedia) > 0 {
		for _, e := range m.MultiMedia {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.ScheduleDate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ScheduleDate))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendScheduledMessages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		l = 0
		for _, e := range m.Id {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendScreenshotNotification) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ReplyToMsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ReplyToMsgId))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSendVote) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if len(m.Options) > 0 {
		for _, b := range m.Options {
			l = len(b)
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSetBotCallbackAnswer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Alert {
		n += 2
	}
	if m.QueryId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.QueryId))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.CacheTime != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.CacheTime))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSetBotPrecheckoutResults) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Success {
		n += 2
	}
	if m.QueryId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.QueryId))
	}
	l = len(m.Error)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSetBotShippingResults) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.QueryId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.QueryId))
	}
	l = len(m.Error)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.ShippingOptions) > 0 {
		for _, e := range m.ShippingOptions {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSetEncryptedTyping) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Typing != nil {
		l = m.Typing.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSetGameScore) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.EditMessage {
		n += 2
	}
	if m.Force {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Score != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Score))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSetInlineBotResults) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Gallery {
		n += 2
	}
	if m.Private {
		n += 2
	}
	if m.QueryId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.QueryId))
	}
	if len(m.Results) > 0 {
		for _, e := range m.Results {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.CacheTime != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.CacheTime))
	}
	l = len(m.NextOffset)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.SwitchPm != nil {
		l = m.SwitchPm.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSetInlineGameScore) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.EditMessage {
		n += 2
	}
	if m.Force {
		n += 2
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Score != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Score))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesSetTyping) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Action != nil {
		l = m.Action.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.TopMsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.TopMsgId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesStartBot) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Bot != nil {
		l = m.Bot.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	l = len(m.StartParam)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesToggleChatAdmins) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ChatId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ChatId))
	}
	if m.Enabled != nil {
		l = m.Enabled.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesToggleDialogPin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Pinned {
		n += 2
	}
	if m.Peer3289BE6A71 != nil {
		l = m.Peer3289BE6A71.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.PeerA731E25785 != nil {
		l = m.PeerA731E25785.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesToggleStickerSets) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Uninstall {
		n += 2
	}
	if m.Archive {
		n += 2
	}
	if m.Unarchive {
		n += 2
	}
	if len(m.Stickersets) > 0 {
		for _, e := range m.Stickersets {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesUninstallStickerSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Stickerset != nil {
		l = m.Stickerset.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesUnpinAllMessages) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesUpdateDialogFilter) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	if m.Filter != nil {
		l = m.Filter.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesUpdateDialogFiltersOrder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Order) > 0 {
		l = 0
		for _, e := range m.Order {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesUpdatePinnedMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Silent {
		n += 2
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesUploadEncryptedFile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.File != nil {
		l = m.File.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLMessagesUploadMedia) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Media != nil {
		l = m.Media.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPaymentsClearSavedInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Credentials {
		n += 2
	}
	if m.Info {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPaymentsGetBankCardData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Number)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPaymentsGetPaymentForm) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPaymentsGetPaymentReceipt) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPaymentsGetSavedInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPaymentsSendPaymentForm) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	l = len(m.RequestedInfoId)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.ShippingOptionId)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Credentials != nil {
		l = m.Credentials.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPaymentsValidateRequestedInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Save {
		n += 2
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.Info != nil {
		l = m.Info.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneAcceptCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.GB)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Protocol != nil {
		l = m.Protocol.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneCheckGroupCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Call != nil {
		l = m.Call.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Source != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Source))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneConfirmCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.GA)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.KeyFingerprint != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.KeyFingerprint))
	}
	if m.Protocol != nil {
		l = m.Protocol.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneCreateGroupCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneDiscardCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Duration != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Duration))
	}
	if m.Reason != nil {
		l = m.Reason.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.ConnectionId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.ConnectionId))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Video {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneDiscardGroupCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Call != nil {
		l = m.Call.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneEditGroupCallMember) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Muted {
		n += 2
	}
	if m.Call != nil {
		l = m.Call.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneGetCallConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneGetGroupCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Call != nil {
		l = m.Call.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneGetGroupParticipants) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Call != nil {
		l = m.Call.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Ids) > 0 {
		l = 0
		for _, e := range m.Ids {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if len(m.Sources) > 0 {
		l = 0
		for _, e := range m.Sources {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	l = len(m.Offset)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneInviteToGroupCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Call != nil {
		l = m.Call.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Users) > 0 {
		for _, e := range m.Users {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneJoinGroupCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Muted {
		n += 2
	}
	if m.Call != nil {
		l = m.Call.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Params != nil {
		l = m.Params.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneLeaveGroupCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Call != nil {
		l = m.Call.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Source != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Source))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneReceivedCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneRequestCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.RandomId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.RandomId))
	}
	l = len(m.GAHash)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Protocol != nil {
		l = m.Protocol.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Video {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneSaveCallDebug) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Debug != nil {
		l = m.Debug.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneSendSignalingData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneSetCallRating) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Rating != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Rating))
	}
	l = len(m.Comment)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.UserInitiative {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhoneToggleGroupCallSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Call != nil {
		l = m.Call.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.JoinMuted != nil {
		l = m.JoinMuted.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhotosDeletePhotos) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		for _, e := range m.Id {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhotosGetUserPhotos) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.MaxId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MaxId))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhotosUpdateProfilePhoto) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Crop != nil {
		l = m.Crop.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPhotosUploadProfilePhoto) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.File != nil {
		l = m.File.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Caption)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.GeoPoint != nil {
		l = m.GeoPoint.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Crop != nil {
		l = m.Crop.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Video != nil {
		l = m.Video.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.VideoStartTs != 0 {
		n += 9
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStatsGetBroadcastStats) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Dark {
		n += 2
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.TzOffset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.TzOffset))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStatsGetMegagroupStats) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Dark {
		n += 2
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStatsGetMessagePublicForwards) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.OffsetRate != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetRate))
	}
	if m.OffsetPeer != nil {
		l = m.OffsetPeer.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.OffsetId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.OffsetId))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStatsGetMessageStats) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Dark {
		n += 2
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.MsgId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.MsgId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStatsLoadAsyncGraph) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.X != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.X))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStickersAddStickerToSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Stickerset != nil {
		l = m.Stickerset.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Sticker != nil {
		l = m.Sticker.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStickersChangeStickerPosition) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Sticker != nil {
		l = m.Sticker.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Position != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Position))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStickersCreateStickerSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Masks {
		n += 2
	}
	if m.UserId != nil {
		l = m.UserId.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.ShortName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Stickers) > 0 {
		for _, e := range m.Stickers {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.Animated {
		n += 2
	}
	if m.Thumb != nil {
		l = m.Thumb.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStickersRemoveStickerFromSet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Sticker != nil {
		l = m.Sticker.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLStickersSetStickerSetThumb) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Stickerset != nil {
		l = m.Stickerset.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Thumb != nil {
		l = m.Thumb.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUpdatesGetChannelDifference) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Force {
		n += 2
	}
	if m.Channel != nil {
		l = m.Channel.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Filter != nil {
		l = m.Filter.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Pts != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Pts))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUpdatesGetDifference) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Pts != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Pts))
	}
	if m.PtsTotalLimit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.PtsTotalLimit))
	}
	if m.Date != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Date))
	}
	if m.Qts != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Qts))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUpdatesGetState) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUploadGetCdnFile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.FileToken)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUploadGetCdnFileHashes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.FileToken)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUploadGetFile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Location != nil {
		l = m.Location.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.Flags != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Flags))
	}
	if m.Precise {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUploadGetFileHashes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Location != nil {
		l = m.Location.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUploadGetWebFile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Location != nil {
		l = m.Location.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Offset))
	}
	if m.Limit != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUploadReuploadCdnFile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.FileToken)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.RequestToken)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUploadSaveBigFilePart) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.FileId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FileId))
	}
	if m.FilePart != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FilePart))
	}
	if m.FileTotalParts != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FileTotalParts))
	}
	l = len(m.Bytes)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUploadSaveFilePart) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.FileId != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FileId))
	}
	if m.FilePart != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.FilePart))
	}
	l = len(m.Bytes)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUsersGetFullUser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUsersGetUsers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Id) > 0 {
		for _, e := range m.Id {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLUsersSetSecureValueErrors) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Id != nil {
		l = m.Id.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if len(m.Errors) > 0 {
		for _, e := range m.Errors {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLWalletGetKeySecretSalt) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.Revoke != nil {
		l = m.Revoke.Size()
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLWalletSendLiteRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlSyncService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	l = len(m.Body)
	if l > 0 {
		n += 1 + l + sovSchemaTlSyncService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_WallPaper) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_User) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_ContactStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *VectorInt) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		l = 0
		for _, e := range m.Datas {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_ReceivedNotifyMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *VectorLong) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		l = 0
		for _, e := range m.Datas {
			l += sovSchemaTlSyncService(uint64(e))
		}
		n += 1 + sovSchemaTlSyncService(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_StickerSetCovered) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_CdnFileHash) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_LangPackString) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_LangPackLanguage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_SecureValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_SavedContact) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_MessageRange) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_DialogPeer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_FileHash) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_EmojiLanguage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *VectorMessages_SearchCounter) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_DialogFilter) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Vector_DialogFilterSuggested) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Datas) > 0 {
		for _, e := range m.Datas {
			l = e.Size()
			n += 1 + l + sovSchemaTlSyncService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovSchemaTlSyncService(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozSchemaTlSyncService(x uint64) (n int) {
	return sovSchemaTlSyncService(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *TLAccountAcceptAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_acceptAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_acceptAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BotId", wireType)
			}
			m.BotId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BotId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Scope", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Scope = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PublicKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PublicKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValueHashes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ValueHashes = append(m.ValueHashes, &SecureValueHash{})
			if err := m.ValueHashes[len(m.ValueHashes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Credentials", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Credentials == nil {
				m.Credentials = &SecureCredentialsEncrypted{}
			}
			if err := m.Credentials.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountCancelPasswordEmail) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_cancelPasswordEmail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_cancelPasswordEmail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountChangePhone) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_changePhone: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_changePhone: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountCheckUsername) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_checkUsername: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_checkUsername: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountConfirmPasswordEmail) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_confirmPasswordEmail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_confirmPasswordEmail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Code = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountConfirmPhone) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_confirmPhone: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_confirmPhone: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountCreateTheme) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_createTheme: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_createTheme: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Slug", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Slug = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Document", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Document == nil {
				m.Document = &InputDocument{}
			}
			if err := m.Document.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &InputThemeSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountDeleteAccount) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_deleteAccount: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_deleteAccount: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reason = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountDeleteSecureValue) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_deleteSecureValue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_deleteSecureValue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Types", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Types = append(m.Types, &SecureValueType{})
			if err := m.Types[len(m.Types)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountFinishTakeoutSession) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_finishTakeoutSession: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_finishTakeoutSession: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Success", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Success = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetAccountTTL) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getAccountTTL: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getAccountTTL: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetAllSecureValues) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getAllSecureValues: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getAllSecureValues: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetAuthorizationForm) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getAuthorizationForm: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getAuthorizationForm: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BotId", wireType)
			}
			m.BotId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BotId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Scope", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Scope = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PublicKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PublicKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetAuthorizations) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getAuthorizations: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getAuthorizations: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetAutoDownloadSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getAutoDownloadSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getAutoDownloadSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetContactSignUpNotification) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getContactSignUpNotification: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getContactSignUpNotification: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetContentSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getContentSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getContentSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetGlobalPrivacySettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getGlobalPrivacySettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getGlobalPrivacySettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetMultiWallPapers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getMultiWallPapers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getMultiWallPapers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Wallpapers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Wallpapers = append(m.Wallpapers, &InputWallPaper{})
			if err := m.Wallpapers[len(m.Wallpapers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetNotifyExceptions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getNotifyExceptions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getNotifyExceptions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CompareSound", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CompareSound = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputNotifyPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetNotifySettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getNotifySettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getNotifySettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputNotifyPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetPassword) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getPassword: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getPassword: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetPasswordSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getPasswordSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getPasswordSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentPasswordHash", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CurrentPasswordHash = append(m.CurrentPasswordHash[:0], dAtA[iNdEx:postIndex]...)
			if m.CurrentPasswordHash == nil {
				m.CurrentPasswordHash = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Password == nil {
				m.Password = &InputCheckPasswordSRP{}
			}
			if err := m.Password.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetPrivacy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getPrivacy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getPrivacy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Key == nil {
				m.Key = &InputPrivacyKey{}
			}
			if err := m.Key.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetSecureValue) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getSecureValue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getSecureValue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Types", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Types = append(m.Types, &SecureValueType{})
			if err := m.Types[len(m.Types)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetTheme) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getTheme: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getTheme: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Format", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Format = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Theme", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Theme == nil {
				m.Theme = &InputTheme{}
			}
			if err := m.Theme.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DocumentId", wireType)
			}
			m.DocumentId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DocumentId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetThemes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getThemes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getThemes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Format", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Format = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetTmpPassword) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getTmpPassword: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getTmpPassword: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PasswordHash", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PasswordHash = append(m.PasswordHash[:0], dAtA[iNdEx:postIndex]...)
			if m.PasswordHash == nil {
				m.PasswordHash = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Period", wireType)
			}
			m.Period = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Period |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Password == nil {
				m.Password = &InputCheckPasswordSRP{}
			}
			if err := m.Password.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetWallPaper) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getWallPaper: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getWallPaper: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Wallpaper", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Wallpaper == nil {
				m.Wallpaper = &InputWallPaper{}
			}
			if err := m.Wallpaper.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetWallPapers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getWallPapers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getWallPapers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountGetWebAuthorizations) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_getWebAuthorizations: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_getWebAuthorizations: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountInitTakeoutSession) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_initTakeoutSession: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_initTakeoutSession: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Contacts", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Contacts = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageUsers", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MessageUsers = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageChats", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MessageChats = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageMegagroups", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MessageMegagroups = bool(v != 0)
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageChannels", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MessageChannels = bool(v != 0)
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Files", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Files = bool(v != 0)
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileMaxSize", wireType)
			}
			m.FileMaxSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FileMaxSize |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountInstallTheme) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_installTheme: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_installTheme: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Format", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Format = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Theme", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Theme == nil {
				m.Theme = &InputTheme{}
			}
			if err := m.Theme.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dark", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Dark = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountInstallWallPaper) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_installWallPaper: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_installWallPaper: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Wallpaper", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Wallpaper == nil {
				m.Wallpaper = &InputWallPaper{}
			}
			if err := m.Wallpaper.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &WallPaperSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountRegisterDevice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_registerDevice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_registerDevice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenType", wireType)
			}
			m.TokenType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TokenType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeviceModel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeviceModel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SystemVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SystemVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppSandbox", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AppSandbox == nil {
				m.AppSandbox = &Bool{}
			}
			if err := m.AppSandbox.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Secret", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Secret = append(m.Secret[:0], dAtA[iNdEx:postIndex]...)
			if m.Secret == nil {
				m.Secret = []byte{}
			}
			iNdEx = postIndex
		case 11:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.OtherUids = append(m.OtherUids, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.OtherUids) == 0 {
					m.OtherUids = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.OtherUids = append(m.OtherUids, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field OtherUids", wireType)
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoMuted", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NoMuted = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountReportPeer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_reportPeer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_reportPeer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Reason == nil {
				m.Reason = &ReportReason{}
			}
			if err := m.Reason.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountResendPasswordEmail) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_resendPasswordEmail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_resendPasswordEmail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountResetAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_resetAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_resetAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountResetNotifySettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_resetNotifySettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_resetNotifySettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountResetWallPapers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_resetWallPapers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_resetWallPapers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountResetWebAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_resetWebAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_resetWebAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountResetWebAuthorizations) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_resetWebAuthorizations: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_resetWebAuthorizations: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSaveAutoDownloadSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_saveAutoDownloadSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_saveAutoDownloadSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Low", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Low = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field High", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.High = bool(v != 0)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &AutoDownloadSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSaveSecureValue) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_saveSecureValue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_saveSecureValue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Value == nil {
				m.Value = &InputSecureValue{}
			}
			if err := m.Value.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SecureSecretId", wireType)
			}
			m.SecureSecretId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SecureSecretId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSaveTheme) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_saveTheme: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_saveTheme: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Theme", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Theme == nil {
				m.Theme = &InputTheme{}
			}
			if err := m.Theme.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Unsave", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Unsave == nil {
				m.Unsave = &Bool{}
			}
			if err := m.Unsave.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSaveWallPaper) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_saveWallPaper: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_saveWallPaper: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Wallpaper", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Wallpaper == nil {
				m.Wallpaper = &InputWallPaper{}
			}
			if err := m.Wallpaper.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Unsave", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Unsave == nil {
				m.Unsave = &Bool{}
			}
			if err := m.Unsave.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &WallPaperSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSendChangePhoneCode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_sendChangePhoneCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_sendChangePhoneCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowFlashcall", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AllowFlashcall = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentNumber", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CurrentNumber == nil {
				m.CurrentNumber = &Bool{}
			}
			if err := m.CurrentNumber.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &CodeSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSendConfirmPhoneCode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_sendConfirmPhoneCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_sendConfirmPhoneCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowFlashcall", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AllowFlashcall = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentNumber", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CurrentNumber == nil {
				m.CurrentNumber = &Bool{}
			}
			if err := m.CurrentNumber.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &CodeSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSendVerifyEmailCode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_sendVerifyEmailCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_sendVerifyEmailCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSendVerifyPhoneCode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_sendVerifyPhoneCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_sendVerifyPhoneCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowFlashcall", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AllowFlashcall = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentNumber", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CurrentNumber == nil {
				m.CurrentNumber = &Bool{}
			}
			if err := m.CurrentNumber.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &CodeSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSetAccountTTL) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_setAccountTTL: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_setAccountTTL: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ttl", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ttl == nil {
				m.Ttl = &AccountDaysTTL{}
			}
			if err := m.Ttl.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSetContactSignUpNotification) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_setContactSignUpNotification: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_setContactSignUpNotification: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Silent", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Silent == nil {
				m.Silent = &Bool{}
			}
			if err := m.Silent.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSetContentSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_setContentSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_setContentSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SensitiveEnabled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SensitiveEnabled = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSetGlobalPrivacySettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_setGlobalPrivacySettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_setGlobalPrivacySettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &GlobalPrivacySettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountSetPrivacy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_setPrivacy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_setPrivacy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Key == nil {
				m.Key = &InputPrivacyKey{}
			}
			if err := m.Key.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rules", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Rules = append(m.Rules, &InputPrivacyRule{})
			if err := m.Rules[len(m.Rules)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUnregisterDevice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_unregisterDevice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_unregisterDevice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenType", wireType)
			}
			m.TokenType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TokenType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.OtherUids = append(m.OtherUids, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.OtherUids) == 0 {
					m.OtherUids = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.OtherUids = append(m.OtherUids, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field OtherUids", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUpdateDeviceLocked) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_updateDeviceLocked: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_updateDeviceLocked: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Period", wireType)
			}
			m.Period = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Period |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUpdateNotifySettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_updateNotifySettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_updateNotifySettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputNotifyPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &InputPeerNotifySettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUpdatePasswordSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_updatePasswordSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_updatePasswordSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentPasswordHash", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CurrentPasswordHash = append(m.CurrentPasswordHash[:0], dAtA[iNdEx:postIndex]...)
			if m.CurrentPasswordHash == nil {
				m.CurrentPasswordHash = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.NewSettings == nil {
				m.NewSettings = &Account_PasswordInputSettings{}
			}
			if err := m.NewSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Password == nil {
				m.Password = &InputCheckPasswordSRP{}
			}
			if err := m.Password.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUpdateProfile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_updateProfile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_updateProfile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirstName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field About", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.About = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUpdateStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_updateStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_updateStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offline", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Offline == nil {
				m.Offline = &Bool{}
			}
			if err := m.Offline.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUpdateTheme) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_updateTheme: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_updateTheme: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Theme", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Theme == nil {
				m.Theme = &InputTheme{}
			}
			if err := m.Theme.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Slug", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Slug = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Document", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Document == nil {
				m.Document = &InputDocument{}
			}
			if err := m.Document.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Format", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Format = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &InputThemeSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUpdateUsername) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_updateUsername: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_updateUsername: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUploadTheme) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_uploadTheme: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_uploadTheme: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field File", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.File == nil {
				m.File = &InputFile{}
			}
			if err := m.File.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Thumb", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Thumb == nil {
				m.Thumb = &InputFile{}
			}
			if err := m.Thumb.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MimeType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MimeType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountUploadWallPaper) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_uploadWallPaper: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_uploadWallPaper: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field File", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.File == nil {
				m.File = &InputFile{}
			}
			if err := m.File.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MimeType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MimeType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &WallPaperSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountVerifyEmail) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_verifyEmail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_verifyEmail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Code = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAccountVerifyPhone) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_account_verifyPhone: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_account_verifyPhone: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthAcceptLoginToken) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_acceptLoginToken: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_acceptLoginToken: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = append(m.Token[:0], dAtA[iNdEx:postIndex]...)
			if m.Token == nil {
				m.Token = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthBindTempAuthKey) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_bindTempAuthKey: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_bindTempAuthKey: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PermAuthKeyId", wireType)
			}
			m.PermAuthKeyId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PermAuthKeyId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nonce", wireType)
			}
			m.Nonce = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Nonce |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpiresAt", wireType)
			}
			m.ExpiresAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ExpiresAt |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EncryptedMessage", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EncryptedMessage = append(m.EncryptedMessage[:0], dAtA[iNdEx:postIndex]...)
			if m.EncryptedMessage == nil {
				m.EncryptedMessage = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthCancelCode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_cancelCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_cancelCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthCheckPassword) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_checkPassword: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_checkPassword: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PasswordHash", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PasswordHash = append(m.PasswordHash[:0], dAtA[iNdEx:postIndex]...)
			if m.PasswordHash == nil {
				m.PasswordHash = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Password == nil {
				m.Password = &InputCheckPasswordSRP{}
			}
			if err := m.Password.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthCheckPhone) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_checkPhone: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_checkPhone: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthDropTempAuthKeys) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_dropTempAuthKeys: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_dropTempAuthKeys: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ExceptAuthKeys = append(m.ExceptAuthKeys, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.ExceptAuthKeys) == 0 {
					m.ExceptAuthKeys = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ExceptAuthKeys = append(m.ExceptAuthKeys, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ExceptAuthKeys", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthExportAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_exportAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_exportAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DcId", wireType)
			}
			m.DcId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DcId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthExportLoginToken) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_exportLoginToken: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_exportLoginToken: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiId", wireType)
			}
			m.ApiId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ApiId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApiHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ExceptIds = append(m.ExceptIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.ExceptIds) == 0 {
					m.ExceptIds = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ExceptIds = append(m.ExceptIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ExceptIds", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthImportAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_importAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_importAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bytes", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bytes = append(m.Bytes[:0], dAtA[iNdEx:postIndex]...)
			if m.Bytes == nil {
				m.Bytes = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthImportBotAuthorization) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_importBotAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_importBotAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiId", wireType)
			}
			m.ApiId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ApiId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApiHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BotAuthToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BotAuthToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthImportLoginToken) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_importLoginToken: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_importLoginToken: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = append(m.Token[:0], dAtA[iNdEx:postIndex]...)
			if m.Token == nil {
				m.Token = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthLogOut) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_logOut: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_logOut: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthRecoverPassword) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_recoverPassword: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_recoverPassword: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Code = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthRequestPasswordRecovery) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_requestPasswordRecovery: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_requestPasswordRecovery: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthResendCode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_resendCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_resendCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthResetAuthorizations) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_resetAuthorizations: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_resetAuthorizations: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthSendCode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_sendCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_sendCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowFlashcall", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AllowFlashcall = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentNumber", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CurrentNumber == nil {
				m.CurrentNumber = &Bool{}
			}
			if err := m.CurrentNumber.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiId", wireType)
			}
			m.ApiId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ApiId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApiHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &CodeSettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthSendInvites) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_sendInvites: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_sendInvites: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumbers", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumbers = append(m.PhoneNumbers, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthSignIn) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_signIn: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_signIn: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLAuthSignUp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_auth_signUp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_auth_signUp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirstName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBotsAnswerWebhookJSONQuery) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_bots_answerWebhookJSONQuery: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_bots_answerWebhookJSONQuery: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueryId", wireType)
			}
			m.QueryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.QueryId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &DataJSON{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBotsSendCustomRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_bots_sendCustomRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_bots_sendCustomRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomMethod", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CustomMethod = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Params == nil {
				m.Params = &DataJSON{}
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLBotsSetBotCommands) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_bots_setBotCommands: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_bots_setBotCommands: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Commands", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Commands = append(m.Commands, &BotCommand{})
			if err := m.Commands[len(m.Commands)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsCheckUsername) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_checkUsername: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_checkUsername: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsCreateChannel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_createChannel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_createChannel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Broadcast", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Broadcast = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Megagroup", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Megagroup = bool(v != 0)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field About", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.About = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GeoPoint", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GeoPoint == nil {
				m.GeoPoint = &InputGeoPoint{}
			}
			if err := m.GeoPoint.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsDeleteChannel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_deleteChannel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_deleteChannel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsDeleteHistory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_deleteHistory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_deleteHistory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsDeleteMessages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_deleteMessages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_deleteMessages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsDeleteUserHistory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_deleteUserHistory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_deleteUserHistory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsEditAbout) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_editAbout: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_editAbout: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field About", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.About = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsEditAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_editAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_editAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminRights20B8821471", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AdminRights20B8821471 == nil {
				m.AdminRights20B8821471 = &ChannelAdminRights{}
			}
			if err := m.AdminRights20B8821471.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Role", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Role == nil {
				m.Role = &ChannelParticipantRole{}
			}
			if err := m.Role.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminRights70F893BA93", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AdminRights70F893BA93 == nil {
				m.AdminRights70F893BA93 = &ChatAdminRights{}
			}
			if err := m.AdminRights70F893BA93.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rank", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Rank = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsEditBanned) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_editBanned: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_editBanned: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BannedRightsBFD915CD71", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BannedRightsBFD915CD71 == nil {
				m.BannedRightsBFD915CD71 = &ChannelBannedRights{}
			}
			if err := m.BannedRightsBFD915CD71.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BannedRights7279691293", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BannedRights7279691293 == nil {
				m.BannedRights7279691293 = &ChatBannedRights{}
			}
			if err := m.BannedRights7279691293.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsEditCreator) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_editCreator: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_editCreator: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Password == nil {
				m.Password = &InputCheckPasswordSRP{}
			}
			if err := m.Password.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsEditLocation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_editLocation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_editLocation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GeoPoint", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GeoPoint == nil {
				m.GeoPoint = &InputGeoPoint{}
			}
			if err := m.GeoPoint.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsEditPhoto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_editPhoto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_editPhoto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Photo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Photo == nil {
				m.Photo = &InputChatPhoto{}
			}
			if err := m.Photo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsEditTitle) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_editTitle: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_editTitle: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsExportInvite) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_exportInvite: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_exportInvite: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsExportMessageLink) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_exportMessageLink: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_exportMessageLink: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GroupedCEB7716385", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GroupedCEB7716385 == nil {
				m.GroupedCEB7716385 = &Bool{}
			}
			if err := m.GroupedCEB7716385.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GroupedE63FADEB119", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.GroupedE63FADEB119 = bool(v != 0)
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Thread", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Thread = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetAdminLog) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getAdminLog: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getAdminLog: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Q", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Q = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EventsFilter", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.EventsFilter == nil {
				m.EventsFilter = &ChannelAdminLogEventsFilter{}
			}
			if err := m.EventsFilter.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Admins", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Admins = append(m.Admins, &InputUser{})
			if err := m.Admins[len(m.Admins)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinId", wireType)
			}
			m.MinId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetAdminedPublicChannels) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getAdminedPublicChannels: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getAdminedPublicChannels: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ByLocation", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ByLocation = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CheckLimit", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CheckLimit = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetBroadcastsForDiscussion) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getBroadcastsForDiscussion: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getBroadcastsForDiscussion: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetChannels) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getChannels: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getChannels: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = append(m.Id, &InputChannel{})
			if err := m.Id[len(m.Id)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetDialogs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getDialogs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getDialogs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetFullChannel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getFullChannel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getFullChannel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetGroupsForDiscussion) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getGroupsForDiscussion: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getGroupsForDiscussion: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetImportantHistory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getImportantHistory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getImportantHistory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetDate", wireType)
			}
			m.OffsetDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetDate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddOffset", wireType)
			}
			m.AddOffset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AddOffset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinId", wireType)
			}
			m.MinId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetInactiveChannels) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getInactiveChannels: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getInactiveChannels: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetLeftChannels) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getLeftChannels: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getLeftChannels: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetMessages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getMessages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getMessages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id93D7B34771 = append(m.Id93D7B34771, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id93D7B34771) == 0 {
					m.Id93D7B34771 = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id93D7B34771 = append(m.Id93D7B34771, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id93D7B34771", wireType)
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdAD8C9A2385", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IdAD8C9A2385 = append(m.IdAD8C9A2385, &InputMessage{})
			if err := m.IdAD8C9A2385[len(m.IdAD8C9A2385)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetParticipant) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getParticipant: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getParticipant: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsGetParticipants) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_getParticipants: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_getParticipants: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filter", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Filter == nil {
				m.Filter = &ChannelParticipantsFilter{}
			}
			if err := m.Filter.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsInviteToChannel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_inviteToChannel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_inviteToChannel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Users", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Users = append(m.Users, &InputUser{})
			if err := m.Users[len(m.Users)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsJoinChannel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_joinChannel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_joinChannel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsKickFromChannel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_kickFromChannel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_kickFromChannel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Kicked", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Kicked == nil {
				m.Kicked = &Bool{}
			}
			if err := m.Kicked.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsLeaveChannel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_leaveChannel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_leaveChannel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsReadHistory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_readHistory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_readHistory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsReadMessageContents) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_readMessageContents: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_readMessageContents: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsReportSpam) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_reportSpam: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_reportSpam: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsSetDiscussionGroup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_setDiscussionGroup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_setDiscussionGroup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Broadcast", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Broadcast == nil {
				m.Broadcast = &InputChannel{}
			}
			if err := m.Broadcast.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Group", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Group == nil {
				m.Group = &InputChannel{}
			}
			if err := m.Group.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsSetStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_setStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_setStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stickerset", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Stickerset == nil {
				m.Stickerset = &InputStickerSet{}
			}
			if err := m.Stickerset.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsToggleComments) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_toggleComments: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_toggleComments: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Enabled == nil {
				m.Enabled = &Bool{}
			}
			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsToggleInvites) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_toggleInvites: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_toggleInvites: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Enabled == nil {
				m.Enabled = &Bool{}
			}
			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsTogglePreHistoryHidden) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_togglePreHistoryHidden: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_togglePreHistoryHidden: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Enabled == nil {
				m.Enabled = &Bool{}
			}
			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsToggleSignatures) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_toggleSignatures: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_toggleSignatures: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Enabled == nil {
				m.Enabled = &Bool{}
			}
			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsToggleSlowMode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_toggleSlowMode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_toggleSlowMode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Seconds", wireType)
			}
			m.Seconds = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Seconds |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsUpdatePinnedMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_updatePinnedMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_updatePinnedMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Silent", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Silent = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLChannelsUpdateUsername) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_channels_updateUsername: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_channels_updateUsername: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsAcceptContact) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_acceptContact: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_acceptContact: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputUser{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsAddContact) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_addContact: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_addContact: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddPhonePrivacyException", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AddPhonePrivacyException = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputUser{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirstName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsBlock) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_block: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_block: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id332B49FC71", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id332B49FC71 == nil {
				m.Id332B49FC71 = &InputUser{}
			}
			if err := m.Id332B49FC71.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id68CC1411119", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id68CC1411119 == nil {
				m.Id68CC1411119 = &InputPeer{}
			}
			if err := m.Id68CC1411119.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsBlockFromReplies) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_blockFromReplies: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_blockFromReplies: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeleteMessage", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DeleteMessage = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeleteHistory", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DeleteHistory = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReportSpam", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ReportSpam = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsDeleteByPhones) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_deleteByPhones: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_deleteByPhones: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phones", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phones = append(m.Phones, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsDeleteContact) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_deleteContact: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_deleteContact: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputUser{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsDeleteContacts) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_deleteContacts: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_deleteContacts: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = append(m.Id, &InputUser{})
			if err := m.Id[len(m.Id)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsExportCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_exportCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_exportCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsGetBlocked) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_getBlocked: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_getBlocked: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsGetContactIDs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_getContactIDs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_getContactIDs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsGetContacts) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_getContacts: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_getContacts: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HashC023849F71", wireType)
			}
			m.HashC023849F71 = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HashC023849F71 |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash22C6AA0851", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hash22C6AA0851 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsGetLocated) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_getLocated: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_getLocated: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GeoPoint", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GeoPoint == nil {
				m.GeoPoint = &InputGeoPoint{}
			}
			if err := m.GeoPoint.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Background", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Background = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SelfExpires", wireType)
			}
			m.SelfExpires = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SelfExpires |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsGetSaved) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_getSaved: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_getSaved: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsGetStatuses) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_getStatuses: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_getStatuses: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsGetTopPeers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_getTopPeers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_getTopPeers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Correspondents", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Correspondents = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BotsPm", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BotsPm = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BotsInline", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BotsInline = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCalls", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PhoneCalls = bool(v != 0)
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Groups", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Groups = bool(v != 0)
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channels", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Channels = bool(v != 0)
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsImportCard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_importCard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_importCard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ExportCard = append(m.ExportCard, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.ExportCard) == 0 {
					m.ExportCard = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ExportCard = append(m.ExportCard, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ExportCard", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsImportContacts) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_importContacts: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_importContacts: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Contacts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Contacts = append(m.Contacts, &InputContact{})
			if err := m.Contacts[len(m.Contacts)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Replace", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Replace == nil {
				m.Replace = &Bool{}
			}
			if err := m.Replace.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsResetSaved) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_resetSaved: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_resetSaved: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsResetTopPeerRating) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_resetTopPeerRating: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_resetTopPeerRating: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Category", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Category == nil {
				m.Category = &TopPeerCategory{}
			}
			if err := m.Category.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsResolveUsername) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_resolveUsername: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_resolveUsername: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsSearch) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_search: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_search: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Q", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Q = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsToggleTopPeers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_toggleTopPeers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_toggleTopPeers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Enabled == nil {
				m.Enabled = &Bool{}
			}
			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLContactsUnblock) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contacts_unblock: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contacts_unblock: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdE54100BD71", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.IdE54100BD71 == nil {
				m.IdE54100BD71 = &InputUser{}
			}
			if err := m.IdE54100BD71.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdBEA65D50119", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.IdBEA65D50119 == nil {
				m.IdBEA65D50119 = &InputPeer{}
			}
			if err := m.IdBEA65D50119.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLFoldersDeleteFolder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_folders_deleteFolder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_folders_deleteFolder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FolderId", wireType)
			}
			m.FolderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FolderId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLFoldersEditPeerFolders) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_folders_editPeerFolders: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_folders_editPeerFolders: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FolderPeers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FolderPeers = append(m.FolderPeers, &InputFolderPeer{})
			if err := m.FolderPeers[len(m.FolderPeers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpAcceptTermsOfService) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_acceptTermsOfService: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_acceptTermsOfService: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &DataJSON{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpDismissSuggestion) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_dismissSuggestion: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_dismissSuggestion: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Suggestion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Suggestion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpEditUserInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_editUserInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_editUserInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entities = append(m.Entities, &MessageEntity{})
			if err := m.Entities[len(m.Entities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetAppChangelog) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getAppChangelog: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getAppChangelog: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PrevAppVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PrevAppVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeviceModel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeviceModel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SystemVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SystemVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetAppConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getAppConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getAppConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetAppUpdate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getAppUpdate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getAppUpdate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeviceModel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeviceModel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SystemVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SystemVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Source", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Source = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetCdnConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getCdnConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getCdnConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetCountriesList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getCountriesList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getCountriesList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetDeepLinkInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getDeepLinkInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getDeepLinkInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Path", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Path = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetInviteText) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getInviteText: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getInviteText: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetNearestDc) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getNearestDc: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getNearestDc: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetPassportConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getPassportConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getPassportConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetPromoData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getPromoData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getPromoData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetProxyData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getProxyData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getProxyData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetRecentMeUrls) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getRecentMeUrls: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getRecentMeUrls: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Referer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Referer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetSupport) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getSupport: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getSupport: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetSupportName) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getSupportName: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getSupportName: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetTermsOfService) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getTermsOfService: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getTermsOfService: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetTermsOfServiceUpdate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getTermsOfServiceUpdate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getTermsOfServiceUpdate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpGetUserInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_getUserInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_getUserInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpHidePromoData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_hidePromoData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_hidePromoData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpSaveAppLog) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_saveAppLog: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_saveAppLog: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Events", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Events = append(m.Events, &InputAppEvent{})
			if err := m.Events[len(m.Events)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpSetBotUpdatesStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_setBotUpdatesStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_setBotUpdatesStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PendingUpdatesCount", wireType)
			}
			m.PendingUpdatesCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PendingUpdatesCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLHelpTest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_help_test: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_help_test: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLLangpackGetDifference) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_langpack_getDifference: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_langpack_getDifference: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromVersion", wireType)
			}
			m.FromVersion = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FromVersion |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangPack", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangPack = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLLangpackGetLangPack) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_langpack_getLangPack: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_langpack_getLangPack: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangPack", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangPack = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLLangpackGetLanguage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_langpack_getLanguage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_langpack_getLanguage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangPack", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangPack = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLLangpackGetLanguages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_langpack_getLanguages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_langpack_getLanguages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangPack", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangPack = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLLangpackGetStrings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_langpack_getStrings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_langpack_getStrings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Keys", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Keys = append(m.Keys, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangPack", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangPack = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesAcceptEncryption) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_acceptEncryption: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_acceptEncryption: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputEncryptedChat{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GB", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GB = append(m.GB[:0], dAtA[iNdEx:postIndex]...)
			if m.GB == nil {
				m.GB = []byte{}
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field KeyFingerprint", wireType)
			}
			m.KeyFingerprint = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.KeyFingerprint |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesAcceptUrlAuth) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_acceptUrlAuth: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_acceptUrlAuth: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WriteAllowed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.WriteAllowed = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ButtonId", wireType)
			}
			m.ButtonId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ButtonId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesAddChatUser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_addChatUser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_addChatUser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			m.ChatId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FwdLimit", wireType)
			}
			m.FwdLimit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FwdLimit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesCheckChatInvite) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_checkChatInvite: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_checkChatInvite: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesClearAllDrafts) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_clearAllDrafts: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_clearAllDrafts: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesClearRecentStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_clearRecentStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_clearRecentStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Attached", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Attached = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesCreateChat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_createChat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_createChat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Users", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Users = append(m.Users, &InputUser{})
			if err := m.Users[len(m.Users)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesDeleteChatUser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_deleteChatUser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_deleteChatUser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			m.ChatId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesDeleteHistory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_deleteHistory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_deleteHistory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field JustClear", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.JustClear = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Revoke", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Revoke = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesDeleteMessages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_deleteMessages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_deleteMessages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Revoke", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Revoke = bool(v != 0)
		case 5:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesDeleteScheduledMessages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_deleteScheduledMessages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_deleteScheduledMessages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesDiscardEncryption) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_discardEncryption: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_discardEncryption: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			m.ChatId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesEditChatAbout) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_editChatAbout: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_editChatAbout: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field About", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.About = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesEditChatAdmin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_editChatAdmin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_editChatAdmin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			m.ChatId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsAdmin", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.IsAdmin == nil {
				m.IsAdmin = &Bool{}
			}
			if err := m.IsAdmin.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesEditChatDefaultBannedRights) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_editChatDefaultBannedRights: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_editChatDefaultBannedRights: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BannedRights", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BannedRights == nil {
				m.BannedRights = &ChatBannedRights{}
			}
			if err := m.BannedRights.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesEditChatPhoto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_editChatPhoto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_editChatPhoto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			m.ChatId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Photo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Photo == nil {
				m.Photo = &InputChatPhoto{}
			}
			if err := m.Photo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesEditChatTitle) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_editChatTitle: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_editChatTitle: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			m.ChatId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesEditInlineBotMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_editInlineBotMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_editInlineBotMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoWebpage", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NoWebpage = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputBotInlineMessageID{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyMarkup", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReplyMarkup == nil {
				m.ReplyMarkup = &ReplyMarkup{}
			}
			if err := m.ReplyMarkup.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entities = append(m.Entities, &MessageEntity{})
			if err := m.Entities[len(m.Entities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StopGeoLive", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.StopGeoLive = bool(v != 0)
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Media", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Media == nil {
				m.Media = &InputMedia{}
			}
			if err := m.Media.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GeoPoint", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GeoPoint == nil {
				m.GeoPoint = &InputGeoPoint{}
			}
			if err := m.GeoPoint.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesEditMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_editMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_editMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoWebpage", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NoWebpage = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyMarkup", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReplyMarkup == nil {
				m.ReplyMarkup = &ReplyMarkup{}
			}
			if err := m.ReplyMarkup.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entities = append(m.Entities, &MessageEntity{})
			if err := m.Entities[len(m.Entities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StopGeoLive", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.StopGeoLive = bool(v != 0)
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Media", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Media == nil {
				m.Media = &InputMedia{}
			}
			if err := m.Media.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GeoPoint", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GeoPoint == nil {
				m.GeoPoint = &InputGeoPoint{}
			}
			if err := m.GeoPoint.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScheduleDate", wireType)
			}
			m.ScheduleDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ScheduleDate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesExportChatInvite) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_exportChatInvite: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_exportChatInvite: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			m.ChatId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesFaveSticker) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_faveSticker: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_faveSticker: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputDocument{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Unfave", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Unfave == nil {
				m.Unfave = &Bool{}
			}
			if err := m.Unfave.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesForwardMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_forwardMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_forwardMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesForwardMessages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_forwardMessages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_forwardMessages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Silent", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Silent = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Background", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Background = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WithMyScore", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.WithMyScore = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromPeer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FromPeer == nil {
				m.FromPeer = &InputPeer{}
			}
			if err := m.FromPeer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		case 9:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.RandomId = append(m.RandomId, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.RandomId) == 0 {
					m.RandomId = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.RandomId = append(m.RandomId, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ToPeer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ToPeer == nil {
				m.ToPeer = &InputPeer{}
			}
			if err := m.ToPeer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScheduleDate", wireType)
			}
			m.ScheduleDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ScheduleDate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetAllChats) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getAllChats: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getAllChats: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ExceptIds = append(m.ExceptIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.ExceptIds) == 0 {
					m.ExceptIds = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ExceptIds = append(m.ExceptIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ExceptIds", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetAllDrafts) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getAllDrafts: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getAllDrafts: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetAllStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getAllStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getAllStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetArchivedStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getArchivedStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getArchivedStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Masks", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Masks = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetAttachedStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getAttachedStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getAttachedStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Media", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Media == nil {
				m.Media = &InputStickeredMedia{}
			}
			if err := m.Media.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetBotCallbackAnswer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getBotCallbackAnswer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getBotCallbackAnswer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Game", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Game = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Password == nil {
				m.Password = &InputCheckPasswordSRP{}
			}
			if err := m.Password.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetChats) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getChats: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getChats: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetCommonChats) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getCommonChats: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getCommonChats: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetDhConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getDhConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getDhConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			m.Version = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Version |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomLength", wireType)
			}
			m.RandomLength = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomLength |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetDialogFilters) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getDialogFilters: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getDialogFilters: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetDialogUnreadMarks) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getDialogUnreadMarks: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getDialogUnreadMarks: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetDialogs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getDialogs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getDialogs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExcludePinned", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ExcludePinned = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetDate", wireType)
			}
			m.OffsetDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetDate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetPeer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OffsetPeer == nil {
				m.OffsetPeer = &InputPeer{}
			}
			if err := m.OffsetPeer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FolderId", wireType)
			}
			m.FolderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FolderId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetDiscussionMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getDiscussionMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getDiscussionMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetDocumentByHash) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getDocumentByHash: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getDocumentByHash: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sha256", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sha256 = append(m.Sha256[:0], dAtA[iNdEx:postIndex]...)
			if m.Sha256 == nil {
				m.Sha256 = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Size_", wireType)
			}
			m.Size_ = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Size_ |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MimeType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MimeType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetEmojiKeywords) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getEmojiKeywords: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getEmojiKeywords: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetEmojiKeywordsDifference) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getEmojiKeywordsDifference: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getEmojiKeywordsDifference: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromVersion", wireType)
			}
			m.FromVersion = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FromVersion |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetEmojiKeywordsLanguages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getEmojiKeywordsLanguages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getEmojiKeywordsLanguages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCodes", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCodes = append(m.LangCodes, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetEmojiURL) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getEmojiURL: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getEmojiURL: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetFavedStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getFavedStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getFavedStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetFeaturedStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getFeaturedStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getFeaturedStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetFullChat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getFullChat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getFullChat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			m.ChatId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetGameHighScores) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getGameHighScores: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getGameHighScores: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetHistory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getHistory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getHistory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetDate", wireType)
			}
			m.OffsetDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetDate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddOffset", wireType)
			}
			m.AddOffset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AddOffset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinId", wireType)
			}
			m.MinId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetInlineBotResults) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getInlineBotResults: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getInlineBotResults: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bot", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Bot == nil {
				m.Bot = &InputUser{}
			}
			if err := m.Bot.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GeoPoint", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GeoPoint == nil {
				m.GeoPoint = &InputGeoPoint{}
			}
			if err := m.GeoPoint.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Query", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Query = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Offset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetInlineGameHighScores) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getInlineGameHighScores: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getInlineGameHighScores: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputBotInlineMessageID{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetMaskStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getMaskStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getMaskStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetMessageEditData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getMessageEditData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getMessageEditData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetMessages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getMessages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getMessages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id4222FA7471 = append(m.Id4222FA7471, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id4222FA7471) == 0 {
					m.Id4222FA7471 = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id4222FA7471 = append(m.Id4222FA7471, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id4222FA7471", wireType)
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id63C6650685", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id63C6650685 = append(m.Id63C6650685, &InputMessage{})
			if err := m.Id63C6650685[len(m.Id63C6650685)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetMessagesViews) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getMessagesViews: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getMessagesViews: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Increment", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Increment == nil {
				m.Increment = &Bool{}
			}
			if err := m.Increment.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetOldFeaturedStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getOldFeaturedStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getOldFeaturedStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetOnlines) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getOnlines: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getOnlines: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetPeerDialogs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getPeerDialogs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getPeerDialogs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peers2D9776B971", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Peers2D9776B971 = append(m.Peers2D9776B971, &InputPeer{})
			if err := m.Peers2D9776B971[len(m.Peers2D9776B971)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PeersE470BCFD85", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PeersE470BCFD85 = append(m.PeersE470BCFD85, &InputDialogPeer{})
			if err := m.PeersE470BCFD85[len(m.PeersE470BCFD85)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetPeerSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getPeerSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getPeerSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetPinnedDialogs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getPinnedDialogs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getPinnedDialogs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FolderId", wireType)
			}
			m.FolderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FolderId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetPollResults) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getPollResults: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getPollResults: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetPollVotes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getPollVotes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getPollVotes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Option", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Option = append(m.Option[:0], dAtA[iNdEx:postIndex]...)
			if m.Option == nil {
				m.Option = []byte{}
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Offset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetRecentLocations) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getRecentLocations: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getRecentLocations: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetRecentStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getRecentStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getRecentStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Attached", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Attached = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetReplies) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getReplies: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getReplies: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetDate", wireType)
			}
			m.OffsetDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetDate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddOffset", wireType)
			}
			m.AddOffset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AddOffset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinId", wireType)
			}
			m.MinId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetSavedGifs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getSavedGifs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getSavedGifs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetScheduledHistory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getScheduledHistory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getScheduledHistory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetScheduledMessages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getScheduledMessages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getScheduledMessages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetSearchCounters) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getSearchCounters: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getSearchCounters: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filters", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Filters = append(m.Filters, &MessagesFilter{})
			if err := m.Filters[len(m.Filters)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetSplitRanges) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getSplitRanges: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getSplitRanges: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetStatsURL) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getStatsURL: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getStatsURL: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dark", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Dark = bool(v != 0)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Params = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetStickerSet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getStickerSet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getStickerSet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stickerset", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Stickerset == nil {
				m.Stickerset = &InputStickerSet{}
			}
			if err := m.Stickerset.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Emoticon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Emoticon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HashAE22E04551", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HashAE22E04551 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash43D4F2C85", wireType)
			}
			m.Hash43D4F2C85 = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash43D4F2C85 |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetSuggestedDialogFilters) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getSuggestedDialogFilters: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getSuggestedDialogFilters: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetUnreadMentions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getUnreadMentions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getUnreadMentions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddOffset", wireType)
			}
			m.AddOffset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AddOffset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinId", wireType)
			}
			m.MinId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetWebPage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getWebPage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getWebPage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesGetWebPagePreview) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_getWebPagePreview: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_getWebPagePreview: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entities = append(m.Entities, &MessageEntity{})
			if err := m.Entities[len(m.Entities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesHidePeerSettingsBar) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_hidePeerSettingsBar: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_hidePeerSettingsBar: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesHideReportSpam) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_hideReportSpam: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_hideReportSpam: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesImportChatInvite) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_importChatInvite: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_importChatInvite: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesInstallStickerSet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_installStickerSet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_installStickerSet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stickerset", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Stickerset == nil {
				m.Stickerset = &InputStickerSet{}
			}
			if err := m.Stickerset.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Archived", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Archived == nil {
				m.Archived = &Bool{}
			}
			if err := m.Archived.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Disabled", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Disabled == nil {
				m.Disabled = &Bool{}
			}
			if err := m.Disabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesMarkDialogUnread) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_markDialogUnread: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_markDialogUnread: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Unread", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Unread = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputDialogPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesMigrateChat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_migrateChat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_migrateChat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			m.ChatId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReadDiscussion) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_readDiscussion: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_readDiscussion: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReadMaxId", wireType)
			}
			m.ReadMaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReadMaxId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReadEncryptedHistory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_readEncryptedHistory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_readEncryptedHistory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputEncryptedChat{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxDate", wireType)
			}
			m.MaxDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxDate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReadFeaturedStickers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_readFeaturedStickers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_readFeaturedStickers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReadHistory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_readHistory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_readHistory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReadMentions) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_readMentions: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_readMentions: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReadMessageContents) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_readMessageContents: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_readMessageContents: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReceivedMessages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_receivedMessages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_receivedMessages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReceivedQueue) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_receivedQueue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_receivedQueue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxQts", wireType)
			}
			m.MaxQts = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxQts |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReorderPinnedDialogs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_reorderPinnedDialogs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_reorderPinnedDialogs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Force", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Force = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Order959FF64471", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Order959FF64471 = append(m.Order959FF64471, &InputPeer{})
			if err := m.Order959FF64471[len(m.Order959FF64471)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Order5B51D63F85", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Order5B51D63F85 = append(m.Order5B51D63F85, &InputDialogPeer{})
			if err := m.Order5B51D63F85[len(m.Order5B51D63F85)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FolderId", wireType)
			}
			m.FolderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FolderId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReorderStickerSets) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_reorderStickerSets: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_reorderStickerSets: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Masks", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Masks = bool(v != 0)
		case 5:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Order = append(m.Order, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Order) == 0 {
					m.Order = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Order = append(m.Order, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Order", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReport) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_report: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_report: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Reason == nil {
				m.Reason = &ReportReason{}
			}
			if err := m.Reason.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReportEncryptedSpam) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_reportEncryptedSpam: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_reportEncryptedSpam: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputEncryptedChat{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesReportSpam) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_reportSpam: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_reportSpam: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesRequestEncryption) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_requestEncryption: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_requestEncryption: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GA", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GA = append(m.GA[:0], dAtA[iNdEx:postIndex]...)
			if m.GA == nil {
				m.GA = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesRequestUrlAuth) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_requestUrlAuth: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_requestUrlAuth: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ButtonId", wireType)
			}
			m.ButtonId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ButtonId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSaveDraft) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_saveDraft: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_saveDraft: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoWebpage", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NoWebpage = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyToMsgId", wireType)
			}
			m.ReplyToMsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReplyToMsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entities = append(m.Entities, &MessageEntity{})
			if err := m.Entities[len(m.Entities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSaveGif) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_saveGif: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_saveGif: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputDocument{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Unsave", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Unsave == nil {
				m.Unsave = &Bool{}
			}
			if err := m.Unsave.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSaveRecentSticker) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_saveRecentSticker: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_saveRecentSticker: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Attached", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Attached = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputDocument{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Unsave", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Unsave == nil {
				m.Unsave = &Bool{}
			}
			if err := m.Unsave.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSearch) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_search: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_search: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Q", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Q = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromId39E9EA071", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FromId39E9EA071 == nil {
				m.FromId39E9EA071 = &InputUser{}
			}
			if err := m.FromId39E9EA071.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filter", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Filter == nil {
				m.Filter = &MessagesFilter{}
			}
			if err := m.Filter.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinDate", wireType)
			}
			m.MinDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinDate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxDate", wireType)
			}
			m.MaxDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxDate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddOffset", wireType)
			}
			m.AddOffset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AddOffset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinId", wireType)
			}
			m.MinId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImportantOnly", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ImportantOnly = bool(v != 0)
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 18:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopMsgId", wireType)
			}
			m.TopMsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TopMsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromIdC352EEC120", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FromIdC352EEC120 == nil {
				m.FromIdC352EEC120 = &InputPeer{}
			}
			if err := m.FromIdC352EEC120.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSearchGifs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_searchGifs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_searchGifs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Q", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Q = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSearchGlobal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_searchGlobal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_searchGlobal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Q", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Q = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetDate", wireType)
			}
			m.OffsetDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetDate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetPeer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OffsetPeer == nil {
				m.OffsetPeer = &InputPeer{}
			}
			if err := m.OffsetPeer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetRate", wireType)
			}
			m.OffsetRate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetRate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FolderId", wireType)
			}
			m.FolderId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FolderId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filter", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Filter == nil {
				m.Filter = &MessagesFilter{}
			}
			if err := m.Filter.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinDate", wireType)
			}
			m.MinDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinDate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxDate", wireType)
			}
			m.MaxDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxDate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSearchStickerSets) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_searchStickerSets: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_searchStickerSets: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExcludeFeatured", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ExcludeFeatured = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Q", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Q = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			m.Hash = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Hash |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendBroadcast) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendBroadcast: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendBroadcast: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Contacts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Contacts = append(m.Contacts, &InputUser{})
			if err := m.Contacts[len(m.Contacts)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.RandomId = append(m.RandomId, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.RandomId) == 0 {
					m.RandomId = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.RandomId = append(m.RandomId, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Media", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Media == nil {
				m.Media = &InputMedia{}
			}
			if err := m.Media.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendEncrypted) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendEncrypted: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendEncrypted: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputEncryptedChat{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Silent", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Silent = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendEncryptedFile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendEncryptedFile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendEncryptedFile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputEncryptedChat{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field File", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.File == nil {
				m.File = &InputEncryptedFile{}
			}
			if err := m.File.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Silent", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Silent = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendEncryptedService) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendEncryptedService: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendEncryptedService: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputEncryptedChat{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendInlineBotResult) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendInlineBotResult: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendInlineBotResult: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Silent", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Silent = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Background", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Background = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClearDraft", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ClearDraft = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyToMsgId", wireType)
			}
			m.ReplyToMsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReplyToMsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueryId", wireType)
			}
			m.QueryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.QueryId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HideVia", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HideVia = bool(v != 0)
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScheduleDate", wireType)
			}
			m.ScheduleDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ScheduleDate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendMedia) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendMedia: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendMedia: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Silent", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Silent = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Background", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Background = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClearDraft", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ClearDraft = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyToMsgId", wireType)
			}
			m.ReplyToMsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReplyToMsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Media", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Media == nil {
				m.Media = &InputMedia{}
			}
			if err := m.Media.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyMarkup", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReplyMarkup == nil {
				m.ReplyMarkup = &ReplyMarkup{}
			}
			if err := m.ReplyMarkup.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entities = append(m.Entities, &MessageEntity{})
			if err := m.Entities[len(m.Entities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScheduleDate", wireType)
			}
			m.ScheduleDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ScheduleDate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoWebpage", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NoWebpage = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Silent", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Silent = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Background", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Background = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClearDraft", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ClearDraft = bool(v != 0)
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyToMsgId", wireType)
			}
			m.ReplyToMsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReplyToMsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyMarkup", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ReplyMarkup == nil {
				m.ReplyMarkup = &ReplyMarkup{}
			}
			if err := m.ReplyMarkup.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entities = append(m.Entities, &MessageEntity{})
			if err := m.Entities[len(m.Entities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScheduleDate", wireType)
			}
			m.ScheduleDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ScheduleDate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendMultiMedia) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendMultiMedia: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendMultiMedia: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Silent", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Silent = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Background", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Background = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClearDraft", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ClearDraft = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyToMsgId", wireType)
			}
			m.ReplyToMsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReplyToMsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MultiMedia", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MultiMedia = append(m.MultiMedia, &InputSingleMedia{})
			if err := m.MultiMedia[len(m.MultiMedia)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScheduleDate", wireType)
			}
			m.ScheduleDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ScheduleDate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendScheduledMessages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendScheduledMessages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendScheduledMessages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Id = append(m.Id, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Id) == 0 {
					m.Id = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Id = append(m.Id, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendScreenshotNotification) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendScreenshotNotification: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendScreenshotNotification: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyToMsgId", wireType)
			}
			m.ReplyToMsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReplyToMsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSendVote) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_sendVote: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_sendVote: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Options", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Options = append(m.Options, make([]byte, postIndex-iNdEx))
			copy(m.Options[len(m.Options)-1], dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSetBotCallbackAnswer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_setBotCallbackAnswer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_setBotCallbackAnswer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Alert", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Alert = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueryId", wireType)
			}
			m.QueryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.QueryId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CacheTime", wireType)
			}
			m.CacheTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CacheTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSetBotPrecheckoutResults) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_setBotPrecheckoutResults: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_setBotPrecheckoutResults: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Success", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Success = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueryId", wireType)
			}
			m.QueryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.QueryId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Error = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSetBotShippingResults) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_setBotShippingResults: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_setBotShippingResults: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueryId", wireType)
			}
			m.QueryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.QueryId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Error", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Error = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShippingOptions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShippingOptions = append(m.ShippingOptions, &ShippingOption{})
			if err := m.ShippingOptions[len(m.ShippingOptions)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSetEncryptedTyping) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_setEncryptedTyping: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_setEncryptedTyping: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputEncryptedChat{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Typing", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Typing == nil {
				m.Typing = &Bool{}
			}
			if err := m.Typing.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSetGameScore) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_setGameScore: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_setGameScore: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EditMessage", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EditMessage = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Force", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Force = bool(v != 0)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Score", wireType)
			}
			m.Score = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Score |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSetInlineBotResults) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_setInlineBotResults: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_setInlineBotResults: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Gallery", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Gallery = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Private", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Private = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueryId", wireType)
			}
			m.QueryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.QueryId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Results", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Results = append(m.Results, &InputBotInlineResult{})
			if err := m.Results[len(m.Results)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CacheTime", wireType)
			}
			m.CacheTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CacheTime |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NextOffset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NextOffset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SwitchPm", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SwitchPm == nil {
				m.SwitchPm = &InlineBotSwitchPM{}
			}
			if err := m.SwitchPm.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSetInlineGameScore) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_setInlineGameScore: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_setInlineGameScore: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EditMessage", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EditMessage = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Force", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Force = bool(v != 0)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputBotInlineMessageID{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Score", wireType)
			}
			m.Score = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Score |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesSetTyping) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_setTyping: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_setTyping: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Action", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Action == nil {
				m.Action = &SendMessageAction{}
			}
			if err := m.Action.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopMsgId", wireType)
			}
			m.TopMsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TopMsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesStartBot) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_startBot: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_startBot: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bot", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Bot == nil {
				m.Bot = &InputUser{}
			}
			if err := m.Bot.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartParam", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StartParam = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesToggleChatAdmins) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_toggleChatAdmins: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_toggleChatAdmins: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			m.ChatId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChatId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Enabled == nil {
				m.Enabled = &Bool{}
			}
			if err := m.Enabled.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesToggleDialogPin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_toggleDialogPin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_toggleDialogPin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pinned", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Pinned = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer3289BE6A71", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer3289BE6A71 == nil {
				m.Peer3289BE6A71 = &InputPeer{}
			}
			if err := m.Peer3289BE6A71.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PeerA731E25785", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PeerA731E25785 == nil {
				m.PeerA731E25785 = &InputDialogPeer{}
			}
			if err := m.PeerA731E25785.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesToggleStickerSets) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_toggleStickerSets: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_toggleStickerSets: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uninstall", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Uninstall = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Archive", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Archive = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Unarchive", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Unarchive = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stickersets", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Stickersets = append(m.Stickersets, &InputStickerSet{})
			if err := m.Stickersets[len(m.Stickersets)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesUninstallStickerSet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_uninstallStickerSet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_uninstallStickerSet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stickerset", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Stickerset == nil {
				m.Stickerset = &InputStickerSet{}
			}
			if err := m.Stickerset.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesUnpinAllMessages) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_unpinAllMessages: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_unpinAllMessages: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesUpdateDialogFilter) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_updateDialogFilter: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_updateDialogFilter: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filter", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Filter == nil {
				m.Filter = &DialogFilter{}
			}
			if err := m.Filter.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesUpdateDialogFiltersOrder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_updateDialogFiltersOrder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_updateDialogFiltersOrder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Order = append(m.Order, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Order) == 0 {
					m.Order = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Order = append(m.Order, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Order", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesUpdatePinnedMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_updatePinnedMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_updatePinnedMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Silent", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Silent = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesUploadEncryptedFile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_uploadEncryptedFile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_uploadEncryptedFile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputEncryptedChat{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field File", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.File == nil {
				m.File = &InputEncryptedFile{}
			}
			if err := m.File.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLMessagesUploadMedia) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_messages_uploadMedia: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_messages_uploadMedia: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Media", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Media == nil {
				m.Media = &InputMedia{}
			}
			if err := m.Media.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPaymentsClearSavedInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_payments_clearSavedInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_payments_clearSavedInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Credentials", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Credentials = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Info = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPaymentsGetBankCardData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_payments_getBankCardData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_payments_getBankCardData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Number", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Number = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPaymentsGetPaymentForm) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_payments_getPaymentForm: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_payments_getPaymentForm: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPaymentsGetPaymentReceipt) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_payments_getPaymentReceipt: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_payments_getPaymentReceipt: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPaymentsGetSavedInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_payments_getSavedInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_payments_getSavedInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPaymentsSendPaymentForm) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_payments_sendPaymentForm: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_payments_sendPaymentForm: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestedInfoId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestedInfoId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShippingOptionId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShippingOptionId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Credentials", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Credentials == nil {
				m.Credentials = &InputPaymentCredentials{}
			}
			if err := m.Credentials.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPaymentsValidateRequestedInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_payments_validateRequestedInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_payments_validateRequestedInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Save", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Save = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Info", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Info == nil {
				m.Info = &PaymentRequestedInfo{}
			}
			if err := m.Info.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneAcceptCall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_acceptCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_acceptCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPhoneCall{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GB", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GB = append(m.GB[:0], dAtA[iNdEx:postIndex]...)
			if m.GB == nil {
				m.GB = []byte{}
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Protocol", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Protocol == nil {
				m.Protocol = &PhoneCallProtocol{}
			}
			if err := m.Protocol.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneCheckGroupCall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_checkGroupCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_checkGroupCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Call", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Call == nil {
				m.Call = &InputGroupCall{}
			}
			if err := m.Call.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Source", wireType)
			}
			m.Source = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Source |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneConfirmCall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_confirmCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_confirmCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPhoneCall{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GA", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GA = append(m.GA[:0], dAtA[iNdEx:postIndex]...)
			if m.GA == nil {
				m.GA = []byte{}
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field KeyFingerprint", wireType)
			}
			m.KeyFingerprint = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.KeyFingerprint |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Protocol", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Protocol == nil {
				m.Protocol = &PhoneCallProtocol{}
			}
			if err := m.Protocol.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneCreateGroupCall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_createGroupCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_createGroupCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneDiscardCall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_discardCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_discardCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPhoneCall{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Duration", wireType)
			}
			m.Duration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Duration |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Reason == nil {
				m.Reason = &PhoneCallDiscardReason{}
			}
			if err := m.Reason.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConnectionId", wireType)
			}
			m.ConnectionId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ConnectionId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Video", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Video = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneDiscardGroupCall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_discardGroupCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_discardGroupCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Call", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Call == nil {
				m.Call = &InputGroupCall{}
			}
			if err := m.Call.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneEditGroupCallMember) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_editGroupCallMember: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_editGroupCallMember: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Muted", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Muted = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Call", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Call == nil {
				m.Call = &InputGroupCall{}
			}
			if err := m.Call.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneGetCallConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_getCallConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_getCallConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneGetGroupCall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_getGroupCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_getGroupCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Call", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Call == nil {
				m.Call = &InputGroupCall{}
			}
			if err := m.Call.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneGetGroupParticipants) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_getGroupParticipants: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_getGroupParticipants: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Call", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Call == nil {
				m.Call = &InputGroupCall{}
			}
			if err := m.Call.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Ids = append(m.Ids, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Ids) == 0 {
					m.Ids = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Ids = append(m.Ids, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Ids", wireType)
			}
		case 5:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Sources = append(m.Sources, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Sources) == 0 {
					m.Sources = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Sources = append(m.Sources, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Sources", wireType)
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Offset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneInviteToGroupCall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_inviteToGroupCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_inviteToGroupCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Call", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Call == nil {
				m.Call = &InputGroupCall{}
			}
			if err := m.Call.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Users", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Users = append(m.Users, &InputUser{})
			if err := m.Users[len(m.Users)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneJoinGroupCall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_joinGroupCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_joinGroupCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Muted", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Muted = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Call", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Call == nil {
				m.Call = &InputGroupCall{}
			}
			if err := m.Call.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Params == nil {
				m.Params = &DataJSON{}
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneLeaveGroupCall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_leaveGroupCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_leaveGroupCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Call", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Call == nil {
				m.Call = &InputGroupCall{}
			}
			if err := m.Call.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Source", wireType)
			}
			m.Source = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Source |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneReceivedCall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_receivedCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_receivedCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPhoneCall{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneRequestCall) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_requestCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_requestCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomId", wireType)
			}
			m.RandomId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GAHash", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GAHash = append(m.GAHash[:0], dAtA[iNdEx:postIndex]...)
			if m.GAHash == nil {
				m.GAHash = []byte{}
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Protocol", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Protocol == nil {
				m.Protocol = &PhoneCallProtocol{}
			}
			if err := m.Protocol.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Video", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Video = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneSaveCallDebug) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_saveCallDebug: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_saveCallDebug: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPhoneCall{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Debug", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Debug == nil {
				m.Debug = &DataJSON{}
			}
			if err := m.Debug.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneSendSignalingData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_sendSignalingData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_sendSignalingData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPhoneCall{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneSetCallRating) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_setCallRating: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_setCallRating: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPhoneCall{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rating", wireType)
			}
			m.Rating = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Rating |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Comment", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Comment = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserInitiative", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UserInitiative = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhoneToggleGroupCallSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_phone_toggleGroupCallSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_phone_toggleGroupCallSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Call", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Call == nil {
				m.Call = &InputGroupCall{}
			}
			if err := m.Call.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JoinMuted", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.JoinMuted == nil {
				m.JoinMuted = &Bool{}
			}
			if err := m.JoinMuted.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhotosDeletePhotos) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_photos_deletePhotos: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_photos_deletePhotos: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = append(m.Id, &InputPhoto{})
			if err := m.Id[len(m.Id)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhotosGetUserPhotos) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_photos_getUserPhotos: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_photos_getUserPhotos: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxId", wireType)
			}
			m.MaxId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhotosUpdateProfilePhoto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_photos_updateProfilePhoto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_photos_updateProfilePhoto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputPhoto{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Crop", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Crop == nil {
				m.Crop = &InputPhotoCrop{}
			}
			if err := m.Crop.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPhotosUploadProfilePhoto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_photos_uploadProfilePhoto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_photos_uploadProfilePhoto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field File", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.File == nil {
				m.File = &InputFile{}
			}
			if err := m.File.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Caption", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Caption = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GeoPoint", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GeoPoint == nil {
				m.GeoPoint = &InputGeoPoint{}
			}
			if err := m.GeoPoint.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Crop", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Crop == nil {
				m.Crop = &InputPhotoCrop{}
			}
			if err := m.Crop.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Video", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Video == nil {
				m.Video = &InputFile{}
			}
			if err := m.Video.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoStartTs", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.VideoStartTs = float64(math.Float64frombits(v))
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStatsGetBroadcastStats) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stats_getBroadcastStats: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stats_getBroadcastStats: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dark", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Dark = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TzOffset", wireType)
			}
			m.TzOffset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TzOffset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStatsGetMegagroupStats) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stats_getMegagroupStats: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stats_getMegagroupStats: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dark", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Dark = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStatsGetMessagePublicForwards) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stats_getMessagePublicForwards: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stats_getMessagePublicForwards: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetRate", wireType)
			}
			m.OffsetRate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetRate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetPeer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OffsetPeer == nil {
				m.OffsetPeer = &InputPeer{}
			}
			if err := m.OffsetPeer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OffsetId", wireType)
			}
			m.OffsetId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OffsetId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStatsGetMessageStats) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stats_getMessageStats: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stats_getMessageStats: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dark", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Dark = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgId", wireType)
			}
			m.MsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStatsLoadAsyncGraph) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stats_loadAsyncGraph: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stats_loadAsyncGraph: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field X", wireType)
			}
			m.X = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.X |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStickersAddStickerToSet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stickers_addStickerToSet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stickers_addStickerToSet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stickerset", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Stickerset == nil {
				m.Stickerset = &InputStickerSet{}
			}
			if err := m.Stickerset.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sticker", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Sticker == nil {
				m.Sticker = &InputStickerSetItem{}
			}
			if err := m.Sticker.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStickersChangeStickerPosition) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stickers_changeStickerPosition: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stickers_changeStickerPosition: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sticker", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Sticker == nil {
				m.Sticker = &InputDocument{}
			}
			if err := m.Sticker.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Position", wireType)
			}
			m.Position = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Position |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStickersCreateStickerSet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stickers_createStickerSet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stickers_createStickerSet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Masks", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Masks = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserId == nil {
				m.UserId = &InputUser{}
			}
			if err := m.UserId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShortName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShortName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stickers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Stickers = append(m.Stickers, &InputStickerSetItem{})
			if err := m.Stickers[len(m.Stickers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Animated", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Animated = bool(v != 0)
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Thumb", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Thumb == nil {
				m.Thumb = &InputDocument{}
			}
			if err := m.Thumb.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStickersRemoveStickerFromSet) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stickers_removeStickerFromSet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stickers_removeStickerFromSet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sticker", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Sticker == nil {
				m.Sticker = &InputDocument{}
			}
			if err := m.Sticker.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLStickersSetStickerSetThumb) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_stickers_setStickerSetThumb: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_stickers_setStickerSetThumb: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stickerset", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Stickerset == nil {
				m.Stickerset = &InputStickerSet{}
			}
			if err := m.Stickerset.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Thumb", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Thumb == nil {
				m.Thumb = &InputDocument{}
			}
			if err := m.Thumb.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUpdatesGetChannelDifference) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_updates_getChannelDifference: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_updates_getChannelDifference: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Force", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Force = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Channel == nil {
				m.Channel = &InputChannel{}
			}
			if err := m.Channel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filter", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Filter == nil {
				m.Filter = &ChannelMessagesFilter{}
			}
			if err := m.Filter.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pts", wireType)
			}
			m.Pts = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Pts |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUpdatesGetDifference) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_updates_getDifference: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_updates_getDifference: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pts", wireType)
			}
			m.Pts = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Pts |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PtsTotalLimit", wireType)
			}
			m.PtsTotalLimit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PtsTotalLimit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Date", wireType)
			}
			m.Date = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Date |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Qts", wireType)
			}
			m.Qts = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Qts |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUpdatesGetState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_updates_getState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_updates_getState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUploadGetCdnFile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_upload_getCdnFile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_upload_getCdnFile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileToken", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileToken = append(m.FileToken[:0], dAtA[iNdEx:postIndex]...)
			if m.FileToken == nil {
				m.FileToken = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUploadGetCdnFileHashes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_upload_getCdnFileHashes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_upload_getCdnFileHashes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileToken", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileToken = append(m.FileToken[:0], dAtA[iNdEx:postIndex]...)
			if m.FileToken == nil {
				m.FileToken = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUploadGetFile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_upload_getFile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_upload_getFile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Location == nil {
				m.Location = &InputFileLocation{}
			}
			if err := m.Location.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Flags", wireType)
			}
			m.Flags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Flags |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Precise", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Precise = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUploadGetFileHashes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_upload_getFileHashes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_upload_getFileHashes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Location == nil {
				m.Location = &InputFileLocation{}
			}
			if err := m.Location.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUploadGetWebFile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_upload_getWebFile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_upload_getWebFile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Location == nil {
				m.Location = &InputWebFileLocation{}
			}
			if err := m.Location.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUploadReuploadCdnFile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_upload_reuploadCdnFile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_upload_reuploadCdnFile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileToken", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileToken = append(m.FileToken[:0], dAtA[iNdEx:postIndex]...)
			if m.FileToken == nil {
				m.FileToken = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestToken", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestToken = append(m.RequestToken[:0], dAtA[iNdEx:postIndex]...)
			if m.RequestToken == nil {
				m.RequestToken = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUploadSaveBigFilePart) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_upload_saveBigFilePart: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_upload_saveBigFilePart: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileId", wireType)
			}
			m.FileId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FileId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FilePart", wireType)
			}
			m.FilePart = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FilePart |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileTotalParts", wireType)
			}
			m.FileTotalParts = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FileTotalParts |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bytes", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bytes = append(m.Bytes[:0], dAtA[iNdEx:postIndex]...)
			if m.Bytes == nil {
				m.Bytes = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUploadSaveFilePart) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_upload_saveFilePart: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_upload_saveFilePart: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileId", wireType)
			}
			m.FileId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FileId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FilePart", wireType)
			}
			m.FilePart = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FilePart |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bytes", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bytes = append(m.Bytes[:0], dAtA[iNdEx:postIndex]...)
			if m.Bytes == nil {
				m.Bytes = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUsersGetFullUser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_users_getFullUser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_users_getFullUser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputUser{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUsersGetUsers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_users_getUsers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_users_getUsers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = append(m.Id, &InputUser{})
			if err := m.Id[len(m.Id)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLUsersSetSecureValueErrors) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_users_setSecureValueErrors: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_users_setSecureValueErrors: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Id == nil {
				m.Id = &InputUser{}
			}
			if err := m.Id.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Errors", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Errors = append(m.Errors, &SecureValueError{})
			if err := m.Errors[len(m.Errors)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLWalletGetKeySecretSalt) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_wallet_getKeySecretSalt: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_wallet_getKeySecretSalt: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Revoke", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Revoke == nil {
				m.Revoke = &Bool{}
			}
			if err := m.Revoke.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLWalletSendLiteRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_wallet_sendLiteRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_wallet_sendLiteRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Body", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Body = append(m.Body[:0], dAtA[iNdEx:postIndex]...)
			if m.Body == nil {
				m.Body = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_WallPaper) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_WallPaper: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_WallPaper: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &WallPaper{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_User) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_User: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_User: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &User{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_ContactStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_ContactStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_ContactStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &ContactStatus{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VectorInt) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_int: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_int: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Datas = append(m.Datas, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Datas) == 0 {
					m.Datas = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Datas = append(m.Datas, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_ReceivedNotifyMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_ReceivedNotifyMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_ReceivedNotifyMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &ReceivedNotifyMessage{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VectorLong) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_long: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_long: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Datas = append(m.Datas, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowSchemaTlSyncService
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthSchemaTlSyncService
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Datas) == 0 {
					m.Datas = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowSchemaTlSyncService
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Datas = append(m.Datas, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_StickerSetCovered) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_StickerSetCovered: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_StickerSetCovered: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &StickerSetCovered{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_CdnFileHash) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_CdnFileHash: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_CdnFileHash: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &CdnFileHash{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_LangPackString) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_LangPackString: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_LangPackString: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &LangPackString{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_LangPackLanguage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_LangPackLanguage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_LangPackLanguage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &LangPackLanguage{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_SecureValue) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_SecureValue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_SecureValue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &SecureValue{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_SavedContact) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_SavedContact: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_SavedContact: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &SavedContact{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_MessageRange) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_MessageRange: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_MessageRange: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &MessageRange{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_DialogPeer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_DialogPeer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_DialogPeer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &DialogPeer{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_FileHash) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_FileHash: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_FileHash: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &FileHash{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_EmojiLanguage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_EmojiLanguage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_EmojiLanguage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &EmojiLanguage{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VectorMessages_SearchCounter) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_messages_SearchCounter: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_messages_SearchCounter: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &Messages_SearchCounter{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_DialogFilter) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_DialogFilter: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_DialogFilter: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &DialogFilter{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Vector_DialogFilterSuggested) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Vector_DialogFilterSuggested: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Vector_DialogFilterSuggested: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Datas", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Datas = append(m.Datas, &DialogFilterSuggested{})
			if err := m.Datas[len(m.Datas)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlSyncService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlSyncService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSchemaTlSyncService(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSchemaTlSyncService
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSchemaTlSyncService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthSchemaTlSyncService
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupSchemaTlSyncService
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthSchemaTlSyncService
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthSchemaTlSyncService        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSchemaTlSyncService          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupSchemaTlSyncService = fmt.Errorf("proto: unexpected end of group")
)
