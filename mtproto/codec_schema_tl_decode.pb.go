/*
 * Copyright (c) 2021-present,  NovaChat-Engine.
 *  All rights reserved.
 *
 *
 * @Author: Coder (coderxw@gmail.com)
 * @Time : 2023/06/12 18:03
 * @File : codec_schema_tl_decode.pb.go
 * @Desc :
 *
 */

package mtproto

import (
	"fmt"
	"novachat_engine/pkg/log"
)

func (m *TLAccessPointRule) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AccessPointRule:
		m.SetPhonePrefixRules(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDcId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*IpPort, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &IpPort{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetIps(v3)

	default:
		log.Errorf("AccessPointRule Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAccountDaysTTL) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AccountDaysTTL:
		m.SetDays(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("AccountDaysTTL Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAccountAuthorizationForm) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AccountAuthorizationForm:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*SecureRequiredType, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &SecureRequiredType{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetRequiredTypes(v2)

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*SecureValue, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &SecureValue{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetValues(v3)

		c4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c4 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 4, c4)
			return dBuf.err
		}
		l4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v4 := make([]*SecureValueError, l4)
		for i := int32(0); i < l4; i++ {
			v4[i] = &SecureValueError{}
			err = v4[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetErrors(v4)

		c5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c5 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 5, c5)
			return dBuf.err
		}
		l5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v5 := make([]*User, l5)
		for i := int32(0); i < l5; i++ {
			v5[i] = &User{}
			err = v5[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v5)

		if (flags & (1 << 0)) != 0 {
			m.SetPrivacyPolicyUrl(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("AccountAuthorizationForm Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAccountAuthorizations) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AccountAuthorizations:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*Authorization, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &Authorization{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetAuthorizations(v1)

	default:
		log.Errorf("AccountAuthorizations Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAccountAutoDownloadSettings) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AccountAutoDownloadSettings:
		m1 := &AutoDownloadSettings{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetLow(m1)
		m2 := &AutoDownloadSettings{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetMedium(m2)
		m3 := &AutoDownloadSettings{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetHigh(m3)

	default:
		log.Errorf("AccountAutoDownloadSettings Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAccountContentSettings) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AccountContentSettings:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSensitiveEnabled(flags&(1<<0) != 0)
		m.SetSensitiveCanChange(flags&(1<<1) != 0)

	default:
		log.Errorf("AccountContentSettings Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAccountNoPassword) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AccountNoPassword:
		m.SetNewSalt(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetEmailUnconfirmedPattern(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("AccountNoPassword Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAccountPassword) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AccountPassword:
		m.SetCurrentSalt(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNewSalt(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetHint(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m4 := &Bool{}
		err = m4.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetHasRecovery7C18141C71(m4)
		m.SetEmailUnconfirmedPattern(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_AccountPasswordad2641f8:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetHasRecoveryAD2641F885(flags&(1<<0) != 0)
		m.SetHasSecureValues(flags&(1<<1) != 0)
		m.SetHasPassword(flags&(1<<2) != 0)
		if (flags & (1 << 2)) != 0 {
			m5 := &PasswordKdfAlgo{}
			err = m5.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetCurrentAlgo(m5)
		}
		if (flags & (1 << 2)) != 0 {
			m.SetSrp_B(dBuf.StringBytes())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}

		}
		if (flags & (1 << 2)) != 0 {
			m.SetSrpId(dBuf.Long())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetHint(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m.SetEmailUnconfirmedPattern(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m10 := &PasswordKdfAlgo{}
		err = m10.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNewAlgo(m10)
		m11 := &SecurePasswordKdfAlgo{}
		err = m11.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNewSecureAlgo(m11)
		m.SetSecureRandom(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("AccountPassword Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAccountPasswordInputSettings) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AccountPasswordInputSettings:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetNewSalt(dBuf.StringBytes())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}

		}
		if (flags & (1 << 0)) != 0 {
			m.SetNewPasswordHash(dBuf.StringBytes())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}

		}
		if (flags & (1 << 0)) != 0 {
			m.SetHint(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m.SetEmail(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_AccountPasswordInputSettingsc23727c9:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m2 := &PasswordKdfAlgo{}
			err = m2.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetNewAlgo(m2)
		}
		if (flags & (1 << 0)) != 0 {
			m.SetNewPasswordHash(dBuf.StringBytes())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}

		}
		if (flags & (1 << 0)) != 0 {
			m.SetHint(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m.SetEmail(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m6 := &SecureSecretSettings{}
			err = m6.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetNewSecureSettings(m6)
		}

	default:
		log.Errorf("AccountPasswordInputSettings Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAccountPasswordSettings) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AccountPasswordSettings:
		m.SetEmail(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_AccountPasswordSettings9a5c33e5:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetEmail(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m3 := &SecureSecretSettings{}
			err = m3.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetSecureSettings(m3)
		}

	default:
		log.Errorf("AccountPasswordSettings Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAccountPrivacyRules) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AccountPrivacyRules:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*PrivacyRule, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &PrivacyRule{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetRules(v1)

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*User, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &User{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v2)

	case Cmd_AccountPrivacyRules50a04e45:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*PrivacyRule, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &PrivacyRule{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetRules(v1)

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*Chat, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &Chat{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v2)

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*User, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &User{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v3)

	default:
		log.Errorf("AccountPrivacyRules Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAccountSentEmailCode) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AccountSentEmailCode:
		m.SetEmailPattern(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLength(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("AccountSentEmailCode Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAccountTakeout) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AccountTakeout:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("AccountTakeout Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAccountThemesNotModified) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AccountThemesNotModified:
		_ = m

	default:
		log.Errorf("AccountThemesNotModified Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAccountThemes) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AccountThemes:
		m.SetHash(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*Theme, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &Theme{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetThemes(v2)

	default:
		log.Errorf("AccountThemes Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAccountTmpPassword) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AccountTmpPassword:
		m.SetTmpPassword(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetValidUntil(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("AccountTmpPassword Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAccountWallPapersNotModified) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AccountWallPapersNotModified:
		_ = m

	default:
		log.Errorf("AccountWallPapersNotModified Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAccountWallPapers) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AccountWallPapers:
		m.SetHash(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*WallPaper, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &WallPaper{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetWallpapers(v2)

	default:
		log.Errorf("AccountWallPapers Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAccountWebAuthorizations) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AccountWebAuthorizations:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*WebAuthorization, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &WebAuthorization{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetAuthorizations(v1)

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*User, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &User{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v2)

	default:
		log.Errorf("AccountWebAuthorizations Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAuthAuthorization) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AuthAuthorization:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetTmpSessions(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m3 := &User{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetUser(m3)

	case Cmd_AuthAuthorizationff036af1:
		m1 := &User{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetUser(m1)

	default:
		log.Errorf("AuthAuthorization Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAuthAuthorizationSignUpRequired) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AuthAuthorizationSignUpRequired:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m2 := &Help_TermsOfService{}
			err = m2.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetTermsOfService(m2)
		}

	default:
		log.Errorf("AuthAuthorizationSignUpRequired Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAuthCheckedPhone) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AuthCheckedPhone:
		m1 := &Bool{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPhoneRegistered(m1)

	default:
		log.Errorf("AuthCheckedPhone Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAuthCodeTypeSms) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AuthCodeTypeSms:
		_ = m

	default:
		log.Errorf("AuthCodeTypeSms Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAuthCodeTypeCall) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AuthCodeTypeCall:
		_ = m

	default:
		log.Errorf("AuthCodeTypeCall Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAuthCodeTypeFlashCall) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AuthCodeTypeFlashCall:
		_ = m

	default:
		log.Errorf("AuthCodeTypeFlashCall Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAuthExportedAuthorization) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AuthExportedAuthorization:
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetBytes(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("AuthExportedAuthorization Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAuthLoginToken) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AuthLoginToken:
		m.SetExpires(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetToken(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("AuthLoginToken Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAuthLoginTokenMigrateTo) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AuthLoginTokenMigrateTo:
		m.SetDcId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetToken(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("AuthLoginTokenMigrateTo Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAuthLoginTokenSuccess) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AuthLoginTokenSuccess:
		m1 := &Auth_Authorization{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetAuthorization(m1)

	default:
		log.Errorf("AuthLoginTokenSuccess Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAuthPasswordRecovery) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AuthPasswordRecovery:
		m.SetEmailPattern(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("AuthPasswordRecovery Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAuthSentCode) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AuthSentCode:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPhoneRegistered(flags&(1<<0) != 0)
		m3 := &Auth_SentCodeType{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetType(m3)
		m.SetPhoneCodeHash(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			m5 := &Auth_CodeType{}
			err = m5.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetNextType(m5)
		}
		if (flags & (1 << 2)) != 0 {
			m.SetTimeout(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_AuthSentCode38faab5f:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPhoneRegistered(flags&(1<<0) != 0)
		m3 := &Auth_SentCodeType{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetType(m3)
		m.SetPhoneCodeHash(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			m5 := &Auth_CodeType{}
			err = m5.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetNextType(m5)
		}
		if (flags & (1 << 2)) != 0 {
			m.SetTimeout(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m7 := &Help_TermsOfService{}
			err = m7.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetTermsOfService(m7)
		}

	default:
		log.Errorf("AuthSentCode Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAuthSentCodeTypeApp) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AuthSentCodeTypeApp:
		m.SetLength(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("AuthSentCodeTypeApp Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAuthSentCodeTypeSms) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AuthSentCodeTypeSms:
		m.SetLength(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("AuthSentCodeTypeSms Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAuthSentCodeTypeCall) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AuthSentCodeTypeCall:
		m.SetLength(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("AuthSentCodeTypeCall Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAuthSentCodeTypeFlashCall) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AuthSentCodeTypeFlashCall:
		m.SetPattern(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("AuthSentCodeTypeFlashCall Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAuthorization) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_Authorization:
		m.SetHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFlags(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDeviceModel(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPlatform(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSystemVersion(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetApiId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAppName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAppVersion(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDateCreated(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDateActive(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetIp(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCountry(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetRegion(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_Authorizationad01d61d:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCurrent(flags&(1<<0) != 0)
		m.SetOfficialApp(flags&(1<<1) != 0)
		m.SetPasswordPending(flags&(1<<2) != 0)
		m.SetHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDeviceModel(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPlatform(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSystemVersion(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetApiId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAppName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAppVersion(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDateCreated(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDateActive(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetIp(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCountry(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetRegion(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("Authorization Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLAutoDownloadSettings) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_AutoDownloadSettings:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDisabled(flags&(1<<0) != 0)
		m.SetVideoPreloadLarge(flags&(1<<1) != 0)
		m.SetAudioPreloadNext(flags&(1<<2) != 0)
		m.SetPhonecallsLessData(flags&(1<<3) != 0)
		m.SetPhotoSizeMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVideoSizeMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFileSizeMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_AutoDownloadSettingse04232f3:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDisabled(flags&(1<<0) != 0)
		m.SetVideoPreloadLarge(flags&(1<<1) != 0)
		m.SetAudioPreloadNext(flags&(1<<2) != 0)
		m.SetPhonecallsLessData(flags&(1<<3) != 0)
		m.SetPhotoSizeMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVideoSizeMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFileSizeMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVideoUploadMaxbitrate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("AutoDownloadSettings Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLBadMsgNotification) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_BadMsgNotification:
		m.SetBadMsgId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetBadMsgSeqno(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetErrorCode(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("BadMsgNotification Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLBadServerSalt) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_BadServerSalt:
		m.SetBadMsgId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetBadMsgSeqno(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetErrorCode(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNewServerSalt(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("BadServerSalt Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLBankCardOpenUrl) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_BankCardOpenUrl:
		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("BankCardOpenUrl Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLBaseThemeClassic) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_BaseThemeClassic:
		_ = m

	default:
		log.Errorf("BaseThemeClassic Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLBaseThemeDay) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_BaseThemeDay:
		_ = m

	default:
		log.Errorf("BaseThemeDay Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLBaseThemeNight) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_BaseThemeNight:
		_ = m

	default:
		log.Errorf("BaseThemeNight Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLBaseThemeTinted) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_BaseThemeTinted:
		_ = m

	default:
		log.Errorf("BaseThemeTinted Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLBaseThemeArctic) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_BaseThemeArctic:
		_ = m

	default:
		log.Errorf("BaseThemeArctic Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLBindAuthKeyInner) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_BindAuthKeyInner:
		m.SetNonce(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTempAuthKeyId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPermAuthKeyId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTempSessionId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetExpiresAt(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("BindAuthKeyInner Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLBoolFalse) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_BoolFalse:
		_ = m

	default:
		log.Errorf("BoolFalse Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLBoolTrue) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_BoolTrue:
		_ = m

	default:
		log.Errorf("BoolTrue Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLBotCommand) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_BotCommand:
		m.SetCommand(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDescription(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("BotCommand Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLBotInfo) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_BotInfo:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDescription(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*BotCommand, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &BotCommand{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetCommands(v3)

	default:
		log.Errorf("BotInfo Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLBotInlineMessageMediaAuto) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_BotInlineMessageMediaAuto:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCaption(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 2)) != 0 {
			m3 := &ReplyMarkup{}
			err = m3.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplyMarkup(m3)
		}

	case Cmd_BotInlineMessageMediaAuto764cf810:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMessage(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			c3 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c3 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
				return dBuf.err
			}
			l3 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v3 := make([]*MessageEntity, l3)
			for i := int32(0); i < l3; i++ {
				v3[i] = &MessageEntity{}
				err = v3[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetEntities(v3)

		}
		if (flags & (1 << 2)) != 0 {
			m4 := &ReplyMarkup{}
			err = m4.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplyMarkup(m4)
		}

	default:
		log.Errorf("BotInlineMessageMediaAuto Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLBotInlineMessageText) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_BotInlineMessageText:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNoWebpage(flags&(1<<0) != 0)
		m.SetMessage(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			c4 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c4 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 4, c4)
				return dBuf.err
			}
			l4 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v4 := make([]*MessageEntity, l4)
			for i := int32(0); i < l4; i++ {
				v4[i] = &MessageEntity{}
				err = v4[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetEntities(v4)

		}
		if (flags & (1 << 2)) != 0 {
			m5 := &ReplyMarkup{}
			err = m5.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplyMarkup(m5)
		}

	default:
		log.Errorf("BotInlineMessageText Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLBotInlineMessageMediaGeo) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_BotInlineMessageMediaGeo:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &GeoPoint{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetGeo(m2)
		if (flags & (1 << 2)) != 0 {
			m3 := &ReplyMarkup{}
			err = m3.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplyMarkup(m3)
		}

	case Cmd_BotInlineMessageMediaGeo51846fd:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &GeoPoint{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetGeo(m2)
		if (flags & (1 << 0)) != 0 {
			m.SetHeading(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m.SetPeriod(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetProximityNotificationRadius(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m6 := &ReplyMarkup{}
			err = m6.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplyMarkup(m6)
		}

	case Cmd_BotInlineMessageMediaGeob722de65:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &GeoPoint{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetGeo(m2)
		m.SetPeriod(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 2)) != 0 {
			m4 := &ReplyMarkup{}
			err = m4.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplyMarkup(m4)
		}

	default:
		log.Errorf("BotInlineMessageMediaGeo Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLBotInlineMessageMediaVenue) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_BotInlineMessageMediaVenue:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &GeoPoint{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetGeo(m2)
		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAddress(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetProvider(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVenueId(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 2)) != 0 {
			m7 := &ReplyMarkup{}
			err = m7.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplyMarkup(m7)
		}

	case Cmd_BotInlineMessageMediaVenue8a86659c:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &GeoPoint{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetGeo(m2)
		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAddress(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetProvider(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVenueId(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVenueType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 2)) != 0 {
			m8 := &ReplyMarkup{}
			err = m8.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplyMarkup(m8)
		}

	default:
		log.Errorf("BotInlineMessageMediaVenue Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLBotInlineMessageMediaContact) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_BotInlineMessageMediaContact:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPhoneNumber(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFirstName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLastName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 2)) != 0 {
			m5 := &ReplyMarkup{}
			err = m5.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplyMarkup(m5)
		}

	case Cmd_BotInlineMessageMediaContact18d1cdc2:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPhoneNumber(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFirstName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLastName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVcard(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 2)) != 0 {
			m6 := &ReplyMarkup{}
			err = m6.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplyMarkup(m6)
		}

	default:
		log.Errorf("BotInlineMessageMediaContact Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLBotInlineResult) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_BotInlineResult:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetId(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			m.SetTitle(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetDescription(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetUrl(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m.SetThumbUrl(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 5)) != 0 {
			m.SetContentUrl(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 5)) != 0 {
			m.SetContentType(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 6)) != 0 {
			m.SetW(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 6)) != 0 {
			m.SetH(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 7)) != 0 {
			m.SetDuration(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m13 := &BotInlineMessage{}
		err = m13.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetSendMessage(m13)

	case Cmd_BotInlineResult11965f3a:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetId(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			m.SetTitle(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetDescription(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetUrl(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m7 := &WebDocument{}
			err = m7.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetThumb(m7)
		}
		if (flags & (1 << 5)) != 0 {
			m8 := &WebDocument{}
			err = m8.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetContent(m8)
		}
		m9 := &BotInlineMessage{}
		err = m9.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetSendMessage(m9)

	default:
		log.Errorf("BotInlineResult Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLBotInlineMediaResult) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_BotInlineMediaResult:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetId(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m4 := &Photo{}
			err = m4.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetPhoto(m4)
		}
		if (flags & (1 << 1)) != 0 {
			m5 := &Document{}
			err = m5.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetDocument(m5)
		}
		if (flags & (1 << 2)) != 0 {
			m.SetTitle(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetDescription(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m8 := &BotInlineMessage{}
		err = m8.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetSendMessage(m8)

	default:
		log.Errorf("BotInlineMediaResult Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLCdnConfig) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_CdnConfig:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*CdnPublicKey, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &CdnPublicKey{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetPublicKeys(v1)

	default:
		log.Errorf("CdnConfig Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLCdnFileHash) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_CdnFileHash:
		m.SetOffset(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLimit(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetHash(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("CdnFileHash Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLCdnPublicKey) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_CdnPublicKey:
		m.SetDcId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPublicKey(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("CdnPublicKey Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelAdminLogEvent) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelAdminLogEvent:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m4 := &ChannelAdminLogEventAction{}
		err = m4.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetAction(m4)

	default:
		log.Errorf("ChannelAdminLogEvent Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelAdminLogEventActionChangeTitle) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelAdminLogEventActionChangeTitle:
		m.SetPrevValueE6DFB82571(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNewValueE6DFB82571(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ChannelAdminLogEventActionChangeTitle Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelAdminLogEventActionChangeAbout) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelAdminLogEventActionChangeAbout:
		m.SetPrevValueE6DFB82571(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNewValueE6DFB82571(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ChannelAdminLogEventActionChangeAbout Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelAdminLogEventActionChangeUsername) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelAdminLogEventActionChangeUsername:
		m.SetPrevValueE6DFB82571(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNewValueE6DFB82571(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ChannelAdminLogEventActionChangeUsername Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelAdminLogEventActionChangePhoto) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelAdminLogEventActionChangePhoto:
		m1 := &ChatPhoto{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPrevPhotoB82F55C371(m1)
		m2 := &ChatPhoto{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNewPhotoB82F55C371(m2)

	case Cmd_ChannelAdminLogEventActionChangePhoto434bd2af:
		m1 := &Photo{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPrevPhoto434BD2AF98(m1)
		m2 := &Photo{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNewPhoto434BD2AF98(m2)

	default:
		log.Errorf("ChannelAdminLogEventActionChangePhoto Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelAdminLogEventActionToggleInvites) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelAdminLogEventActionToggleInvites:
		m1 := &Bool{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNewValue1B7907AE71(m1)

	default:
		log.Errorf("ChannelAdminLogEventActionToggleInvites Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelAdminLogEventActionToggleSignatures) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelAdminLogEventActionToggleSignatures:
		m1 := &Bool{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNewValue1B7907AE71(m1)

	default:
		log.Errorf("ChannelAdminLogEventActionToggleSignatures Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelAdminLogEventActionUpdatePinned) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelAdminLogEventActionUpdatePinned:
		m1 := &Message{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetMessage(m1)

	default:
		log.Errorf("ChannelAdminLogEventActionUpdatePinned Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelAdminLogEventActionEditMessage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelAdminLogEventActionEditMessage:
		m1 := &Message{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPrevMessage(m1)
		m2 := &Message{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNewMessage(m2)

	default:
		log.Errorf("ChannelAdminLogEventActionEditMessage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelAdminLogEventActionDeleteMessage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelAdminLogEventActionDeleteMessage:
		m1 := &Message{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetMessage(m1)

	default:
		log.Errorf("ChannelAdminLogEventActionDeleteMessage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelAdminLogEventActionParticipantJoin) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelAdminLogEventActionParticipantJoin:
		_ = m

	default:
		log.Errorf("ChannelAdminLogEventActionParticipantJoin Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelAdminLogEventActionParticipantLeave) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelAdminLogEventActionParticipantLeave:
		_ = m

	default:
		log.Errorf("ChannelAdminLogEventActionParticipantLeave Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelAdminLogEventActionParticipantInvite) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelAdminLogEventActionParticipantInvite:
		m1 := &ChannelParticipant{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetParticipantE31C34D871(m1)

	default:
		log.Errorf("ChannelAdminLogEventActionParticipantInvite Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelAdminLogEventActionParticipantToggleBan) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelAdminLogEventActionParticipantToggleBan:
		m1 := &ChannelParticipant{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPrevParticipant(m1)
		m2 := &ChannelParticipant{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNewParticipant(m2)

	default:
		log.Errorf("ChannelAdminLogEventActionParticipantToggleBan Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelAdminLogEventActionParticipantToggleAdmin) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelAdminLogEventActionParticipantToggleAdmin:
		m1 := &ChannelParticipant{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPrevParticipant(m1)
		m2 := &ChannelParticipant{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNewParticipant(m2)

	default:
		log.Errorf("ChannelAdminLogEventActionParticipantToggleAdmin Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelAdminLogEventActionChangeStickerSet) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelAdminLogEventActionChangeStickerSet:
		m1 := &InputStickerSet{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPrevStickerset(m1)
		m2 := &InputStickerSet{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNewStickerset(m2)

	default:
		log.Errorf("ChannelAdminLogEventActionChangeStickerSet Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelAdminLogEventActionTogglePreHistoryHidden) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelAdminLogEventActionTogglePreHistoryHidden:
		m1 := &Bool{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNewValue1B7907AE71(m1)

	default:
		log.Errorf("ChannelAdminLogEventActionTogglePreHistoryHidden Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelAdminLogEventActionDefaultBannedRights) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelAdminLogEventActionDefaultBannedRights:
		m1 := &ChatBannedRights{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPrevBannedRights(m1)
		m2 := &ChatBannedRights{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNewBannedRights(m2)

	default:
		log.Errorf("ChannelAdminLogEventActionDefaultBannedRights Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelAdminLogEventActionStopPoll) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelAdminLogEventActionStopPoll:
		m1 := &Message{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetMessage(m1)

	default:
		log.Errorf("ChannelAdminLogEventActionStopPoll Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelAdminLogEventActionChangeLinkedChat) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelAdminLogEventActionChangeLinkedChat:
		m.SetPrevValueA26F881B100(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNewValueA26F881B100(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ChannelAdminLogEventActionChangeLinkedChat Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelAdminLogEventActionChangeLocation) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelAdminLogEventActionChangeLocation:
		m1 := &ChannelLocation{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPrevValueE6B76AE102(m1)
		m2 := &ChannelLocation{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNewValueE6B76AE102(m2)

	default:
		log.Errorf("ChannelAdminLogEventActionChangeLocation Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelAdminLogEventActionToggleSlowMode) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelAdminLogEventActionToggleSlowMode:
		m.SetPrevValueA26F881B100(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNewValueA26F881B100(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ChannelAdminLogEventActionToggleSlowMode Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelAdminLogEventActionStartGroupCall) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelAdminLogEventActionStartGroupCall:
		m1 := &InputGroupCall{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCall(m1)

	default:
		log.Errorf("ChannelAdminLogEventActionStartGroupCall Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelAdminLogEventActionDiscardGroupCall) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelAdminLogEventActionDiscardGroupCall:
		m1 := &InputGroupCall{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCall(m1)

	default:
		log.Errorf("ChannelAdminLogEventActionDiscardGroupCall Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelAdminLogEventActionParticipantMute) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelAdminLogEventActionParticipantMute:
		m1 := &GroupCallParticipant{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetParticipantF92424D2122(m1)

	default:
		log.Errorf("ChannelAdminLogEventActionParticipantMute Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelAdminLogEventActionParticipantUnmute) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelAdminLogEventActionParticipantUnmute:
		m1 := &GroupCallParticipant{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetParticipantF92424D2122(m1)

	default:
		log.Errorf("ChannelAdminLogEventActionParticipantUnmute Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelAdminLogEventActionToggleGroupCallSetting) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelAdminLogEventActionToggleGroupCallSetting:
		m1 := &Bool{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetJoinMuted(m1)

	default:
		log.Errorf("ChannelAdminLogEventActionToggleGroupCallSetting Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelAdminLogEventsFilter) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelAdminLogEventsFilter:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetJoin(flags&(1<<0) != 0)
		m.SetLeave(flags&(1<<1) != 0)
		m.SetInvite(flags&(1<<2) != 0)
		m.SetBan(flags&(1<<3) != 0)
		m.SetUnban(flags&(1<<4) != 0)
		m.SetKick(flags&(1<<5) != 0)
		m.SetUnkick(flags&(1<<6) != 0)
		m.SetPromote(flags&(1<<7) != 0)
		m.SetDemote(flags&(1<<8) != 0)
		m.SetInfo(flags&(1<<9) != 0)
		m.SetSettings(flags&(1<<10) != 0)
		m.SetPinned(flags&(1<<11) != 0)
		m.SetEdit(flags&(1<<12) != 0)
		m.SetDelete(flags&(1<<13) != 0)
		m.SetGroupCall(flags&(1<<14) != 0)

	default:
		log.Errorf("ChannelAdminLogEventsFilter Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelAdminRights) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelAdminRights:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetChangeInfo(flags&(1<<0) != 0)
		m.SetPostMessages(flags&(1<<1) != 0)
		m.SetEditMessages(flags&(1<<2) != 0)
		m.SetDeleteMessages(flags&(1<<3) != 0)
		m.SetBanUsers(flags&(1<<4) != 0)
		m.SetInviteUsers(flags&(1<<5) != 0)
		m.SetInviteLink(flags&(1<<6) != 0)
		m.SetPinMessages(flags&(1<<7) != 0)
		m.SetAddAdmins(flags&(1<<9) != 0)

	default:
		log.Errorf("ChannelAdminRights Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelBannedRights) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelBannedRights:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetViewMessages(flags&(1<<0) != 0)
		m.SetSendMessages(flags&(1<<1) != 0)
		m.SetSendMedia(flags&(1<<2) != 0)
		m.SetSendStickers(flags&(1<<3) != 0)
		m.SetSendGifs(flags&(1<<4) != 0)
		m.SetSendGames(flags&(1<<5) != 0)
		m.SetSendInline(flags&(1<<6) != 0)
		m.SetEmbedLinks(flags&(1<<7) != 0)
		m.SetUntilDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ChannelBannedRights Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelLocationEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelLocationEmpty:
		_ = m

	default:
		log.Errorf("ChannelLocationEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelLocation) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelLocation:
		m1 := &GeoPoint{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetGeoPoint(m1)
		m.SetAddress(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ChannelLocation Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelMessagesFilterEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelMessagesFilterEmpty:
		_ = m

	default:
		log.Errorf("ChannelMessagesFilterEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelMessagesFilter) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelMessagesFilter:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetExcludeNewMessages(flags&(1<<1) != 0)
		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*MessageRange, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &MessageRange{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetRanges(v3)

	default:
		log.Errorf("ChannelMessagesFilter Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelMessagesFilterCollapsed) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelMessagesFilterCollapsed:
		_ = m

	default:
		log.Errorf("ChannelMessagesFilterCollapsed Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelParticipant) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelParticipant:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ChannelParticipant Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelParticipantSelf) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelParticipantSelf:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetInviterId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ChannelParticipantSelf Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelParticipantCreator) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelParticipantCreator:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_ChannelParticipantCreator447dca4b:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m3 := &ChatAdminRights{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetAdminRights5DAA6E2393(m3)
		if (flags & (1 << 0)) != 0 {
			m.SetRank(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_ChannelParticipantCreator808d15a4:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetRank(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("ChannelParticipantCreator Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelParticipantAdmin) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelParticipantAdmin:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCanEdit(flags&(1<<0) != 0)
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetInviterId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPromotedBy(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m7 := &ChannelAdminRights{}
		err = m7.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetAdminRightsA82FA89871(m7)

	case Cmd_ChannelParticipantAdmin5daa6e23:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCanEdit(flags&(1<<0) != 0)
		m.SetSelf(flags&(1<<1) != 0)
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			m.SetInviterId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetPromotedBy(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m8 := &ChatAdminRights{}
		err = m8.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetAdminRights5DAA6E2393(m8)

	case Cmd_ChannelParticipantAdminccbebbaf:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCanEdit(flags&(1<<0) != 0)
		m.SetSelf(flags&(1<<1) != 0)
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			m.SetInviterId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetPromotedBy(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m8 := &ChatAdminRights{}
		err = m8.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetAdminRights5DAA6E2393(m8)
		if (flags & (1 << 2)) != 0 {
			m.SetRank(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("ChannelParticipantAdmin Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelParticipantBanned) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelParticipantBanned:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLeft(flags&(1<<0) != 0)
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetKickedBy(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m6 := &ChannelBannedRights{}
		err = m6.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetBannedRights222C188671(m6)

	case Cmd_ChannelParticipantBanned1c0facaf:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLeft(flags&(1<<0) != 0)
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetKickedBy(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m6 := &ChatBannedRights{}
		err = m6.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetBannedRights1C0FACAF93(m6)

	default:
		log.Errorf("ChannelParticipantBanned Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelParticipantModerator) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelParticipantModerator:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetInviterId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ChannelParticipantModerator Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelParticipantEditor) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelParticipantEditor:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetInviterId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ChannelParticipantEditor Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelParticipantKicked) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelParticipantKicked:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetKickedBy(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ChannelParticipantKicked Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelParticipantLeft) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelParticipantLeft:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ChannelParticipantLeft Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelRoleEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelRoleEmpty:
		_ = m

	default:
		log.Errorf("ChannelRoleEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelRoleModerator) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelRoleModerator:
		_ = m

	default:
		log.Errorf("ChannelRoleModerator Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelRoleEditor) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelRoleEditor:
		_ = m

	default:
		log.Errorf("ChannelRoleEditor Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelParticipantsRecent) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelParticipantsRecent:
		_ = m

	default:
		log.Errorf("ChannelParticipantsRecent Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelParticipantsAdmins) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelParticipantsAdmins:
		_ = m

	default:
		log.Errorf("ChannelParticipantsAdmins Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelParticipantsKicked) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelParticipantsKicked:
		m.SetQ(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_ChannelParticipantsKicked3c37bb7a:
		_ = m

	default:
		log.Errorf("ChannelParticipantsKicked Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelParticipantsBots) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelParticipantsBots:
		_ = m

	default:
		log.Errorf("ChannelParticipantsBots Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelParticipantsBanned) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelParticipantsBanned:
		m.SetQ(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ChannelParticipantsBanned Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelParticipantsSearch) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelParticipantsSearch:
		m.SetQ(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ChannelParticipantsSearch Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelParticipantsContacts) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelParticipantsContacts:
		m.SetQ(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ChannelParticipantsContacts Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelParticipantsMentions) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelParticipantsMentions:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetQ(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m.SetTopMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("ChannelParticipantsMentions Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelsAdminLogResults) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelsAdminLogResults:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*ChannelAdminLogEvent, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &ChannelAdminLogEvent{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetEvents(v1)

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*Chat, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &Chat{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v2)

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*User, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &User{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v3)

	default:
		log.Errorf("ChannelsAdminLogResults Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelsChannelParticipant) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelsChannelParticipant:
		m1 := &ChannelParticipant{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetParticipant(m1)
		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*User, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &User{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v2)

	default:
		log.Errorf("ChannelsChannelParticipant Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelsChannelParticipants) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelsChannelParticipants:
		m.SetCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*ChannelParticipant, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &ChannelParticipant{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetParticipants(v2)

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*User, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &User{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v3)

	default:
		log.Errorf("ChannelsChannelParticipants Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelsChannelParticipantsNotModified) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelsChannelParticipantsNotModified:
		_ = m

	default:
		log.Errorf("ChannelsChannelParticipantsNotModified Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChatEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChatEmpty:
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ChatEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChat) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_Chat:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCreator(flags&(1<<0) != 0)
		m.SetKicked(flags&(1<<1) != 0)
		m.SetLeft(flags&(1<<2) != 0)
		m.SetAdminsEnabled(flags&(1<<3) != 0)
		m.SetAdmin(flags&(1<<4) != 0)
		m.SetDeactivated(flags&(1<<5) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m10 := &ChatPhoto{}
		err = m10.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPhoto(m10)
		m.SetParticipantsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVersion(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 6)) != 0 {
			m14 := &InputChannel{}
			err = m14.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetMigratedTo(m14)
		}

	case Cmd_Chat3bda1bde:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCreator(flags&(1<<0) != 0)
		m.SetKicked(flags&(1<<1) != 0)
		m.SetLeft(flags&(1<<2) != 0)
		m.SetDeactivated(flags&(1<<5) != 0)
		m.SetCallActive(flags&(1<<23) != 0)
		m.SetCallNotEmpty(flags&(1<<24) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m10 := &ChatPhoto{}
		err = m10.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPhoto(m10)
		m.SetParticipantsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVersion(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 6)) != 0 {
			m14 := &InputChannel{}
			err = m14.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetMigratedTo(m14)
		}
		if (flags & (1 << 14)) != 0 {
			m15 := &ChatAdminRights{}
			err = m15.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetAdminRights4DF3083493(m15)
		}
		if (flags & (1 << 18)) != 0 {
			m16 := &ChatBannedRights{}
			err = m16.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetDefaultBannedRights(m16)
		}

	default:
		log.Errorf("Chat Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChatForbidden) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChatForbidden:
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ChatForbidden Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannel) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_Channel:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCreator(flags&(1<<0) != 0)
		m.SetLeft(flags&(1<<2) != 0)
		m.SetEditor(flags&(1<<3) != 0)
		m.SetBroadcast(flags&(1<<5) != 0)
		m.SetVerified(flags&(1<<7) != 0)
		m.SetMegagroup(flags&(1<<8) != 0)
		m.SetRestricted(flags&(1<<9) != 0)
		m.SetDemocracy(flags&(1<<10) != 0)
		m.SetSignatures(flags&(1<<11) != 0)
		m.SetMin(flags&(1<<12) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 13)) != 0 {
			m.SetAccessHash(dBuf.Long())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 6)) != 0 {
			m.SetUsername(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m16 := &ChatPhoto{}
		err = m16.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPhoto(m16)
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVersion(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 9)) != 0 {
			m.SetRestrictionReasonCB44B1C71(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 14)) != 0 {
			m20 := &ChannelAdminRights{}
			err = m20.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetAdminRightsCB44B1C71(m20)
		}
		if (flags & (1 << 15)) != 0 {
			m21 := &ChannelBannedRights{}
			err = m21.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetBannedRightsCB44B1C71(m21)
		}

	case Cmd_Channel4df30834:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCreator(flags&(1<<0) != 0)
		m.SetLeft(flags&(1<<2) != 0)
		m.SetBroadcast(flags&(1<<5) != 0)
		m.SetVerified(flags&(1<<7) != 0)
		m.SetMegagroup(flags&(1<<8) != 0)
		m.SetRestricted(flags&(1<<9) != 0)
		m.SetSignatures(flags&(1<<11) != 0)
		m.SetMin(flags&(1<<12) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 13)) != 0 {
			m.SetAccessHash(dBuf.Long())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 6)) != 0 {
			m.SetUsername(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m14 := &ChatPhoto{}
		err = m14.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPhoto(m14)
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVersion(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 9)) != 0 {
			m.SetRestrictionReasonCB44B1C71(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 14)) != 0 {
			m18 := &ChatAdminRights{}
			err = m18.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetAdminRights4DF3083493(m18)
		}
		if (flags & (1 << 15)) != 0 {
			m19 := &ChatBannedRights{}
			err = m19.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetBannedRights4DF3083493(m19)
		}
		if (flags & (1 << 18)) != 0 {
			m20 := &ChatBannedRights{}
			err = m20.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetDefaultBannedRights(m20)
		}
		if (flags & (1 << 17)) != 0 {
			m.SetParticipantsCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_Channela14dca52:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCreator(flags&(1<<0) != 0)
		m.SetKicked(flags&(1<<1) != 0)
		m.SetLeft(flags&(1<<2) != 0)
		m.SetEditor(flags&(1<<3) != 0)
		m.SetModerator(flags&(1<<4) != 0)
		m.SetBroadcast(flags&(1<<5) != 0)
		m.SetVerified(flags&(1<<7) != 0)
		m.SetMegagroup(flags&(1<<8) != 0)
		m.SetRestricted(flags&(1<<9) != 0)
		m.SetDemocracy(flags&(1<<10) != 0)
		m.SetSignatures(flags&(1<<11) != 0)
		m.SetMin(flags&(1<<12) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 13)) != 0 {
			m.SetAccessHash(dBuf.Long())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 6)) != 0 {
			m.SetUsername(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m18 := &ChatPhoto{}
		err = m18.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPhoto(m18)
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVersion(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 9)) != 0 {
			m.SetRestrictionReasonCB44B1C71(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_Channelc88974ac:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCreator(flags&(1<<0) != 0)
		m.SetLeft(flags&(1<<2) != 0)
		m.SetEditor(flags&(1<<3) != 0)
		m.SetBroadcast(flags&(1<<5) != 0)
		m.SetVerified(flags&(1<<7) != 0)
		m.SetMegagroup(flags&(1<<8) != 0)
		m.SetRestricted(flags&(1<<9) != 0)
		m.SetDemocracy(flags&(1<<10) != 0)
		m.SetSignatures(flags&(1<<11) != 0)
		m.SetMin(flags&(1<<12) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 13)) != 0 {
			m.SetAccessHash(dBuf.Long())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 6)) != 0 {
			m.SetUsername(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m16 := &ChatPhoto{}
		err = m16.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPhoto(m16)
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVersion(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 9)) != 0 {
			m.SetRestrictionReasonCB44B1C71(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 14)) != 0 {
			m20 := &ChannelAdminRights{}
			err = m20.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetAdminRightsCB44B1C71(m20)
		}
		if (flags & (1 << 15)) != 0 {
			m21 := &ChannelBannedRights{}
			err = m21.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetBannedRightsCB44B1C71(m21)
		}
		if (flags & (1 << 17)) != 0 {
			m.SetParticipantsCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_Channeld31a961e:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCreator(flags&(1<<0) != 0)
		m.SetLeft(flags&(1<<2) != 0)
		m.SetBroadcast(flags&(1<<5) != 0)
		m.SetVerified(flags&(1<<7) != 0)
		m.SetMegagroup(flags&(1<<8) != 0)
		m.SetRestricted(flags&(1<<9) != 0)
		m.SetSignatures(flags&(1<<11) != 0)
		m.SetMin(flags&(1<<12) != 0)
		m.SetScam(flags&(1<<19) != 0)
		m.SetHasLink(flags&(1<<20) != 0)
		m.SetHasGeo(flags&(1<<21) != 0)
		m.SetSlowmodeEnabled(flags&(1<<22) != 0)
		m.SetCallActive(flags&(1<<23) != 0)
		m.SetCallNotEmpty(flags&(1<<24) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 13)) != 0 {
			m.SetAccessHash(dBuf.Long())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 6)) != 0 {
			m.SetUsername(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m20 := &ChatPhoto{}
		err = m20.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPhoto(m20)
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVersion(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 9)) != 0 {
			c23 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c23 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 23, c23)
				return dBuf.err
			}
			l23 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v23 := make([]*RestrictionReason, l23)
			for i := int32(0); i < l23; i++ {
				v23[i] = &RestrictionReason{}
				err = v23[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetRestrictionReasonD31A961E122(v23)

		}
		if (flags & (1 << 14)) != 0 {
			m24 := &ChatAdminRights{}
			err = m24.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetAdminRights4DF3083493(m24)
		}
		if (flags & (1 << 15)) != 0 {
			m25 := &ChatBannedRights{}
			err = m25.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetBannedRights4DF3083493(m25)
		}
		if (flags & (1 << 18)) != 0 {
			m26 := &ChatBannedRights{}
			err = m26.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetDefaultBannedRights(m26)
		}
		if (flags & (1 << 17)) != 0 {
			m.SetParticipantsCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("Channel Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelForbidden) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelForbidden:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetBroadcast(flags&(1<<5) != 0)
		m.SetMegagroup(flags&(1<<8) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 16)) != 0 {
			m.SetUntilDate(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_ChannelForbidden2d85832c:
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ChannelForbidden Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChatAdminRights) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChatAdminRights:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetChangeInfo(flags&(1<<0) != 0)
		m.SetPostMessages(flags&(1<<1) != 0)
		m.SetEditMessages(flags&(1<<2) != 0)
		m.SetDeleteMessages(flags&(1<<3) != 0)
		m.SetBanUsers(flags&(1<<4) != 0)
		m.SetInviteUsers(flags&(1<<5) != 0)
		m.SetPinMessages(flags&(1<<7) != 0)
		m.SetAddAdmins(flags&(1<<9) != 0)
		m.SetAnonymous(flags&(1<<10) != 0)
		m.SetManageCall(flags&(1<<11) != 0)

	default:
		log.Errorf("ChatAdminRights Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChatBannedRights) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChatBannedRights:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetViewMessages(flags&(1<<0) != 0)
		m.SetSendMessages(flags&(1<<1) != 0)
		m.SetSendMedia(flags&(1<<2) != 0)
		m.SetSendStickers(flags&(1<<3) != 0)
		m.SetSendGifs(flags&(1<<4) != 0)
		m.SetSendGames(flags&(1<<5) != 0)
		m.SetSendInline(flags&(1<<6) != 0)
		m.SetEmbedLinks(flags&(1<<7) != 0)
		m.SetSendPolls(flags&(1<<8) != 0)
		m.SetChangeInfo(flags&(1<<10) != 0)
		m.SetInviteUsers(flags&(1<<15) != 0)
		m.SetPinMessages(flags&(1<<17) != 0)
		m.SetUntilDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ChatBannedRights Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChatFull) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChatFull:
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &ChatParticipants{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetParticipants(m2)
		m3 := &Photo{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetChatPhoto(m3)
		m4 := &PeerNotifySettings{}
		err = m4.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNotifySettings(m4)
		m5 := &ExportedChatInvite{}
		err = m5.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetExportedInvite(m5)
		c6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c6 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 6, c6)
			return dBuf.err
		}
		l6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v6 := make([]*BotInfo, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = &BotInfo{}
			err = v6[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetBotInfo(v6)

	case Cmd_ChatFull1b7c9db3:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCanSetUsername(flags&(1<<7) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAbout(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m5 := &ChatParticipants{}
		err = m5.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetParticipants(m5)
		if (flags & (1 << 2)) != 0 {
			m6 := &Photo{}
			err = m6.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetChatPhoto(m6)
		}
		m7 := &PeerNotifySettings{}
		err = m7.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNotifySettings(m7)
		m8 := &ExportedChatInvite{}
		err = m8.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetExportedInvite(m8)
		if (flags & (1 << 3)) != 0 {
			c9 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c9 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 9, c9)
				return dBuf.err
			}
			l9 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v9 := make([]*BotInfo, l9)
			for i := int32(0); i < l9; i++ {
				v9[i] = &BotInfo{}
				err = v9[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetBotInfo(v9)

		}
		if (flags & (1 << 6)) != 0 {
			m.SetPinnedMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 11)) != 0 {
			m.SetFolderId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_ChatFull22a235da:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCanSetUsername(flags&(1<<7) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAbout(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m5 := &ChatParticipants{}
		err = m5.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetParticipants(m5)
		if (flags & (1 << 2)) != 0 {
			m6 := &Photo{}
			err = m6.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetChatPhoto(m6)
		}
		m7 := &PeerNotifySettings{}
		err = m7.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNotifySettings(m7)
		m8 := &ExportedChatInvite{}
		err = m8.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetExportedInvite(m8)
		if (flags & (1 << 3)) != 0 {
			c9 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c9 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 9, c9)
				return dBuf.err
			}
			l9 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v9 := make([]*BotInfo, l9)
			for i := int32(0); i < l9; i++ {
				v9[i] = &BotInfo{}
				err = v9[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetBotInfo(v9)

		}
		if (flags & (1 << 6)) != 0 {
			m.SetPinnedMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_ChatFulldc8c181:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCanSetUsername(flags&(1<<7) != 0)
		m.SetHasScheduled(flags&(1<<8) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAbout(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m6 := &ChatParticipants{}
		err = m6.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetParticipants(m6)
		if (flags & (1 << 2)) != 0 {
			m7 := &Photo{}
			err = m7.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetChatPhoto(m7)
		}
		m8 := &PeerNotifySettings{}
		err = m8.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNotifySettings(m8)
		m9 := &ExportedChatInvite{}
		err = m9.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetExportedInvite(m9)
		if (flags & (1 << 3)) != 0 {
			c10 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c10 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 10, c10)
				return dBuf.err
			}
			l10 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v10 := make([]*BotInfo, l10)
			for i := int32(0); i < l10; i++ {
				v10[i] = &BotInfo{}
				err = v10[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetBotInfo(v10)

		}
		if (flags & (1 << 6)) != 0 {
			m.SetPinnedMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 11)) != 0 {
			m.SetFolderId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 12)) != 0 {
			m13 := &InputGroupCall{}
			err = m13.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetCall(m13)
		}

	case Cmd_ChatFulledd2a791:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m3 := &ChatParticipants{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetParticipants(m3)
		if (flags & (1 << 2)) != 0 {
			m4 := &Photo{}
			err = m4.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetChatPhoto(m4)
		}
		m5 := &PeerNotifySettings{}
		err = m5.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNotifySettings(m5)
		m6 := &ExportedChatInvite{}
		err = m6.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetExportedInvite(m6)
		if (flags & (1 << 3)) != 0 {
			c7 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c7 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 7, c7)
				return dBuf.err
			}
			l7 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v7 := make([]*BotInfo, l7)
			for i := int32(0); i < l7; i++ {
				v7[i] = &BotInfo{}
				err = v7[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetBotInfo(v7)

		}
		if (flags & (1 << 6)) != 0 {
			m.SetPinnedMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("ChatFull Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChannelFull) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChannelFull:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCanViewParticipants(flags&(1<<3) != 0)
		m.SetCanSetUsername(flags&(1<<6) != 0)
		m.SetCanSetStickers(flags&(1<<7) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAbout(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetParticipantsCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m.SetAdminsCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetKickedCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetBannedCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetReadInboxMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetReadOutboxMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUnreadCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m14 := &Photo{}
		err = m14.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetChatPhoto(m14)
		m15 := &PeerNotifySettings{}
		err = m15.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNotifySettings(m15)
		m16 := &ExportedChatInvite{}
		err = m16.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetExportedInvite(m16)
		c17 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c17 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 17, c17)
			return dBuf.err
		}
		l17 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v17 := make([]*BotInfo, l17)
		for i := int32(0); i < l17; i++ {
			v17[i] = &BotInfo{}
			err = v17[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetBotInfo(v17)

		if (flags & (1 << 4)) != 0 {
			m.SetMigratedFromChatId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m.SetMigratedFromMaxId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 5)) != 0 {
			m.SetPinnedMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 8)) != 0 {
			m21 := &StickerSet{}
			err = m21.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetStickerset(m21)
		}

	case Cmd_ChannelFull10916653:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCanViewParticipants(flags&(1<<3) != 0)
		m.SetCanSetUsername(flags&(1<<6) != 0)
		m.SetCanSetStickers(flags&(1<<7) != 0)
		m.SetHiddenPrehistory(flags&(1<<10) != 0)
		m.SetCanViewStats(flags&(1<<12) != 0)
		m.SetCanSetLocation(flags&(1<<16) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAbout(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetParticipantsCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m.SetAdminsCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetKickedCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetBannedCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 13)) != 0 {
			m.SetOnlineCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetReadInboxMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetReadOutboxMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUnreadCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m18 := &Photo{}
		err = m18.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetChatPhoto(m18)
		m19 := &PeerNotifySettings{}
		err = m19.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNotifySettings(m19)
		m20 := &ExportedChatInvite{}
		err = m20.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetExportedInvite(m20)
		c21 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c21 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 21, c21)
			return dBuf.err
		}
		l21 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v21 := make([]*BotInfo, l21)
		for i := int32(0); i < l21; i++ {
			v21[i] = &BotInfo{}
			err = v21[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetBotInfo(v21)

		if (flags & (1 << 4)) != 0 {
			m.SetMigratedFromChatId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m.SetMigratedFromMaxId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 5)) != 0 {
			m.SetPinnedMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 8)) != 0 {
			m25 := &StickerSet{}
			err = m25.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetStickerset(m25)
		}
		if (flags & (1 << 9)) != 0 {
			m.SetAvailableMinId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 11)) != 0 {
			m.SetFolderId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 14)) != 0 {
			m.SetLinkedChatId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 15)) != 0 {
			m29 := &ChannelLocation{}
			err = m29.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetLocation(m29)
		}
		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_ChannelFull1c87a71a:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCanViewParticipants(flags&(1<<3) != 0)
		m.SetCanSetUsername(flags&(1<<6) != 0)
		m.SetCanSetStickers(flags&(1<<7) != 0)
		m.SetHiddenPrehistory(flags&(1<<10) != 0)
		m.SetCanViewStats(flags&(1<<12) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAbout(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetParticipantsCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m.SetAdminsCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetKickedCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetBannedCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 13)) != 0 {
			m.SetOnlineCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetReadInboxMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetReadOutboxMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUnreadCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m17 := &Photo{}
		err = m17.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetChatPhoto(m17)
		m18 := &PeerNotifySettings{}
		err = m18.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNotifySettings(m18)
		m19 := &ExportedChatInvite{}
		err = m19.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetExportedInvite(m19)
		c20 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c20 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 20, c20)
			return dBuf.err
		}
		l20 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v20 := make([]*BotInfo, l20)
		for i := int32(0); i < l20; i++ {
			v20[i] = &BotInfo{}
			err = v20[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetBotInfo(v20)

		if (flags & (1 << 4)) != 0 {
			m.SetMigratedFromChatId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m.SetMigratedFromMaxId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 5)) != 0 {
			m.SetPinnedMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 8)) != 0 {
			m24 := &StickerSet{}
			err = m24.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetStickerset(m24)
		}
		if (flags & (1 << 9)) != 0 {
			m.SetAvailableMinId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_ChannelFull2d895c74:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCanViewParticipants(flags&(1<<3) != 0)
		m.SetCanSetUsername(flags&(1<<6) != 0)
		m.SetCanSetStickers(flags&(1<<7) != 0)
		m.SetHiddenPrehistory(flags&(1<<10) != 0)
		m.SetCanViewStats(flags&(1<<12) != 0)
		m.SetCanSetLocation(flags&(1<<16) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAbout(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetParticipantsCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m.SetAdminsCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetKickedCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetBannedCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 13)) != 0 {
			m.SetOnlineCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetReadInboxMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetReadOutboxMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUnreadCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m18 := &Photo{}
		err = m18.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetChatPhoto(m18)
		m19 := &PeerNotifySettings{}
		err = m19.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNotifySettings(m19)
		m20 := &ExportedChatInvite{}
		err = m20.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetExportedInvite(m20)
		c21 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c21 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 21, c21)
			return dBuf.err
		}
		l21 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v21 := make([]*BotInfo, l21)
		for i := int32(0); i < l21; i++ {
			v21[i] = &BotInfo{}
			err = v21[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetBotInfo(v21)

		if (flags & (1 << 4)) != 0 {
			m.SetMigratedFromChatId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m.SetMigratedFromMaxId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 5)) != 0 {
			m.SetPinnedMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 8)) != 0 {
			m25 := &StickerSet{}
			err = m25.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetStickerset(m25)
		}
		if (flags & (1 << 9)) != 0 {
			m.SetAvailableMinId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 11)) != 0 {
			m.SetFolderId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 14)) != 0 {
			m.SetLinkedChatId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 15)) != 0 {
			m29 := &ChannelLocation{}
			err = m29.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetLocation(m29)
		}
		if (flags & (1 << 17)) != 0 {
			m.SetSlowmodeSeconds(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 18)) != 0 {
			m.SetSlowmodeNextSendDate(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_ChannelFull3648977:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCanViewParticipants(flags&(1<<3) != 0)
		m.SetCanSetUsername(flags&(1<<6) != 0)
		m.SetCanSetStickers(flags&(1<<7) != 0)
		m.SetHiddenPrehistory(flags&(1<<10) != 0)
		m.SetCanViewStats(flags&(1<<12) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAbout(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetParticipantsCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m.SetAdminsCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetKickedCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetBannedCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 13)) != 0 {
			m.SetOnlineCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetReadInboxMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetReadOutboxMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUnreadCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m17 := &Photo{}
		err = m17.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetChatPhoto(m17)
		m18 := &PeerNotifySettings{}
		err = m18.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNotifySettings(m18)
		m19 := &ExportedChatInvite{}
		err = m19.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetExportedInvite(m19)
		c20 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c20 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 20, c20)
			return dBuf.err
		}
		l20 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v20 := make([]*BotInfo, l20)
		for i := int32(0); i < l20; i++ {
			v20[i] = &BotInfo{}
			err = v20[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetBotInfo(v20)

		if (flags & (1 << 4)) != 0 {
			m.SetMigratedFromChatId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m.SetMigratedFromMaxId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 5)) != 0 {
			m.SetPinnedMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 8)) != 0 {
			m24 := &StickerSet{}
			err = m24.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetStickerset(m24)
		}
		if (flags & (1 << 9)) != 0 {
			m.SetAvailableMinId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 11)) != 0 {
			m.SetFolderId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_ChannelFull76af5481:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCanViewParticipants(flags&(1<<3) != 0)
		m.SetCanSetUsername(flags&(1<<6) != 0)
		m.SetCanSetStickers(flags&(1<<7) != 0)
		m.SetHiddenPrehistory(flags&(1<<10) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAbout(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetParticipantsCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m.SetAdminsCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetKickedCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetBannedCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetReadInboxMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetReadOutboxMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUnreadCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m15 := &Photo{}
		err = m15.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetChatPhoto(m15)
		m16 := &PeerNotifySettings{}
		err = m16.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNotifySettings(m16)
		m17 := &ExportedChatInvite{}
		err = m17.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetExportedInvite(m17)
		c18 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c18 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 18, c18)
			return dBuf.err
		}
		l18 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v18 := make([]*BotInfo, l18)
		for i := int32(0); i < l18; i++ {
			v18[i] = &BotInfo{}
			err = v18[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetBotInfo(v18)

		if (flags & (1 << 4)) != 0 {
			m.SetMigratedFromChatId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m.SetMigratedFromMaxId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 5)) != 0 {
			m.SetPinnedMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 8)) != 0 {
			m22 := &StickerSet{}
			err = m22.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetStickerset(m22)
		}
		if (flags & (1 << 9)) != 0 {
			m.SetAvailableMinId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_ChannelFull97bee562:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCanViewParticipants(flags&(1<<3) != 0)
		m.SetCanSetUsername(flags&(1<<6) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAbout(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetParticipantsCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m.SetAdminsCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetKickedCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetReadInboxMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUnreadCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUnreadImportantCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m12 := &Photo{}
		err = m12.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetChatPhoto(m12)
		m13 := &PeerNotifySettings{}
		err = m13.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNotifySettings(m13)
		m14 := &ExportedChatInvite{}
		err = m14.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetExportedInvite(m14)
		c15 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c15 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 15, c15)
			return dBuf.err
		}
		l15 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v15 := make([]*BotInfo, l15)
		for i := int32(0); i < l15; i++ {
			v15[i] = &BotInfo{}
			err = v15[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetBotInfo(v15)

		if (flags & (1 << 4)) != 0 {
			m.SetMigratedFromChatId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m.SetMigratedFromMaxId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 5)) != 0 {
			m.SetPinnedMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_ChannelFull9882e516:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCanViewParticipants(flags&(1<<3) != 0)
		m.SetCanSetUsername(flags&(1<<6) != 0)
		m.SetCanSetStickers(flags&(1<<7) != 0)
		m.SetHiddenPrehistory(flags&(1<<10) != 0)
		m.SetCanViewStats(flags&(1<<12) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAbout(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetParticipantsCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m.SetAdminsCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetKickedCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetBannedCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 13)) != 0 {
			m.SetOnlineCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetReadInboxMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetReadOutboxMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUnreadCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m17 := &Photo{}
		err = m17.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetChatPhoto(m17)
		m18 := &PeerNotifySettings{}
		err = m18.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNotifySettings(m18)
		m19 := &ExportedChatInvite{}
		err = m19.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetExportedInvite(m19)
		c20 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c20 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 20, c20)
			return dBuf.err
		}
		l20 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v20 := make([]*BotInfo, l20)
		for i := int32(0); i < l20; i++ {
			v20[i] = &BotInfo{}
			err = v20[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetBotInfo(v20)

		if (flags & (1 << 4)) != 0 {
			m.SetMigratedFromChatId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m.SetMigratedFromMaxId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 5)) != 0 {
			m.SetPinnedMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 8)) != 0 {
			m24 := &StickerSet{}
			err = m24.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetStickerset(m24)
		}
		if (flags & (1 << 9)) != 0 {
			m.SetAvailableMinId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 11)) != 0 {
			m.SetFolderId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 13)) != 0 {
			m.SetLinkedChatId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_ChannelFullef3a6acd:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCanViewParticipants(flags&(1<<3) != 0)
		m.SetCanSetUsername(flags&(1<<6) != 0)
		m.SetCanSetStickers(flags&(1<<7) != 0)
		m.SetHiddenPrehistory(flags&(1<<10) != 0)
		m.SetCanSetLocation(flags&(1<<16) != 0)
		m.SetHasScheduled(flags&(1<<19) != 0)
		m.SetCanViewStats(flags&(1<<20) != 0)
		m.SetBlocked(flags&(1<<22) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAbout(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetParticipantsCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m.SetAdminsCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetKickedCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetBannedCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 13)) != 0 {
			m.SetOnlineCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetReadInboxMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetReadOutboxMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUnreadCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m20 := &Photo{}
		err = m20.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetChatPhoto(m20)
		m21 := &PeerNotifySettings{}
		err = m21.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNotifySettings(m21)
		m22 := &ExportedChatInvite{}
		err = m22.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetExportedInvite(m22)
		c23 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c23 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 23, c23)
			return dBuf.err
		}
		l23 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v23 := make([]*BotInfo, l23)
		for i := int32(0); i < l23; i++ {
			v23[i] = &BotInfo{}
			err = v23[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetBotInfo(v23)

		if (flags & (1 << 4)) != 0 {
			m.SetMigratedFromChatId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m.SetMigratedFromMaxId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 5)) != 0 {
			m.SetPinnedMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 8)) != 0 {
			m27 := &StickerSet{}
			err = m27.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetStickerset(m27)
		}
		if (flags & (1 << 9)) != 0 {
			m.SetAvailableMinId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 11)) != 0 {
			m.SetFolderId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 14)) != 0 {
			m.SetLinkedChatId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 15)) != 0 {
			m31 := &ChannelLocation{}
			err = m31.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetLocation(m31)
		}
		if (flags & (1 << 17)) != 0 {
			m.SetSlowmodeSeconds(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 18)) != 0 {
			m.SetSlowmodeNextSendDate(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 12)) != 0 {
			m.SetStatsDc(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 21)) != 0 {
			m36 := &InputGroupCall{}
			err = m36.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetCall(m36)
		}

	case Cmd_ChannelFullf0e6672a:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCanViewParticipants(flags&(1<<3) != 0)
		m.SetCanSetUsername(flags&(1<<6) != 0)
		m.SetCanSetStickers(flags&(1<<7) != 0)
		m.SetHiddenPrehistory(flags&(1<<10) != 0)
		m.SetCanSetLocation(flags&(1<<16) != 0)
		m.SetHasScheduled(flags&(1<<19) != 0)
		m.SetCanViewStats(flags&(1<<20) != 0)
		m.SetBlocked(flags&(1<<22) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAbout(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetParticipantsCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m.SetAdminsCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetKickedCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetBannedCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 13)) != 0 {
			m.SetOnlineCount(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetReadInboxMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetReadOutboxMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUnreadCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m20 := &Photo{}
		err = m20.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetChatPhoto(m20)
		m21 := &PeerNotifySettings{}
		err = m21.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNotifySettings(m21)
		m22 := &ExportedChatInvite{}
		err = m22.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetExportedInvite(m22)
		c23 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c23 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 23, c23)
			return dBuf.err
		}
		l23 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v23 := make([]*BotInfo, l23)
		for i := int32(0); i < l23; i++ {
			v23[i] = &BotInfo{}
			err = v23[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetBotInfo(v23)

		if (flags & (1 << 4)) != 0 {
			m.SetMigratedFromChatId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m.SetMigratedFromMaxId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 5)) != 0 {
			m.SetPinnedMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 8)) != 0 {
			m27 := &StickerSet{}
			err = m27.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetStickerset(m27)
		}
		if (flags & (1 << 9)) != 0 {
			m.SetAvailableMinId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 11)) != 0 {
			m.SetFolderId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 14)) != 0 {
			m.SetLinkedChatId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 15)) != 0 {
			m31 := &ChannelLocation{}
			err = m31.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetLocation(m31)
		}
		if (flags & (1 << 17)) != 0 {
			m.SetSlowmodeSeconds(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 18)) != 0 {
			m.SetSlowmodeNextSendDate(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 12)) != 0 {
			m.SetStatsDc(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ChannelFull Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChatInviteAlready) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChatInviteAlready:
		m1 := &Chat{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetChat(m1)

	default:
		log.Errorf("ChatInviteAlready Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChatInvite) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChatInvite:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetChannel(flags&(1<<0) != 0)
		m.SetBroadcast(flags&(1<<1) != 0)
		m.SetPublic(flags&(1<<2) != 0)
		m.SetMegagroup(flags&(1<<3) != 0)
		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m7 := &ChatPhoto{}
		err = m7.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPhotoDB74F55871(m7)
		m.SetParticipantsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 4)) != 0 {
			c9 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c9 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 9, c9)
				return dBuf.err
			}
			l9 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v9 := make([]*User, l9)
			for i := int32(0); i < l9; i++ {
				v9[i] = &User{}
				err = v9[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetParticipants(v9)

		}

	case Cmd_ChatInvite93e99b60:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetChannel(flags&(1<<0) != 0)
		m.SetBroadcast(flags&(1<<1) != 0)
		m.SetPublic(flags&(1<<2) != 0)
		m.SetMegagroup(flags&(1<<3) != 0)
		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_ChatInvitedfc2f58e:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetChannel(flags&(1<<0) != 0)
		m.SetBroadcast(flags&(1<<1) != 0)
		m.SetPublic(flags&(1<<2) != 0)
		m.SetMegagroup(flags&(1<<3) != 0)
		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m7 := &Photo{}
		err = m7.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPhotoDFC2F58E98(m7)
		m.SetParticipantsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 4)) != 0 {
			c9 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c9 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 9, c9)
				return dBuf.err
			}
			l9 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v9 := make([]*User, l9)
			for i := int32(0); i < l9; i++ {
				v9[i] = &User{}
				err = v9[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetParticipants(v9)

		}

	default:
		log.Errorf("ChatInvite Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChatInvitePeek) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChatInvitePeek:
		m1 := &Chat{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetChat(m1)
		m.SetExpires(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ChatInvitePeek Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChatOnlines) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChatOnlines:
		m.SetOnlines(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ChatOnlines Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChatParticipant) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChatParticipant:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetInviterId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ChatParticipant Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChatParticipantCreator) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChatParticipantCreator:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ChatParticipantCreator Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChatParticipantAdmin) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChatParticipantAdmin:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetInviterId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ChatParticipantAdmin Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChatParticipantsForbidden) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChatParticipantsForbidden:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetChatId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m3 := &ChatParticipant{}
			err = m3.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetSelfParticipant(m3)
		}

	default:
		log.Errorf("ChatParticipantsForbidden Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChatParticipants) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChatParticipants:
		m.SetChatId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*ChatParticipant, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &ChatParticipant{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetParticipants(v2)

		m.SetVersion(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ChatParticipants Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChatPhotoEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChatPhotoEmpty:
		_ = m

	default:
		log.Errorf("ChatPhotoEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChatPhoto) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChatPhoto:
		m1 := &FileLocation{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPhotoSmall(m1)
		m2 := &FileLocation{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPhotoBig(m2)

	case Cmd_ChatPhoto475cdbd5:
		m1 := &FileLocation{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPhotoSmall(m1)
		m2 := &FileLocation{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPhotoBig(m2)
		m.SetDcId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_ChatPhotod20b9f3c:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetHasVideo(flags&(1<<0) != 0)
		m3 := &FileLocation{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPhotoSmall(m3)
		m4 := &FileLocation{}
		err = m4.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPhotoBig(m4)
		m.SetDcId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ChatPhoto Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLClient_DHInnerData) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_Client_DHInnerData:
		m.SetNonce(dBuf.Bytes(16))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetServerNonce(dBuf.Bytes(16))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetRetryId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetGB(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("Client_DHInnerData Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLCodeSettings) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_CodeSettings:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAllowFlashcall(flags&(1<<0) != 0)
		m.SetCurrentNumber(flags&(1<<1) != 0)
		m.SetAppHashPersistent(flags&(1<<2) != 0)
		if (flags & (1 << 3)) != 0 {
			m.SetAppHash(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_CodeSettingsdebebe83:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAllowFlashcall(flags&(1<<0) != 0)
		m.SetCurrentNumber(flags&(1<<1) != 0)
		m.SetAllowAppHash(flags&(1<<4) != 0)

	default:
		log.Errorf("CodeSettings Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLConfig) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_Config:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPhonecallsEnabled(flags&(1<<1) != 0)
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetExpires(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m5 := &Bool{}
		err = m5.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetTestMode(m5)
		m.SetThisDc(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c7 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 7, c7)
			return dBuf.err
		}
		l7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v7 := make([]*DcOption, l7)
		for i := int32(0); i < l7; i++ {
			v7[i] = &DcOption{}
			err = v7[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetDcOptions(v7)

		m.SetChatSizeMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMegagroupSizeMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetForwardedCountMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOnlineUpdatePeriodMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOfflineBlurTimeoutMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOfflineIdleTimeoutMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOnlineCloudTimeoutMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNotifyCloudDelayMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNotifyDefaultDelayMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetChatBigSize(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPushChatPeriodMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPushChatLimit(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSavedGifsLimit(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetEditTimeLimit(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetRatingEDecay(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetStickersRecentLimit(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetStickersFavedLimit(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetTmpSessions(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetPinnedDialogsCountMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCallReceiveTimeoutMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCallRingTimeoutMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCallConnectTimeoutMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCallPacketTimeoutMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMeUrlPrefix(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 2)) != 0 {
			m.SetSuggestedLangCode(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetLangPackVersion(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		c34 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c34 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 34, c34)
			return dBuf.err
		}
		l34 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v34 := make([]*DisabledFeature, l34)
		for i := int32(0); i < l34; i++ {
			v34[i] = &DisabledFeature{}
			err = v34[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetDisabledFeatures(v34)

	case Cmd_Config317ceef4:
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetExpires(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m3 := &Bool{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetTestMode(m3)
		m.SetThisDc(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c5 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 5, c5)
			return dBuf.err
		}
		l5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v5 := make([]*DcOption, l5)
		for i := int32(0); i < l5; i++ {
			v5[i] = &DcOption{}
			err = v5[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetDcOptions(v5)

		m.SetChatSizeMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMegagroupSizeMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetForwardedCountMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOnlineUpdatePeriodMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOfflineBlurTimeoutMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOfflineIdleTimeoutMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOnlineCloudTimeoutMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNotifyCloudDelayMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNotifyDefaultDelayMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetChatBigSize(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPushChatPeriodMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPushChatLimit(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSavedGifsLimit(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetEditTimeLimit(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c20 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c20 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 20, c20)
			return dBuf.err
		}
		l20 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v20 := make([]*DisabledFeature, l20)
		for i := int32(0); i < l20; i++ {
			v20[i] = &DisabledFeature{}
			err = v20[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetDisabledFeatures(v20)

	case Cmd_Config3213dbba:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPhonecallsEnabled(flags&(1<<1) != 0)
		m.SetDefaultP2PContacts(flags&(1<<3) != 0)
		m.SetPreloadFeaturedStickers(flags&(1<<4) != 0)
		m.SetIgnorePhoneEntities(flags&(1<<5) != 0)
		m.SetRevokePmInbox(flags&(1<<6) != 0)
		m.SetBlockedMode(flags&(1<<8) != 0)
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetExpires(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m10 := &Bool{}
		err = m10.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetTestMode(m10)
		m.SetThisDc(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c12 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c12 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 12, c12)
			return dBuf.err
		}
		l12 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v12 := make([]*DcOption, l12)
		for i := int32(0); i < l12; i++ {
			v12[i] = &DcOption{}
			err = v12[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetDcOptions(v12)

		m.SetDcTxtDomainName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetChatSizeMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMegagroupSizeMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetForwardedCountMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOnlineUpdatePeriodMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOfflineBlurTimeoutMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOfflineIdleTimeoutMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOnlineCloudTimeoutMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNotifyCloudDelayMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNotifyDefaultDelayMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPushChatPeriodMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPushChatLimit(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSavedGifsLimit(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetEditTimeLimit(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetRevokeTimeLimit(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetRevokePmTimeLimit(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetRatingEDecay(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetStickersRecentLimit(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetStickersFavedLimit(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetChannelsReadMediaPeriod(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetTmpSessions(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetPinnedDialogsCountMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCallReceiveTimeoutMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCallRingTimeoutMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCallConnectTimeoutMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCallPacketTimeoutMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMeUrlPrefix(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 7)) != 0 {
			m.SetAutoupdateUrlPrefix(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 9)) != 0 {
			m.SetGifSearchUsername(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 10)) != 0 {
			m.SetVenueSearchUsername(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 11)) != 0 {
			m.SetImgSearchUsername(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 12)) != 0 {
			m.SetStaticMapsProvider(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetCaptionLengthMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMessageLengthMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetWebfileDcId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 2)) != 0 {
			m.SetSuggestedLangCode(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetLangPackVersion(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_Config330b4067:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPhonecallsEnabled(flags&(1<<1) != 0)
		m.SetDefaultP2PContacts(flags&(1<<3) != 0)
		m.SetPreloadFeaturedStickers(flags&(1<<4) != 0)
		m.SetIgnorePhoneEntities(flags&(1<<5) != 0)
		m.SetRevokePmInbox(flags&(1<<6) != 0)
		m.SetBlockedMode(flags&(1<<8) != 0)
		m.SetPfsEnabled(flags&(1<<13) != 0)
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetExpires(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m11 := &Bool{}
		err = m11.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetTestMode(m11)
		m.SetThisDc(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c13 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c13 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 13, c13)
			return dBuf.err
		}
		l13 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v13 := make([]*DcOption, l13)
		for i := int32(0); i < l13; i++ {
			v13[i] = &DcOption{}
			err = v13[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetDcOptions(v13)

		m.SetDcTxtDomainName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetChatSizeMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMegagroupSizeMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetForwardedCountMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOnlineUpdatePeriodMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOfflineBlurTimeoutMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOfflineIdleTimeoutMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOnlineCloudTimeoutMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNotifyCloudDelayMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNotifyDefaultDelayMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPushChatPeriodMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPushChatLimit(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSavedGifsLimit(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetEditTimeLimit(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetRevokeTimeLimit(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetRevokePmTimeLimit(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetRatingEDecay(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetStickersRecentLimit(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetStickersFavedLimit(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetChannelsReadMediaPeriod(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetTmpSessions(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetPinnedDialogsCountMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPinnedInfolderCountMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCallReceiveTimeoutMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCallRingTimeoutMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCallConnectTimeoutMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCallPacketTimeoutMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMeUrlPrefix(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 7)) != 0 {
			m.SetAutoupdateUrlPrefix(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 9)) != 0 {
			m.SetGifSearchUsername(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 10)) != 0 {
			m.SetVenueSearchUsername(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 11)) != 0 {
			m.SetImgSearchUsername(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 12)) != 0 {
			m.SetStaticMapsProvider(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetCaptionLengthMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMessageLengthMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetWebfileDcId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 2)) != 0 {
			m.SetSuggestedLangCode(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetLangPackVersion(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetBaseLangPackVersion(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_Confige6ca25f6:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPhonecallsEnabled(flags&(1<<1) != 0)
		m.SetDefaultP2PContacts(flags&(1<<3) != 0)
		m.SetPreloadFeaturedStickers(flags&(1<<4) != 0)
		m.SetIgnorePhoneEntities(flags&(1<<5) != 0)
		m.SetRevokePmInbox(flags&(1<<6) != 0)
		m.SetBlockedMode(flags&(1<<8) != 0)
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetExpires(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m10 := &Bool{}
		err = m10.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetTestMode(m10)
		m.SetThisDc(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c12 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c12 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 12, c12)
			return dBuf.err
		}
		l12 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v12 := make([]*DcOption, l12)
		for i := int32(0); i < l12; i++ {
			v12[i] = &DcOption{}
			err = v12[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetDcOptions(v12)

		m.SetDcTxtDomainName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetChatSizeMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMegagroupSizeMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetForwardedCountMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOnlineUpdatePeriodMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOfflineBlurTimeoutMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOfflineIdleTimeoutMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOnlineCloudTimeoutMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNotifyCloudDelayMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNotifyDefaultDelayMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPushChatPeriodMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPushChatLimit(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSavedGifsLimit(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetEditTimeLimit(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetRevokeTimeLimit(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetRevokePmTimeLimit(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetRatingEDecay(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetStickersRecentLimit(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetStickersFavedLimit(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetChannelsReadMediaPeriod(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetTmpSessions(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetPinnedDialogsCountMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCallReceiveTimeoutMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCallRingTimeoutMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCallConnectTimeoutMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCallPacketTimeoutMs(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMeUrlPrefix(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 7)) != 0 {
			m.SetAutoupdateUrlPrefix(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 9)) != 0 {
			m.SetGifSearchUsername(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 10)) != 0 {
			m.SetVenueSearchUsername(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 11)) != 0 {
			m.SetImgSearchUsername(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 12)) != 0 {
			m.SetStaticMapsProvider(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetCaptionLengthMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMessageLengthMax(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetWebfileDcId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 2)) != 0 {
			m.SetSuggestedLangCode(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetLangPackVersion(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetBaseLangPackVersion(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("Config Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLContact) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_Contact:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &Bool{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetMutual(m2)

	default:
		log.Errorf("Contact Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLContactBlocked) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ContactBlocked:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ContactBlocked Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLContactLinkUnknown) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ContactLinkUnknown:
		_ = m

	default:
		log.Errorf("ContactLinkUnknown Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLContactLinkNone) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ContactLinkNone:
		_ = m

	default:
		log.Errorf("ContactLinkNone Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLContactLinkHasPhone) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ContactLinkHasPhone:
		_ = m

	default:
		log.Errorf("ContactLinkHasPhone Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLContactLinkContact) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ContactLinkContact:
		_ = m

	default:
		log.Errorf("ContactLinkContact Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLContactStatus) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ContactStatus:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &UserStatus{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetStatus(m2)

	default:
		log.Errorf("ContactStatus Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLContactsBlocked) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ContactsBlocked:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*ContactBlocked, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &ContactBlocked{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetBlocked1C138D1571(v1)

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*User, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &User{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v2)

	case Cmd_ContactsBlockedade1591:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*PeerBlocked, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &PeerBlocked{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetBlockedADE1591119(v1)

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*Chat, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &Chat{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v2)

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*User, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &User{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v3)

	default:
		log.Errorf("ContactsBlocked Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLContactsBlockedSlice) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ContactsBlockedSlice:
		m.SetCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*ContactBlocked, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &ContactBlocked{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetBlocked1C138D1571(v2)

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*User, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &User{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v3)

	case Cmd_ContactsBlockedSlicee1664194:
		m.SetCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*PeerBlocked, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &PeerBlocked{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetBlockedADE1591119(v2)

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*Chat, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &Chat{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v3)

		c4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c4 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 4, c4)
			return dBuf.err
		}
		l4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v4 := make([]*User, l4)
		for i := int32(0); i < l4; i++ {
			v4[i] = &User{}
			err = v4[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v4)

	default:
		log.Errorf("ContactsBlockedSlice Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLContactsContactsNotModified) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ContactsContactsNotModified:
		_ = m

	default:
		log.Errorf("ContactsContactsNotModified Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLContactsContacts) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ContactsContacts:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*Contact, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &Contact{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetContacts(v1)

		m.SetSavedCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*User, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &User{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v3)

	case Cmd_ContactsContacts6f8b8cb2:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*Contact, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &Contact{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetContacts(v1)

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*User, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &User{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v2)

	default:
		log.Errorf("ContactsContacts Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLContactsFound) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ContactsFound:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*Peer, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &Peer{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetResults(v1)

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*Chat, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &Chat{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v2)

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*User, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &User{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v3)

	case Cmd_ContactsFoundb3134d9d:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*Peer, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &Peer{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetMyResults(v1)

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*Peer, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &Peer{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetResults(v2)

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*Chat, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &Chat{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v3)

		c4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c4 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 4, c4)
			return dBuf.err
		}
		l4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v4 := make([]*User, l4)
		for i := int32(0); i < l4; i++ {
			v4[i] = &User{}
			err = v4[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v4)

	default:
		log.Errorf("ContactsFound Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLContactsImportedContacts) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ContactsImportedContacts:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*ImportedContact, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &ImportedContact{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetImported(v1)

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*PopularContact, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &PopularContact{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetPopularInvites(v2)

		m.SetRetryContacts(dBuf.VectorLong())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c4 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 4, c4)
			return dBuf.err
		}
		l4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v4 := make([]*User, l4)
		for i := int32(0); i < l4; i++ {
			v4[i] = &User{}
			err = v4[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v4)

	case Cmd_ContactsImportedContactsad524315:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*ImportedContact, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &ImportedContact{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetImported(v1)

		m.SetRetryContacts(dBuf.VectorLong())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*User, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &User{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v3)

	default:
		log.Errorf("ContactsImportedContacts Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLContactsLink) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ContactsLink:
		m1 := &ContactLink{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetMyLink(m1)
		m2 := &ContactLink{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetForeignLink(m2)
		m3 := &User{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetUser(m3)

	default:
		log.Errorf("ContactsLink Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLContactsResolvedPeer) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ContactsResolvedPeer:
		m1 := &Peer{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer(m1)
		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*Chat, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &Chat{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v2)

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*User, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &User{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v3)

	default:
		log.Errorf("ContactsResolvedPeer Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLContactsTopPeersNotModified) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ContactsTopPeersNotModified:
		_ = m

	default:
		log.Errorf("ContactsTopPeersNotModified Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLContactsTopPeers) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ContactsTopPeers:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*TopPeerCategoryPeers, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &TopPeerCategoryPeers{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetCategories(v1)

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*Chat, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &Chat{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v2)

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*User, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &User{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v3)

	default:
		log.Errorf("ContactsTopPeers Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLContactsTopPeersDisabled) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ContactsTopPeersDisabled:
		_ = m

	default:
		log.Errorf("ContactsTopPeersDisabled Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLDataJSON) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_DataJSON:
		m.SetData(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("DataJSON Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLDcOption) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_DcOption:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetIpv6(flags&(1<<0) != 0)
		m.SetMediaOnly(flags&(1<<1) != 0)
		m.SetTcpoOnly(flags&(1<<2) != 0)
		m.SetCdn(flags&(1<<3) != 0)
		m.SetStatic(flags&(1<<4) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetIpAddress(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPort(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_DcOption18b7a10d:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetIpv6(flags&(1<<0) != 0)
		m.SetMediaOnly(flags&(1<<1) != 0)
		m.SetTcpoOnly(flags&(1<<2) != 0)
		m.SetCdn(flags&(1<<3) != 0)
		m.SetStatic(flags&(1<<4) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetIpAddress(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPort(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 10)) != 0 {
			m.SetSecret(dBuf.StringBytes())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}

		}

	default:
		log.Errorf("DcOption Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLDestroyAuthKeyOk) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_DestroyAuthKeyOk:
		_ = m

	default:
		log.Errorf("DestroyAuthKeyOk Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLDestroyAuthKeyNone) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_DestroyAuthKeyNone:
		_ = m

	default:
		log.Errorf("DestroyAuthKeyNone Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLDestroyAuthKeyFail) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_DestroyAuthKeyFail:
		_ = m

	default:
		log.Errorf("DestroyAuthKeyFail Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLDestroySessionOk) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_DestroySessionOk:
		m.SetSessionId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("DestroySessionOk Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLDestroySessionNone) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_DestroySessionNone:
		m.SetSessionId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("DestroySessionNone Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLDialog) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_Dialog:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPinned(flags&(1<<2) != 0)
		m3 := &Peer{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer(m3)
		m.SetTopMessage(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetReadInboxMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetReadOutboxMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUnreadCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUnreadMentionsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m9 := &PeerNotifySettings{}
		err = m9.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNotifySettings(m9)
		if (flags & (1 << 0)) != 0 {
			m.SetPts(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m11 := &DraftMessage{}
			err = m11.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetDraft(m11)
		}

	case Cmd_Dialog2c171f72:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPinned(flags&(1<<2) != 0)
		m.SetUnreadMark(flags&(1<<3) != 0)
		m4 := &Peer{}
		err = m4.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer(m4)
		m.SetTopMessage(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetReadInboxMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetReadOutboxMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUnreadCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUnreadMentionsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m10 := &PeerNotifySettings{}
		err = m10.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNotifySettings(m10)
		if (flags & (1 << 0)) != 0 {
			m.SetPts(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m12 := &DraftMessage{}
			err = m12.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetDraft(m12)
		}
		if (flags & (1 << 4)) != 0 {
			m.SetFolderId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_Dialogc1dd804a:
		m1 := &Peer{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer(m1)
		m.SetTopMessage(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetReadInboxMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUnreadCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m5 := &PeerNotifySettings{}
		err = m5.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNotifySettings(m5)

	default:
		log.Errorf("Dialog Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLDialogChannel) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_DialogChannel:
		m1 := &Peer{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer(m1)
		m.SetTopMessage(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTopImportantMessage(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetReadInboxMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUnreadCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUnreadImportantCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m7 := &PeerNotifySettings{}
		err = m7.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNotifySettings(m7)
		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("DialogChannel Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLDialogFolder) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_DialogFolder:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPinned(flags&(1<<2) != 0)
		m3 := &Folder{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetFolder(m3)
		m4 := &Peer{}
		err = m4.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer(m4)
		m.SetTopMessage(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUnreadMutedPeersCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUnreadUnmutedPeersCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUnreadMutedMessagesCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUnreadUnmutedMessagesCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("DialogFolder Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLDialogFilter) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_DialogFilter:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetContacts(flags&(1<<0) != 0)
		m.SetNonContacts(flags&(1<<1) != 0)
		m.SetGroups(flags&(1<<2) != 0)
		m.SetBroadcasts(flags&(1<<3) != 0)
		m.SetBots(flags&(1<<4) != 0)
		m.SetExcludeMuted(flags&(1<<11) != 0)
		m.SetExcludeRead(flags&(1<<12) != 0)
		m.SetExcludeArchived(flags&(1<<13) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 25)) != 0 {
			m.SetEmoticon(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		c13 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c13 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 13, c13)
			return dBuf.err
		}
		l13 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v13 := make([]*InputPeer, l13)
		for i := int32(0); i < l13; i++ {
			v13[i] = &InputPeer{}
			err = v13[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetPinnedPeers(v13)

		c14 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c14 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 14, c14)
			return dBuf.err
		}
		l14 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v14 := make([]*InputPeer, l14)
		for i := int32(0); i < l14; i++ {
			v14[i] = &InputPeer{}
			err = v14[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetIncludePeers(v14)

		c15 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c15 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 15, c15)
			return dBuf.err
		}
		l15 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v15 := make([]*InputPeer, l15)
		for i := int32(0); i < l15; i++ {
			v15[i] = &InputPeer{}
			err = v15[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetExcludePeers(v15)

	default:
		log.Errorf("DialogFilter Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLDialogFilterSuggested) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_DialogFilterSuggested:
		m1 := &DialogFilter{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetFilter(m1)
		m.SetDescription(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("DialogFilterSuggested Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLDialogPeer) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_DialogPeer:
		m1 := &Peer{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer(m1)

	default:
		log.Errorf("DialogPeer Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLDialogPeerFolder) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_DialogPeerFolder:
		m.SetFolderId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("DialogPeerFolder Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLDisabledFeature) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_DisabledFeature:
		m.SetFeature(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDescription(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("DisabledFeature Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLDocumentEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_DocumentEmpty:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("DocumentEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLDocument) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_Document:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMimeType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSize_(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m6 := &PhotoSize{}
		err = m6.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetThumb(m6)
		m.SetDcId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVersion(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c9 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c9 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 9, c9)
			return dBuf.err
		}
		l9 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v9 := make([]*DocumentAttribute, l9)
		for i := int32(0); i < l9; i++ {
			v9[i] = &DocumentAttribute{}
			err = v9[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetAttributes(v9)

	case Cmd_Document1e87342b:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFileReference(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMimeType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSize_(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			c8 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c8 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 8, c8)
				return dBuf.err
			}
			l8 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v8 := make([]*PhotoSize, l8)
			for i := int32(0); i < l8; i++ {
				v8[i] = &PhotoSize{}
				err = v8[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetThumbs(v8)

		}
		if (flags & (1 << 1)) != 0 {
			c9 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c9 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 9, c9)
				return dBuf.err
			}
			l9 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v9 := make([]*VideoSize, l9)
			for i := int32(0); i < l9; i++ {
				v9[i] = &VideoSize{}
				err = v9[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetVideoThumbs(v9)

		}
		m.SetDcId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c11 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c11 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 11, c11)
			return dBuf.err
		}
		l11 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v11 := make([]*DocumentAttribute, l11)
		for i := int32(0); i < l11; i++ {
			v11[i] = &DocumentAttribute{}
			err = v11[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetAttributes(v11)

	case Cmd_Document59534e4c:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFileReference(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMimeType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSize_(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m7 := &PhotoSize{}
		err = m7.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetThumb(m7)
		m.SetDcId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c9 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c9 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 9, c9)
			return dBuf.err
		}
		l9 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v9 := make([]*DocumentAttribute, l9)
		for i := int32(0); i < l9; i++ {
			v9[i] = &DocumentAttribute{}
			err = v9[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetAttributes(v9)

	case Cmd_Document9ba29cc1:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFileReference(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMimeType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSize_(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			c8 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c8 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 8, c8)
				return dBuf.err
			}
			l8 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v8 := make([]*PhotoSize, l8)
			for i := int32(0); i < l8; i++ {
				v8[i] = &PhotoSize{}
				err = v8[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetThumbs(v8)

		}
		m.SetDcId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c10 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c10 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 10, c10)
			return dBuf.err
		}
		l10 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v10 := make([]*DocumentAttribute, l10)
		for i := int32(0); i < l10; i++ {
			v10[i] = &DocumentAttribute{}
			err = v10[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetAttributes(v10)

	case Cmd_Documentf9a39f4f:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMimeType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSize_(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m6 := &PhotoSize{}
		err = m6.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetThumb(m6)
		m.SetDcId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c8 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c8 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 8, c8)
			return dBuf.err
		}
		l8 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v8 := make([]*DocumentAttribute, l8)
		for i := int32(0); i < l8; i++ {
			v8[i] = &DocumentAttribute{}
			err = v8[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetAttributes(v8)

	default:
		log.Errorf("Document Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLDocumentAttributeImageSize) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_DocumentAttributeImageSize:
		m.SetW(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetH(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("DocumentAttributeImageSize Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLDocumentAttributeAnimated) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_DocumentAttributeAnimated:
		_ = m

	default:
		log.Errorf("DocumentAttributeAnimated Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLDocumentAttributeSticker) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_DocumentAttributeSticker:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMask(flags&(1<<1) != 0)
		m.SetAlt(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m4 := &InputStickerSet{}
		err = m4.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetStickerset(m4)
		if (flags & (1 << 0)) != 0 {
			m5 := &MaskCoords{}
			err = m5.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetMaskCoords(m5)
		}

	case Cmd_DocumentAttributeSticker3a556302:
		m.SetAlt(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &InputStickerSet{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetStickerset(m2)

	default:
		log.Errorf("DocumentAttributeSticker Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLDocumentAttributeVideo) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_DocumentAttributeVideo:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetRoundMessage(flags&(1<<0) != 0)
		m.SetDuration(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetW(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetH(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_DocumentAttributeVideo5910cccb:
		m.SetDuration(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetW(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetH(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("DocumentAttributeVideo Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLDocumentAttributeAudio) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_DocumentAttributeAudio:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVoice(flags&(1<<10) != 0)
		m.SetDuration(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetTitle(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m.SetPerformer(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetWaveform(dBuf.StringBytes())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}

		}

	default:
		log.Errorf("DocumentAttributeAudio Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLDocumentAttributeFilename) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_DocumentAttributeFilename:
		m.SetFileName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("DocumentAttributeFilename Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLDocumentAttributeHasStickers) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_DocumentAttributeHasStickers:
		_ = m

	default:
		log.Errorf("DocumentAttributeHasStickers Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLDraftMessageEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_DraftMessageEmpty:
		_ = m

	case Cmd_DraftMessageEmpty1b0c841a:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetDate(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("DraftMessageEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLDraftMessage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_DraftMessage:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNoWebpage(flags&(1<<1) != 0)
		if (flags & (1 << 0)) != 0 {
			m.SetReplyToMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetMessage(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 3)) != 0 {
			c5 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c5 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 5, c5)
				return dBuf.err
			}
			l5 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v5 := make([]*MessageEntity, l5)
			for i := int32(0); i < l5; i++ {
				v5[i] = &MessageEntity{}
				err = v5[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetEntities(v5)

		}
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("DraftMessage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLEmojiKeyword) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_EmojiKeyword:
		m.SetKeyword(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetEmoticons(dBuf.VectorString())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("EmojiKeyword Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLEmojiKeywordDeleted) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_EmojiKeywordDeleted:
		m.SetKeyword(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetEmoticons(dBuf.VectorString())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("EmojiKeywordDeleted Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLEmojiKeywordsDifference) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_EmojiKeywordsDifference:
		m.SetLangCode(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFromVersion(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVersion(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c4 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 4, c4)
			return dBuf.err
		}
		l4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v4 := make([]*EmojiKeyword, l4)
		for i := int32(0); i < l4; i++ {
			v4[i] = &EmojiKeyword{}
			err = v4[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetKeywords(v4)

	default:
		log.Errorf("EmojiKeywordsDifference Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLEmojiLanguage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_EmojiLanguage:
		m.SetLangCode(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("EmojiLanguage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLEmojiURL) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_EmojiURL:
		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("EmojiURL Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLEncryptedChatEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_EncryptedChatEmpty:
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("EncryptedChatEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLEncryptedChatWaiting) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_EncryptedChatWaiting:
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAdminId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetParticipantId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("EncryptedChatWaiting Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLEncryptedChatRequested) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_EncryptedChatRequested:
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAdminId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetParticipantId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetGA(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_EncryptedChatRequested62718a82:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetFolderId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAdminId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetParticipantId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetGA(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("EncryptedChatRequested Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLEncryptedChat) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_EncryptedChat:
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAdminId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetParticipantId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetGAOrB(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetKeyFingerprint(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("EncryptedChat Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLEncryptedChatDiscarded) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_EncryptedChatDiscarded:
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("EncryptedChatDiscarded Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLEncryptedFileEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_EncryptedFileEmpty:
		_ = m

	default:
		log.Errorf("EncryptedFileEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLEncryptedFile) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_EncryptedFile:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSize_(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDcId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetKeyFingerprint(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("EncryptedFile Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLEncryptedMessage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_EncryptedMessage:
		m.SetRandomId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetChatId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetBytes(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m5 := &EncryptedFile{}
		err = m5.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetFile(m5)

	default:
		log.Errorf("EncryptedMessage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLEncryptedMessageService) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_EncryptedMessageService:
		m.SetRandomId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetChatId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetBytes(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("EncryptedMessageService Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLError) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_Error:
		m.SetCode(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("Error Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChatInviteEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChatInviteEmpty:
		_ = m

	default:
		log.Errorf("ChatInviteEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLChatInviteExported) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ChatInviteExported:
		m.SetLink(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ChatInviteExported Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLExportedMessageLink) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ExportedMessageLink:
		m.SetLink(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_ExportedMessageLink5dab1af4:
		m.SetLink(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetHtml(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ExportedMessageLink Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLFileHash) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_FileHash:
		m.SetOffset(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLimit(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetHash(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("FileHash Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLFileLocationUnavailable) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_FileLocationUnavailable:
		m.SetVolumeId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLocalId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSecret(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("FileLocationUnavailable Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLFileLocation) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_FileLocation:
		m.SetDcId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVolumeId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLocalId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSecret(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_FileLocation91d11eb:
		m.SetDcId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVolumeId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLocalId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSecret(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFileReference(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("FileLocation Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLFileLocationToBeDeprecated) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_FileLocationToBeDeprecated:
		m.SetVolumeId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLocalId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("FileLocationToBeDeprecated Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLFolder) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_Folder:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAutofillNewBroadcasts(flags&(1<<0) != 0)
		m.SetAutofillPublicGroups(flags&(1<<1) != 0)
		m.SetAutofillNewCorrespondents(flags&(1<<2) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 3)) != 0 {
			m7 := &ChatPhoto{}
			err = m7.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetPhoto(m7)
		}

	default:
		log.Errorf("Folder Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLFolderPeer) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_FolderPeer:
		m1 := &Peer{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer(m1)
		m.SetFolderId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("FolderPeer Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLFoundGif) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_FoundGif:
		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetThumbUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetContentUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetContentType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetW(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetH(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("FoundGif Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLFoundGifCached) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_FoundGifCached:
		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &Photo{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPhoto(m2)
		m3 := &Document{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetDocument(m3)

	default:
		log.Errorf("FoundGifCached Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLFutureSalt) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_FutureSalt:
		m.SetValidSince(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetValidUntil(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSalt(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("FutureSalt Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLFutureSalts) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_FutureSalts:
		m.SetReqMsgId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNow(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*TLFutureSalt, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &TLFutureSalt{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetSalts(v3)

	default:
		log.Errorf("FutureSalts Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLGame) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_Game:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetShortName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDescription(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m7 := &Photo{}
		err = m7.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPhoto(m7)
		if (flags & (1 << 0)) != 0 {
			m8 := &Document{}
			err = m8.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetDocument(m8)
		}

	default:
		log.Errorf("Game Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLGeoPointEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_GeoPointEmpty:
		_ = m

	default:
		log.Errorf("GeoPointEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLGeoPoint) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_GeoPoint:
		m.SetLong(dBuf.Double())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLat(dBuf.Double())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_GeoPoint296f104:
		m.SetLong(dBuf.Double())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLat(dBuf.Double())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_GeoPointb2a2f663:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLong(dBuf.Double())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLat(dBuf.Double())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetAccuracyRadius(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("GeoPoint Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLGlobalPrivacySettings) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_GlobalPrivacySettings:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m2 := &Bool{}
			err = m2.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetArchiveAndMuteNewNoncontactPeers(m2)
		}

	default:
		log.Errorf("GlobalPrivacySettings Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLGroupCallDiscarded) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_GroupCallDiscarded:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDuration(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("GroupCallDiscarded Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLGroupCall) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_GroupCall:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetJoinMuted(flags&(1<<1) != 0)
		m.SetCanChangeJoinMuted(flags&(1<<2) != 0)
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetParticipantsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m7 := &DataJSON{}
			err = m7.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetParams(m7)
		}
		m.SetVersion(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("GroupCall Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLGroupCallParticipant) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_GroupCallParticipant:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMuted(flags&(1<<0) != 0)
		m.SetLeft(flags&(1<<1) != 0)
		m.SetCanSelfUnmute(flags&(1<<2) != 0)
		m.SetJustJoined(flags&(1<<4) != 0)
		m.SetVersioned(flags&(1<<5) != 0)
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 3)) != 0 {
			m.SetActiveDate(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetSource(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("GroupCallParticipant Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLHelpAppChangelogEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_HelpAppChangelogEmpty:
		_ = m

	default:
		log.Errorf("HelpAppChangelogEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLHelpAppChangelog) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_HelpAppChangelog:
		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("HelpAppChangelog Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLHelpAppUpdate) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_HelpAppUpdate:
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &Bool{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCritical(m2)
		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_HelpAppUpdate1da7158f:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPopup(flags&(1<<0) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVersion(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c6 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 6, c6)
			return dBuf.err
		}
		l6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v6 := make([]*MessageEntity, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = &MessageEntity{}
			err = v6[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetEntities(v6)

		if (flags & (1 << 1)) != 0 {
			m7 := &Document{}
			err = m7.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetDocument(m7)
		}
		if (flags & (1 << 2)) != 0 {
			m.SetUrl(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("HelpAppUpdate Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLHelpNoAppUpdate) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_HelpNoAppUpdate:
		_ = m

	default:
		log.Errorf("HelpNoAppUpdate Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLHelpConfigSimple) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_HelpConfigSimple:
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetExpires(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDcId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c4 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 4, c4)
			return dBuf.err
		}
		l4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v4 := make([]*IpPort, l4)
		for i := int32(0); i < l4; i++ {
			v4[i] = &IpPort{}
			err = v4[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetIpPortList(v4)

	case Cmd_HelpConfigSimple5a592a6c:
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetExpires(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*AccessPointRule, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &AccessPointRule{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetRules(v3)

	default:
		log.Errorf("HelpConfigSimple Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLHelpCountriesListNotModified) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_HelpCountriesListNotModified:
		_ = m

	default:
		log.Errorf("HelpCountriesListNotModified Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLHelpCountriesList) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_HelpCountriesList:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*Help_Country, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &Help_Country{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetCountries(v1)

		m.SetHash(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("HelpCountriesList Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLHelpCountry) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_HelpCountry:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetHidden(flags&(1<<0) != 0)
		m.SetIso2(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDefaultName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			m.SetName(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		c6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c6 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 6, c6)
			return dBuf.err
		}
		l6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v6 := make([]*Help_CountryCode, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = &Help_CountryCode{}
			err = v6[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetCountryCodes(v6)

	default:
		log.Errorf("HelpCountry Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLHelpCountryCode) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_HelpCountryCode:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCountryCode(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetPrefixes(dBuf.VectorString())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}

		}
		if (flags & (1 << 1)) != 0 {
			m.SetPatterns(dBuf.VectorString())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}

		}

	default:
		log.Errorf("HelpCountryCode Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLHelpDeepLinkInfoEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_HelpDeepLinkInfoEmpty:
		_ = m

	default:
		log.Errorf("HelpDeepLinkInfoEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLHelpDeepLinkInfo) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_HelpDeepLinkInfo:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUpdateApp(flags&(1<<0) != 0)
		m.SetMessage(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			c4 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c4 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 4, c4)
				return dBuf.err
			}
			l4 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v4 := make([]*MessageEntity, l4)
			for i := int32(0); i < l4; i++ {
				v4[i] = &MessageEntity{}
				err = v4[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetEntities(v4)

		}

	default:
		log.Errorf("HelpDeepLinkInfo Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLHelpInviteText) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_HelpInviteText:
		m.SetMessage(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("HelpInviteText Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLHelpPassportConfigNotModified) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_HelpPassportConfigNotModified:
		_ = m

	default:
		log.Errorf("HelpPassportConfigNotModified Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLHelpPassportConfig) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_HelpPassportConfig:
		m.SetHash(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &DataJSON{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCountriesLangs(m2)

	default:
		log.Errorf("HelpPassportConfig Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLHelpPromoDataEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_HelpPromoDataEmpty:
		m.SetExpires(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("HelpPromoDataEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLHelpPromoData) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_HelpPromoData:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetProxy(flags&(1<<0) != 0)
		m.SetPsa(flags&(1<<1) != 0)
		m.SetExpires(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m5 := &Peer{}
		err = m5.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer(m5)
		c6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c6 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 6, c6)
			return dBuf.err
		}
		l6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v6 := make([]*Chat, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = &Chat{}
			err = v6[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v6)

		c7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c7 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 7, c7)
			return dBuf.err
		}
		l7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v7 := make([]*User, l7)
		for i := int32(0); i < l7; i++ {
			v7[i] = &User{}
			err = v7[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v7)

		if (flags & (1 << 2)) != 0 {
			m.SetPsaMessage(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_HelpPromoData8c39793f:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetProxy(flags&(1<<0) != 0)
		m.SetExpires(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m4 := &Peer{}
		err = m4.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer(m4)
		c5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c5 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 5, c5)
			return dBuf.err
		}
		l5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v5 := make([]*Chat, l5)
		for i := int32(0); i < l5; i++ {
			v5[i] = &Chat{}
			err = v5[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v5)

		c6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c6 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 6, c6)
			return dBuf.err
		}
		l6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v6 := make([]*User, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = &User{}
			err = v6[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v6)

		if (flags & (1 << 1)) != 0 {
			m.SetPsaType(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetPsaMessage(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("HelpPromoData Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLHelpProxyDataEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_HelpProxyDataEmpty:
		m.SetExpires(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("HelpProxyDataEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLHelpProxyDataPromo) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_HelpProxyDataPromo:
		m.SetExpires(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &Peer{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer(m2)
		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*Chat, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &Chat{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v3)

		c4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c4 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 4, c4)
			return dBuf.err
		}
		l4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v4 := make([]*User, l4)
		for i := int32(0); i < l4; i++ {
			v4[i] = &User{}
			err = v4[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v4)

	default:
		log.Errorf("HelpProxyDataPromo Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLHelpRecentMeUrls) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_HelpRecentMeUrls:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*RecentMeUrl, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &RecentMeUrl{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUrls(v1)

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*Chat, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &Chat{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v2)

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*User, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &User{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v3)

	default:
		log.Errorf("HelpRecentMeUrls Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLHelpSupport) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_HelpSupport:
		m.SetPhoneNumber(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &User{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetUser(m2)

	default:
		log.Errorf("HelpSupport Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLHelpSupportName) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_HelpSupportName:
		m.SetName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("HelpSupportName Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLHelpTermsOfService) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_HelpTermsOfService:
		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_HelpTermsOfService780a0310:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPopup(flags&(1<<0) != 0)
		m3 := &DataJSON{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetId(m3)
		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c5 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 5, c5)
			return dBuf.err
		}
		l5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v5 := make([]*MessageEntity, l5)
		for i := int32(0); i < l5; i++ {
			v5[i] = &MessageEntity{}
			err = v5[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetEntities(v5)

		if (flags & (1 << 1)) != 0 {
			m.SetMinAgeConfirm(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("HelpTermsOfService Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLHelpTermsOfServiceUpdateEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_HelpTermsOfServiceUpdateEmpty:
		m.SetExpires(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("HelpTermsOfServiceUpdateEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLHelpTermsOfServiceUpdate) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_HelpTermsOfServiceUpdate:
		m.SetExpires(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &Help_TermsOfService{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetTermsOfService(m2)

	default:
		log.Errorf("HelpTermsOfServiceUpdate Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLHelpUserInfoEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_HelpUserInfoEmpty:
		_ = m

	default:
		log.Errorf("HelpUserInfoEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLHelpUserInfo) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_HelpUserInfo:
		m.SetMessage(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*MessageEntity, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &MessageEntity{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetEntities(v2)

		m.SetAuthor(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("HelpUserInfo Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLHighScore) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_HighScore:
		m.SetPos(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetScore(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("HighScore Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLHttpWait) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_HttpWait:
		m.SetMaxDelay(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetWaitAfter(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMaxWait(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("HttpWait Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLImportedContact) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ImportedContact:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetClientId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ImportedContact Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInlineBotSwitchPM) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InlineBotSwitchPM:
		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetStartParam(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InlineBotSwitchPM Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInlineQueryPeerTypeSameBotPM) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InlineQueryPeerTypeSameBotPM:
		_ = m

	default:
		log.Errorf("InlineQueryPeerTypeSameBotPM Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInlineQueryPeerTypePM) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InlineQueryPeerTypePM:
		_ = m

	default:
		log.Errorf("InlineQueryPeerTypePM Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInlineQueryPeerTypeChat) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InlineQueryPeerTypeChat:
		_ = m

	default:
		log.Errorf("InlineQueryPeerTypeChat Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInlineQueryPeerTypeMegagroup) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InlineQueryPeerTypeMegagroup:
		_ = m

	default:
		log.Errorf("InlineQueryPeerTypeMegagroup Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInlineQueryPeerTypeBroadcast) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InlineQueryPeerTypeBroadcast:
		_ = m

	default:
		log.Errorf("InlineQueryPeerTypeBroadcast Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputAppEvent) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputAppEvent:
		m.SetTime(dBuf.Double())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPeer(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetData770656A871(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_InputAppEvent1d1b1245:
		m.SetTime(dBuf.Double())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPeer(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m4 := &JSONValue{}
		err = m4.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetData1D1B124590(m4)

	default:
		log.Errorf("InputAppEvent Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputBotInlineMessageMediaAuto) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputBotInlineMessageMediaAuto:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCaption(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 2)) != 0 {
			m3 := &ReplyMarkup{}
			err = m3.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplyMarkup(m3)
		}

	case Cmd_InputBotInlineMessageMediaAuto3380c786:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMessage(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			c3 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c3 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
				return dBuf.err
			}
			l3 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v3 := make([]*MessageEntity, l3)
			for i := int32(0); i < l3; i++ {
				v3[i] = &MessageEntity{}
				err = v3[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetEntities(v3)

		}
		if (flags & (1 << 2)) != 0 {
			m4 := &ReplyMarkup{}
			err = m4.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplyMarkup(m4)
		}

	default:
		log.Errorf("InputBotInlineMessageMediaAuto Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputBotInlineMessageText) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputBotInlineMessageText:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNoWebpage(flags&(1<<0) != 0)
		m.SetMessage(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			c4 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c4 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 4, c4)
				return dBuf.err
			}
			l4 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v4 := make([]*MessageEntity, l4)
			for i := int32(0); i < l4; i++ {
				v4[i] = &MessageEntity{}
				err = v4[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetEntities(v4)

		}
		if (flags & (1 << 2)) != 0 {
			m5 := &ReplyMarkup{}
			err = m5.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplyMarkup(m5)
		}

	default:
		log.Errorf("InputBotInlineMessageText Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputBotInlineMessageMediaGeo) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputBotInlineMessageMediaGeo:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &InputGeoPoint{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetGeoPoint(m2)
		if (flags & (1 << 2)) != 0 {
			m3 := &ReplyMarkup{}
			err = m3.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplyMarkup(m3)
		}

	case Cmd_InputBotInlineMessageMediaGeo96929a85:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &InputGeoPoint{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetGeoPoint(m2)
		if (flags & (1 << 0)) != 0 {
			m.SetHeading(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m.SetPeriod(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetProximityNotificationRadius(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m6 := &ReplyMarkup{}
			err = m6.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplyMarkup(m6)
		}

	case Cmd_InputBotInlineMessageMediaGeoc1b15d65:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &InputGeoPoint{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetGeoPoint(m2)
		m.SetPeriod(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 2)) != 0 {
			m4 := &ReplyMarkup{}
			err = m4.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplyMarkup(m4)
		}

	default:
		log.Errorf("InputBotInlineMessageMediaGeo Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputBotInlineMessageMediaVenue) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputBotInlineMessageMediaVenue:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &InputGeoPoint{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetGeoPoint(m2)
		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAddress(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetProvider(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVenueId(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 2)) != 0 {
			m7 := &ReplyMarkup{}
			err = m7.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplyMarkup(m7)
		}

	case Cmd_InputBotInlineMessageMediaVenue417bbf11:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &InputGeoPoint{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetGeoPoint(m2)
		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAddress(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetProvider(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVenueId(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVenueType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 2)) != 0 {
			m8 := &ReplyMarkup{}
			err = m8.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplyMarkup(m8)
		}

	default:
		log.Errorf("InputBotInlineMessageMediaVenue Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputBotInlineMessageMediaContact) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputBotInlineMessageMediaContact:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPhoneNumber(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFirstName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLastName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 2)) != 0 {
			m5 := &ReplyMarkup{}
			err = m5.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplyMarkup(m5)
		}

	case Cmd_InputBotInlineMessageMediaContacta6edbffd:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPhoneNumber(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFirstName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLastName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVcard(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 2)) != 0 {
			m6 := &ReplyMarkup{}
			err = m6.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplyMarkup(m6)
		}

	default:
		log.Errorf("InputBotInlineMessageMediaContact Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputBotInlineMessageGame) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputBotInlineMessageGame:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 2)) != 0 {
			m2 := &ReplyMarkup{}
			err = m2.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplyMarkup(m2)
		}

	default:
		log.Errorf("InputBotInlineMessageGame Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputBotInlineMessageID) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputBotInlineMessageID:
		m.SetDcId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputBotInlineMessageID Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputBotInlineResult) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputBotInlineResult:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetId(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			m.SetTitle(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetDescription(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetUrl(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m.SetThumbUrl(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 5)) != 0 {
			m.SetContentUrl(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 5)) != 0 {
			m.SetContentType(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 6)) != 0 {
			m.SetW(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 6)) != 0 {
			m.SetH(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 7)) != 0 {
			m.SetDuration(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m13 := &InputBotInlineMessage{}
		err = m13.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetSendMessage(m13)

	case Cmd_InputBotInlineResult88bf9319:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetId(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			m.SetTitle(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetDescription(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetUrl(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m7 := &InputWebDocument{}
			err = m7.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetThumb(m7)
		}
		if (flags & (1 << 5)) != 0 {
			m8 := &InputWebDocument{}
			err = m8.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetContent(m8)
		}
		m9 := &InputBotInlineMessage{}
		err = m9.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetSendMessage(m9)

	default:
		log.Errorf("InputBotInlineResult Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputBotInlineResultPhoto) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputBotInlineResultPhoto:
		m.SetId(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m3 := &InputPhoto{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPhoto(m3)
		m4 := &InputBotInlineMessage{}
		err = m4.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetSendMessage(m4)

	default:
		log.Errorf("InputBotInlineResultPhoto Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputBotInlineResultDocument) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputBotInlineResultDocument:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetId(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			m.SetTitle(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetDescription(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m6 := &InputDocument{}
		err = m6.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetDocument(m6)
		m7 := &InputBotInlineMessage{}
		err = m7.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetSendMessage(m7)

	default:
		log.Errorf("InputBotInlineResultDocument Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputBotInlineResultGame) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputBotInlineResultGame:
		m.SetId(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetShortName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m3 := &InputBotInlineMessage{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetSendMessage(m3)

	default:
		log.Errorf("InputBotInlineResultGame Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputChannelEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputChannelEmpty:
		_ = m

	default:
		log.Errorf("InputChannelEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputChannel) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputChannel:
		m.SetChannelId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputChannel Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputChannelFromMessage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputChannelFromMessage:
		m1 := &InputPeer{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer(m1)
		m.SetMsgId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetChannelId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputChannelFromMessage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputChatPhotoEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputChatPhotoEmpty:
		_ = m

	default:
		log.Errorf("InputChatPhotoEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputChatUploadedPhoto) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputChatUploadedPhoto:
		m1 := &InputFile{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetFile(m1)

	case Cmd_InputChatUploadedPhoto94254732:
		m1 := &InputFile{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetFile(m1)
		m2 := &InputPhotoCrop{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCrop(m2)

	case Cmd_InputChatUploadedPhotoc642724e:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m2 := &InputFile{}
			err = m2.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetFile(m2)
		}
		if (flags & (1 << 1)) != 0 {
			m3 := &InputFile{}
			err = m3.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetVideo(m3)
		}

	default:
		log.Errorf("InputChatUploadedPhoto Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputChatPhoto) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputChatPhoto:
		m1 := &InputPhoto{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetId(m1)

	case Cmd_InputChatPhotob2e1bf08:
		m1 := &InputPhoto{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetId(m1)
		m2 := &InputPhotoCrop{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCrop(m2)

	default:
		log.Errorf("InputChatPhoto Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputCheckPasswordEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputCheckPasswordEmpty:
		_ = m

	default:
		log.Errorf("InputCheckPasswordEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputCheckPasswordSRP) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputCheckPasswordSRP:
		m.SetSrpId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetA(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetM1(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputCheckPasswordSRP Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputClientProxy) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputClientProxy:
		m.SetAddress(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPort(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputClientProxy Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPhoneContact) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPhoneContact:
		m.SetClientId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPhone(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFirstName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLastName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputPhoneContact Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputDialogPeer) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputDialogPeer:
		m1 := &InputPeer{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer(m1)

	default:
		log.Errorf("InputDialogPeer Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputDialogPeerFolder) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputDialogPeerFolder:
		m.SetFolderId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputDialogPeerFolder Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputDocumentEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputDocumentEmpty:
		_ = m

	default:
		log.Errorf("InputDocumentEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputDocument) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputDocument:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_InputDocument1abfb575:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFileReference(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputDocument Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputEncryptedChat) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputEncryptedChat:
		m.SetChatId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputEncryptedChat Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputEncryptedFileEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputEncryptedFileEmpty:
		_ = m

	default:
		log.Errorf("InputEncryptedFileEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputEncryptedFileUploaded) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputEncryptedFileUploaded:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetParts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMd5Checksum(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetKeyFingerprint(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputEncryptedFileUploaded Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputEncryptedFile) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputEncryptedFile:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputEncryptedFile Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputEncryptedFileBigUploaded) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputEncryptedFileBigUploaded:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetParts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetKeyFingerprint(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputEncryptedFileBigUploaded Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputFile) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputFile:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetParts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMd5Checksum(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputFile Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputFileBig) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputFileBig:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetParts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputFileBig Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputFileLocation) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputFileLocation:
		m.SetVolumeId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLocalId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSecret(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_InputFileLocationdfdaabe1:
		m.SetVolumeId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLocalId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSecret(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFileReference(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputFileLocation Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputEncryptedFileLocation) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputEncryptedFileLocation:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputEncryptedFileLocation Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputDocumentFileLocation) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputDocumentFileLocation:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVersion(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_InputDocumentFileLocation196683d9:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFileReference(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_InputDocumentFileLocation4e45abe9:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_InputDocumentFileLocationbad07584:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFileReference(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetThumbSize(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputDocumentFileLocation Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputSecureFileLocation) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputSecureFileLocation:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputSecureFileLocation Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputTakeoutFileLocation) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputTakeoutFileLocation:
		_ = m

	default:
		log.Errorf("InputTakeoutFileLocation Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPhotoFileLocation) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPhotoFileLocation:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFileReference(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetThumbSize(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputPhotoFileLocation Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPeerPhotoFileLocation) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPeerPhotoFileLocation:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetBig(flags&(1<<0) != 0)
		m3 := &InputPeer{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer(m3)
		m.SetVolumeId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLocalId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputPeerPhotoFileLocation Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputStickerSetThumb) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputStickerSetThumb:
		m1 := &InputStickerSet{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetStickerset(m1)
		m.SetVolumeId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLocalId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputStickerSetThumb Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPhotoLegacyFileLocation) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPhotoLegacyFileLocation:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFileReference(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVolumeId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLocalId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSecret(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputPhotoLegacyFileLocation Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputFolderPeer) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputFolderPeer:
		m1 := &InputPeer{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer(m1)
		m.SetFolderId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputFolderPeer Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputGameID) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputGameID:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputGameID Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputGameShortName) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputGameShortName:
		m1 := &InputUser{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetBotId(m1)
		m.SetShortName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputGameShortName Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputGeoPointEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputGeoPointEmpty:
		_ = m

	default:
		log.Errorf("InputGeoPointEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputGeoPoint) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputGeoPoint:
		m.SetLat(dBuf.Double())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLong(dBuf.Double())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_InputGeoPoint48222faf:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLat(dBuf.Double())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLong(dBuf.Double())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetAccuracyRadius(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("InputGeoPoint Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputGroupCall) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputGroupCall:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputGroupCall Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMediaEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMediaEmpty:
		_ = m

	default:
		log.Errorf("InputMediaEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMediaUploadedPhoto) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMediaUploadedPhoto:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &InputFile{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetFile(m2)
		m.SetCaption(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			c4 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c4 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 4, c4)
				return dBuf.err
			}
			l4 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v4 := make([]*InputDocument, l4)
			for i := int32(0); i < l4; i++ {
				v4[i] = &InputDocument{}
				err = v4[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetStickers(v4)

		}
		if (flags & (1 << 1)) != 0 {
			m.SetTtlSeconds(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_InputMediaUploadedPhoto1e287d04:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &InputFile{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetFile(m2)
		if (flags & (1 << 0)) != 0 {
			c3 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c3 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
				return dBuf.err
			}
			l3 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v3 := make([]*InputDocument, l3)
			for i := int32(0); i < l3; i++ {
				v3[i] = &InputDocument{}
				err = v3[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetStickers(v3)

		}
		if (flags & (1 << 1)) != 0 {
			m.SetTtlSeconds(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_InputMediaUploadedPhotof7aff1c0:
		m1 := &InputFile{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetFile(m1)
		m.SetCaption(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputMediaUploadedPhoto Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMediaPhoto) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMediaPhoto:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &InputPhoto{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetId81FA373A71(m2)
		m.SetCaption(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetTtlSeconds(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_InputMediaPhotob3ba0635:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &InputPhoto{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetId81FA373A71(m2)
		if (flags & (1 << 0)) != 0 {
			m.SetTtlSeconds(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_InputMediaPhotoe9bfb4f3:
		m1 := &InputPhoto{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetId81FA373A71(m1)
		m.SetCaption(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputMediaPhoto Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMediaGeoPoint) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMediaGeoPoint:
		m1 := &InputGeoPoint{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetGeoPoint(m1)

	default:
		log.Errorf("InputMediaGeoPoint Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMediaContact) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMediaContact:
		m.SetPhoneNumber(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFirstName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLastName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_InputMediaContactf8ab7dfb:
		m.SetPhoneNumber(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFirstName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLastName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVcard(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputMediaContact Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMediaUploadedDocument) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMediaUploadedDocument:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &InputFile{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetFile(m2)
		if (flags & (1 << 2)) != 0 {
			m3 := &InputFile{}
			err = m3.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetThumb(m3)
		}
		m.SetMimeType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c5 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 5, c5)
			return dBuf.err
		}
		l5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v5 := make([]*DocumentAttribute, l5)
		for i := int32(0); i < l5; i++ {
			v5[i] = &DocumentAttribute{}
			err = v5[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetAttributes(v5)

		m.SetCaption(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			c7 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c7 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 7, c7)
				return dBuf.err
			}
			l7 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v7 := make([]*InputDocument, l7)
			for i := int32(0); i < l7; i++ {
				v7[i] = &InputDocument{}
				err = v7[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetStickers(v7)

		}
		if (flags & (1 << 1)) != 0 {
			m.SetTtlSeconds(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_InputMediaUploadedDocument1d89306d:
		m1 := &InputFile{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetFile(m1)
		m.SetMimeType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*DocumentAttribute, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &DocumentAttribute{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetAttributes(v3)

		m.SetCaption(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_InputMediaUploadedDocument5b38c6c1:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNosoundVideo(flags&(1<<3) != 0)
		m.SetForceFile(flags&(1<<4) != 0)
		m4 := &InputFile{}
		err = m4.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetFile(m4)
		if (flags & (1 << 2)) != 0 {
			m5 := &InputFile{}
			err = m5.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetThumb(m5)
		}
		m.SetMimeType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c7 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 7, c7)
			return dBuf.err
		}
		l7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v7 := make([]*DocumentAttribute, l7)
		for i := int32(0); i < l7; i++ {
			v7[i] = &DocumentAttribute{}
			err = v7[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetAttributes(v7)

		if (flags & (1 << 0)) != 0 {
			c8 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c8 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 8, c8)
				return dBuf.err
			}
			l8 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v8 := make([]*InputDocument, l8)
			for i := int32(0); i < l8; i++ {
				v8[i] = &InputDocument{}
				err = v8[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetStickers(v8)

		}
		if (flags & (1 << 1)) != 0 {
			m.SetTtlSeconds(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("InputMediaUploadedDocument Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMediaDocument) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMediaDocument:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &InputDocument{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetId5ACB668E71(m2)
		m.SetCaption(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetTtlSeconds(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_InputMediaDocument1a77f29c:
		m1 := &InputDocument{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetId5ACB668E71(m1)
		m.SetCaption(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_InputMediaDocument23ab23d2:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &InputDocument{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetId5ACB668E71(m2)
		if (flags & (1 << 0)) != 0 {
			m.SetTtlSeconds(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_InputMediaDocument33473058:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &InputDocument{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetId5ACB668E71(m2)
		if (flags & (1 << 0)) != 0 {
			m.SetTtlSeconds(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m.SetQuery(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("InputMediaDocument Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMediaVenue) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMediaVenue:
		m1 := &InputGeoPoint{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetGeoPoint(m1)
		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAddress(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetProvider(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVenueId(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_InputMediaVenuec13d1c11:
		m1 := &InputGeoPoint{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetGeoPoint(m1)
		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAddress(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetProvider(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVenueId(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVenueType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputMediaVenue Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMediaGifExternal) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMediaGifExternal:
		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetQ(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputMediaGifExternal Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMediaPhotoExternal) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMediaPhotoExternal:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCaption(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetTtlSeconds(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_InputMediaPhotoExternale5bbfe1a:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetTtlSeconds(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("InputMediaPhotoExternal Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMediaDocumentExternal) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMediaDocumentExternal:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCaption(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetTtlSeconds(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_InputMediaDocumentExternalfb52dc99:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetTtlSeconds(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("InputMediaDocumentExternal Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMediaGame) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMediaGame:
		m1 := &InputGame{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetIdD33F43F371(m1)

	default:
		log.Errorf("InputMediaGame Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMediaInvoice) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMediaInvoice:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDescription(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m4 := &InputWebDocument{}
			err = m4.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetPhoto(m4)
		}
		m5 := &Invoice{}
		err = m5.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetInvoice(m5)
		m.SetPayload(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetProvider(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetStartParam(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_InputMediaInvoicef4e096c3:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDescription(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m4 := &InputWebDocument{}
			err = m4.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetPhoto(m4)
		}
		m5 := &Invoice{}
		err = m5.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetInvoice(m5)
		m.SetPayload(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetProvider(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m8 := &DataJSON{}
		err = m8.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetProviderData(m8)
		m.SetStartParam(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputMediaInvoice Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMediaUploadedThumbDocument) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMediaUploadedThumbDocument:
		m1 := &InputFile{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetFile(m1)
		m2 := &InputFile{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetThumb(m2)
		m.SetMimeType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c4 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 4, c4)
			return dBuf.err
		}
		l4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v4 := make([]*DocumentAttribute, l4)
		for i := int32(0); i < l4; i++ {
			v4[i] = &DocumentAttribute{}
			err = v4[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetAttributes(v4)

		m.SetCaption(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputMediaUploadedThumbDocument Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMediaGeoLive) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMediaGeoLive:
		m1 := &InputGeoPoint{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetGeoPoint(m1)
		m.SetPeriod(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_InputMediaGeoLive971fa843:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetStopped(flags&(1<<0) != 0)
		m3 := &InputGeoPoint{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetGeoPoint(m3)
		if (flags & (1 << 2)) != 0 {
			m.SetHeading(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m.SetPeriod(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetProximityNotificationRadius(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_InputMediaGeoLivece4e82fd:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetStopped(flags&(1<<0) != 0)
		m3 := &InputGeoPoint{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetGeoPoint(m3)
		if (flags & (1 << 1)) != 0 {
			m.SetPeriod(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("InputMediaGeoLive Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMediaPoll) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMediaPoll:
		m1 := &Poll{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPoll(m1)

	case Cmd_InputMediaPollabe9ca25:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &Poll{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPoll(m2)
		if (flags & (1 << 0)) != 0 {

		}

	case Cmd_InputMediaPollf94e5f1:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &Poll{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPoll(m2)
		if (flags & (1 << 0)) != 0 {

		}
		if (flags & (1 << 1)) != 0 {
			m.SetSolution(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			c5 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c5 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 5, c5)
				return dBuf.err
			}
			l5 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v5 := make([]*MessageEntity, l5)
			for i := int32(0); i < l5; i++ {
				v5[i] = &MessageEntity{}
				err = v5[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetSolutionEntities(v5)

		}

	default:
		log.Errorf("InputMediaPoll Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMediaDice) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMediaDice:
		_ = m

	case Cmd_InputMediaDicee66fbf7b:
		m.SetEmoticon(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputMediaDice Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMessageID) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMessageID:
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputMessageID Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMessageReplyTo) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMessageReplyTo:
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputMessageReplyTo Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMessagePinned) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMessagePinned:
		_ = m

	default:
		log.Errorf("InputMessagePinned Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMessageCallbackQuery) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMessageCallbackQuery:
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetQueryId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputMessageCallbackQuery Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputNotifyPeer) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputNotifyPeer:
		m1 := &InputPeer{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer(m1)

	default:
		log.Errorf("InputNotifyPeer Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputNotifyUsers) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputNotifyUsers:
		_ = m

	default:
		log.Errorf("InputNotifyUsers Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputNotifyChats) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputNotifyChats:
		_ = m

	default:
		log.Errorf("InputNotifyChats Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputNotifyAll) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputNotifyAll:
		_ = m

	default:
		log.Errorf("InputNotifyAll Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputNotifyBroadcasts) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputNotifyBroadcasts:
		_ = m

	default:
		log.Errorf("InputNotifyBroadcasts Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPaymentCredentialsSaved) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPaymentCredentialsSaved:
		m.SetId(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTmpPassword(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputPaymentCredentialsSaved Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPaymentCredentials) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPaymentCredentials:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSave(flags&(1<<0) != 0)
		m3 := &DataJSON{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetData(m3)

	default:
		log.Errorf("InputPaymentCredentials Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPaymentCredentialsApplePay) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPaymentCredentialsApplePay:
		m1 := &DataJSON{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPaymentData(m1)

	default:
		log.Errorf("InputPaymentCredentialsApplePay Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPaymentCredentialsAndroidPay) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPaymentCredentialsAndroidPay:
		m1 := &DataJSON{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPaymentToken(m1)
		m.SetGoogleTransactionId(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputPaymentCredentialsAndroidPay Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPeerEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPeerEmpty:
		_ = m

	default:
		log.Errorf("InputPeerEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPeerSelf) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPeerSelf:
		_ = m

	default:
		log.Errorf("InputPeerSelf Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPeerChat) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPeerChat:
		m.SetChatId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputPeerChat Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPeerUser) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPeerUser:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputPeerUser Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPeerChannel) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPeerChannel:
		m.SetChannelId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputPeerChannel Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPeerUserFromMessage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPeerUserFromMessage:
		m1 := &InputPeer{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer(m1)
		m.SetMsgId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputPeerUserFromMessage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPeerChannelFromMessage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPeerChannelFromMessage:
		m1 := &InputPeer{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer(m1)
		m.SetMsgId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetChannelId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputPeerChannelFromMessage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPeerNotifyEventsEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPeerNotifyEventsEmpty:
		_ = m

	default:
		log.Errorf("InputPeerNotifyEventsEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPeerNotifyEventsAll) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPeerNotifyEventsAll:
		_ = m

	default:
		log.Errorf("InputPeerNotifyEventsAll Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPeerNotifySettings) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPeerNotifySettings:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetShowPreviews38935EB271(flags&(1<<0) != 0)
		m.SetSilent38935EB271(flags&(1<<1) != 0)
		m.SetMuteUntil(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSound(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_InputPeerNotifySettings9c3d198e:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m2 := &Bool{}
			err = m2.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetShowPreviews9C3D198E85(m2)
		}
		if (flags & (1 << 1)) != 0 {
			m3 := &Bool{}
			err = m3.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetSilent9C3D198E85(m3)
		}
		if (flags & (1 << 2)) != 0 {
			m.SetMuteUntil(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetSound(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("InputPeerNotifySettings Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPhoneCall) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPhoneCall:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputPhoneCall Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPhotoEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPhotoEmpty:
		_ = m

	default:
		log.Errorf("InputPhotoEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPhoto) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPhoto:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_InputPhoto3bb3b94a:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFileReference(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputPhoto Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPhotoCrop) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPhotoCrop:
		m.SetCropLeft(dBuf.Double())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCropTop(dBuf.Double())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCropWidth(dBuf.Double())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputPhotoCrop Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPhotoCropAuto) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPhotoCropAuto:
		_ = m

	default:
		log.Errorf("InputPhotoCropAuto Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPrivacyKeyStatusTimestamp) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPrivacyKeyStatusTimestamp:
		_ = m

	default:
		log.Errorf("InputPrivacyKeyStatusTimestamp Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPrivacyKeyChatInvite) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPrivacyKeyChatInvite:
		_ = m

	default:
		log.Errorf("InputPrivacyKeyChatInvite Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPrivacyKeyPhoneCall) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPrivacyKeyPhoneCall:
		_ = m

	default:
		log.Errorf("InputPrivacyKeyPhoneCall Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPrivacyKeyPhoneP2P) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPrivacyKeyPhoneP2P:
		_ = m

	default:
		log.Errorf("InputPrivacyKeyPhoneP2P Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPrivacyKeyForwards) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPrivacyKeyForwards:
		_ = m

	default:
		log.Errorf("InputPrivacyKeyForwards Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPrivacyKeyProfilePhoto) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPrivacyKeyProfilePhoto:
		_ = m

	default:
		log.Errorf("InputPrivacyKeyProfilePhoto Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPrivacyKeyPhoneNumber) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPrivacyKeyPhoneNumber:
		_ = m

	default:
		log.Errorf("InputPrivacyKeyPhoneNumber Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPrivacyKeyAddedByPhone) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPrivacyKeyAddedByPhone:
		_ = m

	default:
		log.Errorf("InputPrivacyKeyAddedByPhone Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPrivacyValueAllowContacts) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPrivacyValueAllowContacts:
		_ = m

	default:
		log.Errorf("InputPrivacyValueAllowContacts Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPrivacyValueAllowAll) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPrivacyValueAllowAll:
		_ = m

	default:
		log.Errorf("InputPrivacyValueAllowAll Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPrivacyValueAllowUsers) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPrivacyValueAllowUsers:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*InputUser, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &InputUser{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v1)

	default:
		log.Errorf("InputPrivacyValueAllowUsers Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPrivacyValueDisallowContacts) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPrivacyValueDisallowContacts:
		_ = m

	default:
		log.Errorf("InputPrivacyValueDisallowContacts Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPrivacyValueDisallowAll) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPrivacyValueDisallowAll:
		_ = m

	default:
		log.Errorf("InputPrivacyValueDisallowAll Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPrivacyValueDisallowUsers) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPrivacyValueDisallowUsers:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*InputUser, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &InputUser{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v1)

	default:
		log.Errorf("InputPrivacyValueDisallowUsers Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPrivacyValueAllowChatParticipants) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPrivacyValueAllowChatParticipants:
		m.SetChats(dBuf.VectorInt())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputPrivacyValueAllowChatParticipants Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputPrivacyValueDisallowChatParticipants) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputPrivacyValueDisallowChatParticipants:
		m.SetChats(dBuf.VectorInt())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputPrivacyValueDisallowChatParticipants Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputSecureFileUploaded) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputSecureFileUploaded:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetParts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMd5Checksum(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFileHash(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSecret(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputSecureFileUploaded Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputSecureFile) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputSecureFile:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputSecureFile Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputSecureValue) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputSecureValue:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &SecureValueType{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetType(m2)
		if (flags & (1 << 0)) != 0 {
			m3 := &SecureData{}
			err = m3.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetData(m3)
		}
		if (flags & (1 << 1)) != 0 {
			m4 := &InputSecureFile{}
			err = m4.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetFrontSide(m4)
		}
		if (flags & (1 << 2)) != 0 {
			m5 := &InputSecureFile{}
			err = m5.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReverseSide(m5)
		}
		if (flags & (1 << 3)) != 0 {
			m6 := &InputSecureFile{}
			err = m6.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetSelfie(m6)
		}
		if (flags & (1 << 6)) != 0 {
			c7 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c7 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 7, c7)
				return dBuf.err
			}
			l7 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v7 := make([]*InputSecureFile, l7)
			for i := int32(0); i < l7; i++ {
				v7[i] = &InputSecureFile{}
				err = v7[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetTranslation(v7)

		}
		if (flags & (1 << 4)) != 0 {
			c8 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c8 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 8, c8)
				return dBuf.err
			}
			l8 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v8 := make([]*InputSecureFile, l8)
			for i := int32(0); i < l8; i++ {
				v8[i] = &InputSecureFile{}
				err = v8[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetFiles(v8)

		}
		if (flags & (1 << 5)) != 0 {
			m9 := &SecurePlainData{}
			err = m9.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetPlainData(m9)
		}

	default:
		log.Errorf("InputSecureValue Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputSingleMedia) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputSingleMedia:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &InputMedia{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetMedia(m2)
		m.SetRandomId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMessage(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			c5 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c5 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 5, c5)
				return dBuf.err
			}
			l5 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v5 := make([]*MessageEntity, l5)
			for i := int32(0); i < l5; i++ {
				v5[i] = &MessageEntity{}
				err = v5[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetEntities(v5)

		}

	default:
		log.Errorf("InputSingleMedia Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputStickerSetEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputStickerSetEmpty:
		_ = m

	default:
		log.Errorf("InputStickerSetEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputStickerSetID) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputStickerSetID:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputStickerSetID Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputStickerSetShortName) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputStickerSetShortName:
		m.SetShortName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputStickerSetShortName Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputStickerSetAnimatedEmoji) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputStickerSetAnimatedEmoji:
		_ = m

	default:
		log.Errorf("InputStickerSetAnimatedEmoji Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputStickerSetDice) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputStickerSetDice:
		_ = m

	case Cmd_InputStickerSetDicee67f520e:
		m.SetEmoticon(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputStickerSetDice Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputStickerSetItem) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputStickerSetItem:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &InputDocument{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetDocument(m2)
		m.SetEmoji(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m4 := &MaskCoords{}
			err = m4.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetMaskCoords(m4)
		}

	default:
		log.Errorf("InputStickerSetItem Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputStickeredMediaPhoto) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputStickeredMediaPhoto:
		m1 := &InputPhoto{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetId4A99215771(m1)

	default:
		log.Errorf("InputStickeredMediaPhoto Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputStickeredMediaDocument) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputStickeredMediaDocument:
		m1 := &InputDocument{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetId438865B71(m1)

	default:
		log.Errorf("InputStickeredMediaDocument Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputTheme) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputTheme:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputTheme Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputThemeSlug) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputThemeSlug:
		m.SetSlug(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputThemeSlug Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputThemeSettings) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputThemeSettings:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &BaseTheme{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetBaseTheme(m2)
		m.SetAccentColor(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetMessageTopColor(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 0)) != 0 {
			m.SetMessageBottomColor(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m6 := &InputWallPaper{}
			err = m6.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetWallpaper(m6)
		}
		if (flags & (1 << 1)) != 0 {
			m7 := &WallPaperSettings{}
			err = m7.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetWallpaperSettings(m7)
		}

	default:
		log.Errorf("InputThemeSettings Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputUserEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputUserEmpty:
		_ = m

	default:
		log.Errorf("InputUserEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputUserSelf) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputUserSelf:
		_ = m

	default:
		log.Errorf("InputUserSelf Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputUser) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputUser:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputUser Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputUserFromMessage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputUserFromMessage:
		m1 := &InputPeer{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer(m1)
		m.SetMsgId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputUserFromMessage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputWallPaper) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputWallPaper:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputWallPaper Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputWallPaperSlug) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputWallPaperSlug:
		m.SetSlug(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputWallPaperSlug Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputWallPaperNoFile) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputWallPaperNoFile:
		_ = m

	default:
		log.Errorf("InputWallPaperNoFile Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputWebDocument) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputWebDocument:
		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSize_(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMimeType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c4 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 4, c4)
			return dBuf.err
		}
		l4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v4 := make([]*DocumentAttribute, l4)
		for i := int32(0); i < l4; i++ {
			v4[i] = &DocumentAttribute{}
			err = v4[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetAttributes(v4)

	default:
		log.Errorf("InputWebDocument Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputWebFileLocation) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputWebFileLocation:
		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputWebFileLocation Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputWebFileGeoPointLocation) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputWebFileGeoPointLocation:
		m1 := &InputGeoPoint{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetGeoPoint(m1)
		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetW(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetH(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetZoom(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetScale(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputWebFileGeoPointLocation Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInvoice) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_Invoice:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTest(flags&(1<<0) != 0)
		m.SetNameRequested(flags&(1<<1) != 0)
		m.SetPhoneRequested(flags&(1<<2) != 0)
		m.SetEmailRequested(flags&(1<<3) != 0)
		m.SetShippingAddressRequested(flags&(1<<4) != 0)
		m.SetFlexible(flags&(1<<5) != 0)
		m.SetCurrency(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c9 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c9 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 9, c9)
			return dBuf.err
		}
		l9 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v9 := make([]*LabeledPrice, l9)
		for i := int32(0); i < l9; i++ {
			v9[i] = &LabeledPrice{}
			err = v9[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetPrices(v9)

	default:
		log.Errorf("Invoice Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLIpPort) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_IpPort:
		m.SetIpv4(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPort(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("IpPort Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLIpPortSecret) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_IpPortSecret:
		m.SetIpv4(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPort(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSecret(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("IpPortSecret Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLJsonObjectValue) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_JsonObjectValue:
		m.SetKey(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &JSONValue{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetValue(m2)

	default:
		log.Errorf("JsonObjectValue Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLJsonNull) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_JsonNull:
		_ = m

	default:
		log.Errorf("JsonNull Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLJsonBool) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_JsonBool:
		m1 := &Bool{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetValueC7345E6A90(m1)

	default:
		log.Errorf("JsonBool Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLJsonNumber) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_JsonNumber:
		m.SetValue2BE0DFA490(dBuf.Double())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("JsonNumber Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLJsonString) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_JsonString:
		m.SetValueB71E767A90(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("JsonString Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLJsonArray) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_JsonArray:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*JSONValue, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &JSONValue{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetValueF744476390(v1)

	default:
		log.Errorf("JsonArray Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLJsonObject) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_JsonObject:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*JSONObjectValue, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &JSONObjectValue{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetValue99C1D49D90(v1)

	default:
		log.Errorf("JsonObject Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLKeyboardButton) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_KeyboardButton:
		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("KeyboardButton Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLKeyboardButtonUrl) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_KeyboardButtonUrl:
		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("KeyboardButtonUrl Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLKeyboardButtonCallback) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_KeyboardButtonCallback:
		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetData(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_KeyboardButtonCallback35bbdb6b:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetRequiresPassword(flags&(1<<0) != 0)
		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetData(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("KeyboardButtonCallback Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLKeyboardButtonRequestPhone) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_KeyboardButtonRequestPhone:
		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("KeyboardButtonRequestPhone Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLKeyboardButtonRequestGeoLocation) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_KeyboardButtonRequestGeoLocation:
		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("KeyboardButtonRequestGeoLocation Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLKeyboardButtonSwitchInline) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_KeyboardButtonSwitchInline:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSamePeer(flags&(1<<0) != 0)
		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetQuery(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_KeyboardButtonSwitchInlineea1b7a14:
		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetQuery(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("KeyboardButtonSwitchInline Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLKeyboardButtonGame) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_KeyboardButtonGame:
		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("KeyboardButtonGame Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLKeyboardButtonBuy) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_KeyboardButtonBuy:
		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("KeyboardButtonBuy Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLKeyboardButtonUrlAuth) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_KeyboardButtonUrlAuth:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetFwdText(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetButtonId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("KeyboardButtonUrlAuth Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputKeyboardButtonUrlAuth) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputKeyboardButtonUrlAuth:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetRequestWriteAccess(flags&(1<<0) != 0)
		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			m.SetFwdText(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m6 := &InputUser{}
		err = m6.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetBot(m6)

	default:
		log.Errorf("InputKeyboardButtonUrlAuth Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLKeyboardButtonRequestPoll) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_KeyboardButtonRequestPoll:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m2 := &Bool{}
			err = m2.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetQuiz(m2)
		}
		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("KeyboardButtonRequestPoll Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLKeyboardButtonRow) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_KeyboardButtonRow:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*KeyboardButton, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &KeyboardButton{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetButtons(v1)

	default:
		log.Errorf("KeyboardButtonRow Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLLabeledPrice) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_LabeledPrice:
		m.SetLabel(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAmount(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("LabeledPrice Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLLangPackDifference) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_LangPackDifference:
		m.SetLangCode(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFromVersion(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVersion(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c4 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 4, c4)
			return dBuf.err
		}
		l4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v4 := make([]*LangPackString, l4)
		for i := int32(0); i < l4; i++ {
			v4[i] = &LangPackString{}
			err = v4[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetStrings(v4)

	default:
		log.Errorf("LangPackDifference Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLLangPackLanguage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_LangPackLanguage:
		m.SetName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNativeName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLangCode(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_LangPackLanguage651b98d:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOfficial(flags&(1<<0) != 0)
		m.SetRtl(flags&(1<<2) != 0)
		m.SetName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNativeName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLangCode(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			m.SetBaseLangCode(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetPluralCode(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetStringsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTranslatedCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_LangPackLanguageeeca5ce3:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOfficial(flags&(1<<0) != 0)
		m.SetRtl(flags&(1<<2) != 0)
		m.SetName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNativeName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLangCode(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			m.SetBaseLangCode(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetPluralCode(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetStringsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTranslatedCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTranslationsUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("LangPackLanguage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLLangPackString) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_LangPackString:
		m.SetKey(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetValue(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("LangPackString Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLLangPackStringPluralized) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_LangPackStringPluralized:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetKey(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetZeroValue(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m.SetOneValue(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetTwoValue(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetFewValue(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m.SetManyValue(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetOtherValue(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("LangPackStringPluralized Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLLangPackStringDeleted) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_LangPackStringDeleted:
		m.SetKey(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("LangPackStringDeleted Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMaskCoords) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MaskCoords:
		m.SetN(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetX(dBuf.Double())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetY(dBuf.Double())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetZoom(dBuf.Double())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MaskCoords Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageEmpty:
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_Message:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOut(flags&(1<<1) != 0)
		m.SetMentioned(flags&(1<<4) != 0)
		m.SetMediaUnread(flags&(1<<5) != 0)
		m.SetSilent(flags&(1<<13) != 0)
		m.SetPost(flags&(1<<14) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 8)) != 0 {
			m.SetFromId90DDDC1171(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m9 := &Peer{}
		err = m9.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetToId(m9)
		if (flags & (1 << 2)) != 0 {
			m10 := &MessageFwdHeader{}
			err = m10.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetFwdFrom(m10)
		}
		if (flags & (1 << 11)) != 0 {
			m.SetViaBotId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetReplyToMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMessage(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 9)) != 0 {
			m15 := &MessageMedia{}
			err = m15.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetMedia(m15)
		}
		if (flags & (1 << 6)) != 0 {
			m16 := &ReplyMarkup{}
			err = m16.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplyMarkup(m16)
		}
		if (flags & (1 << 7)) != 0 {
			c17 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c17 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 17, c17)
				return dBuf.err
			}
			l17 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v17 := make([]*MessageEntity, l17)
			for i := int32(0); i < l17; i++ {
				v17[i] = &MessageEntity{}
				err = v17[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetEntities(v17)

		}
		if (flags & (1 << 10)) != 0 {
			m.SetViews(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 15)) != 0 {
			m.SetEditDate(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 16)) != 0 {
			m.SetPostAuthor(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_Message44f9b43d:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOut(flags&(1<<1) != 0)
		m.SetMentioned(flags&(1<<4) != 0)
		m.SetMediaUnread(flags&(1<<5) != 0)
		m.SetSilent(flags&(1<<13) != 0)
		m.SetPost(flags&(1<<14) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 8)) != 0 {
			m.SetFromId90DDDC1171(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m9 := &Peer{}
		err = m9.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetToId(m9)
		if (flags & (1 << 2)) != 0 {
			m10 := &MessageFwdHeader{}
			err = m10.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetFwdFrom(m10)
		}
		if (flags & (1 << 11)) != 0 {
			m.SetViaBotId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetReplyToMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMessage(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 9)) != 0 {
			m15 := &MessageMedia{}
			err = m15.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetMedia(m15)
		}
		if (flags & (1 << 6)) != 0 {
			m16 := &ReplyMarkup{}
			err = m16.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplyMarkup(m16)
		}
		if (flags & (1 << 7)) != 0 {
			c17 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c17 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 17, c17)
				return dBuf.err
			}
			l17 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v17 := make([]*MessageEntity, l17)
			for i := int32(0); i < l17; i++ {
				v17[i] = &MessageEntity{}
				err = v17[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetEntities(v17)

		}
		if (flags & (1 << 10)) != 0 {
			m.SetViews(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 15)) != 0 {
			m.SetEditDate(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 16)) != 0 {
			m.SetPostAuthor(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 17)) != 0 {
			m.SetGroupedId(dBuf.Long())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_Message452c0e65:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOut(flags&(1<<1) != 0)
		m.SetMentioned(flags&(1<<4) != 0)
		m.SetMediaUnread(flags&(1<<5) != 0)
		m.SetSilent(flags&(1<<13) != 0)
		m.SetPost(flags&(1<<14) != 0)
		m.SetFromScheduled(flags&(1<<18) != 0)
		m.SetLegacy(flags&(1<<19) != 0)
		m.SetEditHide(flags&(1<<21) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 8)) != 0 {
			m.SetFromId90DDDC1171(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m12 := &Peer{}
		err = m12.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetToId(m12)
		if (flags & (1 << 2)) != 0 {
			m13 := &MessageFwdHeader{}
			err = m13.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetFwdFrom(m13)
		}
		if (flags & (1 << 11)) != 0 {
			m.SetViaBotId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetReplyToMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMessage(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 9)) != 0 {
			m18 := &MessageMedia{}
			err = m18.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetMedia(m18)
		}
		if (flags & (1 << 6)) != 0 {
			m19 := &ReplyMarkup{}
			err = m19.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplyMarkup(m19)
		}
		if (flags & (1 << 7)) != 0 {
			c20 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c20 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 20, c20)
				return dBuf.err
			}
			l20 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v20 := make([]*MessageEntity, l20)
			for i := int32(0); i < l20; i++ {
				v20[i] = &MessageEntity{}
				err = v20[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetEntities(v20)

		}
		if (flags & (1 << 10)) != 0 {
			m.SetViews(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 15)) != 0 {
			m.SetEditDate(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 16)) != 0 {
			m.SetPostAuthor(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 17)) != 0 {
			m.SetGroupedId(dBuf.Long())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 22)) != 0 {
			c25 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c25 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 25, c25)
				return dBuf.err
			}
			l25 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v25 := make([]*RestrictionReason, l25)
			for i := int32(0); i < l25; i++ {
				v25[i] = &RestrictionReason{}
				err = v25[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetRestrictionReason(v25)

		}

	case Cmd_Message58ae39c9:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOut(flags&(1<<1) != 0)
		m.SetMentioned(flags&(1<<4) != 0)
		m.SetMediaUnread(flags&(1<<5) != 0)
		m.SetSilent(flags&(1<<13) != 0)
		m.SetPost(flags&(1<<14) != 0)
		m.SetFromScheduled(flags&(1<<18) != 0)
		m.SetLegacy(flags&(1<<19) != 0)
		m.SetEditHide(flags&(1<<21) != 0)
		m.SetPinned(flags&(1<<24) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 8)) != 0 {
			m12 := &Peer{}
			err = m12.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetFromId286FA604119(m12)
		}
		m13 := &Peer{}
		err = m13.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeerId(m13)
		if (flags & (1 << 2)) != 0 {
			m14 := &MessageFwdHeader{}
			err = m14.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetFwdFrom(m14)
		}
		if (flags & (1 << 11)) != 0 {
			m.SetViaBotId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m16 := &MessageReplyHeader{}
			err = m16.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplyTo(m16)
		}
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMessage(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 9)) != 0 {
			m19 := &MessageMedia{}
			err = m19.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetMedia(m19)
		}
		if (flags & (1 << 6)) != 0 {
			m20 := &ReplyMarkup{}
			err = m20.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplyMarkup(m20)
		}
		if (flags & (1 << 7)) != 0 {
			c21 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c21 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 21, c21)
				return dBuf.err
			}
			l21 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v21 := make([]*MessageEntity, l21)
			for i := int32(0); i < l21; i++ {
				v21[i] = &MessageEntity{}
				err = v21[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetEntities(v21)

		}
		if (flags & (1 << 10)) != 0 {
			m.SetViews(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 10)) != 0 {
			m.SetForwards(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 23)) != 0 {
			m24 := &MessageReplies{}
			err = m24.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplies(m24)
		}
		if (flags & (1 << 15)) != 0 {
			m.SetEditDate(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 16)) != 0 {
			m.SetPostAuthor(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 17)) != 0 {
			m.SetGroupedId(dBuf.Long())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 22)) != 0 {
			c28 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c28 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 28, c28)
				return dBuf.err
			}
			l28 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v28 := make([]*RestrictionReason, l28)
			for i := int32(0); i < l28; i++ {
				v28[i] = &RestrictionReason{}
				err = v28[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetRestrictionReason(v28)

		}

	case Cmd_Messagec09be45f:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUnread(flags&(1<<0) != 0)
		m.SetOut(flags&(1<<1) != 0)
		m.SetMentioned(flags&(1<<4) != 0)
		m.SetMediaUnread(flags&(1<<5) != 0)
		m.SetSilent(flags&(1<<13) != 0)
		m.SetPost(flags&(1<<14) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 8)) != 0 {
			m.SetFromId90DDDC1171(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m10 := &Peer{}
		err = m10.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetToId(m10)
		if (flags & (1 << 2)) != 0 {
			m11 := &MessageFwdHeader{}
			err = m11.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetFwdFrom(m11)
		}
		if (flags & (1 << 11)) != 0 {
			m.SetViaBotId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetReplyToMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMessage(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 9)) != 0 {
			m16 := &MessageMedia{}
			err = m16.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetMedia(m16)
		}
		if (flags & (1 << 6)) != 0 {
			m17 := &ReplyMarkup{}
			err = m17.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplyMarkup(m17)
		}
		if (flags & (1 << 7)) != 0 {
			c18 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c18 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 18, c18)
				return dBuf.err
			}
			l18 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v18 := make([]*MessageEntity, l18)
			for i := int32(0); i < l18; i++ {
				v18[i] = &MessageEntity{}
				err = v18[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetEntities(v18)

		}
		if (flags & (1 << 10)) != 0 {
			m.SetViews(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 15)) != 0 {
			m.SetEditDate(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("Message Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageService) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageService:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOut(flags&(1<<1) != 0)
		m.SetMentioned(flags&(1<<4) != 0)
		m.SetMediaUnread(flags&(1<<5) != 0)
		m.SetSilent(flags&(1<<13) != 0)
		m.SetPost(flags&(1<<14) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 8)) != 0 {
			m.SetFromId90DDDC1171(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m9 := &Peer{}
		err = m9.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetToId(m9)
		if (flags & (1 << 3)) != 0 {
			m.SetReplyToMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m12 := &MessageAction{}
		err = m12.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetAction(m12)

	case Cmd_MessageService286fa604:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOut(flags&(1<<1) != 0)
		m.SetMentioned(flags&(1<<4) != 0)
		m.SetMediaUnread(flags&(1<<5) != 0)
		m.SetSilent(flags&(1<<13) != 0)
		m.SetPost(flags&(1<<14) != 0)
		m.SetLegacy(flags&(1<<19) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 8)) != 0 {
			m9 := &Peer{}
			err = m9.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetFromId286FA604119(m9)
		}
		m10 := &Peer{}
		err = m10.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeerId(m10)
		if (flags & (1 << 3)) != 0 {
			m11 := &MessageReplyHeader{}
			err = m11.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplyTo(m11)
		}
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m13 := &MessageAction{}
		err = m13.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetAction(m13)

	default:
		log.Errorf("MessageService Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageActionEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageActionEmpty:
		_ = m

	default:
		log.Errorf("MessageActionEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageActionChatCreate) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageActionChatCreate:
		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUsers(dBuf.VectorInt())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageActionChatCreate Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageActionChatEditTitle) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageActionChatEditTitle:
		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageActionChatEditTitle Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageActionChatEditPhoto) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageActionChatEditPhoto:
		m1 := &Photo{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPhoto(m1)

	default:
		log.Errorf("MessageActionChatEditPhoto Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageActionChatDeletePhoto) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageActionChatDeletePhoto:
		_ = m

	default:
		log.Errorf("MessageActionChatDeletePhoto Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageActionChatAddUser) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageActionChatAddUser:
		m.SetUsers(dBuf.VectorInt())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageActionChatAddUser Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageActionChatDeleteUser) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageActionChatDeleteUser:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageActionChatDeleteUser Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageActionChatJoinedByLink) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageActionChatJoinedByLink:
		m.SetInviterId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageActionChatJoinedByLink Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageActionChannelCreate) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageActionChannelCreate:
		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageActionChannelCreate Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageActionChatMigrateTo) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageActionChatMigrateTo:
		m.SetChannelId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageActionChatMigrateTo Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageActionChannelMigrateFrom) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageActionChannelMigrateFrom:
		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetChatId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageActionChannelMigrateFrom Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageActionPinMessage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageActionPinMessage:
		_ = m

	default:
		log.Errorf("MessageActionPinMessage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageActionHistoryClear) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageActionHistoryClear:
		_ = m

	default:
		log.Errorf("MessageActionHistoryClear Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageActionGameScore) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageActionGameScore:
		m.SetGameId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetScore(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageActionGameScore Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageActionPaymentSentMe) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageActionPaymentSentMe:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCurrency(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTotalAmount(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPayload(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m5 := &PaymentRequestedInfo{}
			err = m5.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetInfo(m5)
		}
		if (flags & (1 << 1)) != 0 {
			m.SetShippingOptionId(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m7 := &PaymentCharge{}
		err = m7.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCharge(m7)

	default:
		log.Errorf("MessageActionPaymentSentMe Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageActionPaymentSent) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageActionPaymentSent:
		m.SetCurrency(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTotalAmount(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageActionPaymentSent Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageActionScreenshotTaken) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageActionScreenshotTaken:
		_ = m

	default:
		log.Errorf("MessageActionScreenshotTaken Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageActionCustomAction) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageActionCustomAction:
		m.SetMessage(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageActionCustomAction Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageActionBotAllowed) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageActionBotAllowed:
		m.SetDomain(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageActionBotAllowed Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageActionSecureValuesSentMe) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageActionSecureValuesSentMe:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*SecureValue, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &SecureValue{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetValues(v1)

		m2 := &SecureCredentialsEncrypted{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCredentials(m2)

	default:
		log.Errorf("MessageActionSecureValuesSentMe Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageActionSecureValuesSent) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageActionSecureValuesSent:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*SecureValueType, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &SecureValueType{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetTypes(v1)

	default:
		log.Errorf("MessageActionSecureValuesSent Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageActionContactSignUp) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageActionContactSignUp:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSilent(flags&(1<<0) != 0)

	case Cmd_MessageActionContactSignUpf3f25f76:
		_ = m

	default:
		log.Errorf("MessageActionContactSignUp Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageActionPhoneCall) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageActionPhoneCall:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVideo(flags&(1<<2) != 0)
		m.SetCallId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m4 := &PhoneCallDiscardReason{}
			err = m4.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReason(m4)
		}
		if (flags & (1 << 1)) != 0 {
			m.SetDuration(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("MessageActionPhoneCall Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageActionGeoProximityReached) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageActionGeoProximityReached:
		m1 := &Peer{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetFromId(m1)
		m2 := &Peer{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetToId(m2)
		m.SetDistance(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageActionGeoProximityReached Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageActionGroupCall) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageActionGroupCall:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &InputGroupCall{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCall(m2)
		if (flags & (1 << 0)) != 0 {
			m.SetDuration(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("MessageActionGroupCall Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageActionInviteToGroupCall) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageActionInviteToGroupCall:
		m1 := &InputGroupCall{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCall(m1)
		m.SetUsers(dBuf.VectorInt())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageActionInviteToGroupCall Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageEntityUnknown) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageEntityUnknown:
		m.SetOffset(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLength(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageEntityUnknown Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageEntityMention) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageEntityMention:
		m.SetOffset(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLength(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageEntityMention Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageEntityHashtag) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageEntityHashtag:
		m.SetOffset(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLength(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageEntityHashtag Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageEntityBotCommand) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageEntityBotCommand:
		m.SetOffset(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLength(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageEntityBotCommand Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageEntityUrl) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageEntityUrl:
		m.SetOffset(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLength(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageEntityUrl Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageEntityEmail) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageEntityEmail:
		m.SetOffset(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLength(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageEntityEmail Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageEntityBold) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageEntityBold:
		m.SetOffset(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLength(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageEntityBold Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageEntityItalic) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageEntityItalic:
		m.SetOffset(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLength(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageEntityItalic Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageEntityCode) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageEntityCode:
		m.SetOffset(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLength(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageEntityCode Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageEntityPre) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageEntityPre:
		m.SetOffset(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLength(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLanguage(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageEntityPre Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageEntityTextUrl) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageEntityTextUrl:
		m.SetOffset(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLength(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageEntityTextUrl Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageEntityMentionName) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageEntityMentionName:
		m.SetOffset(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLength(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUserId352DCA5871(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageEntityMentionName Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMessageEntityMentionName) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMessageEntityMentionName:
		m.SetOffset(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLength(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m3 := &InputUser{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetUserId208E68C971(m3)

	default:
		log.Errorf("InputMessageEntityMentionName Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageEntityPhone) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageEntityPhone:
		m.SetOffset(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLength(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageEntityPhone Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageEntityCashtag) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageEntityCashtag:
		m.SetOffset(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLength(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageEntityCashtag Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageEntityUnderline) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageEntityUnderline:
		m.SetOffset(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLength(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageEntityUnderline Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageEntityStrike) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageEntityStrike:
		m.SetOffset(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLength(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageEntityStrike Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageEntityBlockquote) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageEntityBlockquote:
		m.SetOffset(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLength(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageEntityBlockquote Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageEntityBankCard) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageEntityBankCard:
		m.SetOffset(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLength(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageEntityBankCard Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageFwdHeader) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageFwdHeader:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetFromIdFADFF4AC71(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			m.SetChannelId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetChannelPost(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetPostAuthor(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_MessageFwdHeader353a686b:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetFromIdFADFF4AC71(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 5)) != 0 {
			m.SetFromName(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			m.SetChannelId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetChannelPost(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetPostAuthor(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m8 := &Peer{}
			err = m8.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetSavedFromPeer(m8)
		}
		if (flags & (1 << 4)) != 0 {
			m.SetSavedFromMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 6)) != 0 {
			m.SetPsaType(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_MessageFwdHeader559ebe6d:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetFromIdFADFF4AC71(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			m.SetChannelId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetChannelPost(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetPostAuthor(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m7 := &Peer{}
			err = m7.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetSavedFromPeer(m7)
		}
		if (flags & (1 << 4)) != 0 {
			m.SetSavedFromMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_MessageFwdHeader5f777dce:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m2 := &Peer{}
			err = m2.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetFromId5F777DCE119(m2)
		}
		if (flags & (1 << 5)) != 0 {
			m.SetFromName(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 2)) != 0 {
			m.SetChannelPost(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetPostAuthor(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m7 := &Peer{}
			err = m7.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetSavedFromPeer(m7)
		}
		if (flags & (1 << 4)) != 0 {
			m.SetSavedFromMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 6)) != 0 {
			m.SetPsaType(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_MessageFwdHeaderc786ddcb:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetFromIdFADFF4AC71(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			m.SetChannelId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetChannelPost(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_MessageFwdHeaderec338270:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetFromIdFADFF4AC71(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 5)) != 0 {
			m.SetFromName(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			m.SetChannelId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetChannelPost(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetPostAuthor(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m8 := &Peer{}
			err = m8.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetSavedFromPeer(m8)
		}
		if (flags & (1 << 4)) != 0 {
			m.SetSavedFromMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("MessageFwdHeader Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageGroup) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageGroup:
		m.SetMinId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageGroup Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageInteractionCounters) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageInteractionCounters:
		m.SetMsgId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetViews(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetForwards(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageInteractionCounters Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageMediaEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageMediaEmpty:
		_ = m

	default:
		log.Errorf("MessageMediaEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageMediaPhoto) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageMediaPhoto:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m2 := &Photo{}
			err = m2.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetPhotoB5223B0F71(m2)
		}
		if (flags & (1 << 1)) != 0 {
			m.SetCaption(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetTtlSeconds(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_MessageMediaPhoto3d8ce53d:
		m1 := &Photo{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPhotoB5223B0F71(m1)
		m.SetCaption(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_MessageMediaPhoto695150d7:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m2 := &Photo{}
			err = m2.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetPhotoB5223B0F71(m2)
		}
		if (flags & (1 << 2)) != 0 {
			m.SetTtlSeconds(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("MessageMediaPhoto Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageMediaGeo) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageMediaGeo:
		m1 := &GeoPoint{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetGeo(m1)

	default:
		log.Errorf("MessageMediaGeo Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageMediaContact) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageMediaContact:
		m.SetPhoneNumber(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFirstName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLastName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_MessageMediaContactcbf24940:
		m.SetPhoneNumber(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFirstName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLastName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVcard(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageMediaContact Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageMediaUnsupported) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageMediaUnsupported:
		_ = m

	default:
		log.Errorf("MessageMediaUnsupported Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageMediaDocument) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageMediaDocument:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m2 := &Document{}
			err = m2.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetDocument(m2)
		}
		if (flags & (1 << 1)) != 0 {
			m.SetCaption(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetTtlSeconds(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_MessageMediaDocument9cb070d7:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m2 := &Document{}
			err = m2.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetDocument(m2)
		}
		if (flags & (1 << 2)) != 0 {
			m.SetTtlSeconds(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_MessageMediaDocumentf3e02ea8:
		m1 := &Document{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetDocument(m1)
		m.SetCaption(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageMediaDocument Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageMediaWebPage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageMediaWebPage:
		m1 := &WebPage{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetWebpage(m1)

	default:
		log.Errorf("MessageMediaWebPage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageMediaVenue) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageMediaVenue:
		m1 := &GeoPoint{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetGeo(m1)
		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAddress(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetProvider(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVenueId(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_MessageMediaVenue2ec0533f:
		m1 := &GeoPoint{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetGeo(m1)
		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAddress(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetProvider(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVenueId(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVenueType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageMediaVenue Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageMediaGame) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageMediaGame:
		m1 := &Game{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetGame(m1)

	default:
		log.Errorf("MessageMediaGame Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageMediaInvoice) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageMediaInvoice:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetShippingAddressRequested(flags&(1<<1) != 0)
		m.SetTest(flags&(1<<3) != 0)
		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDescription(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m6 := &WebDocument{}
			err = m6.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetPhoto8455134771(m6)
		}
		if (flags & (1 << 2)) != 0 {
			m.SetReceiptMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetCurrency(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTotalAmount(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetStartParam(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageMediaInvoice Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageMediaGeoLive) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageMediaGeoLive:
		m1 := &GeoPoint{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetGeo(m1)
		m.SetPeriod(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_MessageMediaGeoLiveb940c666:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &GeoPoint{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetGeo(m2)
		if (flags & (1 << 0)) != 0 {
			m.SetHeading(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetPeriod(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			m.SetProximityNotificationRadius(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("MessageMediaGeoLive Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageMediaPoll) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageMediaPoll:
		m1 := &Poll{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPoll(m1)
		m2 := &PollResults{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetResults(m2)

	default:
		log.Errorf("MessageMediaPoll Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageMediaDice) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageMediaDice:
		m.SetValue(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_MessageMediaDice3f7ee58b:
		m.SetValue(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetEmoticon(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageMediaDice Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageRange) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageRange:
		m.SetMinId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageRange Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageReplies) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageReplies:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetComments(flags&(1<<0) != 0)
		m.SetReplies(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetRepliesPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			c5 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c5 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 5, c5)
				return dBuf.err
			}
			l5 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v5 := make([]*Peer, l5)
			for i := int32(0); i < l5; i++ {
				v5[i] = &Peer{}
				err = v5[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetRecentRepliers(v5)

		}
		if (flags & (1 << 0)) != 0 {
			m.SetChannelId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetMaxId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetReadMaxId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("MessageReplies Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageReplyHeader) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageReplyHeader:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetReplyToMsgId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m3 := &Peer{}
			err = m3.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplyToPeerId(m3)
		}
		if (flags & (1 << 1)) != 0 {
			m.SetReplyToTopId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("MessageReplyHeader Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageUserVote) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageUserVote:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOption(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_MessageUserVotea28e5559:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOption(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageUserVote Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageUserVoteInputOption) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageUserVoteInputOption:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageUserVoteInputOption Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageUserVoteMultiple) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageUserVoteMultiple:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessageUserVoteMultiple Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessageViews) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessageViews:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetViews(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m.SetForwards(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m4 := &MessageReplies{}
			err = m4.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplies(m4)
		}

	default:
		log.Errorf("MessageViews Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMessagesFilterEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMessagesFilterEmpty:
		_ = m

	default:
		log.Errorf("InputMessagesFilterEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMessagesFilterPhotos) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMessagesFilterPhotos:
		_ = m

	default:
		log.Errorf("InputMessagesFilterPhotos Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMessagesFilterVideo) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMessagesFilterVideo:
		_ = m

	default:
		log.Errorf("InputMessagesFilterVideo Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMessagesFilterPhotoVideo) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMessagesFilterPhotoVideo:
		_ = m

	default:
		log.Errorf("InputMessagesFilterPhotoVideo Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMessagesFilterPhotoVideoDocuments) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMessagesFilterPhotoVideoDocuments:
		_ = m

	default:
		log.Errorf("InputMessagesFilterPhotoVideoDocuments Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMessagesFilterDocument) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMessagesFilterDocument:
		_ = m

	default:
		log.Errorf("InputMessagesFilterDocument Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMessagesFilterUrl) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMessagesFilterUrl:
		_ = m

	default:
		log.Errorf("InputMessagesFilterUrl Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMessagesFilterGif) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMessagesFilterGif:
		_ = m

	default:
		log.Errorf("InputMessagesFilterGif Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMessagesFilterVoice) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMessagesFilterVoice:
		_ = m

	default:
		log.Errorf("InputMessagesFilterVoice Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMessagesFilterMusic) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMessagesFilterMusic:
		_ = m

	default:
		log.Errorf("InputMessagesFilterMusic Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMessagesFilterChatPhotos) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMessagesFilterChatPhotos:
		_ = m

	default:
		log.Errorf("InputMessagesFilterChatPhotos Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMessagesFilterPhoneCalls) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMessagesFilterPhoneCalls:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMissed(flags&(1<<0) != 0)

	default:
		log.Errorf("InputMessagesFilterPhoneCalls Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMessagesFilterRoundVoice) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMessagesFilterRoundVoice:
		_ = m

	default:
		log.Errorf("InputMessagesFilterRoundVoice Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMessagesFilterRoundVideo) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMessagesFilterRoundVideo:
		_ = m

	default:
		log.Errorf("InputMessagesFilterRoundVideo Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMessagesFilterMyMentions) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMessagesFilterMyMentions:
		_ = m

	default:
		log.Errorf("InputMessagesFilterMyMentions Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMessagesFilterGeo) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMessagesFilterGeo:
		_ = m

	default:
		log.Errorf("InputMessagesFilterGeo Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMessagesFilterContacts) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMessagesFilterContacts:
		_ = m

	default:
		log.Errorf("InputMessagesFilterContacts Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputMessagesFilterPinned) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputMessagesFilterPinned:
		_ = m

	default:
		log.Errorf("InputMessagesFilterPinned Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesAffectedHistory) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesAffectedHistory:
		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPtsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOffset(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessagesAffectedHistory Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesAffectedMessages) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesAffectedMessages:
		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPtsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessagesAffectedMessages Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesAllStickersNotModified) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesAllStickersNotModified:
		_ = m

	default:
		log.Errorf("MessagesAllStickersNotModified Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesAllStickers) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesAllStickers:
		m.SetHash(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*StickerSet, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &StickerSet{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetSets(v2)

	default:
		log.Errorf("MessagesAllStickers Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesArchivedStickers) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesArchivedStickers:
		m.SetCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*StickerSetCovered, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &StickerSetCovered{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetSets(v2)

	default:
		log.Errorf("MessagesArchivedStickers Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesBotCallbackAnswer) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesBotCallbackAnswer:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAlert(flags&(1<<1) != 0)
		m.SetHasUrl(flags&(1<<3) != 0)
		if (flags & (1 << 0)) != 0 {
			m.SetMessage(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetUrl(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetCacheTime(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_MessagesBotCallbackAnswer1264f1c6:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAlert(flags&(1<<1) != 0)
		if (flags & (1 << 0)) != 0 {
			m.SetMessage(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("MessagesBotCallbackAnswer Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesBotResults) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesBotResults:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetGallery(flags&(1<<0) != 0)
		m.SetQueryId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			m.SetNextOffset(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m5 := &InlineBotSwitchPM{}
			err = m5.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetSwitchPm(m5)
		}
		c6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c6 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 6, c6)
			return dBuf.err
		}
		l6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v6 := make([]*BotInlineResult, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = &BotInlineResult{}
			err = v6[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetResults(v6)

		m.SetCacheTime(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_MessagesBotResults256709a6:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetGallery(flags&(1<<0) != 0)
		m.SetQueryId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			m.SetNextOffset(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m5 := &InlineBotSwitchPM{}
			err = m5.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetSwitchPm(m5)
		}
		c6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c6 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 6, c6)
			return dBuf.err
		}
		l6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v6 := make([]*BotInlineResult, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = &BotInlineResult{}
			err = v6[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetResults(v6)

	case Cmd_MessagesBotResults947ca848:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetGallery(flags&(1<<0) != 0)
		m.SetQueryId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			m.SetNextOffset(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m5 := &InlineBotSwitchPM{}
			err = m5.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetSwitchPm(m5)
		}
		c6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c6 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 6, c6)
			return dBuf.err
		}
		l6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v6 := make([]*BotInlineResult, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = &BotInlineResult{}
			err = v6[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetResults(v6)

		m.SetCacheTime(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c8 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c8 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 8, c8)
			return dBuf.err
		}
		l8 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v8 := make([]*User, l8)
		for i := int32(0); i < l8; i++ {
			v8[i] = &User{}
			err = v8[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v8)

	default:
		log.Errorf("MessagesBotResults Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesChatFull) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesChatFull:
		m1 := &ChatFull{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetFullChat(m1)
		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*Chat, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &Chat{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v2)

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*User, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &User{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v3)

	default:
		log.Errorf("MessagesChatFull Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesChats) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesChats:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*Chat, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &Chat{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v1)

	default:
		log.Errorf("MessagesChats Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesChatsSlice) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesChatsSlice:
		m.SetCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*Chat, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &Chat{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v2)

	default:
		log.Errorf("MessagesChatsSlice Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesDhConfigNotModified) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesDhConfigNotModified:
		m.SetRandom(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessagesDhConfigNotModified Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesDhConfig) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesDhConfig:
		m.SetG(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetP(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVersion(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetRandom(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessagesDhConfig Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesDialogs) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesDialogs:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*Dialog, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &Dialog{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetDialogs(v1)

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*Message, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &Message{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetMessages(v2)

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*Chat, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &Chat{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v3)

		c4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c4 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 4, c4)
			return dBuf.err
		}
		l4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v4 := make([]*User, l4)
		for i := int32(0); i < l4; i++ {
			v4[i] = &User{}
			err = v4[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v4)

	default:
		log.Errorf("MessagesDialogs Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesDialogsSlice) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesDialogsSlice:
		m.SetCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*Dialog, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &Dialog{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetDialogs(v2)

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*Message, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &Message{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetMessages(v3)

		c4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c4 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 4, c4)
			return dBuf.err
		}
		l4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v4 := make([]*Chat, l4)
		for i := int32(0); i < l4; i++ {
			v4[i] = &Chat{}
			err = v4[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v4)

		c5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c5 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 5, c5)
			return dBuf.err
		}
		l5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v5 := make([]*User, l5)
		for i := int32(0); i < l5; i++ {
			v5[i] = &User{}
			err = v5[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v5)

	default:
		log.Errorf("MessagesDialogsSlice Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesDialogsNotModified) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesDialogsNotModified:
		m.SetCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessagesDialogsNotModified Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesDiscussionMessage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesDiscussionMessage:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*Message, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &Message{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetMessages(v2)

		if (flags & (1 << 0)) != 0 {
			m.SetMaxId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m.SetReadInboxMaxId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetReadOutboxMaxId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		c6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c6 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 6, c6)
			return dBuf.err
		}
		l6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v6 := make([]*Chat, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = &Chat{}
			err = v6[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v6)

		c7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c7 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 7, c7)
			return dBuf.err
		}
		l7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v7 := make([]*User, l7)
		for i := int32(0); i < l7; i++ {
			v7[i] = &User{}
			err = v7[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v7)

	default:
		log.Errorf("MessagesDiscussionMessage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesFavedStickersNotModified) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesFavedStickersNotModified:
		_ = m

	default:
		log.Errorf("MessagesFavedStickersNotModified Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesFavedStickers) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesFavedStickers:
		m.SetHash(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*StickerPack, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &StickerPack{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetPacks(v2)

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*Document, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &Document{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetStickers(v3)

	default:
		log.Errorf("MessagesFavedStickers Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesFeaturedStickersNotModified) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesFeaturedStickersNotModified:
		_ = m

	case Cmd_MessagesFeaturedStickersNotModifiedc6dc0c66:
		m.SetCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessagesFeaturedStickersNotModified Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesFeaturedStickers) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesFeaturedStickers:
		m.SetHash(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*StickerSetCovered, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &StickerSetCovered{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetSets(v2)

		m.SetUnread(dBuf.VectorLong())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_MessagesFeaturedStickersb6abc341:
		m.SetHash(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*StickerSetCovered, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &StickerSetCovered{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetSets(v3)

		m.SetUnread(dBuf.VectorLong())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessagesFeaturedStickers Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesFoundGifs) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesFoundGifs:
		m.SetNextOffset(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*FoundGif, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &FoundGif{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetResults(v2)

	default:
		log.Errorf("MessagesFoundGifs Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesFoundStickerSetsNotModified) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesFoundStickerSetsNotModified:
		_ = m

	default:
		log.Errorf("MessagesFoundStickerSetsNotModified Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesFoundStickerSets) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesFoundStickerSets:
		m.SetHash(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*StickerSetCovered, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &StickerSetCovered{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetSets(v2)

	default:
		log.Errorf("MessagesFoundStickerSets Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesHighScores) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesHighScores:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*HighScore, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &HighScore{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetScores(v1)

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*User, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &User{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v2)

	default:
		log.Errorf("MessagesHighScores Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesInactiveChats) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesInactiveChats:
		m.SetDates(dBuf.VectorInt())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*Chat, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &Chat{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v2)

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*User, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &User{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v3)

	default:
		log.Errorf("MessagesInactiveChats Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesMessageEditData) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesMessageEditData:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCaption(flags&(1<<0) != 0)

	default:
		log.Errorf("MessagesMessageEditData Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesMessageViews) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesMessageViews:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*MessageViews, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &MessageViews{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetViews(v1)

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*Chat, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &Chat{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v2)

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*User, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &User{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v3)

	default:
		log.Errorf("MessagesMessageViews Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesMessages) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesMessages:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*Message, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &Message{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetMessages(v1)

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*Chat, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &Chat{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v2)

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*User, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &User{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v3)

	default:
		log.Errorf("MessagesMessages Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesMessagesSlice) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesMessagesSlice:
		m.SetCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*Message, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &Message{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetMessages(v2)

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*Chat, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &Chat{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v3)

		c4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c4 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 4, c4)
			return dBuf.err
		}
		l4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v4 := make([]*User, l4)
		for i := int32(0); i < l4; i++ {
			v4[i] = &User{}
			err = v4[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v4)

	case Cmd_MessagesMessagesSlice3a54685e:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetInexact(flags&(1<<1) != 0)
		m.SetCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetNextRate(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetOffsetIdOffset(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		c6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c6 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 6, c6)
			return dBuf.err
		}
		l6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v6 := make([]*Message, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = &Message{}
			err = v6[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetMessages(v6)

		c7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c7 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 7, c7)
			return dBuf.err
		}
		l7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v7 := make([]*Chat, l7)
		for i := int32(0); i < l7; i++ {
			v7[i] = &Chat{}
			err = v7[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v7)

		c8 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c8 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 8, c8)
			return dBuf.err
		}
		l8 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v8 := make([]*User, l8)
		for i := int32(0); i < l8; i++ {
			v8[i] = &User{}
			err = v8[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v8)

	case Cmd_MessagesMessagesSlicea6c47aaa:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetInexact(flags&(1<<1) != 0)
		m.SetCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c4 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 4, c4)
			return dBuf.err
		}
		l4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v4 := make([]*Message, l4)
		for i := int32(0); i < l4; i++ {
			v4[i] = &Message{}
			err = v4[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetMessages(v4)

		c5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c5 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 5, c5)
			return dBuf.err
		}
		l5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v5 := make([]*Chat, l5)
		for i := int32(0); i < l5; i++ {
			v5[i] = &Chat{}
			err = v5[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v5)

		c6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c6 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 6, c6)
			return dBuf.err
		}
		l6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v6 := make([]*User, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = &User{}
			err = v6[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v6)

	case Cmd_MessagesMessagesSlicec8edce1e:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetInexact(flags&(1<<1) != 0)
		m.SetCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetNextRate(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		c5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c5 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 5, c5)
			return dBuf.err
		}
		l5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v5 := make([]*Message, l5)
		for i := int32(0); i < l5; i++ {
			v5[i] = &Message{}
			err = v5[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetMessages(v5)

		c6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c6 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 6, c6)
			return dBuf.err
		}
		l6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v6 := make([]*Chat, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = &Chat{}
			err = v6[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v6)

		c7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c7 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 7, c7)
			return dBuf.err
		}
		l7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v7 := make([]*User, l7)
		for i := int32(0); i < l7; i++ {
			v7[i] = &User{}
			err = v7[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v7)

	default:
		log.Errorf("MessagesMessagesSlice Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesChannelMessages) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesChannelMessages:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c4 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 4, c4)
			return dBuf.err
		}
		l4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v4 := make([]*Message, l4)
		for i := int32(0); i < l4; i++ {
			v4[i] = &Message{}
			err = v4[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetMessages(v4)

		c5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c5 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 5, c5)
			return dBuf.err
		}
		l5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v5 := make([]*Chat, l5)
		for i := int32(0); i < l5; i++ {
			v5[i] = &Chat{}
			err = v5[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v5)

		c6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c6 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 6, c6)
			return dBuf.err
		}
		l6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v6 := make([]*User, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = &User{}
			err = v6[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v6)

	case Cmd_MessagesChannelMessages64479808:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetInexact(flags&(1<<1) != 0)
		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 2)) != 0 {
			m.SetOffsetIdOffset(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		c6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c6 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 6, c6)
			return dBuf.err
		}
		l6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v6 := make([]*Message, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = &Message{}
			err = v6[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetMessages(v6)

		c7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c7 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 7, c7)
			return dBuf.err
		}
		l7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v7 := make([]*Chat, l7)
		for i := int32(0); i < l7; i++ {
			v7[i] = &Chat{}
			err = v7[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v7)

		c8 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c8 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 8, c8)
			return dBuf.err
		}
		l8 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v8 := make([]*User, l8)
		for i := int32(0); i < l8; i++ {
			v8[i] = &User{}
			err = v8[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v8)

	case Cmd_MessagesChannelMessagesbc0f17bc:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c4 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 4, c4)
			return dBuf.err
		}
		l4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v4 := make([]*Message, l4)
		for i := int32(0); i < l4; i++ {
			v4[i] = &Message{}
			err = v4[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetMessages(v4)

		if (flags & (1 << 0)) != 0 {
			c5 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c5 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 5, c5)
				return dBuf.err
			}
			l5 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v5 := make([]*MessageGroup, l5)
			for i := int32(0); i < l5; i++ {
				v5[i] = &MessageGroup{}
				err = v5[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetCollapsed(v5)

		}
		c6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c6 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 6, c6)
			return dBuf.err
		}
		l6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v6 := make([]*Chat, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = &Chat{}
			err = v6[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v6)

		c7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c7 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 7, c7)
			return dBuf.err
		}
		l7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v7 := make([]*User, l7)
		for i := int32(0); i < l7; i++ {
			v7[i] = &User{}
			err = v7[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v7)

	default:
		log.Errorf("MessagesChannelMessages Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesMessagesNotModified) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesMessagesNotModified:
		m.SetCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessagesMessagesNotModified Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesPeerDialogs) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesPeerDialogs:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*Dialog, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &Dialog{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetDialogs(v1)

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*Message, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &Message{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetMessages(v2)

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*Chat, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &Chat{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v3)

		c4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c4 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 4, c4)
			return dBuf.err
		}
		l4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v4 := make([]*User, l4)
		for i := int32(0); i < l4; i++ {
			v4[i] = &User{}
			err = v4[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v4)

		m5 := &Updates_State{}
		err = m5.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetState(m5)

	default:
		log.Errorf("MessagesPeerDialogs Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesRecentStickersNotModified) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesRecentStickersNotModified:
		_ = m

	default:
		log.Errorf("MessagesRecentStickersNotModified Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesRecentStickers) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesRecentStickers:
		m.SetHash(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*Document, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &Document{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetStickers(v2)

	case Cmd_MessagesRecentStickers22f3afb3:
		m.SetHash(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*StickerPack, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &StickerPack{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetPacks(v2)

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*Document, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &Document{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetStickers(v3)

		m.SetDates(dBuf.VectorInt())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessagesRecentStickers Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesSavedGifsNotModified) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesSavedGifsNotModified:
		_ = m

	default:
		log.Errorf("MessagesSavedGifsNotModified Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesSavedGifs) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesSavedGifs:
		m.SetHash(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*Document, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &Document{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetGifs(v2)

	default:
		log.Errorf("MessagesSavedGifs Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesSearchCounter) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesSearchCounter:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetInexact(flags&(1<<1) != 0)
		m3 := &MessagesFilter{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetFilter(m3)
		m.SetCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessagesSearchCounter Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesSentEncryptedMessage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesSentEncryptedMessage:
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MessagesSentEncryptedMessage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesSentEncryptedFile) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesSentEncryptedFile:
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &EncryptedFile{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetFile(m2)

	default:
		log.Errorf("MessagesSentEncryptedFile Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesStickerSet) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesStickerSet:
		m1 := &StickerSet{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetSet(m1)
		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*StickerPack, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &StickerPack{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetPacks(v2)

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*Document, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &Document{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetDocuments(v3)

	default:
		log.Errorf("MessagesStickerSet Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesStickerSetInstallResultSuccess) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesStickerSetInstallResultSuccess:
		_ = m

	default:
		log.Errorf("MessagesStickerSetInstallResultSuccess Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesStickerSetInstallResultArchive) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesStickerSetInstallResultArchive:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*StickerSetCovered, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &StickerSetCovered{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetSets(v1)

	default:
		log.Errorf("MessagesStickerSetInstallResultArchive Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesStickersNotModified) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesStickersNotModified:
		_ = m

	default:
		log.Errorf("MessagesStickersNotModified Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesStickers) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesStickers:
		m.SetHash8A8ECD3271(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*Document, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &Document{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetStickers(v2)

	case Cmd_MessagesStickerse4599bbd:
		m.SetHashE4599BBD85(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*Document, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &Document{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetStickers(v2)

	default:
		log.Errorf("MessagesStickers Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMessagesVotesList) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MessagesVotesList:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*MessageUserVote, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &MessageUserVote{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetVotes(v3)

		c4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c4 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 4, c4)
			return dBuf.err
		}
		l4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v4 := make([]*User, l4)
		for i := int32(0); i < l4; i++ {
			v4[i] = &User{}
			err = v4[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v4)

		if (flags & (1 << 0)) != 0 {
			m.SetNextOffset(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("MessagesVotesList Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMsgDetailedInfo) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MsgDetailedInfo:
		m.SetMsgId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAnswerMsgId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetBytes(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetStatus(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MsgDetailedInfo Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMsgNewDetailedInfo) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MsgNewDetailedInfo:
		m.SetAnswerMsgId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetBytes(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetStatus(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MsgNewDetailedInfo Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMsgResendReq) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MsgResendReq:
		m.SetMsgIds(dBuf.VectorLong())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MsgResendReq Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMsgsAck) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MsgsAck:
		m.SetMsgIds(dBuf.VectorLong())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MsgsAck Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMsgsAllInfo) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MsgsAllInfo:
		m.SetMsgIds(dBuf.VectorLong())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetInfo(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MsgsAllInfo Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMsgsStateInfo) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MsgsStateInfo:
		m.SetReqMsgId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetInfo(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MsgsStateInfo Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLMsgsStateReq) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_MsgsStateReq:
		m.SetMsgIds(dBuf.VectorLong())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("MsgsStateReq Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLNearestDc) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_NearestDc:
		m.SetCountry(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetThisDc(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNearestDc(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("NearestDc Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLNewSessionCreated) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_NewSessionCreated:
		m.SetFirstMsgId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUniqueId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetServerSalt(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("NewSessionCreated Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLNotifyPeer) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_NotifyPeer:
		m1 := &Peer{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer(m1)

	default:
		log.Errorf("NotifyPeer Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLNotifyUsers) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_NotifyUsers:
		_ = m

	default:
		log.Errorf("NotifyUsers Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLNotifyChats) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_NotifyChats:
		_ = m

	default:
		log.Errorf("NotifyChats Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLNotifyAll) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_NotifyAll:
		_ = m

	default:
		log.Errorf("NotifyAll Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLNotifyBroadcasts) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_NotifyBroadcasts:
		_ = m

	default:
		log.Errorf("NotifyBroadcasts Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLNull) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_Null:
		_ = m

	default:
		log.Errorf("Null Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPQInnerData) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PQInnerData:
		m.SetPq(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetP(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetQ(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNonce(dBuf.Bytes(16))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetServerNonce(dBuf.Bytes(16))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNewNonce(dBuf.Bytes(32))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PQInnerData Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPQInnerDataDc) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PQInnerDataDc:
		m.SetPq(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetP(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetQ(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNonce(dBuf.Bytes(16))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetServerNonce(dBuf.Bytes(16))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNewNonce(dBuf.Bytes(32))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDc(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PQInnerDataDc Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPQInnerDataTemp) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PQInnerDataTemp:
		m.SetPq(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetP(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetQ(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNonce(dBuf.Bytes(16))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetServerNonce(dBuf.Bytes(16))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNewNonce(dBuf.Bytes(32))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetExpiresIn(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PQInnerDataTemp Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPQInnerDataTempDc) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PQInnerDataTempDc:
		m.SetPq(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetP(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetQ(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNonce(dBuf.Bytes(16))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetServerNonce(dBuf.Bytes(16))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNewNonce(dBuf.Bytes(32))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDc(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetExpiresIn(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PQInnerDataTempDc Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPagePart) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PagePart:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*PageBlock, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &PageBlock{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetBlocks(v1)

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*Photo, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &Photo{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetPhotos(v2)

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*Document, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &Document{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetDocuments(v3)

	default:
		log.Errorf("PagePart Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageFull) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageFull:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*PageBlock, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &PageBlock{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetBlocks(v1)

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*Photo, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &Photo{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetPhotos(v2)

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*Document, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &Document{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetDocuments(v3)

	default:
		log.Errorf("PageFull Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_Page:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPart(flags&(1<<0) != 0)
		m.SetRtl(flags&(1<<1) != 0)
		c4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c4 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 4, c4)
			return dBuf.err
		}
		l4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v4 := make([]*PageBlock, l4)
		for i := int32(0); i < l4; i++ {
			v4[i] = &PageBlock{}
			err = v4[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetBlocks(v4)

		c5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c5 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 5, c5)
			return dBuf.err
		}
		l5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v5 := make([]*Photo, l5)
		for i := int32(0); i < l5; i++ {
			v5[i] = &Photo{}
			err = v5[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetPhotos(v5)

		c6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c6 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 6, c6)
			return dBuf.err
		}
		l6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v6 := make([]*Document, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = &Document{}
			err = v6[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetDocuments(v6)

	case Cmd_Page98657f0d:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPart(flags&(1<<0) != 0)
		m.SetRtl(flags&(1<<1) != 0)
		m.SetV2(flags&(1<<2) != 0)
		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c6 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 6, c6)
			return dBuf.err
		}
		l6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v6 := make([]*PageBlock, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = &PageBlock{}
			err = v6[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetBlocks(v6)

		c7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c7 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 7, c7)
			return dBuf.err
		}
		l7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v7 := make([]*Photo, l7)
		for i := int32(0); i < l7; i++ {
			v7[i] = &Photo{}
			err = v7[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetPhotos(v7)

		c8 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c8 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 8, c8)
			return dBuf.err
		}
		l8 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v8 := make([]*Document, l8)
		for i := int32(0); i < l8; i++ {
			v8[i] = &Document{}
			err = v8[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetDocuments(v8)

		if (flags & (1 << 3)) != 0 {
			m.SetViews(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_Pageae891bec:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPart(flags&(1<<0) != 0)
		m.SetRtl(flags&(1<<1) != 0)
		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c5 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 5, c5)
			return dBuf.err
		}
		l5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v5 := make([]*PageBlock, l5)
		for i := int32(0); i < l5; i++ {
			v5[i] = &PageBlock{}
			err = v5[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetBlocks(v5)

		c6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c6 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 6, c6)
			return dBuf.err
		}
		l6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v6 := make([]*Photo, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = &Photo{}
			err = v6[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetPhotos(v6)

		c7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c7 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 7, c7)
			return dBuf.err
		}
		l7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v7 := make([]*Document, l7)
		for i := int32(0); i < l7; i++ {
			v7[i] = &Document{}
			err = v7[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetDocuments(v7)

	default:
		log.Errorf("Page Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageBlockUnsupported) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageBlockUnsupported:
		_ = m

	default:
		log.Errorf("PageBlockUnsupported Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageBlockTitle) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageBlockTitle:
		m1 := &RichText{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetText(m1)

	default:
		log.Errorf("PageBlockTitle Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageBlockSubtitle) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageBlockSubtitle:
		m1 := &RichText{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetText(m1)

	default:
		log.Errorf("PageBlockSubtitle Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageBlockAuthorDate) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageBlockAuthorDate:
		m1 := &RichText{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetAuthorBAAFE5E071(m1)
		m.SetPublishedDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PageBlockAuthorDate Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageBlockHeader) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageBlockHeader:
		m1 := &RichText{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetText(m1)

	default:
		log.Errorf("PageBlockHeader Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageBlockSubheader) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageBlockSubheader:
		m1 := &RichText{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetText(m1)

	default:
		log.Errorf("PageBlockSubheader Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageBlockParagraph) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageBlockParagraph:
		m1 := &RichText{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetText(m1)

	default:
		log.Errorf("PageBlockParagraph Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageBlockPreformatted) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageBlockPreformatted:
		m1 := &RichText{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetText(m1)
		m.SetLanguage(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PageBlockPreformatted Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageBlockFooter) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageBlockFooter:
		m1 := &RichText{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetText(m1)

	default:
		log.Errorf("PageBlockFooter Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageBlockDivider) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageBlockDivider:
		_ = m

	default:
		log.Errorf("PageBlockDivider Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageBlockAnchor) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageBlockAnchor:
		m.SetName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PageBlockAnchor Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageBlockList) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageBlockList:
		m1 := &Bool{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetOrdered(m1)
		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*RichText, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &RichText{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetItems3A58C7F471(v2)

	case Cmd_PageBlockListe4e88011:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*PageListItem, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &PageListItem{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetItemsE4E8801188(v1)

	default:
		log.Errorf("PageBlockList Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageBlockBlockquote) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageBlockBlockquote:
		m1 := &RichText{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetText(m1)
		m2 := &RichText{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCaption263D7C2671(m2)

	default:
		log.Errorf("PageBlockBlockquote Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageBlockPullquote) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageBlockPullquote:
		m1 := &RichText{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetText(m1)
		m2 := &RichText{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCaption263D7C2671(m2)

	default:
		log.Errorf("PageBlockPullquote Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageBlockPhoto) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageBlockPhoto:
		m.SetPhotoId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &RichText{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCaption263D7C2671(m2)

	case Cmd_PageBlockPhoto1759c560:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPhotoId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m3 := &PageCaption{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCaption1759C56088(m3)
		if (flags & (1 << 0)) != 0 {
			m.SetUrl(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 0)) != 0 {
			m.SetWebpageId(dBuf.Long())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("PageBlockPhoto Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageBlockVideo) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageBlockVideo:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAutoplay(flags&(1<<0) != 0)
		m.SetLoop(flags&(1<<1) != 0)
		m.SetVideoId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m5 := &RichText{}
		err = m5.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCaption263D7C2671(m5)

	case Cmd_PageBlockVideo7c8fe7b6:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAutoplay(flags&(1<<0) != 0)
		m.SetLoop(flags&(1<<1) != 0)
		m.SetVideoId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m5 := &PageCaption{}
		err = m5.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCaption1759C56088(m5)

	default:
		log.Errorf("PageBlockVideo Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageBlockCover) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageBlockCover:
		m1 := &PageBlock{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCover(m1)

	default:
		log.Errorf("PageBlockCover Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageBlockEmbed) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageBlockEmbed:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFullWidth(flags&(1<<0) != 0)
		m.SetAllowScrolling(flags&(1<<3) != 0)
		if (flags & (1 << 1)) != 0 {
			m.SetUrl(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetHtml(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m.SetPosterPhotoId(dBuf.Long())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetW(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetH(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m9 := &RichText{}
		err = m9.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCaption263D7C2671(m9)

	case Cmd_PageBlockEmbeda8718dc5:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFullWidth(flags&(1<<0) != 0)
		m.SetAllowScrolling(flags&(1<<3) != 0)
		if (flags & (1 << 1)) != 0 {
			m.SetUrl(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetHtml(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m.SetPosterPhotoId(dBuf.Long())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 5)) != 0 {
			m.SetW(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 5)) != 0 {
			m.SetH(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m9 := &PageCaption{}
		err = m9.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCaption1759C56088(m9)

	default:
		log.Errorf("PageBlockEmbed Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageBlockEmbedPost) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageBlockEmbedPost:
		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetWebpageId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAuthorPhotoId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAuthor292C7BE971(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c6 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 6, c6)
			return dBuf.err
		}
		l6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v6 := make([]*PageBlock, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = &PageBlock{}
			err = v6[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetBlocks(v6)

		m7 := &RichText{}
		err = m7.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCaption263D7C2671(m7)

	case Cmd_PageBlockEmbedPostf259a80b:
		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetWebpageId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAuthorPhotoId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAuthor292C7BE971(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c6 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 6, c6)
			return dBuf.err
		}
		l6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v6 := make([]*PageBlock, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = &PageBlock{}
			err = v6[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetBlocks(v6)

		m7 := &PageCaption{}
		err = m7.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCaption1759C56088(m7)

	default:
		log.Errorf("PageBlockEmbedPost Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageBlockCollage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageBlockCollage:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*PageBlock, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &PageBlock{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetItems8B31C4F71(v1)

		m2 := &RichText{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCaption263D7C2671(m2)

	case Cmd_PageBlockCollage65a0fa4d:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*PageBlock, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &PageBlock{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetItems8B31C4F71(v1)

		m2 := &PageCaption{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCaption1759C56088(m2)

	default:
		log.Errorf("PageBlockCollage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageBlockSlideshow) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageBlockSlideshow:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*PageBlock, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &PageBlock{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetItems8B31C4F71(v1)

		m2 := &RichText{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCaption263D7C2671(m2)

	case Cmd_PageBlockSlideshow31f9590:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*PageBlock, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &PageBlock{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetItems8B31C4F71(v1)

		m2 := &PageCaption{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCaption1759C56088(m2)

	default:
		log.Errorf("PageBlockSlideshow Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageBlockChannel) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageBlockChannel:
		m1 := &Chat{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetChannel(m1)

	default:
		log.Errorf("PageBlockChannel Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageBlockAudio) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageBlockAudio:
		m.SetAudioId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &RichText{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCaption263D7C2671(m2)

	case Cmd_PageBlockAudio804361ea:
		m.SetAudioId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &PageCaption{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCaption1759C56088(m2)

	default:
		log.Errorf("PageBlockAudio Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageBlockKicker) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageBlockKicker:
		m1 := &RichText{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetText(m1)

	default:
		log.Errorf("PageBlockKicker Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageBlockTable) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageBlockTable:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetBordered(flags&(1<<0) != 0)
		m.SetStriped(flags&(1<<1) != 0)
		m4 := &RichText{}
		err = m4.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetTitle(m4)
		c5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c5 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 5, c5)
			return dBuf.err
		}
		l5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v5 := make([]*PageTableRow, l5)
		for i := int32(0); i < l5; i++ {
			v5[i] = &PageTableRow{}
			err = v5[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetRows(v5)

	default:
		log.Errorf("PageBlockTable Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageBlockOrderedList) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageBlockOrderedList:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*PageListOrderedItem, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &PageListOrderedItem{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetItems9A8AE1E188(v1)

	default:
		log.Errorf("PageBlockOrderedList Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageBlockDetails) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageBlockDetails:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOpen(flags&(1<<0) != 0)
		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*PageBlock, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &PageBlock{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetBlocks(v3)

		m4 := &RichText{}
		err = m4.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetTitle(m4)

	default:
		log.Errorf("PageBlockDetails Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageBlockRelatedArticles) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageBlockRelatedArticles:
		m1 := &RichText{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetTitle(m1)
		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*PageRelatedArticle, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &PageRelatedArticle{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetArticles(v2)

	default:
		log.Errorf("PageBlockRelatedArticles Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageBlockMap) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageBlockMap:
		m1 := &GeoPoint{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetGeo(m1)
		m.SetZoom(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetW(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetH(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m5 := &PageCaption{}
		err = m5.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCaption1759C56088(m5)

	default:
		log.Errorf("PageBlockMap Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageCaption) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageCaption:
		m1 := &RichText{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetText(m1)
		m2 := &RichText{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCredit(m2)

	default:
		log.Errorf("PageCaption Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageListItemText) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageListItemText:
		m1 := &RichText{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetText(m1)

	default:
		log.Errorf("PageListItemText Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageListItemBlocks) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageListItemBlocks:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*PageBlock, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &PageBlock{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetBlocks(v1)

	default:
		log.Errorf("PageListItemBlocks Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageListOrderedItemText) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageListOrderedItemText:
		m.SetNum(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &RichText{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetText(m2)

	default:
		log.Errorf("PageListOrderedItemText Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageListOrderedItemBlocks) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageListOrderedItemBlocks:
		m.SetNum(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*PageBlock, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &PageBlock{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetBlocks(v2)

	default:
		log.Errorf("PageListOrderedItemBlocks Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageRelatedArticle) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageRelatedArticle:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetWebpageId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetTitle(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m.SetDescription(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetPhotoId(dBuf.Long())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_PageRelatedArticleb390dc08:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetWebpageId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetTitle(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m.SetDescription(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetPhotoId(dBuf.Long())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetAuthor(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m.SetPublishedDate(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("PageRelatedArticle Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageTableCell) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageTableCell:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetHeader(flags&(1<<0) != 0)
		m.SetAlignCenter(flags&(1<<3) != 0)
		m.SetAlignRight(flags&(1<<4) != 0)
		m.SetValignMiddle(flags&(1<<5) != 0)
		m.SetValignBottom(flags&(1<<6) != 0)
		if (flags & (1 << 7)) != 0 {
			m7 := &RichText{}
			err = m7.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetText(m7)
		}
		if (flags & (1 << 1)) != 0 {
			m.SetColspan(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetRowspan(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("PageTableCell Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPageTableRow) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PageTableRow:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*PageTableCell, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &PageTableCell{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetCells(v1)

	default:
		log.Errorf("PageTableRow Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPasswordKdfAlgoUnknown) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PasswordKdfAlgoUnknown:
		_ = m

	default:
		log.Errorf("PasswordKdfAlgoUnknown Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512Iter100000SHA256ModPow) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512Iter100000SHA256ModPow:
		m.SetSalt1(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSalt2(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetG(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetP(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512Iter100000SHA256ModPow Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPaymentCharge) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PaymentCharge:
		m.SetId(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetProviderChargeId(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PaymentCharge Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPaymentRequestedInfo) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PaymentRequestedInfo:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetName(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m.SetPhone(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetEmail(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m5 := &PostAddress{}
			err = m5.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetShippingAddress(m5)
		}

	default:
		log.Errorf("PaymentRequestedInfo Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPaymentSavedCredentialsCard) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PaymentSavedCredentialsCard:
		m.SetId(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PaymentSavedCredentialsCard Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPaymentsBankCardData) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PaymentsBankCardData:
		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*BankCardOpenUrl, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &BankCardOpenUrl{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetOpenUrls(v2)

	default:
		log.Errorf("PaymentsBankCardData Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPaymentsPaymentForm) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PaymentsPaymentForm:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCanSaveCredentials(flags&(1<<2) != 0)
		m.SetPasswordMissing(flags&(1<<3) != 0)
		m.SetBotId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m5 := &Invoice{}
		err = m5.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetInvoice(m5)
		m.SetProviderId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 4)) != 0 {
			m.SetNativeProvider(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m9 := &DataJSON{}
			err = m9.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetNativeParams(m9)
		}
		if (flags & (1 << 0)) != 0 {
			m10 := &PaymentRequestedInfo{}
			err = m10.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetSavedInfo(m10)
		}
		if (flags & (1 << 1)) != 0 {
			m11 := &PaymentSavedCredentials{}
			err = m11.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetSavedCredentials(m11)
		}
		c12 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c12 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 12, c12)
			return dBuf.err
		}
		l12 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v12 := make([]*User, l12)
		for i := int32(0); i < l12; i++ {
			v12[i] = &User{}
			err = v12[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v12)

	default:
		log.Errorf("PaymentsPaymentForm Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPaymentsPaymentReceipt) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PaymentsPaymentReceipt:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetBotId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m4 := &Invoice{}
		err = m4.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetInvoice(m4)
		m.SetProviderId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m6 := &PaymentRequestedInfo{}
			err = m6.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetInfo(m6)
		}
		if (flags & (1 << 1)) != 0 {
			m7 := &ShippingOption{}
			err = m7.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetShipping(m7)
		}
		m.SetCurrency(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTotalAmount(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCredentialsTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c11 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c11 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 11, c11)
			return dBuf.err
		}
		l11 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v11 := make([]*User, l11)
		for i := int32(0); i < l11; i++ {
			v11[i] = &User{}
			err = v11[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v11)

	default:
		log.Errorf("PaymentsPaymentReceipt Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPaymentsPaymentResult) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PaymentsPaymentResult:
		m1 := &Updates{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetUpdates(m1)

	default:
		log.Errorf("PaymentsPaymentResult Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPaymentsPaymentVerficationNeeded) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PaymentsPaymentVerficationNeeded:
		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PaymentsPaymentVerficationNeeded Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPaymentsPaymentVerificationNeeded) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PaymentsPaymentVerificationNeeded:
		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PaymentsPaymentVerificationNeeded Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPaymentsSavedInfo) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PaymentsSavedInfo:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetHasSavedCredentials(flags&(1<<1) != 0)
		if (flags & (1 << 0)) != 0 {
			m3 := &PaymentRequestedInfo{}
			err = m3.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetSavedInfo(m3)
		}

	default:
		log.Errorf("PaymentsSavedInfo Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPaymentsValidatedRequestedInfo) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PaymentsValidatedRequestedInfo:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetId(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			c3 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c3 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
				return dBuf.err
			}
			l3 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v3 := make([]*ShippingOption, l3)
			for i := int32(0); i < l3; i++ {
				v3[i] = &ShippingOption{}
				err = v3[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetShippingOptions(v3)

		}

	default:
		log.Errorf("PaymentsValidatedRequestedInfo Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPeerUser) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PeerUser:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PeerUser Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPeerChat) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PeerChat:
		m.SetChatId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PeerChat Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPeerChannel) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PeerChannel:
		m.SetChannelId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PeerChannel Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPeerBlocked) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PeerBlocked:
		m1 := &Peer{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeerId(m1)
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PeerBlocked Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPeerLocated) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PeerLocated:
		m1 := &Peer{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer(m1)
		m.SetExpires(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDistance(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PeerLocated Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPeerSelfLocated) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PeerSelfLocated:
		m.SetExpires(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PeerSelfLocated Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPeerNotifyEventsEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PeerNotifyEventsEmpty:
		_ = m

	default:
		log.Errorf("PeerNotifyEventsEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPeerNotifyEventsAll) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PeerNotifyEventsAll:
		_ = m

	default:
		log.Errorf("PeerNotifyEventsAll Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPeerNotifySettingsEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PeerNotifySettingsEmpty:
		_ = m

	default:
		log.Errorf("PeerNotifySettingsEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPeerNotifySettings) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PeerNotifySettings:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetShowPreviews9ACDA4C071(flags&(1<<0) != 0)
		m.SetSilent9ACDA4C071(flags&(1<<1) != 0)
		m.SetMuteUntil(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSound(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_PeerNotifySettingsaf509d20:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m2 := &Bool{}
			err = m2.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetShowPreviewsAF509D2085(m2)
		}
		if (flags & (1 << 1)) != 0 {
			m3 := &Bool{}
			err = m3.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetSilentAF509D2085(m3)
		}
		if (flags & (1 << 2)) != 0 {
			m.SetMuteUntil(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetSound(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("PeerNotifySettings Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPeerSettings) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PeerSettings:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetReportSpam(flags&(1<<0) != 0)

	case Cmd_PeerSettings733f2961:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetReportSpam(flags&(1<<0) != 0)
		m.SetAddContact(flags&(1<<1) != 0)
		m.SetBlockContact(flags&(1<<2) != 0)
		m.SetShareContact(flags&(1<<3) != 0)
		m.SetNeedContactsException(flags&(1<<4) != 0)
		m.SetReportGeo(flags&(1<<5) != 0)
		m.SetAutoarchived(flags&(1<<7) != 0)
		if (flags & (1 << 6)) != 0 {
			m.SetGeoDistance(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("PeerSettings Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPhoneCallEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PhoneCallEmpty:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PhoneCallEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPhoneCallRequested) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PhoneCallRequested:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAdminId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetParticipantId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetGAHash(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m7 := &PhoneCallProtocol{}
		err = m7.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetProtocol(m7)

	case Cmd_PhoneCallRequested87eabb53:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVideo(flags&(1<<6) != 0)
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAdminId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetParticipantId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetGAHash(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m9 := &PhoneCallProtocol{}
		err = m9.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetProtocol(m9)

	default:
		log.Errorf("PhoneCallRequested Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPhoneCallAccepted) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PhoneCallAccepted:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAdminId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetParticipantId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetGB(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m7 := &PhoneCallProtocol{}
		err = m7.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetProtocol(m7)

	case Cmd_PhoneCallAccepted997c454a:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVideo(flags&(1<<6) != 0)
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAdminId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetParticipantId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetGB(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m9 := &PhoneCallProtocol{}
		err = m9.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetProtocol(m9)

	default:
		log.Errorf("PhoneCallAccepted Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPhoneCall) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PhoneCall:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAdminId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetParticipantId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetGAOrB(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetKeyFingerprint(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m8 := &PhoneCallProtocol{}
		err = m8.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetProtocol(m8)
		m9 := &PhoneConnection{}
		err = m9.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetConnection(m9)
		c10 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c10 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 10, c10)
			return dBuf.err
		}
		l10 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v10 := make([]*PhoneConnection, l10)
		for i := int32(0); i < l10; i++ {
			v10[i] = &PhoneConnection{}
			err = v10[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetAlternativeConnections(v10)

		m.SetStartDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_PhoneCall8742ae7f:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetP2PAllowed(flags&(1<<5) != 0)
		m.SetVideo(flags&(1<<6) != 0)
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAdminId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetParticipantId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetGAOrB(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetKeyFingerprint(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m11 := &PhoneCallProtocol{}
		err = m11.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetProtocol(m11)
		c12 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c12 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 12, c12)
			return dBuf.err
		}
		l12 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v12 := make([]*PhoneConnection, l12)
		for i := int32(0); i < l12; i++ {
			v12[i] = &PhoneConnection{}
			err = v12[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetConnections(v12)

		m.SetStartDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_PhoneCalle6f9ddf3:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetP2PAllowed(flags&(1<<5) != 0)
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAdminId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetParticipantId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetGAOrB(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetKeyFingerprint(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m10 := &PhoneCallProtocol{}
		err = m10.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetProtocol(m10)
		m11 := &PhoneConnection{}
		err = m11.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetConnection(m11)
		c12 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c12 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 12, c12)
			return dBuf.err
		}
		l12 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v12 := make([]*PhoneConnection, l12)
		for i := int32(0); i < l12; i++ {
			v12[i] = &PhoneConnection{}
			err = v12[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetAlternativeConnections(v12)

		m.SetStartDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PhoneCall Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPhoneCallWaiting) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PhoneCallWaiting:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVideo(flags&(1<<6) != 0)
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAdminId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetParticipantId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m8 := &PhoneCallProtocol{}
		err = m8.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetProtocol(m8)
		if (flags & (1 << 0)) != 0 {
			m.SetReceiveDate(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("PhoneCallWaiting Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPhoneCallDiscarded) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PhoneCallDiscarded:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNeedRating(flags&(1<<2) != 0)
		m.SetNeedDebug(flags&(1<<3) != 0)
		m.SetVideo(flags&(1<<6) != 0)
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m6 := &PhoneCallDiscardReason{}
			err = m6.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReason(m6)
		}
		if (flags & (1 << 1)) != 0 {
			m.SetDuration(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("PhoneCallDiscarded Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPhoneCallDiscardReasonMissed) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PhoneCallDiscardReasonMissed:
		_ = m

	default:
		log.Errorf("PhoneCallDiscardReasonMissed Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPhoneCallDiscardReasonDisconnect) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PhoneCallDiscardReasonDisconnect:
		_ = m

	default:
		log.Errorf("PhoneCallDiscardReasonDisconnect Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPhoneCallDiscardReasonHangup) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PhoneCallDiscardReasonHangup:
		_ = m

	default:
		log.Errorf("PhoneCallDiscardReasonHangup Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPhoneCallDiscardReasonBusy) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PhoneCallDiscardReasonBusy:
		_ = m

	default:
		log.Errorf("PhoneCallDiscardReasonBusy Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPhoneCallProtocol) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PhoneCallProtocol:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUdpP2P(flags&(1<<0) != 0)
		m.SetUdpReflector(flags&(1<<1) != 0)
		m.SetMinLayer(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMaxLayer(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_PhoneCallProtocolfc878fc8:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUdpP2P(flags&(1<<0) != 0)
		m.SetUdpReflector(flags&(1<<1) != 0)
		m.SetMinLayer(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMaxLayer(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLibraryVersions(dBuf.VectorString())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PhoneCallProtocol Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPhoneConnection) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PhoneConnection:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetIp(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetIpv6(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPort(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPeerTag(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PhoneConnection Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPhoneConnectionWebrtc) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PhoneConnectionWebrtc:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTurn(flags&(1<<0) != 0)
		m.SetStun(flags&(1<<1) != 0)
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetIp(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetIpv6(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPort(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUsername(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPassword(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PhoneConnectionWebrtc Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPhoneGroupCall) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PhoneGroupCall:
		m1 := &GroupCall{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCall(m1)
		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*GroupCallParticipant, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &GroupCallParticipant{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetParticipants(v2)

		m.SetParticipantsNextOffset(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c4 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 4, c4)
			return dBuf.err
		}
		l4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v4 := make([]*User, l4)
		for i := int32(0); i < l4; i++ {
			v4[i] = &User{}
			err = v4[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v4)

	default:
		log.Errorf("PhoneGroupCall Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPhoneGroupParticipants) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PhoneGroupParticipants:
		m.SetCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*GroupCallParticipant, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &GroupCallParticipant{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetParticipants(v2)

		m.SetNextOffset(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c4 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 4, c4)
			return dBuf.err
		}
		l4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v4 := make([]*User, l4)
		for i := int32(0); i < l4; i++ {
			v4[i] = &User{}
			err = v4[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v4)

		m.SetVersion(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PhoneGroupParticipants Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPhonePhoneCall) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PhonePhoneCall:
		m1 := &PhoneCall{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPhoneCall(m1)
		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*User, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &User{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v2)

	default:
		log.Errorf("PhonePhoneCall Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPhotoEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PhotoEmpty:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PhotoEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPhoto) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_Photo:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetHasStickers(flags&(1<<0) != 0)
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c6 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 6, c6)
			return dBuf.err
		}
		l6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v6 := make([]*PhotoSize, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = &PhotoSize{}
			err = v6[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetSizes(v6)

	case Cmd_Photo9c477dd8:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetHasStickers(flags&(1<<0) != 0)
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFileReference(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c7 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 7, c7)
			return dBuf.err
		}
		l7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v7 := make([]*PhotoSize, l7)
		for i := int32(0); i < l7; i++ {
			v7[i] = &PhotoSize{}
			err = v7[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetSizes(v7)

	case Cmd_Photocded42fe:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c4 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 4, c4)
			return dBuf.err
		}
		l4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v4 := make([]*PhotoSize, l4)
		for i := int32(0); i < l4; i++ {
			v4[i] = &PhotoSize{}
			err = v4[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetSizes(v4)

	case Cmd_Photod07504a5:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetHasStickers(flags&(1<<0) != 0)
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFileReference(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c7 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 7, c7)
			return dBuf.err
		}
		l7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v7 := make([]*PhotoSize, l7)
		for i := int32(0); i < l7; i++ {
			v7[i] = &PhotoSize{}
			err = v7[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetSizes(v7)

		m.SetDcId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_Photofb197a65:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetHasStickers(flags&(1<<0) != 0)
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFileReference(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c7 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 7, c7)
			return dBuf.err
		}
		l7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v7 := make([]*PhotoSize, l7)
		for i := int32(0); i < l7; i++ {
			v7[i] = &PhotoSize{}
			err = v7[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetSizes(v7)

		if (flags & (1 << 1)) != 0 {
			c8 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c8 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 8, c8)
				return dBuf.err
			}
			l8 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v8 := make([]*VideoSize, l8)
			for i := int32(0); i < l8; i++ {
				v8[i] = &VideoSize{}
				err = v8[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetVideoSizes(v8)

		}
		m.SetDcId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("Photo Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPhotoSizeEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PhotoSizeEmpty:
		m.SetType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PhotoSizeEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPhotoSize) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PhotoSize:
		m.SetType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &FileLocation{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetLocation(m2)
		m.SetW(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetH(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSize_(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PhotoSize Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPhotoCachedSize) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PhotoCachedSize:
		m.SetType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &FileLocation{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetLocation(m2)
		m.SetW(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetH(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetBytes(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PhotoCachedSize Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPhotoStrippedSize) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PhotoStrippedSize:
		m.SetType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetBytes(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PhotoStrippedSize Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPhotoSizeProgressive) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PhotoSizeProgressive:
		m.SetType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &FileLocation{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetLocation(m2)
		m.SetW(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetH(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSizes(dBuf.VectorInt())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PhotoSizeProgressive Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPhotoPathSize) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PhotoPathSize:
		m.SetType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetBytes(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PhotoPathSize Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPhotosPhoto) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PhotosPhoto:
		m1 := &Photo{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPhoto(m1)
		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*User, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &User{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v2)

	default:
		log.Errorf("PhotosPhoto Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPhotosPhotos) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PhotosPhotos:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*Photo, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &Photo{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetPhotos(v1)

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*User, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &User{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v2)

	default:
		log.Errorf("PhotosPhotos Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPhotosPhotosSlice) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PhotosPhotosSlice:
		m.SetCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*Photo, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &Photo{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetPhotos(v2)

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*User, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &User{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v3)

	default:
		log.Errorf("PhotosPhotosSlice Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPoll) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_Poll:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetClosed(flags&(1<<0) != 0)
		m.SetQuestion(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c5 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 5, c5)
			return dBuf.err
		}
		l5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v5 := make([]*PollAnswer, l5)
		for i := int32(0); i < l5; i++ {
			v5[i] = &PollAnswer{}
			err = v5[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetAnswers(v5)

	case Cmd_Poll86e18161:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetClosed(flags&(1<<0) != 0)
		m.SetPublicVoters(flags&(1<<1) != 0)
		m.SetMultipleChoice(flags&(1<<2) != 0)
		m.SetQuiz(flags&(1<<3) != 0)
		m.SetQuestion(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c8 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c8 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 8, c8)
			return dBuf.err
		}
		l8 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v8 := make([]*PollAnswer, l8)
		for i := int32(0); i < l8; i++ {
			v8[i] = &PollAnswer{}
			err = v8[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetAnswers(v8)

		if (flags & (1 << 4)) != 0 {
			m.SetClosePeriod(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 5)) != 0 {
			m.SetCloseDate(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("Poll Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPollAnswer) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PollAnswer:
		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOption(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PollAnswer Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPollAnswerVoters) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PollAnswerVoters:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetChosen(flags&(1<<0) != 0)
		m.SetOption(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVoters(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PollAnswerVoters Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPollResults) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PollResults:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMin(flags&(1<<0) != 0)
		if (flags & (1 << 1)) != 0 {
			c3 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c3 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
				return dBuf.err
			}
			l3 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v3 := make([]*PollAnswerVoters, l3)
			for i := int32(0); i < l3; i++ {
				v3[i] = &PollAnswerVoters{}
				err = v3[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetResults(v3)

		}
		if (flags & (1 << 2)) != 0 {
			m.SetTotalVoters(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_PollResultsbadcc1a3:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMin(flags&(1<<0) != 0)
		if (flags & (1 << 1)) != 0 {
			c3 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c3 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
				return dBuf.err
			}
			l3 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v3 := make([]*PollAnswerVoters, l3)
			for i := int32(0); i < l3; i++ {
				v3[i] = &PollAnswerVoters{}
				err = v3[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetResults(v3)

		}
		if (flags & (1 << 2)) != 0 {
			m.SetTotalVoters(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetRecentVoters(dBuf.VectorInt())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}

		}
		if (flags & (1 << 4)) != 0 {
			m.SetSolution(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			c7 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c7 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 7, c7)
				return dBuf.err
			}
			l7 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v7 := make([]*MessageEntity, l7)
			for i := int32(0); i < l7; i++ {
				v7[i] = &MessageEntity{}
				err = v7[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetSolutionEntities(v7)

		}

	case Cmd_PollResultsc87024a2:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMin(flags&(1<<0) != 0)
		if (flags & (1 << 1)) != 0 {
			c3 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c3 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
				return dBuf.err
			}
			l3 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v3 := make([]*PollAnswerVoters, l3)
			for i := int32(0); i < l3; i++ {
				v3[i] = &PollAnswerVoters{}
				err = v3[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetResults(v3)

		}
		if (flags & (1 << 2)) != 0 {
			m.SetTotalVoters(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetRecentVoters(dBuf.VectorInt())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}

		}

	default:
		log.Errorf("PollResults Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPong) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_Pong:
		m.SetMsgId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPingId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("Pong Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPopularContact) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PopularContact:
		m.SetClientId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetImporters(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PopularContact Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPostAddress) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PostAddress:
		m.SetStreetLine1(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetStreetLine2(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCity(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetState(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCountryIso2(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPostCode(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PostAddress Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPrivacyKeyStatusTimestamp) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PrivacyKeyStatusTimestamp:
		_ = m

	default:
		log.Errorf("PrivacyKeyStatusTimestamp Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPrivacyKeyChatInvite) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PrivacyKeyChatInvite:
		_ = m

	default:
		log.Errorf("PrivacyKeyChatInvite Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPrivacyKeyPhoneCall) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PrivacyKeyPhoneCall:
		_ = m

	default:
		log.Errorf("PrivacyKeyPhoneCall Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPrivacyKeyPhoneP2P) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PrivacyKeyPhoneP2P:
		_ = m

	default:
		log.Errorf("PrivacyKeyPhoneP2P Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPrivacyKeyForwards) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PrivacyKeyForwards:
		_ = m

	default:
		log.Errorf("PrivacyKeyForwards Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPrivacyKeyProfilePhoto) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PrivacyKeyProfilePhoto:
		_ = m

	default:
		log.Errorf("PrivacyKeyProfilePhoto Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPrivacyKeyPhoneNumber) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PrivacyKeyPhoneNumber:
		_ = m

	default:
		log.Errorf("PrivacyKeyPhoneNumber Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPrivacyKeyAddedByPhone) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PrivacyKeyAddedByPhone:
		_ = m

	default:
		log.Errorf("PrivacyKeyAddedByPhone Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPrivacyValueAllowContacts) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PrivacyValueAllowContacts:
		_ = m

	default:
		log.Errorf("PrivacyValueAllowContacts Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPrivacyValueAllowAll) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PrivacyValueAllowAll:
		_ = m

	default:
		log.Errorf("PrivacyValueAllowAll Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPrivacyValueAllowUsers) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PrivacyValueAllowUsers:
		m.SetUsers(dBuf.VectorInt())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PrivacyValueAllowUsers Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPrivacyValueDisallowContacts) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PrivacyValueDisallowContacts:
		_ = m

	default:
		log.Errorf("PrivacyValueDisallowContacts Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPrivacyValueDisallowAll) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PrivacyValueDisallowAll:
		_ = m

	default:
		log.Errorf("PrivacyValueDisallowAll Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPrivacyValueDisallowUsers) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PrivacyValueDisallowUsers:
		m.SetUsers(dBuf.VectorInt())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PrivacyValueDisallowUsers Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPrivacyValueAllowChatParticipants) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PrivacyValueAllowChatParticipants:
		m.SetChats(dBuf.VectorInt())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PrivacyValueAllowChatParticipants Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLPrivacyValueDisallowChatParticipants) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_PrivacyValueDisallowChatParticipants:
		m.SetChats(dBuf.VectorInt())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("PrivacyValueDisallowChatParticipants Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLReceivedNotifyMessage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ReceivedNotifyMessage:
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFlags(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ReceivedNotifyMessage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLRecentMeUrlUnknown) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_RecentMeUrlUnknown:
		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("RecentMeUrlUnknown Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLRecentMeUrlUser) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_RecentMeUrlUser:
		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("RecentMeUrlUser Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLRecentMeUrlChat) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_RecentMeUrlChat:
		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetChatId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("RecentMeUrlChat Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLRecentMeUrlChatInvite) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_RecentMeUrlChatInvite:
		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &ChatInvite{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetChatInvite(m2)

	default:
		log.Errorf("RecentMeUrlChatInvite Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLRecentMeUrlStickerSet) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_RecentMeUrlStickerSet:
		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &StickerSetCovered{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetSet(m2)

	default:
		log.Errorf("RecentMeUrlStickerSet Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLReplyKeyboardHide) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ReplyKeyboardHide:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSelective(flags&(1<<2) != 0)

	default:
		log.Errorf("ReplyKeyboardHide Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLReplyKeyboardForceReply) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ReplyKeyboardForceReply:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSingleUse(flags&(1<<1) != 0)
		m.SetSelective(flags&(1<<2) != 0)

	default:
		log.Errorf("ReplyKeyboardForceReply Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLReplyKeyboardMarkup) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ReplyKeyboardMarkup:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetResize(flags&(1<<0) != 0)
		m.SetSingleUse(flags&(1<<1) != 0)
		m.SetSelective(flags&(1<<2) != 0)
		c5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c5 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 5, c5)
			return dBuf.err
		}
		l5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v5 := make([]*KeyboardButtonRow, l5)
		for i := int32(0); i < l5; i++ {
			v5[i] = &KeyboardButtonRow{}
			err = v5[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetRows(v5)

	default:
		log.Errorf("ReplyKeyboardMarkup Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLReplyInlineMarkup) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ReplyInlineMarkup:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*KeyboardButtonRow, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &KeyboardButtonRow{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetRows(v1)

	default:
		log.Errorf("ReplyInlineMarkup Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputReportReasonSpam) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputReportReasonSpam:
		_ = m

	default:
		log.Errorf("InputReportReasonSpam Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputReportReasonViolence) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputReportReasonViolence:
		_ = m

	default:
		log.Errorf("InputReportReasonViolence Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputReportReasonPornography) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputReportReasonPornography:
		_ = m

	default:
		log.Errorf("InputReportReasonPornography Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputReportReasonOther) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputReportReasonOther:
		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("InputReportReasonOther Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputReportReasonCopyright) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputReportReasonCopyright:
		_ = m

	default:
		log.Errorf("InputReportReasonCopyright Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputReportReasonChildAbuse) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputReportReasonChildAbuse:
		_ = m

	default:
		log.Errorf("InputReportReasonChildAbuse Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLInputReportReasonGeoIrrelevant) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_InputReportReasonGeoIrrelevant:
		_ = m

	default:
		log.Errorf("InputReportReasonGeoIrrelevant Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLResPQ) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ResPQ:
		m.SetNonce(dBuf.Bytes(16))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetServerNonce(dBuf.Bytes(16))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPq(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetServerPublicKeyFingerprints(dBuf.VectorLong())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("ResPQ Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLRestrictionReason) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_RestrictionReason:
		m.SetPlatform(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetReason(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("RestrictionReason Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLTextEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_TextEmpty:
		_ = m

	default:
		log.Errorf("TextEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLTextPlain) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_TextPlain:
		m.SetText744694E071(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("TextPlain Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLTextBold) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_TextBold:
		m1 := &RichText{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetText6724ABC471(m1)

	default:
		log.Errorf("TextBold Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLTextItalic) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_TextItalic:
		m1 := &RichText{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetText6724ABC471(m1)

	default:
		log.Errorf("TextItalic Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLTextUnderline) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_TextUnderline:
		m1 := &RichText{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetText6724ABC471(m1)

	default:
		log.Errorf("TextUnderline Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLTextStrike) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_TextStrike:
		m1 := &RichText{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetText6724ABC471(m1)

	default:
		log.Errorf("TextStrike Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLTextFixed) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_TextFixed:
		m1 := &RichText{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetText6724ABC471(m1)

	default:
		log.Errorf("TextFixed Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLTextUrl) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_TextUrl:
		m1 := &RichText{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetText6724ABC471(m1)
		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetWebpageId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("TextUrl Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLTextEmail) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_TextEmail:
		m1 := &RichText{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetText6724ABC471(m1)
		m.SetEmail(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("TextEmail Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLTextConcat) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_TextConcat:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*RichText, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &RichText{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetTexts(v1)

	default:
		log.Errorf("TextConcat Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLTextSubscript) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_TextSubscript:
		m1 := &RichText{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetText6724ABC471(m1)

	default:
		log.Errorf("TextSubscript Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLTextSuperscript) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_TextSuperscript:
		m1 := &RichText{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetText6724ABC471(m1)

	default:
		log.Errorf("TextSuperscript Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLTextMarked) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_TextMarked:
		m1 := &RichText{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetText6724ABC471(m1)

	default:
		log.Errorf("TextMarked Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLTextPhone) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_TextPhone:
		m1 := &RichText{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetText6724ABC471(m1)
		m.SetPhone(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("TextPhone Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLTextImage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_TextImage:
		m.SetDocumentId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetW(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetH(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("TextImage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLTextAnchor) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_TextAnchor:
		m1 := &RichText{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetText6724ABC471(m1)
		m.SetName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("TextAnchor Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLRpcAnswerUnknown) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_RpcAnswerUnknown:
		_ = m

	default:
		log.Errorf("RpcAnswerUnknown Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLRpcAnswerDroppedRunning) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_RpcAnswerDroppedRunning:
		_ = m

	default:
		log.Errorf("RpcAnswerDroppedRunning Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLRpcAnswerDropped) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_RpcAnswerDropped:
		m.SetMsgId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSeqNo(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetBytes(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("RpcAnswerDropped Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLRpcError) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_RpcError:
		m.SetErrorCode(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetErrorMessage(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("RpcError Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSavedPhoneContact) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SavedPhoneContact:
		m.SetPhone(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFirstName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLastName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("SavedPhoneContact Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecureCredentialsEncrypted) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecureCredentialsEncrypted:
		m.SetData(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetHash(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSecret(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("SecureCredentialsEncrypted Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecureData) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecureData:
		m.SetData(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDataHash(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSecret(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("SecureData Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecureFileEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecureFileEmpty:
		_ = m

	default:
		log.Errorf("SecureFileEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecureFile) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecureFile:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSize_(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDcId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFileHash(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSecret(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("SecureFile Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecurePasswordKdfAlgoUnknown) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecurePasswordKdfAlgoUnknown:
		_ = m

	default:
		log.Errorf("SecurePasswordKdfAlgoUnknown Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecurePasswordKdfAlgoPBKDF2HMACSHA512Iter100000) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecurePasswordKdfAlgoPBKDF2HMACSHA512Iter100000:
		m.SetSalt(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("SecurePasswordKdfAlgoPBKDF2HMACSHA512Iter100000 Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecurePasswordKdfAlgoSHA512) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecurePasswordKdfAlgoSHA512:
		m.SetSalt(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("SecurePasswordKdfAlgoSHA512 Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecurePlainPhone) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecurePlainPhone:
		m.SetPhone(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("SecurePlainPhone Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecurePlainEmail) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecurePlainEmail:
		m.SetEmail(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("SecurePlainEmail Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecureRequiredType) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecureRequiredType:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNativeNames(flags&(1<<0) != 0)
		m.SetSelfieRequired(flags&(1<<1) != 0)
		m.SetTranslationRequired(flags&(1<<2) != 0)
		m5 := &SecureValueType{}
		err = m5.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetType(m5)

	default:
		log.Errorf("SecureRequiredType Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecureRequiredTypeOneOf) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecureRequiredTypeOneOf:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*SecureRequiredType, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &SecureRequiredType{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetTypes(v1)

	default:
		log.Errorf("SecureRequiredTypeOneOf Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecureSecretSettings) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecureSecretSettings:
		m1 := &SecurePasswordKdfAlgo{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetSecureAlgo(m1)
		m.SetSecureSecret(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSecureSecretId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("SecureSecretSettings Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecureValue) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecureValue:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &SecureValueType{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetType(m2)
		if (flags & (1 << 0)) != 0 {
			m3 := &SecureData{}
			err = m3.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetData(m3)
		}
		if (flags & (1 << 1)) != 0 {
			m4 := &SecureFile{}
			err = m4.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetFrontSide(m4)
		}
		if (flags & (1 << 2)) != 0 {
			m5 := &SecureFile{}
			err = m5.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReverseSide(m5)
		}
		if (flags & (1 << 3)) != 0 {
			m6 := &SecureFile{}
			err = m6.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetSelfie(m6)
		}
		if (flags & (1 << 6)) != 0 {
			c7 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c7 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 7, c7)
				return dBuf.err
			}
			l7 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v7 := make([]*SecureFile, l7)
			for i := int32(0); i < l7; i++ {
				v7[i] = &SecureFile{}
				err = v7[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetTranslation(v7)

		}
		if (flags & (1 << 4)) != 0 {
			c8 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c8 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 8, c8)
				return dBuf.err
			}
			l8 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v8 := make([]*SecureFile, l8)
			for i := int32(0); i < l8; i++ {
				v8[i] = &SecureFile{}
				err = v8[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetFiles(v8)

		}
		if (flags & (1 << 5)) != 0 {
			m9 := &SecurePlainData{}
			err = m9.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetPlainData(m9)
		}
		m.SetHash(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("SecureValue Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecureValueErrorData) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecureValueErrorData:
		m1 := &SecureValueType{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetType(m1)
		m.SetDataHash(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetField(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("SecureValueErrorData Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecureValueErrorFrontSide) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecureValueErrorFrontSide:
		m1 := &SecureValueType{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetType(m1)
		m.SetFileHashBE3DFA85(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("SecureValueErrorFrontSide Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecureValueErrorReverseSide) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecureValueErrorReverseSide:
		m1 := &SecureValueType{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetType(m1)
		m.SetFileHashBE3DFA85(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("SecureValueErrorReverseSide Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecureValueErrorSelfie) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecureValueErrorSelfie:
		m1 := &SecureValueType{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetType(m1)
		m.SetFileHashBE3DFA85(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("SecureValueErrorSelfie Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecureValueErrorFile) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecureValueErrorFile:
		m1 := &SecureValueType{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetType(m1)
		m.SetFileHashBE3DFA85(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("SecureValueErrorFile Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecureValueErrorFiles) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecureValueErrorFiles:
		m1 := &SecureValueType{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetType(m1)

		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("SecureValueErrorFiles Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecureValueError) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecureValueError:
		m1 := &SecureValueType{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetType(m1)
		m.SetHash(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("SecureValueError Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecureValueErrorTranslationFile) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecureValueErrorTranslationFile:
		m1 := &SecureValueType{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetType(m1)
		m.SetFileHashBE3DFA85(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("SecureValueErrorTranslationFile Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecureValueErrorTranslationFiles) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecureValueErrorTranslationFiles:
		m1 := &SecureValueType{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetType(m1)

		m.SetText(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("SecureValueErrorTranslationFiles Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecureValueHash) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecureValueHash:
		m1 := &SecureValueType{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetType(m1)
		m.SetHash(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("SecureValueHash Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecureValueTypePersonalDetails) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecureValueTypePersonalDetails:
		_ = m

	default:
		log.Errorf("SecureValueTypePersonalDetails Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecureValueTypePassport) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecureValueTypePassport:
		_ = m

	default:
		log.Errorf("SecureValueTypePassport Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecureValueTypeDriverLicense) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecureValueTypeDriverLicense:
		_ = m

	default:
		log.Errorf("SecureValueTypeDriverLicense Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecureValueTypeIdentityCard) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecureValueTypeIdentityCard:
		_ = m

	default:
		log.Errorf("SecureValueTypeIdentityCard Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecureValueTypeInternalPassport) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecureValueTypeInternalPassport:
		_ = m

	default:
		log.Errorf("SecureValueTypeInternalPassport Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecureValueTypeAddress) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecureValueTypeAddress:
		_ = m

	default:
		log.Errorf("SecureValueTypeAddress Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecureValueTypeUtilityBill) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecureValueTypeUtilityBill:
		_ = m

	default:
		log.Errorf("SecureValueTypeUtilityBill Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecureValueTypeBankStatement) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecureValueTypeBankStatement:
		_ = m

	default:
		log.Errorf("SecureValueTypeBankStatement Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecureValueTypeRentalAgreement) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecureValueTypeRentalAgreement:
		_ = m

	default:
		log.Errorf("SecureValueTypeRentalAgreement Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecureValueTypePassportRegistration) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecureValueTypePassportRegistration:
		_ = m

	default:
		log.Errorf("SecureValueTypePassportRegistration Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecureValueTypeTemporaryRegistration) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecureValueTypeTemporaryRegistration:
		_ = m

	default:
		log.Errorf("SecureValueTypeTemporaryRegistration Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecureValueTypePhone) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecureValueTypePhone:
		_ = m

	default:
		log.Errorf("SecureValueTypePhone Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSecureValueTypeEmail) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SecureValueTypeEmail:
		_ = m

	default:
		log.Errorf("SecureValueTypeEmail Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSendMessageTypingAction) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SendMessageTypingAction:
		_ = m

	default:
		log.Errorf("SendMessageTypingAction Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSendMessageCancelAction) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SendMessageCancelAction:
		_ = m

	default:
		log.Errorf("SendMessageCancelAction Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSendMessageRecordVideoAction) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SendMessageRecordVideoAction:
		_ = m

	default:
		log.Errorf("SendMessageRecordVideoAction Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSendMessageUploadVideoAction) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SendMessageUploadVideoAction:
		m.SetProgress(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("SendMessageUploadVideoAction Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSendMessageRecordAudioAction) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SendMessageRecordAudioAction:
		_ = m

	default:
		log.Errorf("SendMessageRecordAudioAction Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSendMessageUploadAudioAction) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SendMessageUploadAudioAction:
		m.SetProgress(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("SendMessageUploadAudioAction Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSendMessageUploadPhotoAction) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SendMessageUploadPhotoAction:
		m.SetProgress(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("SendMessageUploadPhotoAction Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSendMessageUploadDocumentAction) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SendMessageUploadDocumentAction:
		m.SetProgress(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("SendMessageUploadDocumentAction Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSendMessageGeoLocationAction) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SendMessageGeoLocationAction:
		_ = m

	default:
		log.Errorf("SendMessageGeoLocationAction Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSendMessageChooseContactAction) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SendMessageChooseContactAction:
		_ = m

	default:
		log.Errorf("SendMessageChooseContactAction Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSendMessageGamePlayAction) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SendMessageGamePlayAction:
		_ = m

	default:
		log.Errorf("SendMessageGamePlayAction Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSendMessageRecordRoundAction) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SendMessageRecordRoundAction:
		_ = m

	default:
		log.Errorf("SendMessageRecordRoundAction Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSendMessageUploadRoundAction) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SendMessageUploadRoundAction:
		m.SetProgress(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("SendMessageUploadRoundAction Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLSpeakingInGroupCallAction) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_SpeakingInGroupCallAction:
		_ = m

	default:
		log.Errorf("SpeakingInGroupCallAction Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLServer_DHInnerData) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_Server_DHInnerData:
		m.SetNonce(dBuf.Bytes(16))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetServerNonce(dBuf.Bytes(16))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetG(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDhPrime(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetGA(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetServerTime(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("Server_DHInnerData Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLServer_DHParamsFail) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_Server_DHParamsFail:
		m.SetNonce(dBuf.Bytes(16))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetServerNonce(dBuf.Bytes(16))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNewNonceHash(dBuf.Bytes(16))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("Server_DHParamsFail Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLServer_DHParamsOk) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_Server_DHParamsOk:
		m.SetNonce(dBuf.Bytes(16))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetServerNonce(dBuf.Bytes(16))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetEncryptedAnswer(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("Server_DHParamsOk Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLDhGenOk) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_DhGenOk:
		m.SetNonce(dBuf.Bytes(16))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetServerNonce(dBuf.Bytes(16))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNewNonceHash1(dBuf.Bytes(16))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("DhGenOk Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLDhGenRetry) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_DhGenRetry:
		m.SetNonce(dBuf.Bytes(16))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetServerNonce(dBuf.Bytes(16))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNewNonceHash2(dBuf.Bytes(16))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("DhGenRetry Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLDhGenFail) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_DhGenFail:
		m.SetNonce(dBuf.Bytes(16))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetServerNonce(dBuf.Bytes(16))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetNewNonceHash3(dBuf.Bytes(16))
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("DhGenFail Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLShippingOption) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ShippingOption:
		m.SetId(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*LabeledPrice, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &LabeledPrice{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetPrices(v3)

	default:
		log.Errorf("ShippingOption Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLStatsAbsValueAndPrev) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_StatsAbsValueAndPrev:
		m.SetCurrent(dBuf.Double())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPrevious(dBuf.Double())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("StatsAbsValueAndPrev Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLStatsDateRangeDays) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_StatsDateRangeDays:
		m.SetMinDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMaxDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("StatsDateRangeDays Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLStatsGraphAsync) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_StatsGraphAsync:
		m.SetToken(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("StatsGraphAsync Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLStatsGraphError) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_StatsGraphError:
		m.SetError(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("StatsGraphError Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLStatsGraph) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_StatsGraph:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &DataJSON{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetJson(m2)
		if (flags & (1 << 0)) != 0 {
			m.SetZoomToken(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("StatsGraph Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLStatsGroupTopAdmin) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_StatsGroupTopAdmin:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDeleted(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetKicked(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetBanned(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("StatsGroupTopAdmin Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLStatsGroupTopInviter) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_StatsGroupTopInviter:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetInvitations(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("StatsGroupTopInviter Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLStatsGroupTopPoster) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_StatsGroupTopPoster:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMessages(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAvgChars(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("StatsGroupTopPoster Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLStatsPercentValue) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_StatsPercentValue:
		m.SetPart(dBuf.Double())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTotal(dBuf.Double())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("StatsPercentValue Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLStatsURL) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_StatsURL:
		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("StatsURL Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLStatsBroadcastStats) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_StatsBroadcastStats:
		m1 := &StatsDateRangeDays{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeriod(m1)
		m2 := &StatsAbsValueAndPrev{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetFollowers(m2)
		m3 := &StatsAbsValueAndPrev{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetViewsPerPost(m3)
		m4 := &StatsAbsValueAndPrev{}
		err = m4.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetSharesPerPost(m4)
		m5 := &StatsPercentValue{}
		err = m5.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetEnabledNotifications(m5)
		m6 := &StatsGraph{}
		err = m6.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetGrowthGraph(m6)
		m7 := &StatsGraph{}
		err = m7.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetFollowersGraph(m7)
		m8 := &StatsGraph{}
		err = m8.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetMuteGraph(m8)
		m9 := &StatsGraph{}
		err = m9.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetTopHoursGraph(m9)
		m10 := &StatsGraph{}
		err = m10.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetInteractionsGraph(m10)
		m11 := &StatsGraph{}
		err = m11.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetIvInteractionsGraph(m11)
		m12 := &StatsGraph{}
		err = m12.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetViewsBySourceGraph(m12)
		m13 := &StatsGraph{}
		err = m13.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNewFollowersBySourceGraph(m13)
		m14 := &StatsGraph{}
		err = m14.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetLanguagesGraph(m14)
		c15 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c15 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 15, c15)
			return dBuf.err
		}
		l15 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v15 := make([]*MessageInteractionCounters, l15)
		for i := int32(0); i < l15; i++ {
			v15[i] = &MessageInteractionCounters{}
			err = v15[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetRecentMessageInteractions(v15)

	default:
		log.Errorf("StatsBroadcastStats Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLStatsMegagroupStats) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_StatsMegagroupStats:
		m1 := &StatsDateRangeDays{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeriod(m1)
		m2 := &StatsAbsValueAndPrev{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetMembers(m2)
		m3 := &StatsAbsValueAndPrev{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetMessages(m3)
		m4 := &StatsAbsValueAndPrev{}
		err = m4.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetViewers(m4)
		m5 := &StatsAbsValueAndPrev{}
		err = m5.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPosters(m5)
		m6 := &StatsGraph{}
		err = m6.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetGrowthGraph(m6)
		m7 := &StatsGraph{}
		err = m7.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetMembersGraph(m7)
		m8 := &StatsGraph{}
		err = m8.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNewMembersBySourceGraph(m8)
		m9 := &StatsGraph{}
		err = m9.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetLanguagesGraph(m9)
		m10 := &StatsGraph{}
		err = m10.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetMessagesGraph(m10)
		m11 := &StatsGraph{}
		err = m11.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetActionsGraph(m11)
		m12 := &StatsGraph{}
		err = m12.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetTopHoursGraph(m12)
		m13 := &StatsGraph{}
		err = m13.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetWeekdaysGraph(m13)
		c14 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c14 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 14, c14)
			return dBuf.err
		}
		l14 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v14 := make([]*StatsGroupTopPoster, l14)
		for i := int32(0); i < l14; i++ {
			v14[i] = &StatsGroupTopPoster{}
			err = v14[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetTopPosters(v14)

		c15 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c15 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 15, c15)
			return dBuf.err
		}
		l15 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v15 := make([]*StatsGroupTopAdmin, l15)
		for i := int32(0); i < l15; i++ {
			v15[i] = &StatsGroupTopAdmin{}
			err = v15[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetTopAdmins(v15)

		c16 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c16 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 16, c16)
			return dBuf.err
		}
		l16 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v16 := make([]*StatsGroupTopInviter, l16)
		for i := int32(0); i < l16; i++ {
			v16[i] = &StatsGroupTopInviter{}
			err = v16[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetTopInviters(v16)

		c17 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c17 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 17, c17)
			return dBuf.err
		}
		l17 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v17 := make([]*User, l17)
		for i := int32(0); i < l17; i++ {
			v17[i] = &User{}
			err = v17[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v17)

	default:
		log.Errorf("StatsMegagroupStats Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLStatsMessageStats) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_StatsMessageStats:
		m1 := &StatsGraph{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetViewsGraph(m1)

	default:
		log.Errorf("StatsMessageStats Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLStickerPack) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_StickerPack:
		m.SetEmoticon(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDocuments(dBuf.VectorLong())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("StickerPack Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLStickerSet) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_StickerSet:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetInstalled(flags&(1<<0) != 0)
		m.SetArchived(flags&(1<<1) != 0)
		m.SetOfficial(flags&(1<<2) != 0)
		m.SetMasks(flags&(1<<3) != 0)
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetShortName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetHash(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_StickerSet40e237a8:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetArchived(flags&(1<<1) != 0)
		m.SetOfficial(flags&(1<<2) != 0)
		m.SetMasks(flags&(1<<3) != 0)
		m.SetAnimated(flags&(1<<5) != 0)
		if (flags & (1 << 0)) != 0 {
			m.SetInstalledDate(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetShortName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 4)) != 0 {
			c11 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c11 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 11, c11)
				return dBuf.err
			}
			l11 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v11 := make([]*PhotoSize, l11)
			for i := int32(0); i < l11; i++ {
				v11[i] = &PhotoSize{}
				err = v11[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetThumbs(v11)

		}
		if (flags & (1 << 4)) != 0 {
			m.SetThumbDcId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetHash(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_StickerSet5585a139:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetArchived(flags&(1<<1) != 0)
		m.SetOfficial(flags&(1<<2) != 0)
		m.SetMasks(flags&(1<<3) != 0)
		if (flags & (1 << 0)) != 0 {
			m.SetInstalledDate(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetShortName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetHash(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_StickerSet6a90bcb7:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetArchived(flags&(1<<1) != 0)
		m.SetOfficial(flags&(1<<2) != 0)
		m.SetMasks(flags&(1<<3) != 0)
		if (flags & (1 << 0)) != 0 {
			m.SetInstalledDate(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetShortName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 4)) != 0 {
			m10 := &PhotoSize{}
			err = m10.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetThumb(m10)
		}
		m.SetCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetHash(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_StickerSeteeb46f27:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetArchived(flags&(1<<1) != 0)
		m.SetOfficial(flags&(1<<2) != 0)
		m.SetMasks(flags&(1<<3) != 0)
		if (flags & (1 << 0)) != 0 {
			m.SetInstalledDate(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetShortName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 4)) != 0 {
			m10 := &PhotoSize{}
			err = m10.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetThumb(m10)
		}
		if (flags & (1 << 4)) != 0 {
			m.SetThumbDcId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetHash(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("StickerSet Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLStickerSetCovered) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_StickerSetCovered:
		m1 := &StickerSet{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetSet(m1)
		m2 := &Document{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCover(m2)

	default:
		log.Errorf("StickerSetCovered Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLStickerSetMultiCovered) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_StickerSetMultiCovered:
		m1 := &StickerSet{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetSet(m1)
		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*Document, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &Document{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetCovers(v2)

	default:
		log.Errorf("StickerSetMultiCovered Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLStorageFileUnknown) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_StorageFileUnknown:
		_ = m

	default:
		log.Errorf("StorageFileUnknown Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLStorageFilePartial) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_StorageFilePartial:
		_ = m

	default:
		log.Errorf("StorageFilePartial Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLStorageFileJpeg) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_StorageFileJpeg:
		_ = m

	default:
		log.Errorf("StorageFileJpeg Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLStorageFileGif) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_StorageFileGif:
		_ = m

	default:
		log.Errorf("StorageFileGif Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLStorageFilePng) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_StorageFilePng:
		_ = m

	default:
		log.Errorf("StorageFilePng Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLStorageFilePdf) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_StorageFilePdf:
		_ = m

	default:
		log.Errorf("StorageFilePdf Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLStorageFileMp3) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_StorageFileMp3:
		_ = m

	default:
		log.Errorf("StorageFileMp3 Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLStorageFileMov) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_StorageFileMov:
		_ = m

	default:
		log.Errorf("StorageFileMov Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLStorageFileMp4) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_StorageFileMp4:
		_ = m

	default:
		log.Errorf("StorageFileMp4 Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLStorageFileWebp) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_StorageFileWebp:
		_ = m

	default:
		log.Errorf("StorageFileWebp Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLThemeDocumentNotModified) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ThemeDocumentNotModified:
		_ = m

	default:
		log.Errorf("ThemeDocumentNotModified Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLTheme) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_Theme:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCreator(flags&(1<<0) != 0)
		m.SetDefault(flags&(1<<1) != 0)
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSlug(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m8 := &Document{}
		err = m8.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetDocument(m8)

	case Cmd_Theme28f1114:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCreator(flags&(1<<0) != 0)
		m.SetDefault(flags&(1<<1) != 0)
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSlug(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 2)) != 0 {
			m8 := &Document{}
			err = m8.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetDocument(m8)
		}
		if (flags & (1 << 3)) != 0 {
			m9 := &ThemeSettings{}
			err = m9.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetSettings(m9)
		}
		m.SetInstallsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_Themef7d90ce0:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCreator(flags&(1<<0) != 0)
		m.SetDefault(flags&(1<<1) != 0)
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSlug(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 2)) != 0 {
			m8 := &Document{}
			err = m8.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetDocument(m8)
		}
		m.SetInstallsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("Theme Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLThemeSettings) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_ThemeSettings:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &BaseTheme{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetBaseTheme(m2)
		m.SetAccentColor(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetMessageTopColor(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 0)) != 0 {
			m.SetMessageBottomColor(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m6 := &WallPaper{}
			err = m6.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetWallpaper(m6)
		}

	default:
		log.Errorf("ThemeSettings Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLTopPeer) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_TopPeer:
		m1 := &Peer{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer(m1)
		m.SetRating(dBuf.Double())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("TopPeer Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLTopPeerCategoryBotsPM) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_TopPeerCategoryBotsPM:
		_ = m

	default:
		log.Errorf("TopPeerCategoryBotsPM Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLTopPeerCategoryBotsInline) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_TopPeerCategoryBotsInline:
		_ = m

	default:
		log.Errorf("TopPeerCategoryBotsInline Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLTopPeerCategoryCorrespondents) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_TopPeerCategoryCorrespondents:
		_ = m

	default:
		log.Errorf("TopPeerCategoryCorrespondents Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLTopPeerCategoryGroups) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_TopPeerCategoryGroups:
		_ = m

	default:
		log.Errorf("TopPeerCategoryGroups Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLTopPeerCategoryChannels) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_TopPeerCategoryChannels:
		_ = m

	default:
		log.Errorf("TopPeerCategoryChannels Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLTopPeerCategoryPhoneCalls) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_TopPeerCategoryPhoneCalls:
		_ = m

	default:
		log.Errorf("TopPeerCategoryPhoneCalls Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLTopPeerCategoryForwardUsers) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_TopPeerCategoryForwardUsers:
		_ = m

	default:
		log.Errorf("TopPeerCategoryForwardUsers Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLTopPeerCategoryForwardChats) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_TopPeerCategoryForwardChats:
		_ = m

	default:
		log.Errorf("TopPeerCategoryForwardChats Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLTopPeerCategoryPeers) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_TopPeerCategoryPeers:
		m1 := &TopPeerCategory{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCategory(m1)
		m.SetCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*TopPeer, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &TopPeer{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetPeers(v3)

	default:
		log.Errorf("TopPeerCategoryPeers Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLTrue) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_True:
		_ = m

	default:
		log.Errorf("True Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateNewMessage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateNewMessage:
		m1 := &Message{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetMessage1F2B0AFD71(m1)
		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPtsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateNewMessage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateMessageID) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateMessageID:
		m.SetId4E90BFD671(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetRandomId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateMessageID Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateDeleteMessages) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateDeleteMessages:
		m.SetMessages(dBuf.VectorInt())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPtsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateDeleteMessages Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateUserTyping) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateUserTyping:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &SendMessageAction{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetAction(m2)

	default:
		log.Errorf("UpdateUserTyping Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateChatUserTyping) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateChatUserTyping:
		m.SetChatId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m3 := &SendMessageAction{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetAction(m3)

	default:
		log.Errorf("UpdateChatUserTyping Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateChatParticipants) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateChatParticipants:
		m1 := &ChatParticipants{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetParticipants776119871(m1)

	default:
		log.Errorf("UpdateChatParticipants Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateUserStatus) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateUserStatus:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &UserStatus{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetStatus(m2)

	default:
		log.Errorf("UpdateUserStatus Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateUserName) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateUserName:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFirstName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLastName(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUsername(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateUserName Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateUserPhoto) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateUserPhoto:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m3 := &UserProfilePhoto{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPhoto(m3)
		m4 := &Bool{}
		err = m4.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPrevious(m4)

	default:
		log.Errorf("UpdateUserPhoto Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateContactRegistered) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateContactRegistered:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateContactRegistered Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateContactLink) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateContactLink:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &ContactLink{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetMyLink(m2)
		m3 := &ContactLink{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetForeignLink(m3)

	default:
		log.Errorf("UpdateContactLink Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateNewEncryptedMessage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateNewEncryptedMessage:
		m1 := &EncryptedMessage{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetMessage12BCBD9A71(m1)
		m.SetQts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateNewEncryptedMessage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateEncryptedChatTyping) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateEncryptedChatTyping:
		m.SetChatId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateEncryptedChatTyping Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateEncryption) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateEncryption:
		m1 := &EncryptedChat{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetChat(m1)
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateEncryption Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateEncryptedMessagesRead) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateEncryptedMessagesRead:
		m.SetChatId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMaxDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateEncryptedMessagesRead Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateChatParticipantAdd) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateChatParticipantAdd:
		m.SetChatId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetInviterId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVersion(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateChatParticipantAdd Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateChatParticipantDelete) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateChatParticipantDelete:
		m.SetChatId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVersion(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateChatParticipantDelete Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateDcOptions) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateDcOptions:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*DcOption, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &DcOption{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetDcOptions(v1)

	default:
		log.Errorf("UpdateDcOptions Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateUserBlocked) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateUserBlocked:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &Bool{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetBlocked(m2)

	default:
		log.Errorf("UpdateUserBlocked Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateNotifySettings) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateNotifySettings:
		m1 := &NotifyPeer{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeerBEC268EF71(m1)
		m2 := &PeerNotifySettings{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNotifySettings(m2)

	default:
		log.Errorf("UpdateNotifySettings Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateServiceNotification) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateServiceNotification:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPopupEBE4681971(flags&(1<<0) != 0)
		if (flags & (1 << 1)) != 0 {
			m.SetInboxDate(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMessageEBE4681971(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m6 := &MessageMedia{}
		err = m6.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetMedia(m6)
		c7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c7 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 7, c7)
			return dBuf.err
		}
		l7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v7 := make([]*MessageEntity, l7)
		for i := int32(0); i < l7; i++ {
			v7[i] = &MessageEntity{}
			err = v7[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetEntities(v7)

	case Cmd_UpdateServiceNotification382dd3e4:
		m.SetType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMessageEBE4681971(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m3 := &MessageMedia{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetMedia(m3)
		m4 := &Bool{}
		err = m4.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPopup382DD3E451(m4)

	default:
		log.Errorf("UpdateServiceNotification Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdatePrivacy) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdatePrivacy:
		m1 := &PrivacyKey{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetKey(m1)
		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*PrivacyRule, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &PrivacyRule{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetRules(v2)

	default:
		log.Errorf("UpdatePrivacy Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateUserPhone) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateUserPhone:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPhone(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateUserPhone Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateReadHistoryInbox) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateReadHistoryInbox:
		m1 := &Peer{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer9961FD5C71(m1)
		m.SetMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPtsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_UpdateReadHistoryInbox9c974fdf:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetFolderId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m3 := &Peer{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer9961FD5C71(m3)
		m.SetMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetStillUnreadCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPtsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateReadHistoryInbox Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateReadHistoryOutbox) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateReadHistoryOutbox:
		m1 := &Peer{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer9961FD5C71(m1)
		m.SetMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPtsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateReadHistoryOutbox Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateWebPage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateWebPage:
		m1 := &WebPage{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetWebpage(m1)
		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPtsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateWebPage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateReadMessagesContents) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateReadMessagesContents:
		m.SetMessages(dBuf.VectorInt())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPtsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateReadMessagesContents Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateChannelTooLong) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateChannelTooLong:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetChannelId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetPts(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("UpdateChannelTooLong Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateChannel) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateChannel:
		m.SetChannelId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateChannel Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateNewChannelMessage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateNewChannelMessage:
		m1 := &Message{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetMessage1F2B0AFD71(m1)
		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPtsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateNewChannelMessage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateReadChannelInbox) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateReadChannelInbox:
		m.SetChannelId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_UpdateReadChannelInbox330b5424:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetFolderId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetChannelId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetStillUnreadCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateReadChannelInbox Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateDeleteChannelMessages) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateDeleteChannelMessages:
		m.SetChannelId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMessages(dBuf.VectorInt())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPtsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateDeleteChannelMessages Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateChannelMessageViews) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateChannelMessageViews:
		m.SetChannelId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetId4E90BFD671(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetViews(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateChannelMessageViews Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateChatAdmins) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateChatAdmins:
		m.SetChatId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &Bool{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetEnabled(m2)
		m.SetVersion(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateChatAdmins Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateChatParticipantAdmin) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateChatParticipantAdmin:
		m.SetChatId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m3 := &Bool{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetIsAdmin(m3)
		m.SetVersion(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateChatParticipantAdmin Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateNewStickerSet) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateNewStickerSet:
		m1 := &Messages_StickerSet{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetStickerset(m1)

	default:
		log.Errorf("UpdateNewStickerSet Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateStickerSetsOrder) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateStickerSetsOrder:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMasks(flags&(1<<0) != 0)
		m.SetOrderBB2D20171(dBuf.VectorLong())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_UpdateStickerSetsOrderf0dfb451:
		m.SetOrderBB2D20171(dBuf.VectorLong())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateStickerSetsOrder Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateStickerSets) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateStickerSets:
		_ = m

	default:
		log.Errorf("UpdateStickerSets Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateSavedGifs) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateSavedGifs:
		_ = m

	default:
		log.Errorf("UpdateSavedGifs Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateBotInlineQuery) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateBotInlineQuery:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetQueryId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetQuery(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m5 := &GeoPoint{}
			err = m5.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetGeo(m5)
		}
		m.SetOffset(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_UpdateBotInlineQuery3f2038db:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetQueryId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetQuery(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m5 := &GeoPoint{}
			err = m5.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetGeo(m5)
		}
		if (flags & (1 << 1)) != 0 {
			m6 := &InlineQueryPeerType{}
			err = m6.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetPeerType(m6)
		}
		m.SetOffset(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateBotInlineQuery Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateBotInlineSend) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateBotInlineSend:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetQuery(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m4 := &GeoPoint{}
			err = m4.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetGeo(m4)
		}
		m.SetIdE48F96471(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			m6 := &InputBotInlineMessageID{}
			err = m6.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetMsgIdE48F96471(m6)
		}

	default:
		log.Errorf("UpdateBotInlineSend Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateEditChannelMessage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateEditChannelMessage:
		m1 := &Message{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetMessage1F2B0AFD71(m1)
		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPtsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateEditChannelMessage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateChannelPinnedMessage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateChannelPinnedMessage:
		m.SetChannelId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetId4E90BFD671(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateChannelPinnedMessage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateBotCallbackQuery) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateBotCallbackQuery:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetQueryId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m4 := &Peer{}
		err = m4.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer9961FD5C71(m4)
		m.SetMsgIdE73547E171(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetChatInstance(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetDataE73547E171(dBuf.StringBytes())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}

		}
		if (flags & (1 << 1)) != 0 {
			m.SetGameShortName(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_UpdateBotCallbackQuerya68c688c:
		m.SetQueryId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m3 := &Peer{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer9961FD5C71(m3)
		m.SetMsgIdE73547E171(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDataE73547E171(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateBotCallbackQuery Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateEditMessage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateEditMessage:
		m1 := &Message{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetMessage1F2B0AFD71(m1)
		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPtsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateEditMessage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateInlineBotCallbackQuery) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateInlineBotCallbackQuery:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetQueryId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m4 := &InputBotInlineMessageID{}
		err = m4.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetMsgIdE48F96471(m4)
		m.SetChatInstance(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetDataE73547E171(dBuf.StringBytes())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}

		}
		if (flags & (1 << 1)) != 0 {
			m.SetGameShortName(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_UpdateInlineBotCallbackQuery2cbd95af:
		m.SetQueryId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m3 := &InputBotInlineMessageID{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetMsgIdE48F96471(m3)
		m.SetDataE73547E171(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateInlineBotCallbackQuery Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateReadChannelOutbox) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateReadChannelOutbox:
		m.SetChannelId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateReadChannelOutbox Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateDraftMessage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateDraftMessage:
		m1 := &Peer{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer9961FD5C71(m1)
		m2 := &DraftMessage{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetDraft(m2)

	default:
		log.Errorf("UpdateDraftMessage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateReadFeaturedStickers) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateReadFeaturedStickers:
		_ = m

	default:
		log.Errorf("UpdateReadFeaturedStickers Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateRecentStickers) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateRecentStickers:
		_ = m

	default:
		log.Errorf("UpdateRecentStickers Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateConfig) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateConfig:
		_ = m

	default:
		log.Errorf("UpdateConfig Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdatePtsChanged) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdatePtsChanged:
		_ = m

	default:
		log.Errorf("UpdatePtsChanged Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateChannelWebPage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateChannelWebPage:
		m.SetChannelId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &WebPage{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetWebpage(m2)
		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPtsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateChannelWebPage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateDialogPinned) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateDialogPinned:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPinned(flags&(1<<0) != 0)
		m3 := &Peer{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer9961FD5C71(m3)

	case Cmd_UpdateDialogPinned19d27f3c:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPinned(flags&(1<<0) != 0)
		m3 := &DialogPeer{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer19D27F3C85(m3)

	case Cmd_UpdateDialogPinned6e6fe51c:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPinned(flags&(1<<0) != 0)
		if (flags & (1 << 1)) != 0 {
			m.SetFolderId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m4 := &DialogPeer{}
		err = m4.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer19D27F3C85(m4)

	default:
		log.Errorf("UpdateDialogPinned Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdatePinnedDialogs) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdatePinnedDialogs:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			c2 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c2 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
				return dBuf.err
			}
			l2 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v2 := make([]*Peer, l2)
			for i := int32(0); i < l2; i++ {
				v2[i] = &Peer{}
				err = v2[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetOrderD8CAF68D71(v2)

		}

	case Cmd_UpdatePinnedDialogsea4cb65b:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			c2 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c2 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
				return dBuf.err
			}
			l2 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v2 := make([]*DialogPeer, l2)
			for i := int32(0); i < l2; i++ {
				v2[i] = &DialogPeer{}
				err = v2[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetOrderEA4CB65B85(v2)

		}

	case Cmd_UpdatePinnedDialogsfa0f3ca2:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			m.SetFolderId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 0)) != 0 {
			c3 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c3 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
				return dBuf.err
			}
			l3 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v3 := make([]*DialogPeer, l3)
			for i := int32(0); i < l3; i++ {
				v3[i] = &DialogPeer{}
				err = v3[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetOrderEA4CB65B85(v3)

		}

	default:
		log.Errorf("UpdatePinnedDialogs Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateBotWebhookJSON) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateBotWebhookJSON:
		m1 := &DataJSON{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetData8317C0C371(m1)

	default:
		log.Errorf("UpdateBotWebhookJSON Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateBotWebhookJSONQuery) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateBotWebhookJSONQuery:
		m.SetQueryId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &DataJSON{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetData8317C0C371(m2)
		m.SetTimeout(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateBotWebhookJSONQuery Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateBotShippingQuery) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateBotShippingQuery:
		m.SetQueryId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPayload(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m4 := &PostAddress{}
		err = m4.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetShippingAddress(m4)

	default:
		log.Errorf("UpdateBotShippingQuery Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateBotPrecheckoutQuery) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateBotPrecheckoutQuery:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetQueryId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPayload(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m5 := &PaymentRequestedInfo{}
			err = m5.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetInfo(m5)
		}
		if (flags & (1 << 1)) != 0 {
			m.SetShippingOptionId(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetCurrency(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTotalAmount(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateBotPrecheckoutQuery Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdatePhoneCall) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdatePhoneCall:
		m1 := &PhoneCall{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPhoneCall(m1)

	default:
		log.Errorf("UpdatePhoneCall Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateLangPackTooLong) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateLangPackTooLong:
		_ = m

	case Cmd_UpdateLangPackTooLong46560264:
		m.SetLangCode(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateLangPackTooLong Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateLangPack) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateLangPack:
		m1 := &LangPackDifference{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetDifference(m1)

	default:
		log.Errorf("UpdateLangPack Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateFavedStickers) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateFavedStickers:
		_ = m

	default:
		log.Errorf("UpdateFavedStickers Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateChannelReadMessagesContents) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateChannelReadMessagesContents:
		m.SetChannelId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMessages(dBuf.VectorInt())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateChannelReadMessagesContents Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateContactsReset) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateContactsReset:
		_ = m

	default:
		log.Errorf("UpdateContactsReset Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateNewAuthorization) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateNewAuthorization:
		m.SetAuthKeyId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDevice(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetLocation(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateNewAuthorization Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateChannelGroup) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateChannelGroup:
		m.SetChannelId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &MessageGroup{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetGroup(m2)

	default:
		log.Errorf("UpdateChannelGroup Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateChannelAvailableMessages) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateChannelAvailableMessages:
		m.SetChannelId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAvailableMinId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateChannelAvailableMessages Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateDialogUnreadMark) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateDialogUnreadMark:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUnread(flags&(1<<0) != 0)
		m3 := &DialogPeer{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer19D27F3C85(m3)

	default:
		log.Errorf("UpdateDialogUnreadMark Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateUserPinnedMessage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateUserPinnedMessage:
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetId4E90BFD671(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateUserPinnedMessage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateChatPinnedMessage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateChatPinnedMessage:
		m.SetChatId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetId4E90BFD671(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_UpdateChatPinnedMessagee10db349:
		m.SetChatId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetId4E90BFD671(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetVersion(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateChatPinnedMessage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateMessagePoll) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateMessagePoll:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPollId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m3 := &Poll{}
			err = m3.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetPoll(m3)
		}
		m4 := &PollResults{}
		err = m4.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetResults(m4)

	default:
		log.Errorf("UpdateMessagePoll Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateChatDefaultBannedRights) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateChatDefaultBannedRights:
		m1 := &Peer{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer9961FD5C71(m1)
		m2 := &ChatBannedRights{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetDefaultBannedRights(m2)
		m.SetVersion(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateChatDefaultBannedRights Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateFolderPeers) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateFolderPeers:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*FolderPeer, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &FolderPeer{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetFolderPeers(v1)

		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPtsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateFolderPeers Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdatePeerSettings) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdatePeerSettings:
		m1 := &Peer{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer9961FD5C71(m1)
		m2 := &PeerSettings{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetSettings(m2)

	default:
		log.Errorf("UpdatePeerSettings Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdatePeerLocated) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdatePeerLocated:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*PeerLocated, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &PeerLocated{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetPeers(v1)

	default:
		log.Errorf("UpdatePeerLocated Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateNewScheduledMessage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateNewScheduledMessage:
		m1 := &Message{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetMessage1F2B0AFD71(m1)

	default:
		log.Errorf("UpdateNewScheduledMessage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateDeleteScheduledMessages) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateDeleteScheduledMessages:
		m1 := &Peer{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer9961FD5C71(m1)
		m.SetMessages(dBuf.VectorInt())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateDeleteScheduledMessages Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateTheme) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateTheme:
		m1 := &Theme{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetTheme(m1)

	default:
		log.Errorf("UpdateTheme Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateGeoLiveViewed) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateGeoLiveViewed:
		m1 := &Peer{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer9961FD5C71(m1)
		m.SetMsgIdE73547E171(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateGeoLiveViewed Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateLoginToken) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateLoginToken:
		_ = m

	default:
		log.Errorf("UpdateLoginToken Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateMessagePollVote) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateMessagePollVote:
		m.SetPollId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateMessagePollVote Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateDialogFilter) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateDialogFilter:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetId4E90BFD671(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m3 := &DialogFilter{}
			err = m3.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetFilter(m3)
		}

	default:
		log.Errorf("UpdateDialogFilter Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateDialogFilterOrder) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateDialogFilterOrder:
		m.SetOrderA5D72105111(dBuf.VectorInt())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateDialogFilterOrder Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateDialogFilters) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateDialogFilters:
		_ = m

	default:
		log.Errorf("UpdateDialogFilters Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdatePhoneCallSignalingData) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdatePhoneCallSignalingData:
		m.SetPhoneCallId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDataE73547E171(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdatePhoneCallSignalingData Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateChannelParticipant) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateChannelParticipant:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetChannelId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m5 := &ChannelParticipant{}
			err = m5.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetPrevParticipant(m5)
		}
		if (flags & (1 << 1)) != 0 {
			m6 := &ChannelParticipant{}
			err = m6.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetNewParticipant(m6)
		}
		m.SetQts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateChannelParticipant Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateChannelMessageForwards) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateChannelMessageForwards:
		m.SetChannelId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetId4E90BFD671(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetForwards(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateChannelMessageForwards Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateReadChannelDiscussionInbox) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateReadChannelDiscussionInbox:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetChannelId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTopMsgId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetReadMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetBroadcastId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 0)) != 0 {
			m.SetBroadcastPost(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("UpdateReadChannelDiscussionInbox Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateReadChannelDiscussionOutbox) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateReadChannelDiscussionOutbox:
		m.SetChannelId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTopMsgId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetReadMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateReadChannelDiscussionOutbox Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdatePeerBlocked) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdatePeerBlocked:
		m1 := &Peer{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeerId(m1)
		m2 := &Bool{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetBlocked(m2)

	default:
		log.Errorf("UpdatePeerBlocked Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateChannelUserTyping) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateChannelUserTyping:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetChannelId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetTopMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m5 := &SendMessageAction{}
		err = m5.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetAction(m5)

	default:
		log.Errorf("UpdateChannelUserTyping Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdatePinnedMessages) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdatePinnedMessages:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPinned(flags&(1<<0) != 0)
		m3 := &Peer{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPeer9961FD5C71(m3)
		m.SetMessages(dBuf.VectorInt())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPtsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdatePinnedMessages Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdatePinnedChannelMessages) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdatePinnedChannelMessages:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPinned(flags&(1<<0) != 0)
		m.SetChannelId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMessages(dBuf.VectorInt())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPtsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdatePinnedChannelMessages Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateChat) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateChat:
		m.SetChatId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateChat Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateGroupCallParticipants) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateGroupCallParticipants:
		m1 := &InputGroupCall{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCallF2EBDB4E122(m1)
		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*GroupCallParticipant, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &GroupCallParticipant{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetParticipantsF2EBDB4E122(v2)

		m.SetVersion(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateGroupCallParticipants Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateGroupCall) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateGroupCall:
		m.SetChatId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &GroupCall{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetCallA45EB99B122(m2)

	default:
		log.Errorf("UpdateGroupCall Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdatesTooLong) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdatesTooLong:
		_ = m

	default:
		log.Errorf("UpdatesTooLong Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateShortMessage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateShortMessage:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOut(flags&(1<<1) != 0)
		m.SetMentioned(flags&(1<<4) != 0)
		m.SetMediaUnread(flags&(1<<5) != 0)
		m.SetSilent(flags&(1<<13) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMessage(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPtsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 2)) != 0 {
			m12 := &MessageFwdHeader{}
			err = m12.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetFwdFrom(m12)
		}
		if (flags & (1 << 11)) != 0 {
			m.SetViaBotId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetReplyToMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 7)) != 0 {
			c15 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c15 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 15, c15)
				return dBuf.err
			}
			l15 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v15 := make([]*MessageEntity, l15)
			for i := int32(0); i < l15; i++ {
				v15[i] = &MessageEntity{}
				err = v15[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetEntities(v15)

		}

	case Cmd_UpdateShortMessage2296d2c8:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOut(flags&(1<<1) != 0)
		m.SetMentioned(flags&(1<<4) != 0)
		m.SetMediaUnread(flags&(1<<5) != 0)
		m.SetSilent(flags&(1<<13) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUserId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMessage(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPtsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 2)) != 0 {
			m12 := &MessageFwdHeader{}
			err = m12.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetFwdFrom(m12)
		}
		if (flags & (1 << 11)) != 0 {
			m.SetViaBotId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m14 := &MessageReplyHeader{}
			err = m14.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplyTo(m14)
		}
		if (flags & (1 << 7)) != 0 {
			c15 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c15 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 15, c15)
				return dBuf.err
			}
			l15 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v15 := make([]*MessageEntity, l15)
			for i := int32(0); i < l15; i++ {
				v15[i] = &MessageEntity{}
				err = v15[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetEntities(v15)

		}

	default:
		log.Errorf("UpdateShortMessage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateShortChatMessage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateShortChatMessage:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOut(flags&(1<<1) != 0)
		m.SetMentioned(flags&(1<<4) != 0)
		m.SetMediaUnread(flags&(1<<5) != 0)
		m.SetSilent(flags&(1<<13) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFromId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetChatId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMessage(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPtsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 2)) != 0 {
			m13 := &MessageFwdHeader{}
			err = m13.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetFwdFrom(m13)
		}
		if (flags & (1 << 11)) != 0 {
			m.SetViaBotId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetReplyToMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 7)) != 0 {
			c16 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c16 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 16, c16)
				return dBuf.err
			}
			l16 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v16 := make([]*MessageEntity, l16)
			for i := int32(0); i < l16; i++ {
				v16[i] = &MessageEntity{}
				err = v16[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetEntities(v16)

		}

	case Cmd_UpdateShortChatMessage402d5dbb:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOut(flags&(1<<1) != 0)
		m.SetMentioned(flags&(1<<4) != 0)
		m.SetMediaUnread(flags&(1<<5) != 0)
		m.SetSilent(flags&(1<<13) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFromId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetChatId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMessage(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPtsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 2)) != 0 {
			m13 := &MessageFwdHeader{}
			err = m13.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetFwdFrom(m13)
		}
		if (flags & (1 << 11)) != 0 {
			m.SetViaBotId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m15 := &MessageReplyHeader{}
			err = m15.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetReplyTo(m15)
		}
		if (flags & (1 << 7)) != 0 {
			c16 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c16 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 16, c16)
				return dBuf.err
			}
			l16 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v16 := make([]*MessageEntity, l16)
			for i := int32(0); i < l16; i++ {
				v16[i] = &MessageEntity{}
				err = v16[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetEntities(v16)

		}

	default:
		log.Errorf("UpdateShortChatMessage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateShort) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateShort:
		m1 := &Update{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetUpdate(m1)
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdateShort Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdatesCombined) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdatesCombined:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*Update, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &Update{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUpdates(v1)

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*User, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &User{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v2)

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*Chat, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &Chat{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v3)

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSeqStart(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSeq(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdatesCombined Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdates) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_Updates:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*Update, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &Update{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUpdates(v1)

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*User, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &User{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v2)

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*Chat, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &Chat{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v3)

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSeq(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("Updates Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdateShortSentMessage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdateShortSentMessage:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetOut(flags&(1<<1) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPtsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 9)) != 0 {
			m7 := &MessageMedia{}
			err = m7.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetMedia(m7)
		}
		if (flags & (1 << 7)) != 0 {
			c8 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c8 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 8, c8)
				return dBuf.err
			}
			l8 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v8 := make([]*MessageEntity, l8)
			for i := int32(0); i < l8; i++ {
				v8[i] = &MessageEntity{}
				err = v8[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetEntities(v8)

		}

	default:
		log.Errorf("UpdateShortSentMessage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdatesChannelDifferenceEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdatesChannelDifferenceEmpty:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFinal(flags&(1<<0) != 0)
		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			m.SetTimeout(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("UpdatesChannelDifferenceEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdatesChannelDifferenceTooLong) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdatesChannelDifferenceTooLong:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFinal(flags&(1<<0) != 0)
		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			m.SetTimeout(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetTopMessage(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetReadInboxMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetReadOutboxMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUnreadCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUnreadMentionsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c10 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c10 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 10, c10)
			return dBuf.err
		}
		l10 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v10 := make([]*Message, l10)
		for i := int32(0); i < l10; i++ {
			v10[i] = &Message{}
			err = v10[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetMessages(v10)

		c11 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c11 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 11, c11)
			return dBuf.err
		}
		l11 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v11 := make([]*Chat, l11)
		for i := int32(0); i < l11; i++ {
			v11[i] = &Chat{}
			err = v11[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v11)

		c12 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c12 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 12, c12)
			return dBuf.err
		}
		l12 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v12 := make([]*User, l12)
		for i := int32(0); i < l12; i++ {
			v12[i] = &User{}
			err = v12[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v12)

	case Cmd_UpdatesChannelDifferenceTooLong5e167646:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFinal(flags&(1<<0) != 0)
		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			m.SetTimeout(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetTopMessage(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTopImportantMessage(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetReadInboxMaxId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUnreadCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUnreadImportantCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c10 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c10 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 10, c10)
			return dBuf.err
		}
		l10 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v10 := make([]*Message, l10)
		for i := int32(0); i < l10; i++ {
			v10[i] = &Message{}
			err = v10[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetMessages(v10)

		c11 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c11 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 11, c11)
			return dBuf.err
		}
		l11 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v11 := make([]*Chat, l11)
		for i := int32(0); i < l11; i++ {
			v11[i] = &Chat{}
			err = v11[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v11)

		c12 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c12 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 12, c12)
			return dBuf.err
		}
		l12 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v12 := make([]*User, l12)
		for i := int32(0); i < l12; i++ {
			v12[i] = &User{}
			err = v12[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v12)

	case Cmd_UpdatesChannelDifferenceTooLonga4bcc6fe:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFinal(flags&(1<<0) != 0)
		if (flags & (1 << 1)) != 0 {
			m.SetTimeout(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m4 := &Dialog{}
		err = m4.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetDialog(m4)
		c5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c5 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 5, c5)
			return dBuf.err
		}
		l5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v5 := make([]*Message, l5)
		for i := int32(0); i < l5; i++ {
			v5[i] = &Message{}
			err = v5[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetMessages(v5)

		c6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c6 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 6, c6)
			return dBuf.err
		}
		l6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v6 := make([]*Chat, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = &Chat{}
			err = v6[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v6)

		c7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c7 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 7, c7)
			return dBuf.err
		}
		l7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v7 := make([]*User, l7)
		for i := int32(0); i < l7; i++ {
			v7[i] = &User{}
			err = v7[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v7)

	default:
		log.Errorf("UpdatesChannelDifferenceTooLong Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdatesChannelDifference) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdatesChannelDifference:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFinal(flags&(1<<0) != 0)
		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 1)) != 0 {
			m.SetTimeout(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		c5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c5 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 5, c5)
			return dBuf.err
		}
		l5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v5 := make([]*Message, l5)
		for i := int32(0); i < l5; i++ {
			v5[i] = &Message{}
			err = v5[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetNewMessages(v5)

		c6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c6 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 6, c6)
			return dBuf.err
		}
		l6 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v6 := make([]*Update, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = &Update{}
			err = v6[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetOtherUpdates(v6)

		c7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c7 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 7, c7)
			return dBuf.err
		}
		l7 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v7 := make([]*Chat, l7)
		for i := int32(0); i < l7; i++ {
			v7[i] = &Chat{}
			err = v7[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v7)

		c8 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c8 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 8, c8)
			return dBuf.err
		}
		l8 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v8 := make([]*User, l8)
		for i := int32(0); i < l8; i++ {
			v8[i] = &User{}
			err = v8[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v8)

	default:
		log.Errorf("UpdatesChannelDifference Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdatesDifferenceEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdatesDifferenceEmpty:
		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSeq(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdatesDifferenceEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdatesDifference) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdatesDifference:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*Message, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &Message{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetNewMessages(v1)

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*EncryptedMessage, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &EncryptedMessage{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetNewEncryptedMessages(v2)

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*Update, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &Update{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetOtherUpdates(v3)

		c4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c4 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 4, c4)
			return dBuf.err
		}
		l4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v4 := make([]*Chat, l4)
		for i := int32(0); i < l4; i++ {
			v4[i] = &Chat{}
			err = v4[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v4)

		c5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c5 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 5, c5)
			return dBuf.err
		}
		l5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v5 := make([]*User, l5)
		for i := int32(0); i < l5; i++ {
			v5[i] = &User{}
			err = v5[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v5)

		m6 := &Updates_State{}
		err = m6.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetState(m6)

	default:
		log.Errorf("UpdatesDifference Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdatesDifferenceSlice) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdatesDifferenceSlice:
		c1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c1 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 1, c1)
			return dBuf.err
		}
		l1 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v1 := make([]*Message, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &Message{}
			err = v1[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetNewMessages(v1)

		c2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c2 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
			return dBuf.err
		}
		l2 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v2 := make([]*EncryptedMessage, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &EncryptedMessage{}
			err = v2[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetNewEncryptedMessages(v2)

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*Update, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &Update{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetOtherUpdates(v3)

		c4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c4 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 4, c4)
			return dBuf.err
		}
		l4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v4 := make([]*Chat, l4)
		for i := int32(0); i < l4; i++ {
			v4[i] = &Chat{}
			err = v4[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetChats(v4)

		c5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c5 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 5, c5)
			return dBuf.err
		}
		l5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v5 := make([]*User, l5)
		for i := int32(0); i < l5; i++ {
			v5[i] = &User{}
			err = v5[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetUsers(v5)

		m6 := &Updates_State{}
		err = m6.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetIntermediateState(m6)

	default:
		log.Errorf("UpdatesDifferenceSlice Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdatesDifferenceTooLong) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdatesDifferenceTooLong:
		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdatesDifferenceTooLong Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUpdatesState) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UpdatesState:
		m.SetPts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetQts(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSeq(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUnreadCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UpdatesState Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUploadCdnFileReuploadNeeded) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UploadCdnFileReuploadNeeded:
		m.SetRequestToken(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UploadCdnFileReuploadNeeded Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUploadCdnFile) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UploadCdnFile:
		m.SetBytes(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UploadCdnFile Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUploadFile) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UploadFile:
		m1 := &Storage_FileType{}
		err = m1.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetType(m1)
		m.SetMtime(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetBytes(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UploadFile Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUploadFileCdnRedirect) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UploadFileCdnRedirect:
		m.SetDcId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFileToken(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetEncryptionKey(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetEncryptionIv(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c5 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 5, c5)
			return dBuf.err
		}
		l5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v5 := make([]*CdnFileHash, l5)
		for i := int32(0); i < l5; i++ {
			v5[i] = &CdnFileHash{}
			err = v5[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetCdnFileHashes(v5)

	case Cmd_UploadFileCdnRedirectf18cda44:
		m.SetDcId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetFileToken(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetEncryptionKey(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetEncryptionIv(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c5 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 5, c5)
			return dBuf.err
		}
		l5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v5 := make([]*FileHash, l5)
		for i := int32(0); i < l5; i++ {
			v5[i] = &FileHash{}
			err = v5[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetFileHashes(v5)

	default:
		log.Errorf("UploadFileCdnRedirect Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUploadWebFile) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UploadWebFile:
		m.SetSize_(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMimeType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m3 := &Storage_FileType{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetFileType(m3)
		m.SetMtime(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetBytes(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UploadWebFile Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUrlAuthResultRequest) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UrlAuthResultRequest:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetRequestWriteAccess(flags&(1<<0) != 0)
		m3 := &User{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetBot(m3)
		m.SetDomain(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UrlAuthResultRequest Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUrlAuthResultAccepted) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UrlAuthResultAccepted:
		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UrlAuthResultAccepted Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUrlAuthResultDefault) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UrlAuthResultDefault:
		_ = m

	default:
		log.Errorf("UrlAuthResultDefault Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUserEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UserEmpty:
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UserEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUser) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_User:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSelf(flags&(1<<10) != 0)
		m.SetContact(flags&(1<<11) != 0)
		m.SetMutualContact(flags&(1<<12) != 0)
		m.SetDeleted(flags&(1<<13) != 0)
		m.SetBot(flags&(1<<14) != 0)
		m.SetBotChatHistory(flags&(1<<15) != 0)
		m.SetBotNochats(flags&(1<<16) != 0)
		m.SetVerified(flags&(1<<17) != 0)
		m.SetRestricted(flags&(1<<18) != 0)
		m.SetMin(flags&(1<<20) != 0)
		m.SetBotInlineGeo(flags&(1<<21) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetAccessHash(dBuf.Long())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m.SetFirstName(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetLastName(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetUsername(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m.SetPhone(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 5)) != 0 {
			m19 := &UserProfilePhoto{}
			err = m19.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetPhoto(m19)
		}
		if (flags & (1 << 6)) != 0 {
			m20 := &UserStatus{}
			err = m20.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetStatus(m20)
		}
		if (flags & (1 << 14)) != 0 {
			m.SetBotInfoVersion(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 18)) != 0 {
			m.SetRestrictionReason2E13F4C371(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 19)) != 0 {
			m.SetBotInlinePlaceholder(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 22)) != 0 {
			m.SetLangCode(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_User938458c1:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSelf(flags&(1<<10) != 0)
		m.SetContact(flags&(1<<11) != 0)
		m.SetMutualContact(flags&(1<<12) != 0)
		m.SetDeleted(flags&(1<<13) != 0)
		m.SetBot(flags&(1<<14) != 0)
		m.SetBotChatHistory(flags&(1<<15) != 0)
		m.SetBotNochats(flags&(1<<16) != 0)
		m.SetVerified(flags&(1<<17) != 0)
		m.SetRestricted(flags&(1<<18) != 0)
		m.SetMin(flags&(1<<20) != 0)
		m.SetBotInlineGeo(flags&(1<<21) != 0)
		m.SetSupport(flags&(1<<23) != 0)
		m.SetScam(flags&(1<<24) != 0)
		m.SetApplyMinPhoto(flags&(1<<25) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetAccessHash(dBuf.Long())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m.SetFirstName(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetLastName(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetUsername(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m.SetPhone(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 5)) != 0 {
			m22 := &UserProfilePhoto{}
			err = m22.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetPhoto(m22)
		}
		if (flags & (1 << 6)) != 0 {
			m23 := &UserStatus{}
			err = m23.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetStatus(m23)
		}
		if (flags & (1 << 14)) != 0 {
			m.SetBotInfoVersion(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 18)) != 0 {
			c25 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c25 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 25, c25)
				return dBuf.err
			}
			l25 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v25 := make([]*RestrictionReason, l25)
			for i := int32(0); i < l25; i++ {
				v25[i] = &RestrictionReason{}
				err = v25[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetRestrictionReason938458C1117(v25)

		}
		if (flags & (1 << 19)) != 0 {
			m.SetBotInlinePlaceholder(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 22)) != 0 {
			m.SetLangCode(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_Userd10d979a:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSelf(flags&(1<<10) != 0)
		m.SetContact(flags&(1<<11) != 0)
		m.SetMutualContact(flags&(1<<12) != 0)
		m.SetDeleted(flags&(1<<13) != 0)
		m.SetBot(flags&(1<<14) != 0)
		m.SetBotChatHistory(flags&(1<<15) != 0)
		m.SetBotNochats(flags&(1<<16) != 0)
		m.SetVerified(flags&(1<<17) != 0)
		m.SetRestricted(flags&(1<<18) != 0)
		m.SetMin(flags&(1<<20) != 0)
		m.SetBotInlineGeo(flags&(1<<21) != 0)
		m.SetId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetAccessHash(dBuf.Long())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m.SetFirstName(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetLastName(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetUsername(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m.SetPhone(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 5)) != 0 {
			m19 := &UserProfilePhoto{}
			err = m19.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetPhoto(m19)
		}
		if (flags & (1 << 6)) != 0 {
			m20 := &UserStatus{}
			err = m20.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetStatus(m20)
		}
		if (flags & (1 << 14)) != 0 {
			m.SetBotInfoVersion(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 18)) != 0 {
			m.SetRestrictionReason2E13F4C371(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 19)) != 0 {
			m.SetBotInlinePlaceholder(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("User Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUserFull) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UserFull:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetBlocked(flags&(1<<0) != 0)
		m.SetPhoneCallsAvailable(flags&(1<<4) != 0)
		m.SetPhoneCallsPrivate(flags&(1<<5) != 0)
		m5 := &User{}
		err = m5.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetUser(m5)
		if (flags & (1 << 1)) != 0 {
			m.SetAbout(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m7 := &Contacts_Link{}
		err = m7.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetLink(m7)
		if (flags & (1 << 2)) != 0 {
			m8 := &Photo{}
			err = m8.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetProfilePhoto(m8)
		}
		m9 := &PeerNotifySettings{}
		err = m9.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNotifySettings(m9)
		if (flags & (1 << 3)) != 0 {
			m10 := &BotInfo{}
			err = m10.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetBotInfo(m10)
		}
		m.SetCommonChatsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_UserFull5932fc03:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetBlocked(flags&(1<<0) != 0)
		m3 := &User{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetUser(m3)
		if (flags & (1 << 1)) != 0 {
			m.SetAbout(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m5 := &Contacts_Link{}
		err = m5.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetLink(m5)
		if (flags & (1 << 2)) != 0 {
			m6 := &Photo{}
			err = m6.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetProfilePhoto(m6)
		}
		m7 := &PeerNotifySettings{}
		err = m7.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNotifySettings(m7)
		if (flags & (1 << 3)) != 0 {
			m8 := &BotInfo{}
			err = m8.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetBotInfo(m8)
		}

	case Cmd_UserFull745559cc:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetBlocked(flags&(1<<0) != 0)
		m.SetPhoneCallsAvailable(flags&(1<<4) != 0)
		m.SetPhoneCallsPrivate(flags&(1<<5) != 0)
		m.SetCanPinMessage(flags&(1<<7) != 0)
		m6 := &User{}
		err = m6.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetUser(m6)
		if (flags & (1 << 1)) != 0 {
			m.SetAbout(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m8 := &Contacts_Link{}
		err = m8.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetLink(m8)
		if (flags & (1 << 2)) != 0 {
			m9 := &Photo{}
			err = m9.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetProfilePhoto(m9)
		}
		m10 := &PeerNotifySettings{}
		err = m10.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNotifySettings(m10)
		if (flags & (1 << 3)) != 0 {
			m11 := &BotInfo{}
			err = m11.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetBotInfo(m11)
		}
		if (flags & (1 << 6)) != 0 {
			m.SetPinnedMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetCommonChatsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 11)) != 0 {
			m.SetFolderId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_UserFull8ea4a881:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetBlocked(flags&(1<<0) != 0)
		m.SetPhoneCallsAvailable(flags&(1<<4) != 0)
		m.SetPhoneCallsPrivate(flags&(1<<5) != 0)
		m.SetCanPinMessage(flags&(1<<7) != 0)
		m6 := &User{}
		err = m6.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetUser(m6)
		if (flags & (1 << 1)) != 0 {
			m.SetAbout(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m8 := &Contacts_Link{}
		err = m8.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetLink(m8)
		if (flags & (1 << 2)) != 0 {
			m9 := &Photo{}
			err = m9.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetProfilePhoto(m9)
		}
		m10 := &PeerNotifySettings{}
		err = m10.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNotifySettings(m10)
		if (flags & (1 << 3)) != 0 {
			m11 := &BotInfo{}
			err = m11.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetBotInfo(m11)
		}
		if (flags & (1 << 6)) != 0 {
			m.SetPinnedMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetCommonChatsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_UserFulledf17c12:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetBlocked(flags&(1<<0) != 0)
		m.SetPhoneCallsAvailable(flags&(1<<4) != 0)
		m.SetPhoneCallsPrivate(flags&(1<<5) != 0)
		m.SetCanPinMessage(flags&(1<<7) != 0)
		m.SetHasScheduled(flags&(1<<12) != 0)
		m.SetVideoCallsAvailable(flags&(1<<13) != 0)
		m8 := &User{}
		err = m8.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetUser(m8)
		if (flags & (1 << 1)) != 0 {
			m.SetAbout(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m10 := &PeerSettings{}
		err = m10.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetSettings(m10)
		if (flags & (1 << 2)) != 0 {
			m11 := &Photo{}
			err = m11.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetProfilePhoto(m11)
		}
		m12 := &PeerNotifySettings{}
		err = m12.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetNotifySettings(m12)
		if (flags & (1 << 3)) != 0 {
			m13 := &BotInfo{}
			err = m13.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetBotInfo(m13)
		}
		if (flags & (1 << 6)) != 0 {
			m.SetPinnedMsgId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		m.SetCommonChatsCount(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 11)) != 0 {
			m.SetFolderId(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("UserFull Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUserProfilePhotoEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UserProfilePhotoEmpty:
		_ = m

	default:
		log.Errorf("UserProfilePhotoEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUserProfilePhoto) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UserProfilePhoto:
		m.SetPhotoId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &FileLocation{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPhotoSmall(m2)
		m3 := &FileLocation{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPhotoBig(m3)

	case Cmd_UserProfilePhoto69d3ab26:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetHasVideo(flags&(1<<0) != 0)
		m.SetPhotoId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m4 := &FileLocation{}
		err = m4.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPhotoSmall(m4)
		m5 := &FileLocation{}
		err = m5.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPhotoBig(m5)
		m.SetDcId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_UserProfilePhotoecd75d8c:
		m.SetPhotoId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &FileLocation{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPhotoSmall(m2)
		m3 := &FileLocation{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetPhotoBig(m3)
		m.SetDcId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UserProfilePhoto Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUserStatusEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UserStatusEmpty:
		_ = m

	default:
		log.Errorf("UserStatusEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUserStatusOnline) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UserStatusOnline:
		m.SetExpires(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UserStatusOnline Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUserStatusOffline) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UserStatusOffline:
		m.SetWasOnline(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("UserStatusOffline Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUserStatusRecently) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UserStatusRecently:
		_ = m

	default:
		log.Errorf("UserStatusRecently Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUserStatusLastWeek) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UserStatusLastWeek:
		_ = m

	default:
		log.Errorf("UserStatusLastWeek Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLUserStatusLastMonth) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_UserStatusLastMonth:
		_ = m

	default:
		log.Errorf("UserStatusLastMonth Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLVideoSize) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_VideoSize:
		m.SetType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m2 := &FileLocation{}
		err = m2.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetLocation(m2)
		m.SetW(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetH(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSize_(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_VideoSizee831c556:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m3 := &FileLocation{}
		err = m3.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetLocation(m3)
		m.SetW(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetH(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSize_(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("VideoSize Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLWallPaper) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_WallPaper:
		m.SetIdCCB0365771(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c3 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 3, c3)
			return dBuf.err
		}
		l3 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v3 := make([]*PhotoSize, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &PhotoSize{}
			err = v3[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetSizes(v3)

		m.SetColor(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_WallPapera437c3ed:
		m.SetIdF04F91EC93(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCreator(flags&(1<<0) != 0)
		m.SetDefault(flags&(1<<1) != 0)
		m.SetPattern(flags&(1<<3) != 0)
		m.SetDark(flags&(1<<4) != 0)
		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSlug(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m9 := &Document{}
		err = m9.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetDocument(m9)
		if (flags & (1 << 2)) != 0 {
			m10 := &WallPaperSettings{}
			err = m10.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetSettings(m10)
		}

	case Cmd_WallPaperf04f91ec:
		m.SetIdF04F91EC93(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetCreator(flags&(1<<0) != 0)
		m.SetDefault(flags&(1<<1) != 0)
		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSlug(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m7 := &Document{}
		err = m7.Decode(dBuf, layer)
		if err != nil {
			return err
		}
		m.SetDocument(m7)

	default:
		log.Errorf("WallPaper Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLWallPaperSolid) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_WallPaperSolid:
		m.SetIdCCB0365771(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetTitle(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetBgColor(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetColor(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("WallPaperSolid Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLWallPaperNoFile) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_WallPaperNoFile:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDefault(flags&(1<<1) != 0)
		m.SetDark(flags&(1<<4) != 0)
		if (flags & (1 << 2)) != 0 {
			m4 := &WallPaperSettings{}
			err = m4.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetSettings(m4)
		}

	default:
		log.Errorf("WallPaperNoFile Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLWallPaperSettings) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_WallPaperSettings:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetBlur(flags&(1<<1) != 0)
		m.SetMotion(flags&(1<<2) != 0)
		if (flags & (1 << 0)) != 0 {
			m.SetBackgroundColor(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetIntensity(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	case Cmd_WallPaperSettings5086cf8:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetBlur(flags&(1<<1) != 0)
		m.SetMotion(flags&(1<<2) != 0)
		if (flags & (1 << 0)) != 0 {
			m.SetBackgroundColor(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m.SetSecondBackgroundColor(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetIntensity(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m.SetRotation(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("WallPaperSettings Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLWalletSecretSalt) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_WalletSecretSalt:
		m.SetSalt(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("WalletSecretSalt Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLWalletLiteResponse) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_WalletLiteResponse:
		m.SetResponse(dBuf.StringBytes())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("WalletLiteResponse Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLWebAuthorization) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_WebAuthorization:
		m.SetHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetBotId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDomain(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetBrowser(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetPlatform(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDateCreated(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDateActive(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetIp(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetRegion(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("WebAuthorization Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLWebDocument) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_WebDocument:
		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSize_(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMimeType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c5 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 5, c5)
			return dBuf.err
		}
		l5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v5 := make([]*DocumentAttribute, l5)
		for i := int32(0); i < l5; i++ {
			v5[i] = &DocumentAttribute{}
			err = v5[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetAttributes(v5)

		m.SetDcId(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	case Cmd_WebDocument1c570ed1:
		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetAccessHash(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSize_(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMimeType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c5 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 5, c5)
			return dBuf.err
		}
		l5 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v5 := make([]*DocumentAttribute, l5)
		for i := int32(0); i < l5; i++ {
			v5[i] = &DocumentAttribute{}
			err = v5[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetAttributes(v5)

	default:
		log.Errorf("WebDocument Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLWebDocumentNoProxy) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_WebDocumentNoProxy:
		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetSize_(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetMimeType(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		c4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		if c4 != int32(Cmd_vector) {
			dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 4, c4)
			return dBuf.err
		}
		l4 := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		v4 := make([]*DocumentAttribute, l4)
		for i := int32(0); i < l4; i++ {
			v4[i] = &DocumentAttribute{}
			err = v4[i].Decode(dBuf, layer)
			if err != nil {
				return err
			}
		}
		m.SetAttributes(v4)

	default:
		log.Errorf("WebDocumentNoProxy Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLWebPageEmpty) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_WebPageEmpty:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("WebPageEmpty Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLWebPagePending) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_WebPagePending:
		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDate(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

	default:
		log.Errorf("WebPagePending Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLWebPage) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_WebPage:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDisplayUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetHash(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetType(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m.SetSiteName(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetTitle(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetDescription(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m10 := &Photo{}
			err = m10.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetPhoto(m10)
		}
		if (flags & (1 << 5)) != 0 {
			m.SetEmbedUrl(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 5)) != 0 {
			m.SetEmbedType(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 6)) != 0 {
			m.SetEmbedWidth(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 6)) != 0 {
			m.SetEmbedHeight(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 7)) != 0 {
			m.SetDuration(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 8)) != 0 {
			m.SetAuthor(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 9)) != 0 {
			m17 := &Document{}
			err = m17.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetDocument(m17)
		}
		if (flags & (1 << 10)) != 0 {
			m18 := &Page{}
			err = m18.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetCachedPage(m18)
		}

	case Cmd_WebPageca820ed7:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDisplayUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetType(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m.SetSiteName(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetTitle(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetDescription(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m9 := &Photo{}
			err = m9.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetPhoto(m9)
		}
		if (flags & (1 << 5)) != 0 {
			m.SetEmbedUrl(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 5)) != 0 {
			m.SetEmbedType(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 6)) != 0 {
			m.SetEmbedWidth(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 6)) != 0 {
			m.SetEmbedHeight(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 7)) != 0 {
			m.SetDuration(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 8)) != 0 {
			m.SetAuthor(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 9)) != 0 {
			m16 := &Document{}
			err = m16.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetDocument(m16)
		}

	case Cmd_WebPagee89c45b2:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDisplayUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetHash(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetType(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m.SetSiteName(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetTitle(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetDescription(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m10 := &Photo{}
			err = m10.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetPhoto(m10)
		}
		if (flags & (1 << 5)) != 0 {
			m.SetEmbedUrl(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 5)) != 0 {
			m.SetEmbedType(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 6)) != 0 {
			m.SetEmbedWidth(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 6)) != 0 {
			m.SetEmbedHeight(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 7)) != 0 {
			m.SetDuration(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 8)) != 0 {
			m.SetAuthor(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 9)) != 0 {
			m17 := &Document{}
			err = m17.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetDocument(m17)
		}
		if (flags & (1 << 10)) != 0 {
			m18 := &Page{}
			err = m18.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetCachedPage(m18)
		}
		if (flags & (1 << 12)) != 0 {
			c19 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c19 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 19, c19)
				return dBuf.err
			}
			l19 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v19 := make([]*WebPageAttribute, l19)
			for i := int32(0); i < l19; i++ {
				v19[i] = &WebPageAttribute{}
				err = v19[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetAttributes(v19)

		}

	case Cmd_WebPagefa64e172:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetId(dBuf.Long())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetDisplayUrl(dBuf.String())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		m.SetHash(dBuf.Int())
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetType(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 1)) != 0 {
			m.SetSiteName(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 2)) != 0 {
			m.SetTitle(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 3)) != 0 {
			m.SetDescription(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 4)) != 0 {
			m10 := &Photo{}
			err = m10.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetPhoto(m10)
		}
		if (flags & (1 << 5)) != 0 {
			m.SetEmbedUrl(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 5)) != 0 {
			m.SetEmbedType(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 6)) != 0 {
			m.SetEmbedWidth(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 6)) != 0 {
			m.SetEmbedHeight(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 7)) != 0 {
			m.SetDuration(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 8)) != 0 {
			m.SetAuthor(dBuf.String())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}
		if (flags & (1 << 9)) != 0 {
			m17 := &Document{}
			err = m17.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetDocument(m17)
		}
		if (flags & (1 << 11)) != 0 {
			c18 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c18 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 18, c18)
				return dBuf.err
			}
			l18 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v18 := make([]*Document, l18)
			for i := int32(0); i < l18; i++ {
				v18[i] = &Document{}
				err = v18[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetDocuments(v18)

		}
		if (flags & (1 << 10)) != 0 {
			m19 := &Page{}
			err = m19.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetCachedPage(m19)
		}

	default:
		log.Errorf("WebPage Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLWebPageNotModified) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_WebPageNotModified:
		_ = m

	case Cmd_WebPageNotModified7311ca11:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			m.SetCachedPageViews(dBuf.Int())
			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
		}

	default:
		log.Errorf("WebPageNotModified Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}

func (m *TLWebPageAttributeTheme) Decode(dBuf *DecodeBuf, layer int32) error {
	var err error
	_ = err
	switch m.Data2.Cmd {
	case Cmd_WebPageAttributeTheme:
		flags := dBuf.Int()

		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}
		m.SetFlags(flags)
		if dBuf.GetError() != nil {
			log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
			return dBuf.GetError()
		}

		if (flags & (1 << 0)) != 0 {
			c2 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			if c2 != int32(Cmd_vector) {
				dBuf.err = fmt.Errorf("Invalid Cmd_vector, c%d: %d", 2, c2)
				return dBuf.err
			}
			l2 := dBuf.Int()

			if dBuf.GetError() != nil {
				log.Errorf("Decode object:%+v error:%s", m, dBuf.GetError())
				return dBuf.GetError()
			}
			v2 := make([]*Document, l2)
			for i := int32(0); i < l2; i++ {
				v2[i] = &Document{}
				err = v2[i].Decode(dBuf, layer)
				if err != nil {
					return err
				}
			}
			m.SetDocuments(v2)

		}
		if (flags & (1 << 1)) != 0 {
			m3 := &ThemeSettings{}
			err = m3.Decode(dBuf, layer)
			if err != nil {
				return err
			}
			m.SetSettings(m3)
		}

	default:
		log.Errorf("WebPageAttributeTheme Decode Invalid error cmd:%x", m.Data2.Cmd.ToUInt32())
	}

	return dBuf.GetError()
}
