// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: schema.tl.transport_service.proto

package mtproto

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

///////////////////////////////////////////////////////////////////////////////
// [contest.saveDeveloperInfo#9a5f6e95 vk_id:int name:string phone_number:string age:int city:string = Bool;]
type TLContestSaveDeveloperInfo struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	VkId                 int32    `protobuf:"varint,3,opt,name=vk_id,json=vkId,proto3" json:"vk_id,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	PhoneNumber          string   `protobuf:"bytes,5,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Age                  int32    `protobuf:"varint,6,opt,name=age,proto3" json:"age,omitempty"`
	City                 string   `protobuf:"bytes,7,opt,name=city,proto3" json:"city,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLContestSaveDeveloperInfo) Reset()         { *m = TLContestSaveDeveloperInfo{} }
func (m *TLContestSaveDeveloperInfo) String() string { return proto.CompactTextString(m) }
func (*TLContestSaveDeveloperInfo) ProtoMessage()    {}
func (*TLContestSaveDeveloperInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2dbb7f3fce79bd46, []int{0}
}
func (m *TLContestSaveDeveloperInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLContestSaveDeveloperInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLContestSaveDeveloperInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLContestSaveDeveloperInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLContestSaveDeveloperInfo.Merge(m, src)
}
func (m *TLContestSaveDeveloperInfo) XXX_Size() int {
	return m.Size()
}
func (m *TLContestSaveDeveloperInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TLContestSaveDeveloperInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TLContestSaveDeveloperInfo proto.InternalMessageInfo

func (m *TLContestSaveDeveloperInfo) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLContestSaveDeveloperInfo) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLContestSaveDeveloperInfo) GetVkId() int32 {
	if m != nil {
		return m.VkId
	}
	return 0
}

func (m *TLContestSaveDeveloperInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TLContestSaveDeveloperInfo) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *TLContestSaveDeveloperInfo) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *TLContestSaveDeveloperInfo) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

///////////////////////////////////////////////////////////////////////////////
// [destroy_session#e7512126 session_id:long = DestroySessionRes;]
type TLDestroySession struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	SessionId            int64    `protobuf:"varint,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLDestroySession) Reset()         { *m = TLDestroySession{} }
func (m *TLDestroySession) String() string { return proto.CompactTextString(m) }
func (*TLDestroySession) ProtoMessage()    {}
func (*TLDestroySession) Descriptor() ([]byte, []int) {
	return fileDescriptor_2dbb7f3fce79bd46, []int{1}
}
func (m *TLDestroySession) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLDestroySession) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLDestroySession.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLDestroySession) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLDestroySession.Merge(m, src)
}
func (m *TLDestroySession) XXX_Size() int {
	return m.Size()
}
func (m *TLDestroySession) XXX_DiscardUnknown() {
	xxx_messageInfo_TLDestroySession.DiscardUnknown(m)
}

var xxx_messageInfo_TLDestroySession proto.InternalMessageInfo

func (m *TLDestroySession) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLDestroySession) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLDestroySession) GetSessionId() int64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
// [get_future_salts#b921bd04 num:int = FutureSalts;]
type TLGetFutureSalts struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	Num                  int32    `protobuf:"varint,3,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLGetFutureSalts) Reset()         { *m = TLGetFutureSalts{} }
func (m *TLGetFutureSalts) String() string { return proto.CompactTextString(m) }
func (*TLGetFutureSalts) ProtoMessage()    {}
func (*TLGetFutureSalts) Descriptor() ([]byte, []int) {
	return fileDescriptor_2dbb7f3fce79bd46, []int{2}
}
func (m *TLGetFutureSalts) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLGetFutureSalts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLGetFutureSalts.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLGetFutureSalts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLGetFutureSalts.Merge(m, src)
}
func (m *TLGetFutureSalts) XXX_Size() int {
	return m.Size()
}
func (m *TLGetFutureSalts) XXX_DiscardUnknown() {
	xxx_messageInfo_TLGetFutureSalts.DiscardUnknown(m)
}

var xxx_messageInfo_TLGetFutureSalts proto.InternalMessageInfo

func (m *TLGetFutureSalts) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLGetFutureSalts) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLGetFutureSalts) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
// [ping#7abe77ec ping_id:long = Pong;]
type TLPing struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	PingId               int64    `protobuf:"varint,3,opt,name=ping_id,json=pingId,proto3" json:"ping_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLPing) Reset()         { *m = TLPing{} }
func (m *TLPing) String() string { return proto.CompactTextString(m) }
func (*TLPing) ProtoMessage()    {}
func (*TLPing) Descriptor() ([]byte, []int) {
	return fileDescriptor_2dbb7f3fce79bd46, []int{3}
}
func (m *TLPing) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPing.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPing.Merge(m, src)
}
func (m *TLPing) XXX_Size() int {
	return m.Size()
}
func (m *TLPing) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPing.DiscardUnknown(m)
}

var xxx_messageInfo_TLPing proto.InternalMessageInfo

func (m *TLPing) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPing) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLPing) GetPingId() int64 {
	if m != nil {
		return m.PingId
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
// [ping_delay_disconnect#f3427b8c ping_id:long disconnect_delay:int = Pong;]
type TLPingDelayDisconnect struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	PingId               int64    `protobuf:"varint,3,opt,name=ping_id,json=pingId,proto3" json:"ping_id,omitempty"`
	DisconnectDelay      int32    `protobuf:"varint,4,opt,name=disconnect_delay,json=disconnectDelay,proto3" json:"disconnect_delay,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLPingDelayDisconnect) Reset()         { *m = TLPingDelayDisconnect{} }
func (m *TLPingDelayDisconnect) String() string { return proto.CompactTextString(m) }
func (*TLPingDelayDisconnect) ProtoMessage()    {}
func (*TLPingDelayDisconnect) Descriptor() ([]byte, []int) {
	return fileDescriptor_2dbb7f3fce79bd46, []int{4}
}
func (m *TLPingDelayDisconnect) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLPingDelayDisconnect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLPingDelayDisconnect.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLPingDelayDisconnect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLPingDelayDisconnect.Merge(m, src)
}
func (m *TLPingDelayDisconnect) XXX_Size() int {
	return m.Size()
}
func (m *TLPingDelayDisconnect) XXX_DiscardUnknown() {
	xxx_messageInfo_TLPingDelayDisconnect.DiscardUnknown(m)
}

var xxx_messageInfo_TLPingDelayDisconnect proto.InternalMessageInfo

func (m *TLPingDelayDisconnect) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLPingDelayDisconnect) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLPingDelayDisconnect) GetPingId() int64 {
	if m != nil {
		return m.PingId
	}
	return 0
}

func (m *TLPingDelayDisconnect) GetDisconnectDelay() int32 {
	if m != nil {
		return m.DisconnectDelay
	}
	return 0
}

///////////////////////////////////////////////////////////////////////////////
// [rpc_drop_answer#58e4a740 req_msg_id:long = RpcDropAnswer;]
type TLRpcDropAnswer struct {
	Cmd                  TLCmd    `protobuf:"varint,1,opt,name=cmd,proto3,enum=mtproto.TLCmd" json:"cmd,omitempty"`
	ClassName            string   `protobuf:"bytes,2,opt,name=class_name,json=className,proto3" json:"class_name,omitempty"`
	ReqMsgId             int64    `protobuf:"varint,3,opt,name=req_msg_id,json=reqMsgId,proto3" json:"req_msg_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLRpcDropAnswer) Reset()         { *m = TLRpcDropAnswer{} }
func (m *TLRpcDropAnswer) String() string { return proto.CompactTextString(m) }
func (*TLRpcDropAnswer) ProtoMessage()    {}
func (*TLRpcDropAnswer) Descriptor() ([]byte, []int) {
	return fileDescriptor_2dbb7f3fce79bd46, []int{5}
}
func (m *TLRpcDropAnswer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLRpcDropAnswer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TLRpcDropAnswer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TLRpcDropAnswer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLRpcDropAnswer.Merge(m, src)
}
func (m *TLRpcDropAnswer) XXX_Size() int {
	return m.Size()
}
func (m *TLRpcDropAnswer) XXX_DiscardUnknown() {
	xxx_messageInfo_TLRpcDropAnswer.DiscardUnknown(m)
}

var xxx_messageInfo_TLRpcDropAnswer proto.InternalMessageInfo

func (m *TLRpcDropAnswer) GetCmd() TLCmd {
	if m != nil {
		return m.Cmd
	}
	return Cmd_UNKNOWN
}

func (m *TLRpcDropAnswer) GetClassName() string {
	if m != nil {
		return m.ClassName
	}
	return ""
}

func (m *TLRpcDropAnswer) GetReqMsgId() int64 {
	if m != nil {
		return m.ReqMsgId
	}
	return 0
}

func init() {
	proto.RegisterType((*TLContestSaveDeveloperInfo)(nil), "mtproto.TL_contest_saveDeveloperInfo")
	proto.RegisterType((*TLDestroySession)(nil), "mtproto.TL_destroy_session")
	proto.RegisterType((*TLGetFutureSalts)(nil), "mtproto.TL_get_future_salts")
	proto.RegisterType((*TLPing)(nil), "mtproto.TL_ping")
	proto.RegisterType((*TLPingDelayDisconnect)(nil), "mtproto.TL_ping_delay_disconnect")
	proto.RegisterType((*TLRpcDropAnswer)(nil), "mtproto.TL_rpc_drop_answer")
}

func init() { proto.RegisterFile("schema.tl.transport_service.proto", fileDescriptor_2dbb7f3fce79bd46) }

var fileDescriptor_2dbb7f3fce79bd46 = []byte{
	// 443 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x93, 0x4f, 0x8e, 0xd3, 0x30,
	0x14, 0xc6, 0x65, 0xfa, 0x8f, 0x3e, 0xd0, 0x50, 0xb9, 0x0b, 0xc2, 0x68, 0xa6, 0xea, 0x64, 0x55,
	0x16, 0x64, 0x24, 0xb8, 0x01, 0xcc, 0xa6, 0x52, 0x98, 0x45, 0x94, 0x15, 0x1b, 0xcb, 0xb5, 0x5f,
	0xd3, 0x68, 0x62, 0x3b, 0x63, 0x3b, 0x41, 0x3d, 0x0d, 0xd7, 0x61, 0x09, 0x37, 0x80, 0x9e, 0x80,
	0x23, 0xa0, 0xb8, 0x19, 0x95, 0x7d, 0xc5, 0x2a, 0xdf, 0xfb, 0xf9, 0xe5, 0xfb, 0xde, 0xcb, 0x1f,
	0xb8, 0x71, 0x62, 0x87, 0x8a, 0x27, 0xbe, 0x4a, 0xbc, 0xe5, 0xda, 0xd5, 0xc6, 0x7a, 0xe6, 0xd0,
	0xb6, 0xa5, 0xc0, 0xa4, 0xb6, 0xc6, 0x1b, 0x3a, 0x51, 0x3e, 0x88, 0xcb, 0x77, 0x45, 0xe9, 0x77,
	0xcd, 0x26, 0x11, 0x46, 0xdd, 0x16, 0xa6, 0x30, 0xb7, 0x01, 0x6f, 0x9a, 0x6d, 0xa8, 0x42, 0x11,
	0xd4, 0xf1, 0xbe, 0xcb, 0xf9, 0xc9, 0x5a, 0x28, 0x79, 0x84, 0xf1, 0x4f, 0x02, 0x57, 0x79, 0xca,
	0x84, 0xd1, 0x1e, 0x9d, 0x67, 0x8e, 0xb7, 0x78, 0x87, 0x2d, 0x56, 0xa6, 0x46, 0xbb, 0xd6, 0x5b,
	0x43, 0x97, 0x30, 0x10, 0x4a, 0x46, 0x64, 0x49, 0x56, 0x17, 0xef, 0x2f, 0x92, 0x3e, 0x3b, 0xc9,
	0xd3, 0x4f, 0x4a, 0x66, 0xdd, 0x11, 0xbd, 0x06, 0x10, 0x15, 0x77, 0x8e, 0x69, 0xae, 0x30, 0x7a,
	0xb6, 0x24, 0xab, 0x69, 0x36, 0x0d, 0xe4, 0x9e, 0x2b, 0xa4, 0x73, 0x18, 0xb5, 0x0f, 0xac, 0x94,
	0xd1, 0x60, 0x49, 0x56, 0xa3, 0x6c, 0xd8, 0x3e, 0xac, 0x25, 0xa5, 0x30, 0x0c, 0xdd, 0xc3, 0xd0,
	0x1d, 0x34, 0xbd, 0x81, 0x97, 0xf5, 0xce, 0x68, 0x64, 0xba, 0x51, 0x1b, 0xb4, 0xd1, 0x28, 0x9c,
	0xbd, 0x08, 0xec, 0x3e, 0x20, 0x3a, 0x83, 0x01, 0x2f, 0x30, 0x1a, 0x07, 0xa7, 0x4e, 0x76, 0x46,
	0xa2, 0xf4, 0xfb, 0x68, 0x72, 0x34, 0xea, 0x74, 0xec, 0x81, 0xe6, 0x29, 0x93, 0xe8, 0xbc, 0x35,
	0x7b, 0xe6, 0xd0, 0xb9, 0xd2, 0xe8, 0xf3, 0x17, 0xb9, 0x06, 0xe8, 0xbd, 0x9e, 0xb6, 0x19, 0x64,
	0xd3, 0x9e, 0xac, 0x65, 0xbc, 0x83, 0x79, 0x9e, 0xb2, 0x02, 0x3d, 0xdb, 0x36, 0xbe, 0xb1, 0xc8,
	0x1c, 0xaf, 0xbc, 0x3b, 0x3f, 0x76, 0x06, 0x03, 0xdd, 0xa8, 0xfe, 0xe9, 0x75, 0x32, 0x16, 0x30,
	0xc9, 0x53, 0x56, 0x97, 0xba, 0x38, 0xdf, 0xfd, 0x35, 0x4c, 0x3a, 0xa3, 0xd3, 0x46, 0xe3, 0xae,
	0x5c, 0xcb, 0xf8, 0x1b, 0x81, 0xa8, 0x4f, 0x61, 0x12, 0x2b, 0xbe, 0x67, 0xb2, 0x74, 0xc2, 0x68,
	0x8d, 0xc2, 0xff, 0xbf, 0x58, 0xfa, 0x16, 0x66, 0xa7, 0x9c, 0x63, 0x70, 0xf8, 0x48, 0x46, 0xd9,
	0xab, 0x13, 0xbf, 0xeb, 0x70, 0xec, 0xc2, 0x6b, 0xb6, 0xb5, 0x60, 0xd2, 0x9a, 0x9a, 0x71, 0xed,
	0xbe, 0xa2, 0x3d, 0x7f, 0xb4, 0x2b, 0x00, 0x8b, 0x8f, 0x4c, 0xb9, 0x7f, 0xa6, 0x7b, 0x6e, 0xf1,
	0xf1, 0xb3, 0x2b, 0xd6, 0xf2, 0xe3, 0x9b, 0x3f, 0xbf, 0x17, 0xe4, 0xfb, 0x61, 0x41, 0x7e, 0x1c,
	0x16, 0xe4, 0xd7, 0x61, 0x41, 0xbe, 0x3c, 0xfd, 0x8e, 0x9b, 0x71, 0xb8, 0x7c, 0xf8, 0x1b, 0x00,
	0x00, 0xff, 0xff, 0x54, 0x28, 0x4b, 0xbe, 0xc3, 0x03, 0x00, 0x00,
}

func (this *TLContestSaveDeveloperInfo) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 11)
	s = append(s, "&mtproto.TLContestSaveDeveloperInfo{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "VkId: "+fmt.Sprintf("%#v", this.VkId)+",\n")
	s = append(s, "Name: "+fmt.Sprintf("%#v", this.Name)+",\n")
	s = append(s, "PhoneNumber: "+fmt.Sprintf("%#v", this.PhoneNumber)+",\n")
	s = append(s, "Age: "+fmt.Sprintf("%#v", this.Age)+",\n")
	s = append(s, "City: "+fmt.Sprintf("%#v", this.City)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLDestroySession) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLDestroySession{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "SessionId: "+fmt.Sprintf("%#v", this.SessionId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLGetFutureSalts) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLGetFutureSalts{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "Num: "+fmt.Sprintf("%#v", this.Num)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPing) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLPing{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "PingId: "+fmt.Sprintf("%#v", this.PingId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLPingDelayDisconnect) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&mtproto.TLPingDelayDisconnect{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "PingId: "+fmt.Sprintf("%#v", this.PingId)+",\n")
	s = append(s, "DisconnectDelay: "+fmt.Sprintf("%#v", this.DisconnectDelay)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TLRpcDropAnswer) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 7)
	s = append(s, "&mtproto.TLRpcDropAnswer{")
	s = append(s, "Cmd: "+fmt.Sprintf("%#v", this.Cmd)+",\n")
	s = append(s, "ClassName: "+fmt.Sprintf("%#v", this.ClassName)+",\n")
	s = append(s, "ReqMsgId: "+fmt.Sprintf("%#v", this.ReqMsgId)+",\n")
	if this.XXX_unrecognized != nil {
		s = append(s, "XXX_unrecognized:"+fmt.Sprintf("%#v", this.XXX_unrecognized)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringSchemaTlTransportService(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *TLContestSaveDeveloperInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLContestSaveDeveloperInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLContestSaveDeveloperInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.City) > 0 {
		i -= len(m.City)
		copy(dAtA[i:], m.City)
		i = encodeVarintSchemaTlTransportService(dAtA, i, uint64(len(m.City)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Age != 0 {
		i = encodeVarintSchemaTlTransportService(dAtA, i, uint64(m.Age))
		i--
		dAtA[i] = 0x30
	}
	if len(m.PhoneNumber) > 0 {
		i -= len(m.PhoneNumber)
		copy(dAtA[i:], m.PhoneNumber)
		i = encodeVarintSchemaTlTransportService(dAtA, i, uint64(len(m.PhoneNumber)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintSchemaTlTransportService(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x22
	}
	if m.VkId != 0 {
		i = encodeVarintSchemaTlTransportService(dAtA, i, uint64(m.VkId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlTransportService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlTransportService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLDestroySession) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLDestroySession) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLDestroySession) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SessionId != 0 {
		i = encodeVarintSchemaTlTransportService(dAtA, i, uint64(m.SessionId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlTransportService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlTransportService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLGetFutureSalts) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLGetFutureSalts) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLGetFutureSalts) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Num != 0 {
		i = encodeVarintSchemaTlTransportService(dAtA, i, uint64(m.Num))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlTransportService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlTransportService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPing) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPing) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPing) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PingId != 0 {
		i = encodeVarintSchemaTlTransportService(dAtA, i, uint64(m.PingId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlTransportService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlTransportService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLPingDelayDisconnect) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLPingDelayDisconnect) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLPingDelayDisconnect) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.DisconnectDelay != 0 {
		i = encodeVarintSchemaTlTransportService(dAtA, i, uint64(m.DisconnectDelay))
		i--
		dAtA[i] = 0x20
	}
	if m.PingId != 0 {
		i = encodeVarintSchemaTlTransportService(dAtA, i, uint64(m.PingId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlTransportService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlTransportService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TLRpcDropAnswer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLRpcDropAnswer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLRpcDropAnswer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ReqMsgId != 0 {
		i = encodeVarintSchemaTlTransportService(dAtA, i, uint64(m.ReqMsgId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ClassName) > 0 {
		i -= len(m.ClassName)
		copy(dAtA[i:], m.ClassName)
		i = encodeVarintSchemaTlTransportService(dAtA, i, uint64(len(m.ClassName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Cmd != 0 {
		i = encodeVarintSchemaTlTransportService(dAtA, i, uint64(m.Cmd))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintSchemaTlTransportService(dAtA []byte, offset int, v uint64) int {
	offset -= sovSchemaTlTransportService(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *TLContestSaveDeveloperInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlTransportService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlTransportService(uint64(l))
	}
	if m.VkId != 0 {
		n += 1 + sovSchemaTlTransportService(uint64(m.VkId))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovSchemaTlTransportService(uint64(l))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovSchemaTlTransportService(uint64(l))
	}
	if m.Age != 0 {
		n += 1 + sovSchemaTlTransportService(uint64(m.Age))
	}
	l = len(m.City)
	if l > 0 {
		n += 1 + l + sovSchemaTlTransportService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLDestroySession) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlTransportService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlTransportService(uint64(l))
	}
	if m.SessionId != 0 {
		n += 1 + sovSchemaTlTransportService(uint64(m.SessionId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLGetFutureSalts) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlTransportService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlTransportService(uint64(l))
	}
	if m.Num != 0 {
		n += 1 + sovSchemaTlTransportService(uint64(m.Num))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPing) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlTransportService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlTransportService(uint64(l))
	}
	if m.PingId != 0 {
		n += 1 + sovSchemaTlTransportService(uint64(m.PingId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLPingDelayDisconnect) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlTransportService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlTransportService(uint64(l))
	}
	if m.PingId != 0 {
		n += 1 + sovSchemaTlTransportService(uint64(m.PingId))
	}
	if m.DisconnectDelay != 0 {
		n += 1 + sovSchemaTlTransportService(uint64(m.DisconnectDelay))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TLRpcDropAnswer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Cmd != 0 {
		n += 1 + sovSchemaTlTransportService(uint64(m.Cmd))
	}
	l = len(m.ClassName)
	if l > 0 {
		n += 1 + l + sovSchemaTlTransportService(uint64(l))
	}
	if m.ReqMsgId != 0 {
		n += 1 + sovSchemaTlTransportService(uint64(m.ReqMsgId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovSchemaTlTransportService(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozSchemaTlTransportService(x uint64) (n int) {
	return sovSchemaTlTransportService(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *TLContestSaveDeveloperInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlTransportService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_contest_saveDeveloperInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_contest_saveDeveloperInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlTransportService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlTransportService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlTransportService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlTransportService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VkId", wireType)
			}
			m.VkId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlTransportService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.VkId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlTransportService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlTransportService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlTransportService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlTransportService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlTransportService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlTransportService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Age", wireType)
			}
			m.Age = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlTransportService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Age |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field City", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlTransportService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlTransportService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlTransportService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.City = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlTransportService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlTransportService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlTransportService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLDestroySession) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlTransportService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_destroy_session: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_destroy_session: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlTransportService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlTransportService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlTransportService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlTransportService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionId", wireType)
			}
			m.SessionId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlTransportService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SessionId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlTransportService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlTransportService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlTransportService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLGetFutureSalts) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlTransportService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_get_future_salts: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_get_future_salts: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlTransportService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlTransportService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlTransportService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlTransportService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Num", wireType)
			}
			m.Num = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlTransportService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Num |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlTransportService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlTransportService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlTransportService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPing) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlTransportService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_ping: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_ping: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlTransportService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlTransportService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlTransportService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlTransportService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PingId", wireType)
			}
			m.PingId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlTransportService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PingId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlTransportService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlTransportService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlTransportService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLPingDelayDisconnect) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlTransportService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_ping_delay_disconnect: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_ping_delay_disconnect: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlTransportService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlTransportService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlTransportService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlTransportService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PingId", wireType)
			}
			m.PingId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlTransportService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PingId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisconnectDelay", wireType)
			}
			m.DisconnectDelay = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlTransportService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DisconnectDelay |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlTransportService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlTransportService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlTransportService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLRpcDropAnswer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSchemaTlTransportService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TL_rpc_drop_answer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TL_rpc_drop_answer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cmd", wireType)
			}
			m.Cmd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlTransportService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Cmd |= TLCmd(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClassName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlTransportService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSchemaTlTransportService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSchemaTlTransportService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClassName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReqMsgId", wireType)
			}
			m.ReqMsgId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSchemaTlTransportService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReqMsgId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipSchemaTlTransportService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthSchemaTlTransportService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthSchemaTlTransportService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSchemaTlTransportService(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSchemaTlTransportService
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSchemaTlTransportService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSchemaTlTransportService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthSchemaTlTransportService
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupSchemaTlTransportService
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthSchemaTlTransportService
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthSchemaTlTransportService        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSchemaTlTransportService          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupSchemaTlTransportService = fmt.Errorf("proto: unexpected end of group")
)
