/*
 * Copyright (c) 2021-present,  NovaChat-Engine.
 *  All rights reserved.
 * 
 *  
 * @Author: Coder (coderxw@gmail.com)
 * @Time : 2023/02/09 16:57
 * @File : schema.tl.handshake.proto
 * @Desc : 
 *
 */

syntax = "proto3";

package mtproto;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option go_package = "mtproto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.gostring_all) = true;

import "schema.tl.cmd.proto";


///////////////////////////////////////////////////////////////////////////////
// BindAuthKeyInner <--
//  + TL_bind_auth_key_inner
//
message BindAuthKeyInner {
    TLCmd cmd = 1;
    string class_name = 2;
    int64 nonce = 3;
    int64 temp_auth_key_id = 4;
    int64 perm_auth_key_id = 5;
    int64 temp_session_id = 6;
    int32 expires_at = 7;
}

//  bind_auth_key_inner#75a3f765 nonce:long temp_auth_key_id:long perm_auth_key_id:long temp_session_id:long expires_at:int = BindAuthKeyInner;
//
message TL_bind_auth_key_inner {
    BindAuthKeyInner data2 = 1;
}

///////////////////////////////////////////////////////////////////////////////
// Client_DH_Inner_Data <--
//  + TL_client_DH_inner_data
//
message Client_DH_Inner_Data {
    TLCmd cmd = 1;
    string class_name = 2;
    bytes nonce = 3;
    bytes server_nonce = 4;
    int64 retry_id = 5;
    string g_b = 6;
}

//  client_DH_inner_data#6643b654 nonce:int128 server_nonce:int128 retry_id:long g_b:string = Client_DH_Inner_Data;
//
message TL_client_DH_inner_data {
    Client_DH_Inner_Data data2 = 1;
}

///////////////////////////////////////////////////////////////////////////////
// DestroyAuthKeyRes <--
//  + TL_destroy_auth_key_ok
//  + TL_destroy_auth_key_none
//  + TL_destroy_auth_key_fail
//
message DestroyAuthKeyRes {
    TLCmd cmd = 1;
    string class_name = 2;
}

//  destroy_auth_key_ok#f660e1d4 = DestroyAuthKeyRes;
//
message TL_destroy_auth_key_ok {
    DestroyAuthKeyRes data2 = 1;
}
//  destroy_auth_key_none#0a9f2259 = DestroyAuthKeyRes;
//
message TL_destroy_auth_key_none {
    DestroyAuthKeyRes data2 = 1;
}
//  destroy_auth_key_fail#ea109b13 = DestroyAuthKeyRes;
//
message TL_destroy_auth_key_fail {
    DestroyAuthKeyRes data2 = 1;
}

///////////////////////////////////////////////////////////////////////////////
// P_Q_inner_data <--
//  + TL_p_q_inner_data
//  + TL_p_q_inner_data_dc
//  + TL_p_q_inner_data_temp
//  + TL_p_q_inner_data_temp_dc
//
message P_Q_inner_data {
    TLCmd cmd = 1;
    string class_name = 2;
    string pq = 3;
    string p = 4;
    string q = 5;
    bytes nonce = 6;
    bytes server_nonce = 7;
    bytes new_nonce = 8;
    int32 dc = 9;
    int32 expires_in = 10;
}

//  p_q_inner_data#83c95aec pq:string p:string q:string nonce:int128 server_nonce:int128 new_nonce:int256 = P_Q_inner_data;
//
message TL_p_q_inner_data {
    P_Q_inner_data data2 = 1;
}
//  p_q_inner_data_dc#a9f55f95 pq:string p:string q:string nonce:int128 server_nonce:int128 new_nonce:int256 dc:int = P_Q_inner_data;
//
message TL_p_q_inner_data_dc {
    P_Q_inner_data data2 = 1;
}
//  p_q_inner_data_temp#3c6a84d4 pq:string p:string q:string nonce:int128 server_nonce:int128 new_nonce:int256 expires_in:int = P_Q_inner_data;
//
message TL_p_q_inner_data_temp {
    P_Q_inner_data data2 = 1;
}
//  p_q_inner_data_temp_dc#56fddf88 pq:string p:string q:string nonce:int128 server_nonce:int128 new_nonce:int256 dc:int expires_in:int = P_Q_inner_data;
//
message TL_p_q_inner_data_temp_dc {
    P_Q_inner_data data2 = 1;
}

///////////////////////////////////////////////////////////////////////////////
// ResPQ <--
//  + TL_resPQ
//
message ResPQ {
    TLCmd cmd = 1;
    string class_name = 2;
    bytes nonce = 3;
    bytes server_nonce = 4;
    string pq = 5;
    repeated int64 server_public_key_fingerprints = 6;
}

//  resPQ#05162463 nonce:int128 server_nonce:int128 pq:string server_public_key_fingerprints:Vector<long> = ResPQ;
//
message TL_resPQ {
    ResPQ data2 = 1;
}

///////////////////////////////////////////////////////////////////////////////
// Server_DH_Params <--
//  + TL_server_DH_params_fail
//  + TL_server_DH_params_ok
//
message Server_DH_Params {
    TLCmd cmd = 1;
    string class_name = 2;
    bytes nonce = 3;
    bytes server_nonce = 4;
    bytes new_nonce_hash = 5;
    string encrypted_answer = 6;
}

//  server_DH_params_fail#79cb045d nonce:int128 server_nonce:int128 new_nonce_hash:int128 = Server_DH_Params;
//
message TL_server_DH_params_fail {
    Server_DH_Params data2 = 1;
}
//  server_DH_params_ok#d0e8075c nonce:int128 server_nonce:int128 encrypted_answer:string = Server_DH_Params;
//
message TL_server_DH_params_ok {
    Server_DH_Params data2 = 1;
}

///////////////////////////////////////////////////////////////////////////////
// Server_DH_inner_data <--
//  + TL_server_DH_inner_data
//
message Server_DH_inner_data {
    TLCmd cmd = 1;
    string class_name = 2;
    bytes nonce = 3;
    bytes server_nonce = 4;
    int32 g = 5;
    string dh_prime = 6;
    string g_a = 7;
    int32 server_time = 8;
}

//  server_DH_inner_data#b5890dba nonce:int128 server_nonce:int128 g:int dh_prime:string g_a:string server_time:int = Server_DH_inner_data;
//
message TL_server_DH_inner_data {
    Server_DH_inner_data data2 = 1;
}

///////////////////////////////////////////////////////////////////////////////
// Set_client_DH_params_answer <--
//  + TL_dh_gen_ok
//  + TL_dh_gen_retry
//  + TL_dh_gen_fail
//
message Set_client_DH_params_answer {
    TLCmd cmd = 1;
    string class_name = 2;
    bytes nonce = 3;
    bytes server_nonce = 4;
    bytes new_nonce_hash1 = 5;
    bytes new_nonce_hash2 = 6;
    bytes new_nonce_hash3 = 7;
}

//  dh_gen_ok#3bcbf734 nonce:int128 server_nonce:int128 new_nonce_hash1:int128 = Set_client_DH_params_answer;
//
message TL_dh_gen_ok {
    Set_client_DH_params_answer data2 = 1;
}
//  dh_gen_retry#46dc1fb9 nonce:int128 server_nonce:int128 new_nonce_hash2:int128 = Set_client_DH_params_answer;
//
message TL_dh_gen_retry {
    Set_client_DH_params_answer data2 = 1;
}
//  dh_gen_fail#a69dae02 nonce:int128 server_nonce:int128 new_nonce_hash3:int128 = Set_client_DH_params_answer;
//
message TL_dh_gen_fail {
    Set_client_DH_params_answer data2 = 1;
}

